import openseespy.opensees as ops
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.wipe()
ops.node(26, *(1.0, 1.0, 0.0))
ops.node(24, *(0.0, 1.0, 0.0))
ops.node(20, *(0.0, 0.0, 0.0))
ops.node(22, *(1.0, 0.0, 0.0))
ops.node(34, *(1.0, 1.0, 1.0))
ops.node(32, *(0.0, 1.0, 1.0))
ops.node(28, *(0.0, 0.0, 1.0))
ops.node(30, *(1.0, 0.0, 1.0))
ops.fix(20, *[1, 1, 1, 0, 0, 0])
ops.fix(24, *[1, 1, 1, 0, 0, 0])
ops.fix(22, *[1, 1, 1, 0, 0, 0])
ops.fix(26, *[1, 1, 1, 0, 0, 0])
ops.equalDOF(28, 30, *[3])
ops.equalDOF(28, 34, *[3])
ops.equalDOF(28, 32, *[3])
ops.nDMaterial("PressureDependMultiYield", 36, 3, 0.021, 130000000000.0, 390000000000.0, 40, 0.1, 80000000.0, 0.5, 27, 0.03, *[0.8, 5], *[0.0, 0.0, 0])
ops.element("stdBrick", 37, *[26, 24, 20, 22, 34, 32, 28, 30], 36)
ops.wipeAnalysis()
ops.loadConst('-time', 0.0)
ops.timeSeries('Linear', 1)
ops.pattern('Plain', 2, 1)
ops.load(20, *[0, 0, -25.742455902940126, 0, 0, 0])
ops.load(28, *[0, 0, -25.742455902940126, 0, 0, 0])
ops.load(24, *[0, 0, -25.742455902940126, 0, 0, 0])
ops.load(32, *[0, 0, -25.742455902940126, 0, 0, 0])
ops.load(22, *[0, 0, -25.742455902940126, 0, 0, 0])
ops.load(30, *[0, 0, -25.742455902940126, 0, 0, 0])
ops.load(26, *[0, 0, -25.742455902940126, 0, 0, 0])
ops.load(34, *[0, 0, -25.742455902940126, 0, 0, 0])
ops.constraints(*['Transformation'])
ops.integrator(*['LoadControl', 0.01])
ops.numberer(*['RCM'])
ops.system(*['BandSPD'])
ops.test(*['NormDispIncr', 6, 10, 0, 2])
ops.algorithm(*['Newton', False, False, False])
ops.analysis('Static')
ops.getTime()
ops.analyze(*[1, 0.1])
