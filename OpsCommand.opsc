import openseespy.opensees as ops
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.wipe()
ops.node(4, *(0.0, 0.0, 0.0))
ops.mass(4, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(9, *(0.0, 0.0, 1000.0))
ops.mass(9, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(9, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(11, *(0.0, 0.0, 2000.0))
ops.mass(11, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(11, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(13, *(0.0, 0.0, 3000.0))
ops.mass(13, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(13, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(15, *(0.0, 0.0, 4000.0))
ops.mass(15, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(15, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(17, *(0.0, 0.0, 5000.0))
ops.mass(17, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(17, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(19, *(0.0, 0.0, 6000.0))
ops.mass(19, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(19, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(21, *(0.0, 0.0, 7000.0))
ops.mass(21, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(21, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(23, *(0.0, 0.0, 8000.0))
ops.mass(23, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(23, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(25, *(0.0, 0.0, 9000.0))
ops.mass(25, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(25, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(6, *(0.0, 0.0, 10000.0))
ops.mass(6, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(4, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(64, *(0.0, 0.0, -1500.0))
ops.mass(64, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(64, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(66, *(0.0, 0.0, -3000.0))
ops.mass(66, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(66, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(68, *(0.0, 0.0, -4500.0))
ops.mass(68, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(68, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(70, *(0.0, 0.0, -6000.0))
ops.mass(70, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(70, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(72, *(0.0, 0.0, -7500.0))
ops.mass(72, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(72, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(74, *(0.0, 0.0, -9000.0))
ops.mass(74, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(74, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(76, *(0.0, 0.0, -10500.0))
ops.mass(76, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(76, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(78, *(0.0, 0.0, -12000.0))
ops.mass(78, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(78, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(80, *(0.0, 0.0, -13500.0))
ops.mass(80, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.mass(80, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.node(62, *(0.0, 0.0, -15000.0))
ops.mass(62, 5654866.776461626, 5654866.776461626, 5654866.776461626)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.node(135, *(-1001.0, 2999.0, -17001.0))
ops.node(134, *(-3001.0, 2999.0, -17001.0))
ops.node(132, *(-3001.0, 999.0, -17001.0))
ops.node(133, *(-1001.0, 999.0, -17001.0))
ops.node(142, *(-1001.0, 2999.0, -15001.0))
ops.node(140, *(-3001.0, 2999.0, -15001.0))
ops.node(136, *(-3001.0, 999.0, -15001.0))
ops.node(138, *(-1001.0, 999.0, -15001.0))
ops.node(150, *(-1001.0, 2999.0, -13501.0))
ops.node(148, *(-3001.0, 2999.0, -13501.0))
ops.node(144, *(-3001.0, 999.0, -13501.0))
ops.node(146, *(-1001.0, 999.0, -13501.0))
ops.node(158, *(-1001.0, 2999.0, -12001.0))
ops.node(156, *(-3001.0, 2999.0, -12001.0))
ops.node(152, *(-3001.0, 999.0, -12001.0))
ops.node(154, *(-1001.0, 999.0, -12001.0))
ops.node(166, *(-1001.0, 2999.0, -10501.0))
ops.node(164, *(-3001.0, 2999.0, -10501.0))
ops.node(160, *(-3001.0, 999.0, -10501.0))
ops.node(162, *(-1001.0, 999.0, -10501.0))
ops.node(174, *(-1001.0, 2999.0, -9001.0))
ops.node(172, *(-3001.0, 2999.0, -9001.0))
ops.node(168, *(-3001.0, 999.0, -9001.0))
ops.node(170, *(-1001.0, 999.0, -9001.0))
ops.node(182, *(-1001.0, 2999.0, -7501.0))
ops.node(180, *(-3001.0, 2999.0, -7501.0))
ops.node(176, *(-3001.0, 999.0, -7501.0))
ops.node(178, *(-1001.0, 999.0, -7501.0))
ops.node(190, *(-1001.0, 2999.0, -6001.0))
ops.node(188, *(-3001.0, 2999.0, -6001.0))
ops.node(184, *(-3001.0, 999.0, -6001.0))
ops.node(186, *(-1001.0, 999.0, -6001.0))
ops.node(198, *(-1001.0, 2999.0, -4501.0))
ops.node(196, *(-3001.0, 2999.0, -4501.0))
ops.node(192, *(-3001.0, 999.0, -4501.0))
ops.node(194, *(-1001.0, 999.0, -4501.0))
ops.node(206, *(-1001.0, 2999.0, -3001.0))
ops.node(204, *(-3001.0, 2999.0, -3001.0))
ops.node(200, *(-3001.0, 999.0, -3001.0))
ops.node(202, *(-1001.0, 999.0, -3001.0))
ops.node(214, *(-1001.0, 2999.0, -1501.0))
ops.node(212, *(-3001.0, 2999.0, -1501.0))
ops.node(208, *(-3001.0, 999.0, -1501.0))
ops.node(210, *(-1001.0, 999.0, -1501.0))
ops.node(219, *(-1001.0, 2999.0, -1.0))
ops.node(218, *(-3001.0, 2999.0, -1.0))
ops.node(216, *(-3001.0, 999.0, -1.0))
ops.node(217, *(-1001.0, 999.0, -1.0))
ops.node(245, *(-1001.0, -1.0, -17001.0))
ops.node(243, *(-3001.0, -1.0, -17001.0))
ops.node(241, *(-3001.0, -1001.0, -17001.0))
ops.node(242, *(-1001.0, -1001.0, -17001.0))
ops.node(253, *(-1001.0, -1.0, -15001.0))
ops.node(251, *(-3001.0, -1.0, -15001.0))
ops.node(247, *(-3001.0, -1001.0, -15001.0))
ops.node(249, *(-1001.0, -1001.0, -15001.0))
ops.node(261, *(-1001.0, -1.0, -13501.0))
ops.node(259, *(-3001.0, -1.0, -13501.0))
ops.node(255, *(-3001.0, -1001.0, -13501.0))
ops.node(257, *(-1001.0, -1001.0, -13501.0))
ops.node(269, *(-1001.0, -1.0, -12001.0))
ops.node(267, *(-3001.0, -1.0, -12001.0))
ops.node(263, *(-3001.0, -1001.0, -12001.0))
ops.node(265, *(-1001.0, -1001.0, -12001.0))
ops.node(277, *(-1001.0, -1.0, -10501.0))
ops.node(275, *(-3001.0, -1.0, -10501.0))
ops.node(271, *(-3001.0, -1001.0, -10501.0))
ops.node(273, *(-1001.0, -1001.0, -10501.0))
ops.node(285, *(-1001.0, -1.0, -9001.0))
ops.node(283, *(-3001.0, -1.0, -9001.0))
ops.node(279, *(-3001.0, -1001.0, -9001.0))
ops.node(281, *(-1001.0, -1001.0, -9001.0))
ops.node(293, *(-1001.0, -1.0, -7501.0))
ops.node(291, *(-3001.0, -1.0, -7501.0))
ops.node(287, *(-3001.0, -1001.0, -7501.0))
ops.node(289, *(-1001.0, -1001.0, -7501.0))
ops.node(301, *(-1001.0, -1.0, -6001.0))
ops.node(299, *(-3001.0, -1.0, -6001.0))
ops.node(295, *(-3001.0, -1001.0, -6001.0))
ops.node(297, *(-1001.0, -1001.0, -6001.0))
ops.node(309, *(-1001.0, -1.0, -4501.0))
ops.node(307, *(-3001.0, -1.0, -4501.0))
ops.node(303, *(-3001.0, -1001.0, -4501.0))
ops.node(305, *(-1001.0, -1001.0, -4501.0))
ops.node(317, *(-1001.0, -1.0, -3001.0))
ops.node(315, *(-3001.0, -1.0, -3001.0))
ops.node(311, *(-3001.0, -1001.0, -3001.0))
ops.node(313, *(-1001.0, -1001.0, -3001.0))
ops.node(325, *(-1001.0, -1.0, -1501.0))
ops.node(323, *(-3001.0, -1.0, -1501.0))
ops.node(319, *(-3001.0, -1001.0, -1501.0))
ops.node(321, *(-1001.0, -1001.0, -1501.0))
ops.node(331, *(-1001.0, -1.0, -1.0))
ops.node(329, *(-3001.0, -1.0, -1.0))
ops.node(327, *(-3001.0, -1001.0, -1.0))
ops.node(328, *(-1001.0, -1001.0, -1.0))
ops.node(364, *(-3001.0, -3001.0, -17001.0))
ops.node(365, *(-1001.0, -3001.0, -17001.0))
ops.node(366, *(-3001.0, -3001.0, -15001.0))
ops.node(368, *(-1001.0, -3001.0, -15001.0))
ops.node(370, *(-3001.0, -3001.0, -13501.0))
ops.node(372, *(-1001.0, -3001.0, -13501.0))
ops.node(374, *(-3001.0, -3001.0, -12001.0))
ops.node(376, *(-1001.0, -3001.0, -12001.0))
ops.node(378, *(-3001.0, -3001.0, -10501.0))
ops.node(380, *(-1001.0, -3001.0, -10501.0))
ops.node(382, *(-3001.0, -3001.0, -9001.0))
ops.node(384, *(-1001.0, -3001.0, -9001.0))
ops.node(386, *(-3001.0, -3001.0, -7501.0))
ops.node(388, *(-1001.0, -3001.0, -7501.0))
ops.node(390, *(-3001.0, -3001.0, -6001.0))
ops.node(392, *(-1001.0, -3001.0, -6001.0))
ops.node(394, *(-3001.0, -3001.0, -4501.0))
ops.node(396, *(-1001.0, -3001.0, -4501.0))
ops.node(398, *(-3001.0, -3001.0, -3001.0))
ops.node(400, *(-1001.0, -3001.0, -3001.0))
ops.node(402, *(-3001.0, -3001.0, -1501.0))
ops.node(404, *(-1001.0, -3001.0, -1501.0))
ops.node(406, *(-3001.0, -3001.0, -1.0))
ops.node(407, *(-1001.0, -3001.0, -1.0))
ops.node(431, *(-1.0, -1001.0, -17001.0))
ops.node(428, *(-1.0, -3001.0, -17001.0))
ops.node(438, *(-1.0, -1001.0, -15001.0))
ops.node(434, *(-1.0, -3001.0, -15001.0))
ops.node(446, *(-1.0, -1001.0, -13501.0))
ops.node(442, *(-1.0, -3001.0, -13501.0))
ops.node(454, *(-1.0, -1001.0, -12001.0))
ops.node(450, *(-1.0, -3001.0, -12001.0))
ops.node(462, *(-1.0, -1001.0, -10501.0))
ops.node(458, *(-1.0, -3001.0, -10501.0))
ops.node(470, *(-1.0, -1001.0, -9001.0))
ops.node(466, *(-1.0, -3001.0, -9001.0))
ops.node(478, *(-1.0, -1001.0, -7501.0))
ops.node(474, *(-1.0, -3001.0, -7501.0))
ops.node(486, *(-1.0, -1001.0, -6001.0))
ops.node(482, *(-1.0, -3001.0, -6001.0))
ops.node(494, *(-1.0, -1001.0, -4501.0))
ops.node(490, *(-1.0, -3001.0, -4501.0))
ops.node(502, *(-1.0, -1001.0, -3001.0))
ops.node(498, *(-1.0, -3001.0, -3001.0))
ops.node(510, *(-1.0, -1001.0, -1501.0))
ops.node(506, *(-1.0, -3001.0, -1501.0))
ops.node(517, *(-1.0, -1001.0, -1.0))
ops.node(514, *(-1.0, -3001.0, -1.0))
ops.node(433, *(999.0, -1001.0, -17001.0))
ops.node(430, *(999.0, -3001.0, -17001.0))
ops.node(440, *(999.0, -1001.0, -15001.0))
ops.node(436, *(999.0, -3001.0, -15001.0))
ops.node(448, *(999.0, -1001.0, -13501.0))
ops.node(444, *(999.0, -3001.0, -13501.0))
ops.node(456, *(999.0, -1001.0, -12001.0))
ops.node(452, *(999.0, -3001.0, -12001.0))
ops.node(464, *(999.0, -1001.0, -10501.0))
ops.node(460, *(999.0, -3001.0, -10501.0))
ops.node(472, *(999.0, -1001.0, -9001.0))
ops.node(468, *(999.0, -3001.0, -9001.0))
ops.node(480, *(999.0, -1001.0, -7501.0))
ops.node(476, *(999.0, -3001.0, -7501.0))
ops.node(488, *(999.0, -1001.0, -6001.0))
ops.node(484, *(999.0, -3001.0, -6001.0))
ops.node(496, *(999.0, -1001.0, -4501.0))
ops.node(492, *(999.0, -3001.0, -4501.0))
ops.node(504, *(999.0, -1001.0, -3001.0))
ops.node(500, *(999.0, -3001.0, -3001.0))
ops.node(512, *(999.0, -1001.0, -1501.0))
ops.node(508, *(999.0, -3001.0, -1501.0))
ops.node(519, *(999.0, -1001.0, -1.0))
ops.node(516, *(999.0, -3001.0, -1.0))
ops.node(552, *(2999.0, -1001.0, -17001.0))
ops.node(551, *(2999.0, -3001.0, -17001.0))
ops.node(555, *(2999.0, -1001.0, -15001.0))
ops.node(553, *(2999.0, -3001.0, -15001.0))
ops.node(559, *(2999.0, -1001.0, -13501.0))
ops.node(557, *(2999.0, -3001.0, -13501.0))
ops.node(563, *(2999.0, -1001.0, -12001.0))
ops.node(561, *(2999.0, -3001.0, -12001.0))
ops.node(567, *(2999.0, -1001.0, -10501.0))
ops.node(565, *(2999.0, -3001.0, -10501.0))
ops.node(571, *(2999.0, -1001.0, -9001.0))
ops.node(569, *(2999.0, -3001.0, -9001.0))
ops.node(575, *(2999.0, -1001.0, -7501.0))
ops.node(573, *(2999.0, -3001.0, -7501.0))
ops.node(579, *(2999.0, -1001.0, -6001.0))
ops.node(577, *(2999.0, -3001.0, -6001.0))
ops.node(583, *(2999.0, -1001.0, -4501.0))
ops.node(581, *(2999.0, -3001.0, -4501.0))
ops.node(587, *(2999.0, -1001.0, -3001.0))
ops.node(585, *(2999.0, -3001.0, -3001.0))
ops.node(591, *(2999.0, -1001.0, -1501.0))
ops.node(589, *(2999.0, -3001.0, -1501.0))
ops.node(594, *(2999.0, -1001.0, -1.0))
ops.node(593, *(2999.0, -3001.0, -1.0))
ops.node(617, *(2999.0, -1.0, -17001.0))
ops.node(615, *(999.0, -1.0, -17001.0))
ops.node(623, *(2999.0, -1.0, -15001.0))
ops.node(621, *(999.0, -1.0, -15001.0))
ops.node(631, *(2999.0, -1.0, -13501.0))
ops.node(629, *(999.0, -1.0, -13501.0))
ops.node(639, *(2999.0, -1.0, -12001.0))
ops.node(637, *(999.0, -1.0, -12001.0))
ops.node(647, *(2999.0, -1.0, -10501.0))
ops.node(645, *(999.0, -1.0, -10501.0))
ops.node(655, *(2999.0, -1.0, -9001.0))
ops.node(653, *(999.0, -1.0, -9001.0))
ops.node(663, *(2999.0, -1.0, -7501.0))
ops.node(661, *(999.0, -1.0, -7501.0))
ops.node(671, *(2999.0, -1.0, -6001.0))
ops.node(669, *(999.0, -1.0, -6001.0))
ops.node(679, *(2999.0, -1.0, -4501.0))
ops.node(677, *(999.0, -1.0, -4501.0))
ops.node(687, *(2999.0, -1.0, -3001.0))
ops.node(685, *(999.0, -1.0, -3001.0))
ops.node(695, *(2999.0, -1.0, -1501.0))
ops.node(693, *(999.0, -1.0, -1501.0))
ops.node(703, *(2999.0, -1.0, -1.0))
ops.node(701, *(999.0, -1.0, -1.0))
ops.node(620, *(2999.0, 999.0, -17001.0))
ops.node(619, *(999.0, 999.0, -17001.0))
ops.node(627, *(2999.0, 999.0, -15001.0))
ops.node(625, *(999.0, 999.0, -15001.0))
ops.node(635, *(2999.0, 999.0, -13501.0))
ops.node(633, *(999.0, 999.0, -13501.0))
ops.node(643, *(2999.0, 999.0, -12001.0))
ops.node(641, *(999.0, 999.0, -12001.0))
ops.node(651, *(2999.0, 999.0, -10501.0))
ops.node(649, *(999.0, 999.0, -10501.0))
ops.node(659, *(2999.0, 999.0, -9001.0))
ops.node(657, *(999.0, 999.0, -9001.0))
ops.node(667, *(2999.0, 999.0, -7501.0))
ops.node(665, *(999.0, 999.0, -7501.0))
ops.node(675, *(2999.0, 999.0, -6001.0))
ops.node(673, *(999.0, 999.0, -6001.0))
ops.node(683, *(2999.0, 999.0, -4501.0))
ops.node(681, *(999.0, 999.0, -4501.0))
ops.node(691, *(2999.0, 999.0, -3001.0))
ops.node(689, *(999.0, 999.0, -3001.0))
ops.node(699, *(2999.0, 999.0, -1501.0))
ops.node(697, *(999.0, 999.0, -1501.0))
ops.node(706, *(2999.0, 999.0, -1.0))
ops.node(705, *(999.0, 999.0, -1.0))
ops.node(739, *(2999.0, 2999.0, -17001.0))
ops.node(738, *(999.0, 2999.0, -17001.0))
ops.node(742, *(2999.0, 2999.0, -15001.0))
ops.node(740, *(999.0, 2999.0, -15001.0))
ops.node(746, *(2999.0, 2999.0, -13501.0))
ops.node(744, *(999.0, 2999.0, -13501.0))
ops.node(750, *(2999.0, 2999.0, -12001.0))
ops.node(748, *(999.0, 2999.0, -12001.0))
ops.node(754, *(2999.0, 2999.0, -10501.0))
ops.node(752, *(999.0, 2999.0, -10501.0))
ops.node(758, *(2999.0, 2999.0, -9001.0))
ops.node(756, *(999.0, 2999.0, -9001.0))
ops.node(762, *(2999.0, 2999.0, -7501.0))
ops.node(760, *(999.0, 2999.0, -7501.0))
ops.node(766, *(2999.0, 2999.0, -6001.0))
ops.node(764, *(999.0, 2999.0, -6001.0))
ops.node(770, *(2999.0, 2999.0, -4501.0))
ops.node(768, *(999.0, 2999.0, -4501.0))
ops.node(774, *(2999.0, 2999.0, -3001.0))
ops.node(772, *(999.0, 2999.0, -3001.0))
ops.node(778, *(2999.0, 2999.0, -1501.0))
ops.node(776, *(999.0, 2999.0, -1501.0))
ops.node(781, *(2999.0, 2999.0, -1.0))
ops.node(780, *(999.0, 2999.0, -1.0))
ops.node(796, *(-1.0, 2999.0, -17001.0))
ops.node(794, *(-1.0, 999.0, -17001.0))
ops.node(800, *(-1.0, 2999.0, -15001.0))
ops.node(798, *(-1.0, 999.0, -15001.0))
ops.node(804, *(-1.0, 2999.0, -13501.0))
ops.node(802, *(-1.0, 999.0, -13501.0))
ops.node(808, *(-1.0, 2999.0, -12001.0))
ops.node(806, *(-1.0, 999.0, -12001.0))
ops.node(812, *(-1.0, 2999.0, -10501.0))
ops.node(810, *(-1.0, 999.0, -10501.0))
ops.node(816, *(-1.0, 2999.0, -9001.0))
ops.node(814, *(-1.0, 999.0, -9001.0))
ops.node(820, *(-1.0, 2999.0, -7501.0))
ops.node(818, *(-1.0, 999.0, -7501.0))
ops.node(824, *(-1.0, 2999.0, -6001.0))
ops.node(822, *(-1.0, 999.0, -6001.0))
ops.node(828, *(-1.0, 2999.0, -4501.0))
ops.node(826, *(-1.0, 999.0, -4501.0))
ops.node(832, *(-1.0, 2999.0, -3001.0))
ops.node(830, *(-1.0, 999.0, -3001.0))
ops.node(836, *(-1.0, 2999.0, -1501.0))
ops.node(834, *(-1.0, 999.0, -1501.0))
ops.node(840, *(-1.0, 2999.0, -1.0))
ops.node(838, *(-1.0, 999.0, -1.0))
ops.node(865, *(-1.0, -1.0, -17001.0))
ops.node(867, *(-1.0, -1.0, -15001.0))
ops.node(869, *(-1.0, -1.0, -13501.0))
ops.node(871, *(-1.0, -1.0, -12001.0))
ops.node(873, *(-1.0, -1.0, -10501.0))
ops.node(875, *(-1.0, -1.0, -9001.0))
ops.node(877, *(-1.0, -1.0, -7501.0))
ops.node(879, *(-1.0, -1.0, -6001.0))
ops.node(881, *(-1.0, -1.0, -4501.0))
ops.node(883, *(-1.0, -1.0, -3001.0))
ops.node(885, *(-1.0, -1.0, -1501.0))
ops.node(887, *(-1.0, -1.0, -1.0))
ops.fix(62, *[1, 1, 1, 1, 1, 1])
ops.uniaxialMaterial("PySimple1", 1098, 2, 199800000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1099, 2, 140702751.18700257, 166.66666666666666, c=0.0)
ops.fix(132, *[1, 1, 1, 1, 1, 1])
ops.fix(134, *[1, 1, 1, 1, 1, 1])
ops.fix(133, *[1, 1, 1, 1, 1, 1])
ops.fix(135, *[1, 1, 1, 1, 1, 1])
ops.fix(241, *[1, 1, 1, 1, 1, 1])
ops.fix(243, *[1, 1, 1, 1, 1, 1])
ops.fix(242, *[1, 1, 1, 1, 1, 1])
ops.fix(245, *[1, 1, 1, 1, 1, 1])
ops.fix(364, *[1, 1, 1, 1, 1, 1])
ops.fix(365, *[1, 1, 1, 1, 1, 1])
ops.fix(428, *[1, 1, 1, 1, 1, 1])
ops.fix(431, *[1, 1, 1, 1, 1, 1])
ops.fix(430, *[1, 1, 1, 1, 1, 1])
ops.fix(433, *[1, 1, 1, 1, 1, 1])
ops.fix(551, *[1, 1, 1, 1, 1, 1])
ops.fix(552, *[1, 1, 1, 1, 1, 1])
ops.fix(615, *[1, 1, 1, 1, 1, 1])
ops.fix(619, *[1, 1, 1, 1, 1, 1])
ops.fix(617, *[1, 1, 1, 1, 1, 1])
ops.fix(620, *[1, 1, 1, 1, 1, 1])
ops.fix(738, *[1, 1, 1, 1, 1, 1])
ops.fix(739, *[1, 1, 1, 1, 1, 1])
ops.fix(794, *[1, 1, 1, 1, 1, 1])
ops.fix(796, *[1, 1, 1, 1, 1, 1])
ops.fix(865, *[1, 1, 1, 1, 1, 1])
ops.equalDOF(140, 366, *[1, 2, 3])
ops.equalDOF(140, 742, *[1, 2, 3])
ops.equalDOF(366, 553, *[1, 2, 3])
ops.equalDOF(148, 370, *[1, 2, 3])
ops.equalDOF(148, 746, *[1, 2, 3])
ops.equalDOF(370, 557, *[1, 2, 3])
ops.equalDOF(156, 374, *[1, 2, 3])
ops.equalDOF(156, 750, *[1, 2, 3])
ops.equalDOF(374, 561, *[1, 2, 3])
ops.equalDOF(164, 378, *[1, 2, 3])
ops.equalDOF(164, 754, *[1, 2, 3])
ops.equalDOF(378, 565, *[1, 2, 3])
ops.equalDOF(172, 382, *[1, 2, 3])
ops.equalDOF(172, 758, *[1, 2, 3])
ops.equalDOF(382, 569, *[1, 2, 3])
ops.equalDOF(180, 386, *[1, 2, 3])
ops.equalDOF(180, 762, *[1, 2, 3])
ops.equalDOF(386, 573, *[1, 2, 3])
ops.equalDOF(188, 390, *[1, 2, 3])
ops.equalDOF(188, 766, *[1, 2, 3])
ops.equalDOF(390, 577, *[1, 2, 3])
ops.equalDOF(196, 394, *[1, 2, 3])
ops.equalDOF(196, 770, *[1, 2, 3])
ops.equalDOF(394, 581, *[1, 2, 3])
ops.equalDOF(204, 398, *[1, 2, 3])
ops.equalDOF(204, 774, *[1, 2, 3])
ops.equalDOF(398, 585, *[1, 2, 3])
ops.equalDOF(212, 402, *[1, 2, 3])
ops.equalDOF(212, 778, *[1, 2, 3])
ops.equalDOF(402, 589, *[1, 2, 3])
ops.equalDOF(218, 406, *[1, 2, 3])
ops.equalDOF(218, 781, *[1, 2, 3])
ops.equalDOF(406, 593, *[1, 2, 3])
ops.equalDOF(142, 368, *[1, 2, 3])
ops.equalDOF(150, 372, *[1, 2, 3])
ops.equalDOF(158, 376, *[1, 2, 3])
ops.equalDOF(166, 380, *[1, 2, 3])
ops.equalDOF(174, 384, *[1, 2, 3])
ops.equalDOF(182, 388, *[1, 2, 3])
ops.equalDOF(190, 392, *[1, 2, 3])
ops.equalDOF(198, 396, *[1, 2, 3])
ops.equalDOF(206, 400, *[1, 2, 3])
ops.equalDOF(214, 404, *[1, 2, 3])
ops.equalDOF(219, 407, *[1, 2, 3])
ops.equalDOF(800, 434, *[1, 2, 3])
ops.equalDOF(804, 442, *[1, 2, 3])
ops.equalDOF(808, 450, *[1, 2, 3])
ops.equalDOF(812, 458, *[1, 2, 3])
ops.equalDOF(816, 466, *[1, 2, 3])
ops.equalDOF(820, 474, *[1, 2, 3])
ops.equalDOF(824, 482, *[1, 2, 3])
ops.equalDOF(828, 490, *[1, 2, 3])
ops.equalDOF(832, 498, *[1, 2, 3])
ops.equalDOF(836, 506, *[1, 2, 3])
ops.equalDOF(840, 514, *[1, 2, 3])
ops.equalDOF(740, 436, *[1, 2, 3])
ops.equalDOF(744, 444, *[1, 2, 3])
ops.equalDOF(748, 452, *[1, 2, 3])
ops.equalDOF(752, 460, *[1, 2, 3])
ops.equalDOF(756, 468, *[1, 2, 3])
ops.equalDOF(760, 476, *[1, 2, 3])
ops.equalDOF(764, 484, *[1, 2, 3])
ops.equalDOF(768, 492, *[1, 2, 3])
ops.equalDOF(772, 500, *[1, 2, 3])
ops.equalDOF(776, 508, *[1, 2, 3])
ops.equalDOF(780, 516, *[1, 2, 3])
ops.equalDOF(742, 553, *[1, 2, 3])
ops.equalDOF(746, 557, *[1, 2, 3])
ops.equalDOF(750, 561, *[1, 2, 3])
ops.equalDOF(754, 565, *[1, 2, 3])
ops.equalDOF(758, 569, *[1, 2, 3])
ops.equalDOF(762, 573, *[1, 2, 3])
ops.equalDOF(766, 577, *[1, 2, 3])
ops.equalDOF(770, 581, *[1, 2, 3])
ops.equalDOF(774, 585, *[1, 2, 3])
ops.equalDOF(778, 589, *[1, 2, 3])
ops.equalDOF(781, 593, *[1, 2, 3])
ops.equalDOF(136, 627, *[1, 2, 3])
ops.equalDOF(144, 635, *[1, 2, 3])
ops.equalDOF(152, 643, *[1, 2, 3])
ops.equalDOF(160, 651, *[1, 2, 3])
ops.equalDOF(168, 659, *[1, 2, 3])
ops.equalDOF(176, 667, *[1, 2, 3])
ops.equalDOF(184, 675, *[1, 2, 3])
ops.equalDOF(192, 683, *[1, 2, 3])
ops.equalDOF(200, 691, *[1, 2, 3])
ops.equalDOF(208, 699, *[1, 2, 3])
ops.equalDOF(216, 706, *[1, 2, 3])
ops.equalDOF(247, 555, *[1, 2, 3])
ops.equalDOF(255, 559, *[1, 2, 3])
ops.equalDOF(263, 563, *[1, 2, 3])
ops.equalDOF(271, 567, *[1, 2, 3])
ops.equalDOF(279, 571, *[1, 2, 3])
ops.equalDOF(287, 575, *[1, 2, 3])
ops.equalDOF(295, 579, *[1, 2, 3])
ops.equalDOF(303, 583, *[1, 2, 3])
ops.equalDOF(311, 587, *[1, 2, 3])
ops.equalDOF(319, 591, *[1, 2, 3])
ops.equalDOF(327, 594, *[1, 2, 3])
ops.equalDOF(251, 623, *[1, 2, 3])
ops.equalDOF(259, 631, *[1, 2, 3])
ops.equalDOF(267, 639, *[1, 2, 3])
ops.equalDOF(275, 647, *[1, 2, 3])
ops.equalDOF(283, 655, *[1, 2, 3])
ops.equalDOF(291, 663, *[1, 2, 3])
ops.equalDOF(299, 671, *[1, 2, 3])
ops.equalDOF(307, 679, *[1, 2, 3])
ops.equalDOF(315, 687, *[1, 2, 3])
ops.equalDOF(323, 695, *[1, 2, 3])
ops.equalDOF(329, 703, *[1, 2, 3])
ops.equalDOF(62, 867, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1102, 2, 179820000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1103, 2, 126632476.0683023, 166.66666666666666, c=0.0)
ops.equalDOF(80, 869, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1106, 2, 159840000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1107, 2, 112562200.94960202, 166.66666666666666, c=0.0)
ops.equalDOF(78, 871, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1110, 2, 139860000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1111, 2, 98491925.83090179, 166.66666666666666, c=0.0)
ops.equalDOF(76, 873, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1114, 2, 119880000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1115, 2, 84421650.71220154, 166.66666666666666, c=0.0)
ops.equalDOF(74, 875, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1118, 2, 99900000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1119, 2, 70351375.59350128, 166.66666666666666, c=0.0)
ops.equalDOF(72, 877, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1122, 2, 79920000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1123, 2, 56281100.47480101, 166.66666666666666, c=0.0)
ops.equalDOF(70, 879, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1126, 2, 59940000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1127, 2, 42210825.35610077, 166.66666666666666, c=0.0)
ops.equalDOF(68, 881, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1130, 2, 39960000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1131, 2, 28140550.237400506, 166.66666666666666, c=0.0)
ops.equalDOF(66, 883, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1134, 2, 19980000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1135, 2, 14070275.118700253, 166.66666666666666, c=0.0)
ops.equalDOF(64, 885, *[1, 2, 3])
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.section("Fiber", 30, '-GJ', 9.572040116406401e+24)
ops.uniaxialMaterial("Steel02", 29, 370000000000.0, 200000000000000.0, 0.01, 15, 0.925, 0.15)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.uniaxialMaterial("Concrete02", 28, 31600000000.0, 0.0019446153846153847, 6320000000.0, 0.004, 0.1, -4740000000.0, -2370000000000.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.geomTransf("Linear", 32, *[-1.0, 0.0, 0.0])
ops.element("elasticBeamColumn", 33, 4, 9, 30, 32)
ops.section("Fiber", 34, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 36, 9, 11, 34, 32)
ops.section("Fiber", 37, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 39, 11, 13, 37, 32)
ops.section("Fiber", 40, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 42, 13, 15, 40, 32)
ops.section("Fiber", 43, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 45, 15, 17, 43, 32)
ops.section("Fiber", 46, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 48, 17, 19, 46, 32)
ops.section("Fiber", 49, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 51, 19, 21, 49, 32)
ops.section("Fiber", 52, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 54, 21, 23, 52, 32)
ops.section("Fiber", 55, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 57, 23, 25, 55, 32)
ops.section("Fiber", 58, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 39, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 8, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 60, 25, 6, 58, 32)
ops.section("Fiber", 83, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 85, 4, 64, 83, 32)
ops.section("Fiber", 86, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 88, 64, 66, 86, 32)
ops.section("Fiber", 89, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 91, 66, 68, 89, 32)
ops.section("Fiber", 92, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 94, 68, 70, 92, 32)
ops.section("Fiber", 95, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 97, 70, 72, 95, 32)
ops.section("Fiber", 98, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 100, 72, 74, 98, 32)
ops.section("Fiber", 101, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 103, 74, 76, 101, 32)
ops.section("Fiber", 104, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 106, 76, 78, 104, 32)
ops.section("Fiber", 107, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 109, 78, 80, 107, 32)
ops.section("Fiber", 110, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 112, 80, 62, 110, 32)
ops.element('zeroLength', 1101, 62, 62, '-mat', *[1098, 1098, 1099], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1105, 80, 80, '-mat', *[1102, 1102, 1103], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1109, 78, 78, '-mat', *[1106, 1106, 1107], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1113, 76, 76, '-mat', *[1110, 1110, 1111], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1117, 74, 74, '-mat', *[1114, 1114, 1115], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1121, 72, 72, '-mat', *[1118, 1118, 1119], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1125, 70, 70, '-mat', *[1122, 1122, 1123], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1129, 68, 68, '-mat', *[1126, 1126, 1127], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1133, 66, 66, '-mat', *[1130, 1130, 1131], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1137, 64, 64, '-mat', *[1134, 1134, 1135], '-dir', *[1, 2, 3])
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.nDMaterial("PressureDependMultiYield", 220, 3, 0.02, 100000000000.0, 300000000000.0, 37, 0.1, 80000000.0, 0.5, 27, 0.05, *[0.6, 3], *[5000000.0, 0.003, 1])
ops.element("stdBrick", 221, *[135, 134, 132, 133, 142, 140, 136, 138], 220)
ops.element("stdBrick", 222, *[142, 140, 136, 138, 150, 148, 144, 146], 220)
ops.element("stdBrick", 223, *[150, 148, 144, 146, 158, 156, 152, 154], 220)
ops.element("stdBrick", 224, *[158, 156, 152, 154, 166, 164, 160, 162], 220)
ops.element("stdBrick", 225, *[166, 164, 160, 162, 174, 172, 168, 170], 220)
ops.element("stdBrick", 226, *[174, 172, 168, 170, 182, 180, 176, 178], 220)
ops.element("stdBrick", 227, *[182, 180, 176, 178, 190, 188, 184, 186], 220)
ops.element("stdBrick", 228, *[190, 188, 184, 186, 198, 196, 192, 194], 220)
ops.element("stdBrick", 229, *[198, 196, 192, 194, 206, 204, 200, 202], 220)
ops.element("stdBrick", 230, *[206, 204, 200, 202, 214, 212, 208, 210], 220)
ops.element("stdBrick", 231, *[214, 212, 208, 210, 219, 218, 216, 217], 220)
ops.element("stdBrick", 333, *[245, 243, 241, 242, 253, 251, 247, 249], 220)
ops.element("stdBrick", 334, *[253, 251, 247, 249, 261, 259, 255, 257], 220)
ops.element("stdBrick", 335, *[261, 259, 255, 257, 269, 267, 263, 265], 220)
ops.element("stdBrick", 336, *[269, 267, 263, 265, 277, 275, 271, 273], 220)
ops.element("stdBrick", 337, *[277, 275, 271, 273, 285, 283, 279, 281], 220)
ops.element("stdBrick", 338, *[285, 283, 279, 281, 293, 291, 287, 289], 220)
ops.element("stdBrick", 339, *[293, 291, 287, 289, 301, 299, 295, 297], 220)
ops.element("stdBrick", 340, *[301, 299, 295, 297, 309, 307, 303, 305], 220)
ops.element("stdBrick", 341, *[309, 307, 303, 305, 317, 315, 311, 313], 220)
ops.element("stdBrick", 342, *[317, 315, 311, 313, 325, 323, 319, 321], 220)
ops.element("stdBrick", 343, *[325, 323, 319, 321, 331, 329, 327, 328], 220)
ops.element("stdBrick", 344, *[133, 132, 243, 245, 138, 136, 251, 253], 220)
ops.element("stdBrick", 345, *[138, 136, 251, 253, 146, 144, 259, 261], 220)
ops.element("stdBrick", 346, *[146, 144, 259, 261, 154, 152, 267, 269], 220)
ops.element("stdBrick", 347, *[154, 152, 267, 269, 162, 160, 275, 277], 220)
ops.element("stdBrick", 348, *[162, 160, 275, 277, 170, 168, 283, 285], 220)
ops.element("stdBrick", 349, *[170, 168, 283, 285, 178, 176, 291, 293], 220)
ops.element("stdBrick", 350, *[178, 176, 291, 293, 186, 184, 299, 301], 220)
ops.element("stdBrick", 351, *[186, 184, 299, 301, 194, 192, 307, 309], 220)
ops.element("stdBrick", 352, *[194, 192, 307, 309, 202, 200, 315, 317], 220)
ops.element("stdBrick", 353, *[202, 200, 315, 317, 210, 208, 323, 325], 220)
ops.element("stdBrick", 354, *[210, 208, 323, 325, 217, 216, 329, 331], 220)
ops.element("stdBrick", 408, *[242, 241, 364, 365, 249, 247, 366, 368], 220)
ops.element("stdBrick", 409, *[249, 247, 366, 368, 257, 255, 370, 372], 220)
ops.element("stdBrick", 410, *[257, 255, 370, 372, 265, 263, 374, 376], 220)
ops.element("stdBrick", 411, *[265, 263, 374, 376, 273, 271, 378, 380], 220)
ops.element("stdBrick", 412, *[273, 271, 378, 380, 281, 279, 382, 384], 220)
ops.element("stdBrick", 413, *[281, 279, 382, 384, 289, 287, 386, 388], 220)
ops.element("stdBrick", 414, *[289, 287, 386, 388, 297, 295, 390, 392], 220)
ops.element("stdBrick", 415, *[297, 295, 390, 392, 305, 303, 394, 396], 220)
ops.element("stdBrick", 416, *[305, 303, 394, 396, 313, 311, 398, 400], 220)
ops.element("stdBrick", 417, *[313, 311, 398, 400, 321, 319, 402, 404], 220)
ops.element("stdBrick", 418, *[321, 319, 402, 404, 328, 327, 406, 407], 220)
ops.element("stdBrick", 520, *[431, 242, 365, 428, 438, 249, 368, 434], 220)
ops.element("stdBrick", 521, *[438, 249, 368, 434, 446, 257, 372, 442], 220)
ops.element("stdBrick", 522, *[446, 257, 372, 442, 454, 265, 376, 450], 220)
ops.element("stdBrick", 523, *[454, 265, 376, 450, 462, 273, 380, 458], 220)
ops.element("stdBrick", 524, *[462, 273, 380, 458, 470, 281, 384, 466], 220)
ops.element("stdBrick", 525, *[470, 281, 384, 466, 478, 289, 388, 474], 220)
ops.element("stdBrick", 526, *[478, 289, 388, 474, 486, 297, 392, 482], 220)
ops.element("stdBrick", 527, *[486, 297, 392, 482, 494, 305, 396, 490], 220)
ops.element("stdBrick", 528, *[494, 305, 396, 490, 502, 313, 400, 498], 220)
ops.element("stdBrick", 529, *[502, 313, 400, 498, 510, 321, 404, 506], 220)
ops.element("stdBrick", 530, *[510, 321, 404, 506, 517, 328, 407, 514], 220)
ops.element("stdBrick", 531, *[433, 431, 428, 430, 440, 438, 434, 436], 220)
ops.element("stdBrick", 532, *[440, 438, 434, 436, 448, 446, 442, 444], 220)
ops.element("stdBrick", 533, *[448, 446, 442, 444, 456, 454, 450, 452], 220)
ops.element("stdBrick", 534, *[456, 454, 450, 452, 464, 462, 458, 460], 220)
ops.element("stdBrick", 535, *[464, 462, 458, 460, 472, 470, 466, 468], 220)
ops.element("stdBrick", 536, *[472, 470, 466, 468, 480, 478, 474, 476], 220)
ops.element("stdBrick", 537, *[480, 478, 474, 476, 488, 486, 482, 484], 220)
ops.element("stdBrick", 538, *[488, 486, 482, 484, 496, 494, 490, 492], 220)
ops.element("stdBrick", 539, *[496, 494, 490, 492, 504, 502, 498, 500], 220)
ops.element("stdBrick", 540, *[504, 502, 498, 500, 512, 510, 506, 508], 220)
ops.element("stdBrick", 541, *[512, 510, 506, 508, 519, 517, 514, 516], 220)
ops.element("stdBrick", 595, *[552, 433, 430, 551, 555, 440, 436, 553], 220)
ops.element("stdBrick", 596, *[555, 440, 436, 553, 559, 448, 444, 557], 220)
ops.element("stdBrick", 597, *[559, 448, 444, 557, 563, 456, 452, 561], 220)
ops.element("stdBrick", 598, *[563, 456, 452, 561, 567, 464, 460, 565], 220)
ops.element("stdBrick", 599, *[567, 464, 460, 565, 571, 472, 468, 569], 220)
ops.element("stdBrick", 600, *[571, 472, 468, 569, 575, 480, 476, 573], 220)
ops.element("stdBrick", 601, *[575, 480, 476, 573, 579, 488, 484, 577], 220)
ops.element("stdBrick", 602, *[579, 488, 484, 577, 583, 496, 492, 581], 220)
ops.element("stdBrick", 603, *[583, 496, 492, 581, 587, 504, 500, 585], 220)
ops.element("stdBrick", 604, *[587, 504, 500, 585, 591, 512, 508, 589], 220)
ops.element("stdBrick", 605, *[591, 512, 508, 589, 594, 519, 516, 593], 220)
ops.element("stdBrick", 707, *[617, 615, 433, 552, 623, 621, 440, 555], 220)
ops.element("stdBrick", 708, *[623, 621, 440, 555, 631, 629, 448, 559], 220)
ops.element("stdBrick", 709, *[631, 629, 448, 559, 639, 637, 456, 563], 220)
ops.element("stdBrick", 710, *[639, 637, 456, 563, 647, 645, 464, 567], 220)
ops.element("stdBrick", 711, *[647, 645, 464, 567, 655, 653, 472, 571], 220)
ops.element("stdBrick", 712, *[655, 653, 472, 571, 663, 661, 480, 575], 220)
ops.element("stdBrick", 713, *[663, 661, 480, 575, 671, 669, 488, 579], 220)
ops.element("stdBrick", 714, *[671, 669, 488, 579, 679, 677, 496, 583], 220)
ops.element("stdBrick", 715, *[679, 677, 496, 583, 687, 685, 504, 587], 220)
ops.element("stdBrick", 716, *[687, 685, 504, 587, 695, 693, 512, 591], 220)
ops.element("stdBrick", 717, *[695, 693, 512, 591, 703, 701, 519, 594], 220)
ops.element("stdBrick", 718, *[620, 619, 615, 617, 627, 625, 621, 623], 220)
ops.element("stdBrick", 719, *[627, 625, 621, 623, 635, 633, 629, 631], 220)
ops.element("stdBrick", 720, *[635, 633, 629, 631, 643, 641, 637, 639], 220)
ops.element("stdBrick", 721, *[643, 641, 637, 639, 651, 649, 645, 647], 220)
ops.element("stdBrick", 722, *[651, 649, 645, 647, 659, 657, 653, 655], 220)
ops.element("stdBrick", 723, *[659, 657, 653, 655, 667, 665, 661, 663], 220)
ops.element("stdBrick", 724, *[667, 665, 661, 663, 675, 673, 669, 671], 220)
ops.element("stdBrick", 725, *[675, 673, 669, 671, 683, 681, 677, 679], 220)
ops.element("stdBrick", 726, *[683, 681, 677, 679, 691, 689, 685, 687], 220)
ops.element("stdBrick", 727, *[691, 689, 685, 687, 699, 697, 693, 695], 220)
ops.element("stdBrick", 728, *[699, 697, 693, 695, 706, 705, 701, 703], 220)
ops.element("stdBrick", 782, *[739, 738, 619, 620, 742, 740, 625, 627], 220)
ops.element("stdBrick", 783, *[742, 740, 625, 627, 746, 744, 633, 635], 220)
ops.element("stdBrick", 784, *[746, 744, 633, 635, 750, 748, 641, 643], 220)
ops.element("stdBrick", 785, *[750, 748, 641, 643, 754, 752, 649, 651], 220)
ops.element("stdBrick", 786, *[754, 752, 649, 651, 758, 756, 657, 659], 220)
ops.element("stdBrick", 787, *[758, 756, 657, 659, 762, 760, 665, 667], 220)
ops.element("stdBrick", 788, *[762, 760, 665, 667, 766, 764, 673, 675], 220)
ops.element("stdBrick", 789, *[766, 764, 673, 675, 770, 768, 681, 683], 220)
ops.element("stdBrick", 790, *[770, 768, 681, 683, 774, 772, 689, 691], 220)
ops.element("stdBrick", 791, *[774, 772, 689, 691, 778, 776, 697, 699], 220)
ops.element("stdBrick", 792, *[778, 776, 697, 699, 781, 780, 705, 706], 220)
ops.element("stdBrick", 842, *[796, 135, 133, 794, 800, 142, 138, 798], 220)
ops.element("stdBrick", 843, *[800, 142, 138, 798, 804, 150, 146, 802], 220)
ops.element("stdBrick", 844, *[804, 150, 146, 802, 808, 158, 154, 806], 220)
ops.element("stdBrick", 845, *[808, 158, 154, 806, 812, 166, 162, 810], 220)
ops.element("stdBrick", 846, *[812, 166, 162, 810, 816, 174, 170, 814], 220)
ops.element("stdBrick", 847, *[816, 174, 170, 814, 820, 182, 178, 818], 220)
ops.element("stdBrick", 848, *[820, 182, 178, 818, 824, 190, 186, 822], 220)
ops.element("stdBrick", 849, *[824, 190, 186, 822, 828, 198, 194, 826], 220)
ops.element("stdBrick", 850, *[828, 198, 194, 826, 832, 206, 202, 830], 220)
ops.element("stdBrick", 851, *[832, 206, 202, 830, 836, 214, 210, 834], 220)
ops.element("stdBrick", 852, *[836, 214, 210, 834, 840, 219, 217, 838], 220)
ops.element("stdBrick", 853, *[738, 796, 794, 619, 740, 800, 798, 625], 220)
ops.element("stdBrick", 854, *[740, 800, 798, 625, 744, 804, 802, 633], 220)
ops.element("stdBrick", 855, *[744, 804, 802, 633, 748, 808, 806, 641], 220)
ops.element("stdBrick", 856, *[748, 808, 806, 641, 752, 812, 810, 649], 220)
ops.element("stdBrick", 857, *[752, 812, 810, 649, 756, 816, 814, 657], 220)
ops.element("stdBrick", 858, *[756, 816, 814, 657, 760, 820, 818, 665], 220)
ops.element("stdBrick", 859, *[760, 820, 818, 665, 764, 824, 822, 673], 220)
ops.element("stdBrick", 860, *[764, 824, 822, 673, 768, 828, 826, 681], 220)
ops.element("stdBrick", 861, *[768, 828, 826, 681, 772, 832, 830, 689], 220)
ops.element("stdBrick", 862, *[772, 832, 830, 689, 776, 836, 834, 697], 220)
ops.element("stdBrick", 863, *[776, 836, 834, 697, 780, 840, 838, 705], 220)
ops.element("stdBrick", 889, *[865, 245, 242, 431, 867, 253, 249, 438], 220)
ops.element("stdBrick", 890, *[867, 253, 249, 438, 869, 261, 257, 446], 220)
ops.element("stdBrick", 891, *[869, 261, 257, 446, 871, 269, 265, 454], 220)
ops.element("stdBrick", 892, *[871, 269, 265, 454, 873, 277, 273, 462], 220)
ops.element("stdBrick", 893, *[873, 277, 273, 462, 875, 285, 281, 470], 220)
ops.element("stdBrick", 894, *[875, 285, 281, 470, 877, 293, 289, 478], 220)
ops.element("stdBrick", 895, *[877, 293, 289, 478, 879, 301, 297, 486], 220)
ops.element("stdBrick", 896, *[879, 301, 297, 486, 881, 309, 305, 494], 220)
ops.element("stdBrick", 897, *[881, 309, 305, 494, 883, 317, 313, 502], 220)
ops.element("stdBrick", 898, *[883, 317, 313, 502, 885, 325, 321, 510], 220)
ops.element("stdBrick", 899, *[885, 325, 321, 510, 887, 331, 328, 517], 220)
ops.element("stdBrick", 900, *[794, 133, 245, 865, 798, 138, 253, 867], 220)
ops.element("stdBrick", 901, *[798, 138, 253, 867, 802, 146, 261, 869], 220)
ops.element("stdBrick", 902, *[802, 146, 261, 869, 806, 154, 269, 871], 220)
ops.element("stdBrick", 903, *[806, 154, 269, 871, 810, 162, 277, 873], 220)
ops.element("stdBrick", 904, *[810, 162, 277, 873, 814, 170, 285, 875], 220)
ops.element("stdBrick", 905, *[814, 170, 285, 875, 818, 178, 293, 877], 220)
ops.element("stdBrick", 906, *[818, 178, 293, 877, 822, 186, 301, 879], 220)
ops.element("stdBrick", 907, *[822, 186, 301, 879, 826, 194, 309, 881], 220)
ops.element("stdBrick", 908, *[826, 194, 309, 881, 830, 202, 317, 883], 220)
ops.element("stdBrick", 909, *[830, 202, 317, 883, 834, 210, 325, 885], 220)
ops.element("stdBrick", 910, *[834, 210, 325, 885, 838, 217, 331, 887], 220)
ops.element("stdBrick", 911, *[615, 865, 431, 433, 621, 867, 438, 440], 220)
ops.element("stdBrick", 912, *[621, 867, 438, 440, 629, 869, 446, 448], 220)
ops.element("stdBrick", 913, *[629, 869, 446, 448, 637, 871, 454, 456], 220)
ops.element("stdBrick", 914, *[637, 871, 454, 456, 645, 873, 462, 464], 220)
ops.element("stdBrick", 915, *[645, 873, 462, 464, 653, 875, 470, 472], 220)
ops.element("stdBrick", 916, *[653, 875, 470, 472, 661, 877, 478, 480], 220)
ops.element("stdBrick", 917, *[661, 877, 478, 480, 669, 879, 486, 488], 220)
ops.element("stdBrick", 918, *[669, 879, 486, 488, 677, 881, 494, 496], 220)
ops.element("stdBrick", 919, *[677, 881, 494, 496, 685, 883, 502, 504], 220)
ops.element("stdBrick", 920, *[685, 883, 502, 504, 693, 885, 510, 512], 220)
ops.element("stdBrick", 921, *[693, 885, 510, 512, 701, 887, 517, 519], 220)
ops.element("stdBrick", 922, *[619, 794, 865, 615, 625, 798, 867, 621], 220)
ops.element("stdBrick", 923, *[625, 798, 867, 621, 633, 802, 869, 629], 220)
ops.element("stdBrick", 924, *[633, 802, 869, 629, 641, 806, 871, 637], 220)
ops.element("stdBrick", 925, *[641, 806, 871, 637, 649, 810, 873, 645], 220)
ops.element("stdBrick", 926, *[649, 810, 873, 645, 657, 814, 875, 653], 220)
ops.element("stdBrick", 927, *[657, 814, 875, 653, 665, 818, 877, 661], 220)
ops.element("stdBrick", 928, *[665, 818, 877, 661, 673, 822, 879, 669], 220)
ops.element("stdBrick", 929, *[673, 822, 879, 669, 681, 826, 881, 677], 220)
ops.element("stdBrick", 930, *[681, 826, 881, 677, 689, 830, 883, 685], 220)
ops.element("stdBrick", 931, *[689, 830, 883, 685, 697, 834, 885, 693], 220)
ops.element("stdBrick", 932, *[697, 834, 885, 693, 705, 838, 887, 701], 220)
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.wipeAnalysis()
ops.loadConst('-time', 0.0)
ops.timeSeries('Linear', 1)
ops.pattern('Plain', 2, 1)
ops.eleLoad('-ele', *[33], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[36], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[39], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[42], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[45], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[48], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[51], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[54], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[57], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[60], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[85], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[88], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[91], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[94], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[97], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[100], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[103], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[106], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[109], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[112], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.load(132, *[0, 0, -196133000000.0])
ops.load(136, *[0, 0, -147099750000.0])
ops.load(144, *[0, 0, -147099750000.0])
ops.load(152, *[0, 0, -147099750000.0])
ops.load(160, *[0, 0, -147099750000.0])
ops.load(168, *[0, 0, -147099750000.0])
ops.load(176, *[0, 0, -147099750000.0])
ops.load(184, *[0, 0, -147099750000.0])
ops.load(192, *[0, 0, -147099750000.0])
ops.load(200, *[0, 0, -147099750000.0])
ops.load(208, *[0, 0, -147099750000.0])
ops.load(216, *[0, 0, -147099750000.0])
ops.load(134, *[0, 0, -196133000000.0])
ops.load(140, *[0, 0, -147099750000.0])
ops.load(148, *[0, 0, -147099750000.0])
ops.load(156, *[0, 0, -147099750000.0])
ops.load(164, *[0, 0, -147099750000.0])
ops.load(172, *[0, 0, -147099750000.0])
ops.load(180, *[0, 0, -147099750000.0])
ops.load(188, *[0, 0, -147099750000.0])
ops.load(196, *[0, 0, -147099750000.0])
ops.load(204, *[0, 0, -147099750000.0])
ops.load(212, *[0, 0, -147099750000.0])
ops.load(218, *[0, 0, -147099750000.0])
ops.load(133, *[0, 0, -196133000000.0])
ops.load(138, *[0, 0, -147099750000.0])
ops.load(146, *[0, 0, -147099750000.0])
ops.load(154, *[0, 0, -147099750000.0])
ops.load(162, *[0, 0, -147099750000.0])
ops.load(170, *[0, 0, -147099750000.0])
ops.load(178, *[0, 0, -147099750000.0])
ops.load(186, *[0, 0, -147099750000.0])
ops.load(194, *[0, 0, -147099750000.0])
ops.load(202, *[0, 0, -147099750000.0])
ops.load(210, *[0, 0, -147099750000.0])
ops.load(217, *[0, 0, -147099750000.0])
ops.load(135, *[0, 0, -196133000000.0])
ops.load(142, *[0, 0, -147099750000.0])
ops.load(150, *[0, 0, -147099750000.0])
ops.load(158, *[0, 0, -147099750000.0])
ops.load(166, *[0, 0, -147099750000.0])
ops.load(174, *[0, 0, -147099750000.0])
ops.load(182, *[0, 0, -147099750000.0])
ops.load(190, *[0, 0, -147099750000.0])
ops.load(198, *[0, 0, -147099750000.0])
ops.load(206, *[0, 0, -147099750000.0])
ops.load(214, *[0, 0, -147099750000.0])
ops.load(219, *[0, 0, -147099750000.0])
ops.load(241, *[0, 0, -98066500000.0])
ops.load(247, *[0, 0, -73549875000.0])
ops.load(255, *[0, 0, -73549875000.0])
ops.load(263, *[0, 0, -73549875000.0])
ops.load(271, *[0, 0, -73549875000.0])
ops.load(279, *[0, 0, -73549875000.0])
ops.load(287, *[0, 0, -73549875000.0])
ops.load(295, *[0, 0, -73549875000.0])
ops.load(303, *[0, 0, -73549875000.0])
ops.load(311, *[0, 0, -73549875000.0])
ops.load(319, *[0, 0, -73549875000.0])
ops.load(327, *[0, 0, -73549875000.0])
ops.load(243, *[0, 0, -98066500000.0])
ops.load(251, *[0, 0, -73549875000.0])
ops.load(259, *[0, 0, -73549875000.0])
ops.load(267, *[0, 0, -73549875000.0])
ops.load(275, *[0, 0, -73549875000.0])
ops.load(283, *[0, 0, -73549875000.0])
ops.load(291, *[0, 0, -73549875000.0])
ops.load(299, *[0, 0, -73549875000.0])
ops.load(307, *[0, 0, -73549875000.0])
ops.load(315, *[0, 0, -73549875000.0])
ops.load(323, *[0, 0, -73549875000.0])
ops.load(329, *[0, 0, -73549875000.0])
ops.load(132, *[0, 0, -98066500000.0])
ops.load(136, *[0, 0, -73549875000.0])
ops.load(144, *[0, 0, -73549875000.0])
ops.load(152, *[0, 0, -73549875000.0])
ops.load(160, *[0, 0, -73549875000.0])
ops.load(168, *[0, 0, -73549875000.0])
ops.load(176, *[0, 0, -73549875000.0])
ops.load(184, *[0, 0, -73549875000.0])
ops.load(192, *[0, 0, -73549875000.0])
ops.load(200, *[0, 0, -73549875000.0])
ops.load(208, *[0, 0, -73549875000.0])
ops.load(216, *[0, 0, -73549875000.0])
ops.load(242, *[0, 0, -98066500000.0])
ops.load(249, *[0, 0, -73549875000.0])
ops.load(257, *[0, 0, -73549875000.0])
ops.load(265, *[0, 0, -73549875000.0])
ops.load(273, *[0, 0, -73549875000.0])
ops.load(281, *[0, 0, -73549875000.0])
ops.load(289, *[0, 0, -73549875000.0])
ops.load(297, *[0, 0, -73549875000.0])
ops.load(305, *[0, 0, -73549875000.0])
ops.load(313, *[0, 0, -73549875000.0])
ops.load(321, *[0, 0, -73549875000.0])
ops.load(328, *[0, 0, -73549875000.0])
ops.load(245, *[0, 0, -98066500000.0])
ops.load(253, *[0, 0, -73549875000.0])
ops.load(261, *[0, 0, -73549875000.0])
ops.load(269, *[0, 0, -73549875000.0])
ops.load(277, *[0, 0, -73549875000.0])
ops.load(285, *[0, 0, -73549875000.0])
ops.load(293, *[0, 0, -73549875000.0])
ops.load(301, *[0, 0, -73549875000.0])
ops.load(309, *[0, 0, -73549875000.0])
ops.load(317, *[0, 0, -73549875000.0])
ops.load(325, *[0, 0, -73549875000.0])
ops.load(331, *[0, 0, -73549875000.0])
ops.load(133, *[0, 0, -98066500000.0])
ops.load(138, *[0, 0, -73549875000.0])
ops.load(146, *[0, 0, -73549875000.0])
ops.load(154, *[0, 0, -73549875000.0])
ops.load(162, *[0, 0, -73549875000.0])
ops.load(170, *[0, 0, -73549875000.0])
ops.load(178, *[0, 0, -73549875000.0])
ops.load(186, *[0, 0, -73549875000.0])
ops.load(194, *[0, 0, -73549875000.0])
ops.load(202, *[0, 0, -73549875000.0])
ops.load(210, *[0, 0, -73549875000.0])
ops.load(217, *[0, 0, -73549875000.0])
ops.load(364, *[0, 0, -196133000000.0])
ops.load(366, *[0, 0, -147099750000.0])
ops.load(370, *[0, 0, -147099750000.0])
ops.load(374, *[0, 0, -147099750000.0])
ops.load(378, *[0, 0, -147099750000.0])
ops.load(382, *[0, 0, -147099750000.0])
ops.load(386, *[0, 0, -147099750000.0])
ops.load(390, *[0, 0, -147099750000.0])
ops.load(394, *[0, 0, -147099750000.0])
ops.load(398, *[0, 0, -147099750000.0])
ops.load(402, *[0, 0, -147099750000.0])
ops.load(406, *[0, 0, -147099750000.0])
ops.load(241, *[0, 0, -196133000000.0])
ops.load(247, *[0, 0, -147099750000.0])
ops.load(255, *[0, 0, -147099750000.0])
ops.load(263, *[0, 0, -147099750000.0])
ops.load(271, *[0, 0, -147099750000.0])
ops.load(279, *[0, 0, -147099750000.0])
ops.load(287, *[0, 0, -147099750000.0])
ops.load(295, *[0, 0, -147099750000.0])
ops.load(303, *[0, 0, -147099750000.0])
ops.load(311, *[0, 0, -147099750000.0])
ops.load(319, *[0, 0, -147099750000.0])
ops.load(327, *[0, 0, -147099750000.0])
ops.load(365, *[0, 0, -196133000000.0])
ops.load(368, *[0, 0, -147099750000.0])
ops.load(372, *[0, 0, -147099750000.0])
ops.load(376, *[0, 0, -147099750000.0])
ops.load(380, *[0, 0, -147099750000.0])
ops.load(384, *[0, 0, -147099750000.0])
ops.load(388, *[0, 0, -147099750000.0])
ops.load(392, *[0, 0, -147099750000.0])
ops.load(396, *[0, 0, -147099750000.0])
ops.load(400, *[0, 0, -147099750000.0])
ops.load(404, *[0, 0, -147099750000.0])
ops.load(407, *[0, 0, -147099750000.0])
ops.load(242, *[0, 0, -196133000000.0])
ops.load(249, *[0, 0, -147099750000.0])
ops.load(257, *[0, 0, -147099750000.0])
ops.load(265, *[0, 0, -147099750000.0])
ops.load(273, *[0, 0, -147099750000.0])
ops.load(281, *[0, 0, -147099750000.0])
ops.load(289, *[0, 0, -147099750000.0])
ops.load(297, *[0, 0, -147099750000.0])
ops.load(305, *[0, 0, -147099750000.0])
ops.load(313, *[0, 0, -147099750000.0])
ops.load(321, *[0, 0, -147099750000.0])
ops.load(328, *[0, 0, -147099750000.0])
ops.load(365, *[0, 0, -98066500000.0])
ops.load(368, *[0, 0, -73549875000.0])
ops.load(372, *[0, 0, -73549875000.0])
ops.load(376, *[0, 0, -73549875000.0])
ops.load(380, *[0, 0, -73549875000.0])
ops.load(384, *[0, 0, -73549875000.0])
ops.load(388, *[0, 0, -73549875000.0])
ops.load(392, *[0, 0, -73549875000.0])
ops.load(396, *[0, 0, -73549875000.0])
ops.load(400, *[0, 0, -73549875000.0])
ops.load(404, *[0, 0, -73549875000.0])
ops.load(407, *[0, 0, -73549875000.0])
ops.load(242, *[0, 0, -98066500000.0])
ops.load(249, *[0, 0, -73549875000.0])
ops.load(257, *[0, 0, -73549875000.0])
ops.load(265, *[0, 0, -73549875000.0])
ops.load(273, *[0, 0, -73549875000.0])
ops.load(281, *[0, 0, -73549875000.0])
ops.load(289, *[0, 0, -73549875000.0])
ops.load(297, *[0, 0, -73549875000.0])
ops.load(305, *[0, 0, -73549875000.0])
ops.load(313, *[0, 0, -73549875000.0])
ops.load(321, *[0, 0, -73549875000.0])
ops.load(328, *[0, 0, -73549875000.0])
ops.load(428, *[0, 0, -98066500000.0])
ops.load(434, *[0, 0, -73549875000.0])
ops.load(442, *[0, 0, -73549875000.0])
ops.load(450, *[0, 0, -73549875000.0])
ops.load(458, *[0, 0, -73549875000.0])
ops.load(466, *[0, 0, -73549875000.0])
ops.load(474, *[0, 0, -73549875000.0])
ops.load(482, *[0, 0, -73549875000.0])
ops.load(490, *[0, 0, -73549875000.0])
ops.load(498, *[0, 0, -73549875000.0])
ops.load(506, *[0, 0, -73549875000.0])
ops.load(514, *[0, 0, -73549875000.0])
ops.load(431, *[0, 0, -98066500000.0])
ops.load(438, *[0, 0, -73549875000.0])
ops.load(446, *[0, 0, -73549875000.0])
ops.load(454, *[0, 0, -73549875000.0])
ops.load(462, *[0, 0, -73549875000.0])
ops.load(470, *[0, 0, -73549875000.0])
ops.load(478, *[0, 0, -73549875000.0])
ops.load(486, *[0, 0, -73549875000.0])
ops.load(494, *[0, 0, -73549875000.0])
ops.load(502, *[0, 0, -73549875000.0])
ops.load(510, *[0, 0, -73549875000.0])
ops.load(517, *[0, 0, -73549875000.0])
ops.load(430, *[0, 0, -98066500000.0])
ops.load(436, *[0, 0, -73549875000.0])
ops.load(444, *[0, 0, -73549875000.0])
ops.load(452, *[0, 0, -73549875000.0])
ops.load(460, *[0, 0, -73549875000.0])
ops.load(468, *[0, 0, -73549875000.0])
ops.load(476, *[0, 0, -73549875000.0])
ops.load(484, *[0, 0, -73549875000.0])
ops.load(492, *[0, 0, -73549875000.0])
ops.load(500, *[0, 0, -73549875000.0])
ops.load(508, *[0, 0, -73549875000.0])
ops.load(516, *[0, 0, -73549875000.0])
ops.load(433, *[0, 0, -98066500000.0])
ops.load(440, *[0, 0, -73549875000.0])
ops.load(448, *[0, 0, -73549875000.0])
ops.load(456, *[0, 0, -73549875000.0])
ops.load(464, *[0, 0, -73549875000.0])
ops.load(472, *[0, 0, -73549875000.0])
ops.load(480, *[0, 0, -73549875000.0])
ops.load(488, *[0, 0, -73549875000.0])
ops.load(496, *[0, 0, -73549875000.0])
ops.load(504, *[0, 0, -73549875000.0])
ops.load(512, *[0, 0, -73549875000.0])
ops.load(519, *[0, 0, -73549875000.0])
ops.load(430, *[0, 0, -196133000000.0])
ops.load(436, *[0, 0, -147099750000.0])
ops.load(444, *[0, 0, -147099750000.0])
ops.load(452, *[0, 0, -147099750000.0])
ops.load(460, *[0, 0, -147099750000.0])
ops.load(468, *[0, 0, -147099750000.0])
ops.load(476, *[0, 0, -147099750000.0])
ops.load(484, *[0, 0, -147099750000.0])
ops.load(492, *[0, 0, -147099750000.0])
ops.load(500, *[0, 0, -147099750000.0])
ops.load(508, *[0, 0, -147099750000.0])
ops.load(516, *[0, 0, -147099750000.0])
ops.load(433, *[0, 0, -196133000000.0])
ops.load(440, *[0, 0, -147099750000.0])
ops.load(448, *[0, 0, -147099750000.0])
ops.load(456, *[0, 0, -147099750000.0])
ops.load(464, *[0, 0, -147099750000.0])
ops.load(472, *[0, 0, -147099750000.0])
ops.load(480, *[0, 0, -147099750000.0])
ops.load(488, *[0, 0, -147099750000.0])
ops.load(496, *[0, 0, -147099750000.0])
ops.load(504, *[0, 0, -147099750000.0])
ops.load(512, *[0, 0, -147099750000.0])
ops.load(519, *[0, 0, -147099750000.0])
ops.load(551, *[0, 0, -196133000000.0])
ops.load(553, *[0, 0, -147099750000.0])
ops.load(557, *[0, 0, -147099750000.0])
ops.load(561, *[0, 0, -147099750000.0])
ops.load(565, *[0, 0, -147099750000.0])
ops.load(569, *[0, 0, -147099750000.0])
ops.load(573, *[0, 0, -147099750000.0])
ops.load(577, *[0, 0, -147099750000.0])
ops.load(581, *[0, 0, -147099750000.0])
ops.load(585, *[0, 0, -147099750000.0])
ops.load(589, *[0, 0, -147099750000.0])
ops.load(593, *[0, 0, -147099750000.0])
ops.load(552, *[0, 0, -196133000000.0])
ops.load(555, *[0, 0, -147099750000.0])
ops.load(559, *[0, 0, -147099750000.0])
ops.load(563, *[0, 0, -147099750000.0])
ops.load(567, *[0, 0, -147099750000.0])
ops.load(571, *[0, 0, -147099750000.0])
ops.load(575, *[0, 0, -147099750000.0])
ops.load(579, *[0, 0, -147099750000.0])
ops.load(583, *[0, 0, -147099750000.0])
ops.load(587, *[0, 0, -147099750000.0])
ops.load(591, *[0, 0, -147099750000.0])
ops.load(594, *[0, 0, -147099750000.0])
ops.load(433, *[0, 0, -98066500000.0])
ops.load(440, *[0, 0, -73549875000.0])
ops.load(448, *[0, 0, -73549875000.0])
ops.load(456, *[0, 0, -73549875000.0])
ops.load(464, *[0, 0, -73549875000.0])
ops.load(472, *[0, 0, -73549875000.0])
ops.load(480, *[0, 0, -73549875000.0])
ops.load(488, *[0, 0, -73549875000.0])
ops.load(496, *[0, 0, -73549875000.0])
ops.load(504, *[0, 0, -73549875000.0])
ops.load(512, *[0, 0, -73549875000.0])
ops.load(519, *[0, 0, -73549875000.0])
ops.load(615, *[0, 0, -98066500000.0])
ops.load(621, *[0, 0, -73549875000.0])
ops.load(629, *[0, 0, -73549875000.0])
ops.load(637, *[0, 0, -73549875000.0])
ops.load(645, *[0, 0, -73549875000.0])
ops.load(653, *[0, 0, -73549875000.0])
ops.load(661, *[0, 0, -73549875000.0])
ops.load(669, *[0, 0, -73549875000.0])
ops.load(677, *[0, 0, -73549875000.0])
ops.load(685, *[0, 0, -73549875000.0])
ops.load(693, *[0, 0, -73549875000.0])
ops.load(701, *[0, 0, -73549875000.0])
ops.load(619, *[0, 0, -98066500000.0])
ops.load(625, *[0, 0, -73549875000.0])
ops.load(633, *[0, 0, -73549875000.0])
ops.load(641, *[0, 0, -73549875000.0])
ops.load(649, *[0, 0, -73549875000.0])
ops.load(657, *[0, 0, -73549875000.0])
ops.load(665, *[0, 0, -73549875000.0])
ops.load(673, *[0, 0, -73549875000.0])
ops.load(681, *[0, 0, -73549875000.0])
ops.load(689, *[0, 0, -73549875000.0])
ops.load(697, *[0, 0, -73549875000.0])
ops.load(705, *[0, 0, -73549875000.0])
ops.load(552, *[0, 0, -98066500000.0])
ops.load(555, *[0, 0, -73549875000.0])
ops.load(559, *[0, 0, -73549875000.0])
ops.load(563, *[0, 0, -73549875000.0])
ops.load(567, *[0, 0, -73549875000.0])
ops.load(571, *[0, 0, -73549875000.0])
ops.load(575, *[0, 0, -73549875000.0])
ops.load(579, *[0, 0, -73549875000.0])
ops.load(583, *[0, 0, -73549875000.0])
ops.load(587, *[0, 0, -73549875000.0])
ops.load(591, *[0, 0, -73549875000.0])
ops.load(594, *[0, 0, -73549875000.0])
ops.load(617, *[0, 0, -98066500000.0])
ops.load(623, *[0, 0, -73549875000.0])
ops.load(631, *[0, 0, -73549875000.0])
ops.load(639, *[0, 0, -73549875000.0])
ops.load(647, *[0, 0, -73549875000.0])
ops.load(655, *[0, 0, -73549875000.0])
ops.load(663, *[0, 0, -73549875000.0])
ops.load(671, *[0, 0, -73549875000.0])
ops.load(679, *[0, 0, -73549875000.0])
ops.load(687, *[0, 0, -73549875000.0])
ops.load(695, *[0, 0, -73549875000.0])
ops.load(703, *[0, 0, -73549875000.0])
ops.load(620, *[0, 0, -98066500000.0])
ops.load(627, *[0, 0, -73549875000.0])
ops.load(635, *[0, 0, -73549875000.0])
ops.load(643, *[0, 0, -73549875000.0])
ops.load(651, *[0, 0, -73549875000.0])
ops.load(659, *[0, 0, -73549875000.0])
ops.load(667, *[0, 0, -73549875000.0])
ops.load(675, *[0, 0, -73549875000.0])
ops.load(683, *[0, 0, -73549875000.0])
ops.load(691, *[0, 0, -73549875000.0])
ops.load(699, *[0, 0, -73549875000.0])
ops.load(706, *[0, 0, -73549875000.0])
ops.load(619, *[0, 0, -196133000000.0])
ops.load(625, *[0, 0, -147099750000.0])
ops.load(633, *[0, 0, -147099750000.0])
ops.load(641, *[0, 0, -147099750000.0])
ops.load(649, *[0, 0, -147099750000.0])
ops.load(657, *[0, 0, -147099750000.0])
ops.load(665, *[0, 0, -147099750000.0])
ops.load(673, *[0, 0, -147099750000.0])
ops.load(681, *[0, 0, -147099750000.0])
ops.load(689, *[0, 0, -147099750000.0])
ops.load(697, *[0, 0, -147099750000.0])
ops.load(705, *[0, 0, -147099750000.0])
ops.load(738, *[0, 0, -196133000000.0])
ops.load(740, *[0, 0, -147099750000.0])
ops.load(744, *[0, 0, -147099750000.0])
ops.load(748, *[0, 0, -147099750000.0])
ops.load(752, *[0, 0, -147099750000.0])
ops.load(756, *[0, 0, -147099750000.0])
ops.load(760, *[0, 0, -147099750000.0])
ops.load(764, *[0, 0, -147099750000.0])
ops.load(768, *[0, 0, -147099750000.0])
ops.load(772, *[0, 0, -147099750000.0])
ops.load(776, *[0, 0, -147099750000.0])
ops.load(780, *[0, 0, -147099750000.0])
ops.load(620, *[0, 0, -196133000000.0])
ops.load(627, *[0, 0, -147099750000.0])
ops.load(635, *[0, 0, -147099750000.0])
ops.load(643, *[0, 0, -147099750000.0])
ops.load(651, *[0, 0, -147099750000.0])
ops.load(659, *[0, 0, -147099750000.0])
ops.load(667, *[0, 0, -147099750000.0])
ops.load(675, *[0, 0, -147099750000.0])
ops.load(683, *[0, 0, -147099750000.0])
ops.load(691, *[0, 0, -147099750000.0])
ops.load(699, *[0, 0, -147099750000.0])
ops.load(706, *[0, 0, -147099750000.0])
ops.load(739, *[0, 0, -196133000000.0])
ops.load(742, *[0, 0, -147099750000.0])
ops.load(746, *[0, 0, -147099750000.0])
ops.load(750, *[0, 0, -147099750000.0])
ops.load(754, *[0, 0, -147099750000.0])
ops.load(758, *[0, 0, -147099750000.0])
ops.load(762, *[0, 0, -147099750000.0])
ops.load(766, *[0, 0, -147099750000.0])
ops.load(770, *[0, 0, -147099750000.0])
ops.load(774, *[0, 0, -147099750000.0])
ops.load(778, *[0, 0, -147099750000.0])
ops.load(781, *[0, 0, -147099750000.0])
ops.load(133, *[0, 0, -98066500000.0])
ops.load(138, *[0, 0, -73549875000.0])
ops.load(146, *[0, 0, -73549875000.0])
ops.load(154, *[0, 0, -73549875000.0])
ops.load(162, *[0, 0, -73549875000.0])
ops.load(170, *[0, 0, -73549875000.0])
ops.load(178, *[0, 0, -73549875000.0])
ops.load(186, *[0, 0, -73549875000.0])
ops.load(194, *[0, 0, -73549875000.0])
ops.load(202, *[0, 0, -73549875000.0])
ops.load(210, *[0, 0, -73549875000.0])
ops.load(217, *[0, 0, -73549875000.0])
ops.load(135, *[0, 0, -98066500000.0])
ops.load(142, *[0, 0, -73549875000.0])
ops.load(150, *[0, 0, -73549875000.0])
ops.load(158, *[0, 0, -73549875000.0])
ops.load(166, *[0, 0, -73549875000.0])
ops.load(174, *[0, 0, -73549875000.0])
ops.load(182, *[0, 0, -73549875000.0])
ops.load(190, *[0, 0, -73549875000.0])
ops.load(198, *[0, 0, -73549875000.0])
ops.load(206, *[0, 0, -73549875000.0])
ops.load(214, *[0, 0, -73549875000.0])
ops.load(219, *[0, 0, -73549875000.0])
ops.load(794, *[0, 0, -98066500000.0])
ops.load(798, *[0, 0, -73549875000.0])
ops.load(802, *[0, 0, -73549875000.0])
ops.load(806, *[0, 0, -73549875000.0])
ops.load(810, *[0, 0, -73549875000.0])
ops.load(814, *[0, 0, -73549875000.0])
ops.load(818, *[0, 0, -73549875000.0])
ops.load(822, *[0, 0, -73549875000.0])
ops.load(826, *[0, 0, -73549875000.0])
ops.load(830, *[0, 0, -73549875000.0])
ops.load(834, *[0, 0, -73549875000.0])
ops.load(838, *[0, 0, -73549875000.0])
ops.load(796, *[0, 0, -98066500000.0])
ops.load(800, *[0, 0, -73549875000.0])
ops.load(804, *[0, 0, -73549875000.0])
ops.load(808, *[0, 0, -73549875000.0])
ops.load(812, *[0, 0, -73549875000.0])
ops.load(816, *[0, 0, -73549875000.0])
ops.load(820, *[0, 0, -73549875000.0])
ops.load(824, *[0, 0, -73549875000.0])
ops.load(828, *[0, 0, -73549875000.0])
ops.load(832, *[0, 0, -73549875000.0])
ops.load(836, *[0, 0, -73549875000.0])
ops.load(840, *[0, 0, -73549875000.0])
ops.load(619, *[0, 0, -98066500000.0])
ops.load(625, *[0, 0, -73549875000.0])
ops.load(633, *[0, 0, -73549875000.0])
ops.load(641, *[0, 0, -73549875000.0])
ops.load(649, *[0, 0, -73549875000.0])
ops.load(657, *[0, 0, -73549875000.0])
ops.load(665, *[0, 0, -73549875000.0])
ops.load(673, *[0, 0, -73549875000.0])
ops.load(681, *[0, 0, -73549875000.0])
ops.load(689, *[0, 0, -73549875000.0])
ops.load(697, *[0, 0, -73549875000.0])
ops.load(705, *[0, 0, -73549875000.0])
ops.load(738, *[0, 0, -98066500000.0])
ops.load(740, *[0, 0, -73549875000.0])
ops.load(744, *[0, 0, -73549875000.0])
ops.load(748, *[0, 0, -73549875000.0])
ops.load(752, *[0, 0, -73549875000.0])
ops.load(756, *[0, 0, -73549875000.0])
ops.load(760, *[0, 0, -73549875000.0])
ops.load(764, *[0, 0, -73549875000.0])
ops.load(768, *[0, 0, -73549875000.0])
ops.load(772, *[0, 0, -73549875000.0])
ops.load(776, *[0, 0, -73549875000.0])
ops.load(780, *[0, 0, -73549875000.0])
ops.load(242, *[0, 0, -49033250000.0])
ops.load(249, *[0, 0, -36774937500.0])
ops.load(257, *[0, 0, -36774937500.0])
ops.load(265, *[0, 0, -36774937500.0])
ops.load(273, *[0, 0, -36774937500.0])
ops.load(281, *[0, 0, -36774937500.0])
ops.load(289, *[0, 0, -36774937500.0])
ops.load(297, *[0, 0, -36774937500.0])
ops.load(305, *[0, 0, -36774937500.0])
ops.load(313, *[0, 0, -36774937500.0])
ops.load(321, *[0, 0, -36774937500.0])
ops.load(328, *[0, 0, -36774937500.0])
ops.load(245, *[0, 0, -49033250000.0])
ops.load(253, *[0, 0, -36774937500.0])
ops.load(261, *[0, 0, -36774937500.0])
ops.load(269, *[0, 0, -36774937500.0])
ops.load(277, *[0, 0, -36774937500.0])
ops.load(285, *[0, 0, -36774937500.0])
ops.load(293, *[0, 0, -36774937500.0])
ops.load(301, *[0, 0, -36774937500.0])
ops.load(309, *[0, 0, -36774937500.0])
ops.load(317, *[0, 0, -36774937500.0])
ops.load(325, *[0, 0, -36774937500.0])
ops.load(331, *[0, 0, -36774937500.0])
ops.load(133, *[0, 0, -49033250000.0])
ops.load(138, *[0, 0, -36774937500.0])
ops.load(146, *[0, 0, -36774937500.0])
ops.load(154, *[0, 0, -36774937500.0])
ops.load(162, *[0, 0, -36774937500.0])
ops.load(170, *[0, 0, -36774937500.0])
ops.load(178, *[0, 0, -36774937500.0])
ops.load(186, *[0, 0, -36774937500.0])
ops.load(194, *[0, 0, -36774937500.0])
ops.load(202, *[0, 0, -36774937500.0])
ops.load(210, *[0, 0, -36774937500.0])
ops.load(217, *[0, 0, -36774937500.0])
ops.load(431, *[0, 0, -49033250000.0])
ops.load(438, *[0, 0, -36774937500.0])
ops.load(446, *[0, 0, -36774937500.0])
ops.load(454, *[0, 0, -36774937500.0])
ops.load(462, *[0, 0, -36774937500.0])
ops.load(470, *[0, 0, -36774937500.0])
ops.load(478, *[0, 0, -36774937500.0])
ops.load(486, *[0, 0, -36774937500.0])
ops.load(494, *[0, 0, -36774937500.0])
ops.load(502, *[0, 0, -36774937500.0])
ops.load(510, *[0, 0, -36774937500.0])
ops.load(517, *[0, 0, -36774937500.0])
ops.load(865, *[0, 0, -49033250000.0])
ops.load(867, *[0, 0, -36774937500.0])
ops.load(869, *[0, 0, -36774937500.0])
ops.load(871, *[0, 0, -36774937500.0])
ops.load(873, *[0, 0, -36774937500.0])
ops.load(875, *[0, 0, -36774937500.0])
ops.load(877, *[0, 0, -36774937500.0])
ops.load(879, *[0, 0, -36774937500.0])
ops.load(881, *[0, 0, -36774937500.0])
ops.load(883, *[0, 0, -36774937500.0])
ops.load(885, *[0, 0, -36774937500.0])
ops.load(887, *[0, 0, -36774937500.0])
ops.load(794, *[0, 0, -49033250000.0])
ops.load(798, *[0, 0, -36774937500.0])
ops.load(802, *[0, 0, -36774937500.0])
ops.load(806, *[0, 0, -36774937500.0])
ops.load(810, *[0, 0, -36774937500.0])
ops.load(814, *[0, 0, -36774937500.0])
ops.load(818, *[0, 0, -36774937500.0])
ops.load(822, *[0, 0, -36774937500.0])
ops.load(826, *[0, 0, -36774937500.0])
ops.load(830, *[0, 0, -36774937500.0])
ops.load(834, *[0, 0, -36774937500.0])
ops.load(838, *[0, 0, -36774937500.0])
ops.load(433, *[0, 0, -49033250000.0])
ops.load(440, *[0, 0, -36774937500.0])
ops.load(448, *[0, 0, -36774937500.0])
ops.load(456, *[0, 0, -36774937500.0])
ops.load(464, *[0, 0, -36774937500.0])
ops.load(472, *[0, 0, -36774937500.0])
ops.load(480, *[0, 0, -36774937500.0])
ops.load(488, *[0, 0, -36774937500.0])
ops.load(496, *[0, 0, -36774937500.0])
ops.load(504, *[0, 0, -36774937500.0])
ops.load(512, *[0, 0, -36774937500.0])
ops.load(519, *[0, 0, -36774937500.0])
ops.load(615, *[0, 0, -49033250000.0])
ops.load(621, *[0, 0, -36774937500.0])
ops.load(629, *[0, 0, -36774937500.0])
ops.load(637, *[0, 0, -36774937500.0])
ops.load(645, *[0, 0, -36774937500.0])
ops.load(653, *[0, 0, -36774937500.0])
ops.load(661, *[0, 0, -36774937500.0])
ops.load(669, *[0, 0, -36774937500.0])
ops.load(677, *[0, 0, -36774937500.0])
ops.load(685, *[0, 0, -36774937500.0])
ops.load(693, *[0, 0, -36774937500.0])
ops.load(701, *[0, 0, -36774937500.0])
ops.load(619, *[0, 0, -49033250000.0])
ops.load(625, *[0, 0, -36774937500.0])
ops.load(633, *[0, 0, -36774937500.0])
ops.load(641, *[0, 0, -36774937500.0])
ops.load(649, *[0, 0, -36774937500.0])
ops.load(657, *[0, 0, -36774937500.0])
ops.load(665, *[0, 0, -36774937500.0])
ops.load(673, *[0, 0, -36774937500.0])
ops.load(681, *[0, 0, -36774937500.0])
ops.load(689, *[0, 0, -36774937500.0])
ops.load(697, *[0, 0, -36774937500.0])
ops.load(705, *[0, 0, -36774937500.0])
ops.constraints(*['Transformation'])
ops.integrator(*['LoadControl', 0.01])
ops.numberer(*['RCM'])
ops.system(*['BandSPD'])
ops.test(*['NormDispIncr', 6, 10, 0, 2])
ops.algorithm(*['Newton', False, False, False])
ops.analysis('Static')
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.wipeAnalysis()
ops.loadConst('-time', 0.0)
ops.pattern('MultipleSupport', 3)
ops.timeSeries('Path', 1141, '-values', *[-7.071413165249396e-06, -7.072057087498251e-06, -7.075131179590244e-06, -7.079821898514638e-06, -7.087962785590207e-06, -7.097879915818339e-06, -7.109475973265944e-06, -7.12160090188263e-06, -7.13234294380527e-06, -7.1401709647034295e-06, -7.144301889638882e-06, -7.145928066165652e-06, -7.145508789108135e-06, -7.142205049603945e-06, -7.13661120244069e-06, -7.129821824491955e-06, -7.126534910639748e-06, -7.13182498657261e-06, -7.149722023314098e-06, -7.180226020864211e-06, -7.217926849989453e-06, -7.2526599979028106e-06, -7.274928975675721e-06, -7.2764719334372785e-06, -7.259904123202432e-06, -7.236295914481161e-06, -7.224857199616963e-06, -7.246072073030518e-06, -7.318622920138296e-06, -7.447833922924474e-06, -7.61740602683858e-06, -7.798027581884526e-06, -7.956136869324837e-06, -8.063564564508852e-06, -8.111665920296218e-06, -8.107387657219078e-06, -8.075641744653694e-06, -8.040788088692352e-06, -8.017233994905837e-06, -8.002449249033816e-06, -7.984725016285665e-06, -7.948670827317983e-06, -7.872752576076891e-06, -7.761142114759423e-06, -7.645813639101107e-06, -7.5464381552592386e-06, -7.467204795830185e-06, -7.409154932247475e-06, -7.368324077106081e-06, -7.339814146689605e-06, -7.3293540481245145e-06, -7.339056082855677e-06, -7.360512881859904e-06, -7.372812888206681e-06, -7.358642960753059e-06, -7.319211817957694e-06, -7.263740826601861e-06, -7.187603841884993e-06, -7.0702581069781445e-06, -6.910328920639586e-06, -6.738860065524932e-06, -6.621254215133376e-06, -6.6145012169727124e-06, -6.738552201568382e-06, -6.968857178435428e-06, -7.243953859870089e-06, -7.495829777326435e-06, -7.668370017199777e-06, -7.727389856881928e-06, -7.683616786380298e-06, -7.587757863802835e-06, -7.512266165576875e-06, -7.473272034985712e-06, -7.428442131640622e-06, -7.331752840400441e-06, -7.150464170990745e-06, -6.893184036016464e-06, -6.6346237872494385e-06, -6.4881851358222775e-06, -6.534798103530193e-06, -6.792095973651158e-06, -7.208666829683352e-06, -7.65980439609848e-06, -8.003828952496406e-06, -8.152852387866005e-06, -8.108790098049212e-06, -7.900013770267833e-06, -7.581100817333208e-06, -7.231607924040873e-06, -6.969681180635234e-06, -6.9349221121228766e-06, -7.191360964498017e-06, -7.658244612684939e-06, -8.154943316185381e-06, -8.50035394250881e-06, -8.544218871975318e-06, -8.2612441474339e-06, -7.797427315381356e-06, -7.324977104872232e-06, -6.920373834873317e-06, -6.582786227227189e-06, -6.292648777161958e-06, -6.0400620895961765e-06, -5.895944013900589e-06, -5.947440968157025e-06, -6.225126981007634e-06, -6.697650860587601e-06, -7.299081062228652e-06, -7.977753739396576e-06, -8.722944585315417e-06, -9.561799743096344e-06, -1.0450129593664315e-05, -1.1179679859196767e-05, -1.1440790331107564e-05, -1.0944590030703694e-05, -9.67969299381366e-06, -7.958986316225491e-06, -6.191622105689021e-06, -4.682484814111376e-06, -3.5877710615750402e-06, -2.959259973067674e-06, -2.7779460651800036e-06, -2.9939189971628366e-06, -3.5781720271188533e-06, -4.513432941166684e-06, -5.7701640798768494e-06, -7.269322850333992e-06, -8.943556167650968e-06, -1.0605540410324465e-05, -1.1864380212500691e-05, -1.2358400454104412e-05, -1.195465029013576e-05, -1.096400956157595e-05, -9.88658666756237e-06, -9.125705219048541e-06, -8.85393819771707e-06, -8.99674432730535e-06, -9.402720934303943e-06, -9.914978363667615e-06, -1.0445080079080071e-05, -1.0982829735439736e-05, -1.1564879969228059e-05, -1.2219269592605997e-05, -1.2979309758520685e-05, -1.3725990356761031e-05, -1.4095309779804666e-05, -1.3538829989556689e-05, -1.1705190445354674e-05, -8.814917237032205e-06, -5.644872999255313e-06, -3.2101190754474374e-06, -2.284748916281387e-06, -2.986269009852549e-06, -4.722803168988321e-06, -6.612821835005889e-06, -7.792034011799842e-06, -7.656759407836944e-06, -6.136272986623226e-06, -3.747376013052417e-06, -1.2794760095857782e-06, 4.282975112346321e-07, 6.039994104867219e-07, -1.1647009614534909e-06, -4.700007139035733e-06, -9.50419416767545e-06, -1.4931810255802702e-05, -2.0182620573905297e-05, -2.4442340873065405e-05, -2.6871139198192395e-05, -2.6950130632030778e-05, -2.484284050296992e-05, -2.1243720766506158e-05, -1.6908299585338682e-05, -1.2477010386646725e-05, -8.466677172691561e-06, -5.129535111336736e-06, -2.6399870876048226e-06, -1.1081790489697596e-06, -5.307352921590791e-07, -7.69169616887666e-07, -1.305411956309399e-06, -1.4972180224503973e-06, -1.10552196019853e-06, -3.600366937916988e-07, 4.813391001334821e-07, 1.2141759953010478e-06, 1.5050710544528556e-06, 1.040746951730398e-06, -2.1906120650783123e-07, -2.070584059765679e-06, -3.903854121745098e-06, -4.8343049456889275e-06, -4.2898032006633e-06, -2.1923190161032835e-06, 1.2686119816862629e-06, 5.854567007190781e-06, 1.1184540198883042e-05, 1.62642500072252e-05, 1.965591036423575e-05, 2.0078719899174757e-05, 1.6865169527591206e-05, 1.033847001963295e-05, 1.473596967116464e-06, -8.36858725961065e-06, -1.7829750504461117e-05, -2.5595349143259227e-05, -3.0372410037671216e-05, -3.1424438930116594e-05, -2.9055030609015375e-05, -2.3999980840017088e-05, -1.729040923237335e-05, -1.0349829608458094e-05, -4.5063138713885564e-06, -2.743821880812902e-07, 2.2876890852785436e-06, 3.0887649700162e-06, 2.4238161131506786e-06, 1.0949570423690602e-06, -1.448527058300897e-07, -1.2898519798909547e-06, -3.1107720133149996e-06, -6.43309113002033e-06, -1.1373969755368307e-05, -1.7247459254576825e-05, -2.3020440494292416e-05, -2.7489189960760996e-05, -2.9770229957648553e-05, -2.9572769562946633e-05, -2.6988460376742296e-05, -2.2585680198972113e-05, -1.7190959624713287e-05, -1.1631519555521663e-05, -6.254282197915018e-06, -1.0380730373071856e-06, 4.001731213065796e-06, 8.327406249009073e-06, 1.0598630069580395e-05, 9.718258297652937e-06, 5.468881226988742e-06, -1.5983049479473266e-06, -1.0198629752267152e-05, -1.8190099581261165e-05, -2.3405069441650994e-05, -2.4916800612118095e-05, -2.282880996062886e-05, -1.800012068997603e-05, -1.1774510312534403e-05, -5.714347935281694e-06, -7.926890930320951e-07, 2.5449930944887456e-06, 3.807406073974562e-06, 2.874666961361072e-06, 2.096366955584017e-07, -3.2374409784097224e-06, -6.349650902848225e-06, -8.318378604599275e-06, -8.967864232545253e-06, -8.727404747332912e-06, -8.127602086460683e-06, -7.870909030316398e-06, -8.346704817085993e-06, -9.673074600868858e-06, -1.246108968189219e-05, -1.721935041132383e-05, -2.362272971367929e-05, -3.087530058110133e-05, -3.810066118603572e-05, -4.4031690777046606e-05, -4.758454088005237e-05, -4.830937905353494e-05, -4.6388639020733535e-05, -4.285218892619014e-05, -3.876031041727401e-05, -3.4741049603326246e-05, -3.089051824645139e-05, -2.697222043934744e-05, -2.2458680177805945e-05, -1.712252924335189e-05, -1.149338004324818e-05, -6.621507054660469e-06, -3.3862379495985806e-06, -2.3374439024337335e-06, -4.046762114739977e-06, -8.78072933119256e-06, -1.5836460079299286e-05, -2.374715950281825e-05, -3.113334969384596e-05, -3.696989006130025e-05, -4.0260638343170285e-05, -4.038301995024085e-05, -3.7265130231389776e-05, -3.128220123471692e-05, -2.363916064496152e-05, -1.6177329598576762e-05, -1.065205015038373e-05, -8.209772204281762e-06, -9.037098607223015e-06, -1.2743170373141766e-05, -1.810646972444374e-05, -2.344648055441212e-05, -2.6908750442089513e-05, -2.719702933973167e-05, -2.3620750653208233e-05, -1.6323470845236443e-05, -7.189481948444154e-06, 1.2905940138807637e-06, 7.080468094500247e-06, 9.019636308948975e-06, 6.750387910869904e-06, 5.435350090010616e-07, -8.745529157749843e-06, -1.9495439119054936e-05, -2.9744980565737933e-05, -3.79012999474071e-05, -4.266214091330767e-05, -4.34900211985223e-05, -4.032436845591292e-05, -3.372599167050794e-05, -2.5037070372491144e-05, -1.5943609469104558e-05, -8.496233022015076e-06, -4.9331561058352236e-06, -7.32311900719651e-06, -1.617207999515813e-05, -2.9477980206138454e-05, -4.321235974202864e-05, -5.299639087752439e-05, -5.664413038175553e-05, -5.452111872727983e-05, -4.826454824069515e-05, -3.931683022528887e-05, -2.8828919312218204e-05, -1.798607081582304e-05, -7.825778993719723e-06, 2.0029330016768654e-07, 4.46692320110742e-06, 3.6694150367111433e-06, -1.924004891407094e-06, -1.0183330232393928e-05, -1.8353650375502184e-05, -2.4321900127688423e-05, -2.7184449209016748e-05, -2.6931180400424637e-05, -2.4269800633192062e-05, -2.0209910871926695e-05, -1.6022819181671366e-05, -1.2860779861512128e-05, -1.1634590009634849e-05, -1.2940179658471607e-05, -1.7501630281913094e-05, -2.5477960662101395e-05, -3.6283989174989983e-05, -4.858553074882366e-05, -5.956348104518838e-05, -6.555703293997794e-05, -6.466206104960293e-05, -5.801597944810055e-05, -4.767057907884009e-05, -3.530022149789147e-05, -2.1608080714941025e-05, -7.379005182883702e-06, 6.356803169182967e-06, 1.8221720893052407e-05, 2.6675290428102016e-05, 2.989787026308477e-05, 2.690638939384371e-05, 1.8722079403232783e-05, 7.843166713428218e-06, -3.0191549740266055e-06, -1.1807949704234488e-05, -1.7188460333272815e-05, -1.818788041418884e-05, -1.3483039765560534e-05, -2.686695097509073e-06, 1.2900490219180938e-05, 3.0530030926456675e-05, 4.768605867866427e-05, 6.278127693803981e-05, 7.521860243286937e-05, 8.531592175131664e-05, 9.385670273331925e-05, 0.00010118269710801542, 0.00010745110193965957, 0.00011270139657426625, 0.00011705190263455734, 0.00012089929805370048, 0.00012402409629430622, 0.0001252485963050276, 0.0001232015056302771, 0.00011694659770000726, 0.00010666390153346583, 9.426930773770437e-05, 8.171042281901464e-05, 6.966859655221924e-05, 5.834542025695555e-05, 4.7849080146988854e-05, 3.853176167467609e-05, 3.101877882727422e-05, 2.5449540771660395e-05, 1.9916189557989128e-05, 1.233711009263061e-05, 2.50354310082912e-06, -7.920356438262388e-06, -1.6863610653672367e-05, -2.2136939151096158e-05, -2.1595060388790444e-05, -1.4333930266730022e-05, -1.836539013311267e-06, 1.1191030353074893e-05, 2.0184639652143233e-05, 2.255828985653352e-05, 1.764941043802537e-05, 6.514210781460861e-06, -8.405533662880771e-06, -2.302406937815249e-05, -3.2733278203522786e-05, -3.5285880585433915e-05, -3.190439019817859e-05, -2.576197039161343e-05, -1.9378539946046658e-05, -1.4023299627297092e-05, -1.0048729564005043e-05, -7.232570169435348e-06, -5.2726350077136885e-06, -3.5734049106395105e-06, -1.8158930288336705e-06, -6.730195991622168e-07, -1.3686519650946138e-06, -4.4600319597520865e-06, -8.925314432417508e-06, -1.2828239960072096e-05, -1.5461089788004756e-05, -1.7852609744295478e-05, -2.07271605177084e-05, -2.268484968226403e-05, -2.0509169189608656e-05, -1.159587009169627e-05, 4.601016826200066e-06, 2.531653990445193e-05, 4.477287075133063e-05, 5.698636960005388e-05, 5.822754974360578e-05, 4.874973092228174e-05, 3.188525079167448e-05, 1.1898790035047568e-05, -7.380904207821004e-06, -2.2741680368199013e-05, -3.2260501029668376e-05, -3.5961078538093716e-05, -3.349890175741166e-05, -2.3547039745608345e-05, -6.636480065935757e-06, 1.331704970652936e-05, 2.9760229153907858e-05, 3.6179950257064775e-05, 2.794917054416146e-05, 4.90818683829275e-06, -2.7275909815216437e-05, -5.847276042914018e-05, -7.79090914875269e-05, -7.945310790091753e-05, -6.30563372396864e-05, -3.491696043056436e-05, -3.002842049681931e-06, 2.6037110728793778e-05, 4.7687550249975175e-05, 5.9001449699280784e-05, 5.854917981196195e-05, 4.749923027702607e-05, 2.953172952402383e-05, 1.0383840162830893e-05, -3.1855859106144635e-06, -6.808576927141985e-06, -8.50315416300873e-07, 9.976764886232559e-06, 1.8930029909824952e-05, 2.1053230739198625e-05, 1.549736043671146e-05, 4.729688953375444e-06, -7.327344974328298e-06, -1.7751559425960295e-05, -2.555522951297462e-05, -3.191229916410521e-05, -3.929395825252868e-05, -4.864928996539675e-05, -5.867025174666196e-05, -6.740514072589576e-05, -7.355138950515538e-05, -7.63849529903382e-05, -7.447251846315339e-05, -6.735274655511603e-05, -5.637286085402593e-05, -4.348303991719149e-05, -3.020977965206839e-05, -1.663859984546434e-05, -2.853090109056211e-06, 1.0604940143821295e-05, 2.178965041821357e-05, 2.824735020112712e-05, 2.9132239433238283e-05, 2.4707289412617683e-05, 1.6505040548508987e-05, 7.704890776949469e-06, 1.5702770497227903e-06, -7.013409799583314e-07, 2.3824699724173115e-07, 1.8310510085939313e-06, 1.7659369859757135e-06, -7.375683139798639e-07, -5.111926839163061e-06, -9.818238140724134e-06, -1.2770819921570364e-05, -1.2376760423649102e-05, -9.769521057023667e-06, -6.960562132007908e-06, -5.209300070418976e-06, -5.867846994078718e-06, -8.50649485073518e-06, -1.1644309779512696e-05, -1.389046974509256e-05, -1.3287640285852831e-05, -7.499810180888744e-06, 3.390196980035398e-06, 1.4148699847282842e-05, 1.8265969629283063e-05, 1.1183719834662043e-05, -7.535745226050494e-06, -3.418327105464414e-05, -6.291773752309382e-05, -8.824822725728154e-05, -0.000106486797449179, -0.00011539120168890804, -0.00011400719813536853, -0.00010351419768994674, -8.590859943069518e-05, -6.217714690137655e-05, -3.3547639759490266e-05, -2.0959230369044235e-06, 2.807000964821782e-05, 5.231031900621019e-05, 6.70812078169547e-05, 7.03677287674509e-05, 6.258750363485888e-05, 4.669513873523101e-05, 2.693433089007158e-05, 7.075775101839099e-06, -1.0508450031920802e-05, -2.4123450202750973e-05, -3.2519550586584955e-05, -3.5431010473985225e-05, -3.405498864594847e-05, -2.9647550036315806e-05, -2.2688160242978483e-05, -1.2912610145576764e-05, -1.7363089455102454e-06, 7.4422518991923425e-06, 1.142607015935937e-05, 8.674947821418755e-06, 4.913314910481859e-07, -8.100701961666346e-06, -1.0728679626481608e-05, -4.216492015984841e-06, 8.892779987945687e-06, 2.238827983092051e-05, 3.14752796839457e-05, 3.4563010558485985e-05, 3.321760959806852e-05, 3.106578878941946e-05, 3.195851968484931e-05, 3.656828994280659e-05, 4.250705023878254e-05, 4.774787157657556e-05, 5.189485818846151e-05, 5.4648189689032733e-05, 5.4462041589431465e-05, 5.031489854445681e-05, 4.284422175260261e-05, 3.359066977282055e-05, 2.410142042208463e-05, 1.706516013655346e-05, 1.7898710211738944e-05, 3.1356401450466365e-05, 5.5760978284524754e-05, 8.440959209110588e-05, 0.00010957309859804809, 0.00012634749873541296, 0.00013348989887163043, 0.00013309880159795284, 0.00012845010496675968, 0.00012081680324627087, 0.00011030150199076161, 9.607434185454622e-05, 7.799114246154204e-05, 5.7539131375961006e-05, 3.7293928471626714e-05, 2.0060590031789616e-05, 9.3890530479257e-06, 7.82763436291134e-06, 1.4261029718909413e-05, 2.373692041146569e-05, 3.0045779567444697e-05, 2.9001930670347065e-05, 1.906323086586781e-05, 5.158839826435724e-07, -2.3736149159958586e-05, -4.963907122146338e-05, -7.182968693086877e-05, -8.591890218667686e-05, -9.081311145564541e-05, -8.74931865837425e-05, -7.882931095082313e-05, -6.817450775997713e-05, -5.9146201238036156e-05, -5.612850145553239e-05, -6.276489148149267e-05, -8.004788833204657e-05, -0.00010345099872210994, -0.00012643399531953037, -0.00014239440497476608, -0.00014648509386461228, -0.00013909410336054862, -0.00012367090675979853, -0.00010510189895285293, -8.604385220678523e-05, -6.672449671896175e-05, -4.766873098560609e-05, -3.0514969694195315e-05, -2.0230259906384163e-05, -2.3288750526262447e-05, -4.286715920898132e-05, -7.58438982302323e-05, -0.00011434200132498518, -0.00014854190521873534, -0.00016919340123422444, -0.00017077640222851187, -0.00015195869491435587, -0.00011579620331758633, -6.937753641977906e-05, -2.3438480639015324e-05, 1.034834986057831e-05, 2.429844971629791e-05, 1.6932919606915675e-05, -9.063845936907455e-06, -4.7066401748452336e-05, -8.774422167334706e-05, -0.00012261170195415616, -0.00014586909674108028, -0.00015696209447924048, -0.00016028160462155938, -0.0001603918062755838, -0.00015806680312380195, -0.00015148750389926136, -0.00013850840332452208, -0.00011739529873011634, -9.043866157298908e-05, -6.447858322644606e-05, -4.5365439291344956e-05, -3.532120899762958e-05, -3.467779970378615e-05, -4.3151070713065565e-05, -5.994827006361447e-05, -8.362977678189054e-05, -0.00011090900079580024, -0.00013663880235981196, -0.00015305560373235494, -0.00015301389794331044, -0.00013720570132136345, -0.00011556810204638168, -9.880823199637234e-05, -9.232910088030621e-05, -9.542689076624811e-05, -0.00010317889973521233, -0.00010904230293817818, -0.00010731859947554767, -9.744244016474113e-05, -8.190300286514685e-05, -6.38523415545933e-05, -4.552569953375496e-05, -2.8886830477858894e-05, -1.3877330275136046e-05, 1.1164900115545606e-07, 1.345136024610838e-05, 2.753398075583391e-05, 4.456548049347475e-05, 6.678768841084093e-05, 9.270748705603182e-05, 0.00011787519906647503, 0.00013723279698751867, 0.0001492907031206414, 0.00015716379857622087, 0.0001654165971558541, 0.0001772505056578666, 0.00019110400171484798, 0.00020379699708428234, 0.0002140475990017876, 0.00022115350293461233, 0.00022398239525500685, 0.00022365970653481781, 0.00022466179507318884, 0.00023076719662640244, 0.00024138459411915392, 0.0002512854989618063, 0.0002550797944422811, 0.0002508409961592406, 0.00024029069754760712, 0.0002273956051794812, 0.00021695939358323812, 0.0002117296971846372, 0.00021036059479229152, 0.00020949910685885698, 0.00020622920419555157, 0.00020017310453113168, 0.00019331810472067446, 0.00018960969464387745, 0.0001915658067446202, 0.0001983263937290758, 0.00020708709780592471, 0.00021392649796325713, 0.00021575120626948774, 0.00021200970513746142, 0.00020437959756236523, 0.0001954655017470941, 0.00018563629419077188, 0.00016919159679673612, 0.00014076479419600219, 0.00010032470163423568, 5.3058491175761446e-05, 6.869875051052077e-06, -3.105158975813538e-05, -5.551756112254225e-05, -6.49189532850869e-05, -6.0247421060921624e-05, -4.337614882388152e-05, -1.5891779185039923e-05, 1.8631630155141465e-05, 5.1591010560514405e-05, 7.156823266996071e-05, 6.999266042839736e-05, 4.51114792667795e-05, 2.839607077476103e-06, -4.514764077612199e-05, -8.718515891814604e-05, -0.00011893719783984125, -0.0001401547051500529, -0.00015108680236153305, -0.00015238650667015463, -0.00014477809600066394, -0.00013085799582768232, -0.00011470149911474437, -0.00010059319902211428, -9.252649761037901e-05, -9.203523950418457e-05, -9.724230039864779e-05, -0.00010518090130062774, -0.00011326999810989946, -0.00011724780051736161, -0.0001134491030825302, -0.00010186310100834817, -8.615379920229316e-05, -7.320600707316771e-05, -7.243086292874068e-05, -9.009803034132347e-05, -0.0001248857006430626, -0.00016771949594840407, -0.00020614049572031945, -0.00023113269708119333, -0.0002380478981649503, -0.0002258361055282876, -0.0001959094952326268, -0.00015236259787343442, -0.00010114790347870439, -4.970641020918265e-05, -4.865661139774602e-06, 2.8513819415820763e-05, 4.7931211156537756e-05, 5.3596191719407216e-05, 4.8191839596256614e-05, 3.668495992315002e-05, 2.2465670554083772e-05, 5.405548108683433e-06, -1.5107099898159504e-05, -3.7953890569042414e-05, -6.086844950914383e-05, -8.23832378955558e-05, -0.00010136039782082662, -0.00011534120130818337, -0.00012150200200267136, -0.00011983310105279088, -0.00011085189908044413, -9.399023838341236e-05, -6.971624679863453e-05, -4.067604095325805e-05, -1.0189380191150121e-05, 1.7136509995907545e-05, 3.4559820051072165e-05, 3.75265117327217e-05, 2.6684410840971395e-05, 4.565873041428858e-06, -2.7446320018498227e-05, -6.635714089497924e-05, -0.00010574080079095438, -0.00013854970165994018, -0.0001608099992154166, -0.00017188259516842663, -0.0001749379007378593, -0.00017460349772591144, -0.0001765057968441397, -0.00018519340665079653, -0.0001987649011425674, -0.0002092755021294579, -0.00020944149582646787, -0.00019922939827665687, -0.0001836697047110647, -0.00017031710012815893, -0.00016421730106230825, -0.00016566310659982264, -0.00017107039457187057, -0.00017467989528086036, -0.0001714649988571182, -0.00015792039630468935, -0.00013407789811026305, -0.00010378989827586338, -7.363557233475149e-05, -4.876506864093244e-05, -3.171397838741541e-05, -2.3585749659105204e-05, -2.4265440515591763e-05, -3.267147985752672e-05, -4.5955890527693555e-05, -6.118226883700117e-05, -7.345052290474996e-05, -7.760785229038447e-05, -7.282746082637459e-05, -6.0400230722734705e-05, -4.303361856727861e-05, -2.4467730327160098e-05, -1.0466759704286233e-05, -6.741779998264974e-06, -1.6046789824031293e-05, -3.7563921068795025e-05, -6.570341065526009e-05, -9.262368985218927e-05, -0.00011053300113417208, -0.0001133245968958363, -9.787182352738455e-05, -6.74353213980794e-05, -3.065579949179664e-05, 4.766141046275152e-06, 3.6180539609631523e-05, 6.550111720571294e-05, 9.519128070678562e-05, 0.00012564500502776355, 0.00015243689995259047, 0.00016975239850580692, 0.00017560800188221037, 0.00017225320334546268, 0.00016325399337802082, 0.00015131810505408794, 0.00014013370673637837, 0.0001339799928246066, 0.0001368472003377974, 0.00014980969717726111, 0.00017005880363285542, 0.0001918555935844779, 0.00021228620607871562, 0.00023278310254681855, 0.00025466099032200873, 0.0002753860899247229, 0.00029041070956736803, 0.0002987692132592201, 0.0003021674056071788, 0.0003024000907316804, 0.00030214869184419513, 0.0003049061924684793, 0.0003143961075693369, 0.00033245590748265386, 0.00035751648829318583, 0.00038513680920004845, 0.0004077153862453997, 0.0004170403117313981, 0.0004088834102731198, 0.00038548960583284497, 0.0003543169004842639, 0.0003239797952119261, 0.00030103541212156415, 0.00028708280296996236, 0.00027992879040539265, 0.00027887040050700307, 0.00028525650850497186, 0.0003006455081049353, 0.0003243128885515034, 0.0003506478969939053, 0.00037232349859550595, 0.00038135069189593196, 0.0003706734860315919, 0.0003374110965523869, 0.000284462992567569, 0.00022115980391390622, 0.0001614976063137874, 0.0001188276000902988, 0.00010075909813167527, 0.00010806410136865452, 0.00013602249964606017, 0.00017656630370765924, 0.00021836129599250853, 0.00024978190776892006, 0.00026308800443075597, 0.0002569642965681851, 0.0002358844067202881, 0.00020712599507533014, 0.00017903589468915015, 0.00015823029389139265, 0.0001467456022510305, 0.00014282450138125569, 0.00014116060629021376, 0.00013449109974317253, 0.00011713179992511868, 8.734964649192989e-05, 4.802579860552214e-05, 5.360891009331681e-06, -3.536358053679578e-05, -7.185361027950421e-05, -0.00010267949983244762, -0.00012788000458385795, -0.00014875989290885627, -0.00016809170483611524, -0.0001885110978037119, -0.00021169580577407032, -0.00023861259978730232, -0.00027008631150238216, -0.000304548186250031, -0.00033902080031111836, -0.00037149019772186875, -0.0004005504888482392, -0.00042570970254018903, -0.0004462079086806625, -0.00046324459253810346, -0.0004807020886801183, -0.000502032577060163, -0.0005278508760966361, -0.000556478975340724, -0.0005844174884259701, -0.0006056324928067625, -0.0006130675901658833, -0.0006040572770871222, -0.000582690117880702, -0.0005560169229283929, -0.0005305851227603853, -0.0005102931754663587, -0.0004977834760211408, -0.0004932957817800343, -0.0004954506875947118, -0.0005019932286813855, -0.0005072287749499083, -0.0005048912134952843, -0.0004900709027424455, -0.0004624346038326621, -0.00042665109504014254, -0.00039138610009104013, -0.0003645610122475773, -0.0003493113908916712, -0.0003439417923800647, -0.00034509951365180314, -0.00035081501118838787, -0.0003598341136239469, -0.0003713869082275778, -0.0003823357983492315, -0.0003854690003208816, -0.00037232390604913235, -0.00033826951403170824, -0.00028462859336286783, -0.00021673970331903547, -0.00014229769294615835, -6.932872929610312e-05, -5.273715032672044e-06, 4.555236955638975e-05, 8.226866339100525e-05, 0.00010422590275993571, 0.00011213830293854699, 0.00010791920067276806, 9.353273344459012e-05, 7.26505895727314e-05, 4.985972918802872e-05, 3.161250060657039e-05, 2.5341489163110964e-05, 3.522323095239699e-05, 5.988697012071498e-05, 9.366282756673172e-05, 0.00012891610094811767, 0.0001572939072502777, 0.00017415320326108485, 0.00018101869500242174, 0.0001844057987909764, 0.00019190189777873456, 0.00020771230629179627, 0.00023247780336532742, 0.0002629747032187879, 0.00029270511004142463, 0.00031292688800022006, 0.00031626661075279117, 0.00029931560857221484, 0.00026406950200907886, 0.0002182019961765036, 0.00017187140474561602, 0.00013166719872970134, 9.792346827453002e-05, 6.869166099932045e-05, 4.288946001906879e-05, 1.8503109458833933e-05, -7.221924988698447e-06, -3.511035174597055e-05, -6.43240418867208e-05, -9.150661207968369e-05, -0.00011241479660384357, -0.00012306610005907714, -0.0001221687998622656, -0.00011109709885204211, -9.220314677804708e-05, -6.942940672161058e-05, -4.6246710553532466e-05, -2.58581403613789e-05, -1.102659007301554e-05, -3.914909029845148e-06, -5.641104053211166e-06, -1.6661959307384677e-05, -3.507854125928134e-05, -5.601737939286977e-05, -7.305751205421984e-05, -8.051109034568071e-05, -7.421610644087195e-05, -5.189365037949756e-05, -1.4601439943362493e-05, 3.093473060289398e-05, 7.35656576580368e-05, 0.00010569860023679212, 0.00012419330596458167, 0.0001289706997340545, 0.00012299249647185206, 0.00011115709639852867, 0.00010076350008603185, 9.895410039462149e-05, 0.00010947880218736827, 0.00013392149412538856, 0.0001721042935969308, 0.000222597096581012, 0.000282185705145821, 0.00034556310856714845, 0.00040656881174072623, 0.0004590963071677834, 0.0005005347193218768, 0.0005333618028089404, 0.0005636591813527048, 0.0005970501806586981, 0.000632563722319901, 0.0006653873715549707, 0.0006910146912559867, 0.0007080279174260795, 0.0007178300875239074, 0.0007237130776047707, 0.0007282844162546098, 0.0007298719137907028, 0.0007256760145537555, 0.0007150131277740002, 0.0006987014785408974, 0.000677581992931664, 0.0006524436175823212, 0.0006246673874557018, 0.0005941131967119873, 0.0005581977893598378, 0.0005175396800041199, 0.0004767364007420838, 0.00044236669782549143, 0.00042105140164494514, 0.00041609370964579284, 0.00042418891098350286, 0.0004355924902483821, 0.00044165580766275525, 0.0004374329000711441, 0.0004226510936859995, 0.0004015731974504888, 0.00038107309956103563, 0.0003657586930785328, 0.00035302271135151386, 0.0003363598953001201, 0.0003101323964074254, 0.0002741253993008286, 0.00023284630151465535, 0.00019297930703032762, 0.00016022070485632867, 0.0001380064059048891, 0.0001292233937419951, 0.00013405679783318192, 0.0001476520992582664, 0.00016178849909920245, 0.00016834199777804315, 0.0001624767028260976, 0.0001445817033527419, 0.00011874699703184888, 8.944355795392767e-05, 5.989622150082141e-05, 3.0839139071758837e-05, 3.0338239866978256e-06, -2.13329003599938e-05, -3.90203385904897e-05, -4.704823004431091e-05, -4.4066440750611946e-05, -3.011875924130436e-05, -7.4336448960821144e-06, 2.043256063188892e-05, 4.913963857688941e-05, 7.678355905227363e-05, 0.00010527319682296365, 0.00013931159628555179, 0.00018218539480585605, 0.00023252780374605209, 0.0002859153028111905, 0.0003367670869920403, 0.0003803212021011859, 0.00041511451127007604, 0.0004427740932442248, 0.00046662590466439724, 0.0004896821919828653, 0.0005129153723828495, 0.0005359326023608446, 0.0005582558223977685, 0.00057869782904163, 0.0005960802081972361, 0.0006102964980527759, 0.0006230453145690262, 0.0006380907725542784, 0.0006569739198312163, 0.0006740412209182978, 0.0006818887777626514, 0.0006759361131116748, 0.0006560548790730536, 0.0006262214737944305, 0.0005933251231908798, 0.0005644524935632944, 0.0005435100756585598, 0.000531370984390378, 0.0005256002186797559, 0.0005238556186668575, 0.0005249459063634276, 0.0005276968004181981, 0.0005279429024085402, 0.0005170573713257909, 0.00048465150757692754, 0.0004217464884277433, 0.00032568018650636077, 0.0002000600943574682, 5.393104947870597e-05, -9.965558274416253e-05, -0.0002477176021784544, -0.0003809074987657368, -0.0004977795761078596, -0.0005998951965011656, -0.0006877683917991817, -0.0007590338937006891, -0.0008121266146190464, -0.0008496724767610431, -0.000878186197951436, -0.0009087644284591079, -0.0009533920092508197, -0.0010199419921264052, -0.0011103230062872171, -0.0012193250004202127, -0.0013365329941734672, -0.0014505749568343163, -0.0015511009842157364, -0.0016309759812429547, -0.001687707961536944, -0.0017249929951503873, -0.0017496809596195817, -0.0017651430098339915, -0.0017712060362100601, -0.0017682570032775402, -0.001755272038280964, -0.001730127027258277, -0.0016907339449971914, -0.001638539950363338, -0.0015802140114828944, -0.0015220210188999772, -0.0014680499443784356, -0.001422874047420919, -0.0013916910393163562, -0.0013766189804300666, -0.00137523899320513, -0.001382029033266008, -0.0013920279452577233, -0.0013992500025779009, -0.001394285005517304, -0.001366300042718649, -0.0013097230112180114, -0.001229017972946167, -0.0011351179564371705, -0.001039988943375647, -0.0009512538090348244, -0.0008754730806685984, -0.0008187341154552996, -0.0007819823804311454, -0.0007594642229378223, -0.0007461959030479193, -0.0007407930097542703, -0.0007389814709313214, -0.0007316662813536823, -0.0007088761194609106, -0.0006631637224927545, -0.0005905847065150738, -0.0004936439800076187, -0.0003797908138949424, -0.00025698699755594134, -0.00013026449596509337, -8.174981189768005e-07, 0.00013190250319894403, 0.00026927300496026874, 0.0004087623965460807, 0.0005418339278548956, 0.0006608287803828716, 0.0007641467964276671, 0.000853896199259907, 0.0009332306799478829, 0.0010061670327559114, 0.0010760079603642225, 0.0011443969560787082, 0.0012095089768990874, 0.0012685939436778426, 0.0013207360170781612, 0.0013658240204676986, 0.0014044080162420869, 0.0014372050063684583, 0.0014655960258096457, 0.0014902539551258087, 0.001512052956968546, 0.001530113979242742, 0.0015404210425913334, 0.001538212993182242, 0.0015188719844445586, 0.0014802459627389908, 0.0014221760211512446, 0.0013442330528050661, 0.0012485269689932466, 0.0011417530477046967, 0.0010351620148867369, 0.0009421947179362178, 0.000871450116392225, 0.0008237113943323493, 0.0007952793966978788, 0.0007812432013452053, 0.0007751196972094476, 0.0007702952716499567, 0.0007599545060656965, 0.0007358448929153383, 0.0006906709168106318, 0.0006217805203050375, 0.0005332776927389205, 0.0004344652988947928, 0.000336386205162853, 0.00024847910390235484, 0.00017591859796084464, 0.00011810199794126675, 6.82933023199439e-05, 1.8198059478891082e-05, -3.7834728573216125e-05, -0.0001013665969367139, -0.00016885279910638928, -0.00023243800387717783, -0.0002839560038410127, -0.00032084560371004045, -0.0003489163937047124, -0.000377176096662879, -0.00040924400673247874, -0.00044190831249579787, -0.00046734779607504606, -0.0004778571892529726, -0.00047299391007982194, -0.0004603650013450533, -0.0004508602141868323, -0.00045289850095286965, -0.0004693618102464825, -0.0004980702069588006, -0.0005329038831405342, -0.000566438480746001, -0.0005938794929534197, -0.0006126501248218119, -0.0006232355954125524, -0.0006274871993809938, -0.0006288046715781093, -0.0006285543786361814, -0.0006263577961362898, -0.0006251428858377039, -0.0006291820900514722, -0.0006413151859305799, -0.0006607635878026485, -0.0006827214965596795, -0.0007001681951805949, -0.0007071049767546356, -0.0006992619019001722, -0.000673141679726541, -0.0006270689773373306, -0.0005615212139673531, -0.00048364000394940376, -0.00041024701204150915, -0.0003628749109338969, -0.0003570283006411046, -0.00039459861000068486, -0.0004667635075747967, -0.000559319625608623, -0.0006575150764547288, -0.0007508639828301966, -0.0008371917065232992, -0.0009162579081021249, -0.0009827445028349757, -0.0010272510116919875, -0.0010417030425742269, -0.001024566008709371, -0.0009832961950451136, -0.0009313179180026054, -0.0008815288892947137, -0.0008427838911302388, -0.0008207550272345543, -0.0008186735794879496, -0.0008391597075387836, -0.0008830719161778688, -0.0009471296216361225, -0.0010223359568044543, -0.0010962940286844969, -0.00115360994823277, -0.0011794030433520675, -0.0011678660521283746, -0.0011250339448451996, -0.001063987030647695, -0.0009992541745305061, -0.0009441720903851092, -0.0009079372975975275, -0.0008940263069234788, -0.0009004352032206953, -0.0009221470099873841, -0.0009541952749714255, -0.000991225941106677, -0.0010257209651172161, -0.0010489169508218765, -0.0010540829971432686, -0.0010406440123915672, -0.0010151939932256937, -0.0009865444153547287, -0.0009603698854334652, -0.0009369265753775835, -0.0009136836160905659, -0.0008866597781889141, -0.0008523770957253873, -0.0008081264095380902, -0.0007527443813160062, -0.000688435509800911, -0.0006203412776812911, -0.0005570818902924657, -0.0005057139787822962, -0.0004684670129790902, -0.0004426538944244385, -0.00042190568638034165, -0.00040118981269188225, -0.0003775313089136034, -0.0003505614004097879, -0.00032220399589277804, -0.0002960698038805276, -0.0002731856075115502, -0.0002505666925571859, -0.00022693299979437143, -0.00020371979917399585, -0.00018295939662493765, -0.0001640286936890334, -0.00014324650692287832, -0.00011782469664467499, -8.772736327955499e-05, -5.6760858569759876e-05, -2.7819549359264784e-05, 1.0080259471578756e-06, 3.426484909141436e-05, 7.566346903331578e-05, 0.00012474939285311848, 0.00017715789726935327, 0.000229789104196243, 0.00028555819881148636, 0.0003499212034512311, 0.00042490489431656897, 0.0005071288906037807, 0.0005892154877074063, 0.0006654917960986495, 0.0007345494232140481, 0.0007987719727680087, 0.000863872526679188, 0.0009366393205709755, 0.0010185879655182362, 0.0011060379911214113, 0.001194717944599688, 0.0012817590031772852, 0.0013643370475620031, 0.0014367339899763465, 0.001490799942985177, 0.001517434953711927, 0.0015127500519156456, 0.0014815069735050201, 0.0014366050017997622, 0.0013939590426161885, 0.0013667469611391425, 0.0013622860424220562, 0.001379486988298595, 0.0014110079500824213, 0.0014488969463855028, 0.0014879649970680475, 0.0015240319771692157, 0.0015520659508183599, 0.0015673780580982566, 0.0015653329901397228, 0.0015430189669132233, 0.0014993329532444477, 0.0014354869490489364, 0.001356731983833015, 0.0012714510085061193, 0.0011885239509865642, 0.0011131770443171263, 0.0010466160019859672, 0.0009890826186165214, 0.000941067177336663, 0.0008990346104837954, 0.0008544714073650539, 0.0008002190734259784, 0.0007345550111494958, 0.000658681383356452, 0.0005768814007751644, 0.0004966466804035008, 0.00042402901453897357, 0.00036107891355641186, 0.0003081923059653491, 0.0002645383938215673, 0.00022498759790323675, 0.00018075949628837407, 0.0001242987927980721, 5.323249934008345e-05, -2.9388449547695927e-05, -0.00011791590077336878, -0.00020692740508820862, -0.0002902112901210785, -0.00035883928649127483, -0.0004042297077830881, -0.00042468481115065515, -0.00042823029798455536, -0.0004258583066985011, -0.0004267829062882811, -0.00043491649557836354, -0.0004463208024390042, -0.0004514965112321079, -0.00044172510388307273, -0.0004161641118116677, -0.0003807368048001081, -0.0003413601079955697, -0.0003002859011758119, -0.00025715879746712744, -0.00021120079327374697, -0.00016227280138991773, -0.00011032020120183006, -5.729318945668638e-05, -1.0481679964868817e-05, 2.1971989554003812e-05, 3.626375109888613e-05, 3.3123400498880073e-05, 1.5119509953365196e-05, -1.2414569937391207e-05, -4.203886055620387e-05, -6.805564771639183e-05, -8.443272963631898e-05, -8.29847194836475e-05, -5.7459110394120216e-05, -1.0198929885518737e-05, 4.5854369091102853e-05, 9.325647260993719e-05, 0.00011870940215885639, 0.00011798909690696746, 9.521460742689669e-05, 5.930889892624691e-05, 1.9340150174684823e-05, -1.9752989828702994e-05, -5.830873851664364e-05, -0.00010110220318892971, -0.0001529870933154598, -0.00021681739599443972, -0.000292167387669906, -0.00037619000067934394, -0.00046385658788494766, -0.0005495935911312699, -0.0006305545102804899, -0.0007038628100417554, -0.0007661149138584733, -0.000813505903352052, -0.0008422195096500218, -0.0008493867935612798, -0.000831915414892137, -0.0007871593115851283, -0.0007138500805012882, -0.0006163857760839164, -0.0005057741072960198, -0.00039549829671159387, -0.00029844208620488644, -0.0002239599998574704, -0.000177466994500719, -0.00016042409697547555, -0.00017233409744221717, -0.00021158030722290277, -0.00027271610451862216, -0.00034718308597803116, -0.00042209180537611246, -0.00048312029684893787, -0.0005187222850508988, -0.0005229528760537505, -0.000495920074172318, -0.00044574099592864513, -0.00038621851126663387, -0.0003292892943136394, -0.0002826914133038372, -0.0002500280097592622, -0.0002328057016711682, -0.00023233940009959042, -0.00024834691430442035, -0.0002797739871311933, -0.0003250582085456699, -0.00038110199966467917, -0.0004433811118360609, -0.0005063766147941351, -0.0005646360805258155, -0.0006157113239169121, -0.0006620322819799185, -0.0007075584726408124, -0.0007546949200332165, -0.000802727707196027, -0.000849397387355566, -0.0008910857723094523, -0.000922820414416492, -0.0009424035088159144, -0.0009546927758492529, -0.0009686707053333521, -0.0009940707823261619, -0.0010379799641668797, -0.0011024180566892028, -0.0011834190227091312, -0.0012715300545096397, -0.001354873995296657, -0.0014248290099203587, -0.001479370053857565, -0.0015191619750112295, -0.0015423629665747285, -0.0015458980342373252, -0.0015275459736585617, -0.0014888349687680602, -0.0014354990562424064, -0.001374782994389534, -0.001314411056227982, -0.0012623489601537585, -0.0012256089830771089, -0.0012064280454069376, -0.001200595055706799, -0.001198382000438869, -0.0011893659830093384, -0.00116796197835356, -0.0011344420490786433, -0.0010916480096057057, -0.0010435800068080425, -0.0009924237383529544, -0.0009380021947436035, -0.0008792589069344103, -0.0008170228102244437, -0.000753222790081054, -0.0006885792827233672, -0.0006209051935002208, -0.0005460387910716236, -0.00046103779459372163, -0.0003658487112261355, -0.00026162838912568986, -0.000151008294778876, -3.673918035929091e-05, 7.820891914889216e-05, 0.00018715079932007939, 0.00028359508723951876, 0.0003660797083284706, 0.0004354219126980752, 0.000489381025545299, 0.0005287629901431501, 0.0005598647985607386, 0.0005916359950788319, 0.0006332860211841762, 0.0006882190937176347, 0.0007561622769571841, 0.0008364706882275641, 0.0009271139279007912, 0.0010222259443253279, 0.0011124740121886134, 0.0011868519941344857, 0.0012352829799056053, 0.0012513219844549894, 0.001232270966283977, 0.0011791669530794024, 0.001098194974474609, 0.0010014999425038695, 0.0009023571037687361, 0.0008116404060274363, 0.0007381130126304924, 0.0006858194246888161, 0.0006514415144920349, 0.0006266960990615189, 0.0006042267195880413, 0.0005821248050779104, 0.0005632336251437664, 0.0005518313846550882, 0.0005485606961883605, 0.0005492334021255374, 0.0005471677286550403, 0.0005344764795154333, 0.0005064653232693672, 0.00046504000783897936, 0.00041643710574135184, 0.00036792480386793613, 0.0003281384997535497, 0.00030449300538748503, 0.00030030691414140165, 0.00031316481181420386, 0.0003373732033651322, 0.00036503191222436726, 0.00038913870230317116, 0.0004055626050103456, 0.000414605310652405, 0.000420390599174425, 0.00042915219091810286, 0.00044536020141094923, 0.00046859908616170287, 0.0004962342791259289, 0.0005247655790299177, 0.0005513317883014679, 0.0005732367280870676, 0.0005863658734597266, 0.0005875767092220485, 0.0005752114811912179, 0.0005509565817192197, 0.0005216419231146574, 0.000498904671985656, 0.0004943523090332747, 0.0005141216097399592, 0.0005590853979811072, 0.0006265525007620454, 0.000713436515070498, 0.0008158109267242253, 0.0009308845037594438, 0.0010569320293143392, 0.0011911250185221434, 0.0013279230333864689, 0.0014561460120603442, 0.0015653519658371806, 0.0016517960466444492, 0.001719256048090756, 0.001775686047039926, 0.0018278149655088782, 0.0018791219918057323, 0.0019266209565103054, 0.001962766982614994, 0.00197804206982255, 0.001968159107491374, 0.0019383380422368646, 0.0018990619573742151, 0.0018606840167194605, 0.0018268900457769632, 0.001791295944713056, 0.0017404980026185513, 0.0016613430343568325, 0.0015463420422747731, 0.0013954939786344767, 0.001216348959133029, 0.001021194038912654, 0.0008227957878261805, 0.0006336400983855128, 0.0004635381046682596, 0.0003176144964527339, 0.00019698070536833256, 9.861052240012214e-05, 1.5979780073394068e-05, -5.7004221162060276e-05, -0.00012471269292291254, -0.0001930542930494994, -0.0002696033916436136, -0.00035976231447421014, -0.00046412411029450595, -0.0005784552777186036, -0.0006952970870770514, -0.0008080170955508947, -0.0009166023228317499, -0.001025561010465026, -0.0011380099458619952, -0.0012528769439086318, -0.0013656850205734372, -0.001470691990107298, -0.001562761957757175, -0.0016407619696110487, -0.0017045310232788324, -0.0017512580379843712, -0.0017767969984561205, -0.0017792360158637166, -0.001762900035828352, -0.0017352709546685219, -0.0017044730484485626, -0.0016775690019130707, -0.001657527987845242, -0.0016423390479758382, -0.0016270369524136186, -0.001605366007424891, -0.0015725289704278111, -0.001526530017144978, -0.0014680969761684537, -0.0014018700458109379, -0.001333483960479498, -0.0012651319848373532, -0.0011950109619647264, -0.0011185100302100182, -0.001028807950206101, -0.0009196113096550107, -0.0007938224007375538, -0.000664968101773411, -0.0005462854169309139, -0.0004467557882890105, -0.00036975290277041495, -0.0003125469957012683, -0.00026857529883272946, -0.00023266150674317032, -0.00020072849292773753, -0.00016857169975992292, -0.0001328786020167172, -9.064839105121791e-05, -3.9925071178004146e-05, 1.9859180611092597e-05, 8.539416739949957e-05, 0.0001490988943260163, 0.0002003599947784096, 0.0002286430972162634, 0.00022581960365641862, 0.00019035580044146627, 0.00012761949619743973, 4.747508864966221e-05, -3.65167397831101e-05, -0.000109251202957239, -0.00015550589887425303, -0.00016500790661666542, -0.00013779870641883463, -8.407727000303566e-05, -1.83067204488907e-05, 4.413818896864541e-05, 8.858228829922155e-05, 0.00010408760135760531, 8.65043475641869e-05, 3.869934880640358e-05, -3.0470770070678554e-05, -0.00010900790221057832, -0.00018538380390964448, -0.00024861301062628627, -0.00029045340488664806, -0.0003067688085138798, -0.0002993087109643966, -0.00027104929904453456, -0.00022335069661494344, -0.00015577230078633875, -6.928019865881652e-05, 3.1851159292273223e-05, 0.0001414340949850157, 0.000249471195274964, 0.0003473302931524813, 0.0004328454961068928, 0.0005105765885673463, 0.0005881058750674129, 0.0006717587821185589, 0.0007644505240023136, 0.0008639381849206984, 0.0009658777271397412, 0.0010643129935488105, 0.0011533299693837762, 0.0012276240158826113, 0.0012829770566895604, 0.0013169440208002925, 0.00132822897285223, 0.0013188329758122563, 0.001293475041165948, 0.0012572050327435136, 0.0012173070572316647, 0.0011834939941763878, 0.0011644959449768066, 0.0011643710313364863, 0.0011823669774457812, 0.0012154929572716355, 0.001261934987269342, 0.0013200549874454737, 0.0013852929696440697, 0.0014503409620374441, 0.0015082809841260314, 0.0015561030013486743, 0.0015938800061121583, 0.0016201860271394253, 0.00163078005425632, 0.001625137054361403, 0.0016100589418783784, 0.0015967460349202156, 0.0015931579982861876, 0.0015999709721654654, 0.0016133739845827222, 0.0016288369661197066, 0.0016427220543846488, 0.0016520239878445864, 0.0016530669527128339, 0.0016439859755337238, 0.0016254830406978726, 0.0015991399995982647, 0.001565273036248982, 0.0015250210417434573, 0.0014792470028623939, 0.0014298929600045085, 0.0013813730329275131, 0.0013401659671217203, 0.001312374952249229, 0.00130132504273206, 0.0013070639688521624, 0.0013255079975351691, 0.001350497012026608, 0.001375259947963059, 0.0013936200411990285, 0.0014005700359120965, 0.0013921919744461775, 0.0013646000297740102, 0.001312042004428804, 0.001229549990966916, 0.0011160180438309908, 0.0009742805850692093, 0.0008083818247541785, 0.0006200040807016194, 0.0004116786003578454, 0.00019006150250788778, -3.299371019238606e-05, -0.000242780995904468, -0.0004259693087078631, -0.0005724822985939682, -0.0006782594718970358, -0.0007429667166434228, -0.000770997372455895, -0.0007711520884186029, -0.0007570083253085613, -0.0007457120227627456, -0.0007531270966865122, -0.0007881054189056158, -0.0008501298143528402, -0.0009330133907496929, -0.00102680001873523, -0.0011203560279682279, -0.001201402978040278, -0.0012588989920914173, -0.0012881429865956306, -0.0012877159751951694, -0.0012598959729075432, -0.0012104699853807688, -0.00114913797006011, -0.0010902700014412403, -0.0010515439789742231, -0.001048285048455, -0.001086427946574986, -0.001163588953204453, -0.001271352986805141, -0.0013974850298836827, -0.001529559027403593, -0.0016558150527998805, -0.0017665489576756954, -0.0018525189952924848, -0.001904024975374341, -0.0019151639426127076, -0.001888287952169776, -0.0018345549469813704, -0.0017679339507594705, -0.001701770001091063, -0.001645948039367795, -0.0016059869667515159, -0.0015817000530660152, -0.0015673099551349878, -0.00155223801266402, -0.0015240299981087446, -0.0014729889808222651, -0.0013943769736215472, -0.001288097002543509, -0.0011611999943852425, -0.0010244420263916254, -0.0008878327789716423, -0.0007584610139019787, -0.0006385755841620266, -0.0005270538968034089, -0.0004242869035806507, -0.0003354717919137329, -0.0002653498959261924, -0.00021305399422999471, -0.000172400294104591, -0.00013548429706133902, -9.650040738051757e-05, -5.5477659770986065e-05, -1.816002986743115e-05, 1.0326880328648258e-05, 2.9878179702791385e-05, 4.684440136770718e-05, 7.182129775173962e-05, 0.00011514440120663494, 0.00018273679597768933, 0.00026991849881596863, 0.000364636885933578, 0.000455259985756129, 0.000534110120497644, 0.0005981053109280765, 0.0006496639107353985, 0.0006936215795576572, 0.0007311351946555078, 0.0007600350072607398, 0.0007768375216983259, 0.0007801029132679105, 0.0007713498780503869, 0.0007553758914582431, 0.0007374904816970229, 0.0007194699719548225, 0.0007032352732494473, 0.0006913089891895652, 0.0006866832845844328, 0.0006926393252797425, 0.0007128592114895582, 0.0007476483006030321, 0.0007918315241113305, 0.0008372085285373032, 0.0008736684103496373, 0.0008933076751418412, 0.0008931205957196653, 0.0008748866966925561, 0.0008449613815173507, 0.000811736099421978, 0.0007800168823450804, 0.0007491359137929976, 0.0007159645901992917, 0.0006773374043405056, 0.0006327629089355469, 0.0005839579971507192, 0.0005348980776034296, 0.0004901775973848999, 0.0004548215074464679, 0.00043438069405965507, 0.0004290957876946777, 0.0004309414071030915, 0.0004288294003345072, 0.0004133318143431097, 0.000381804711651057, 0.00033562429598532617, 0.0002790357102639973, 0.000216626503970474, 0.0001490839058533311, 7.606775034219027e-05, 3.888829951392836e-07, -7.361207099165767e-05, -0.0001437306054867804, -0.00020906080317217857, -0.00026941660325974226, -0.0003230478905607015, -0.0003659391077235341, -0.0003942188050132245, -0.000405581813538447, -0.0003977351007051766, -0.00036931890645064414, -0.0003231996961403638, -0.0002687558007892221, -0.00021604759967885911, -0.00016927199612837285, -0.0001263409067178145, -8.23542577563785e-05, -3.2303269108524546e-05, 2.722077988437377e-05, 9.337985829915851e-05, 0.00015735060151200742, 0.0002086291933665052, 0.00024128760560415685, 0.0002548221964389086, 0.00025369899231009185, 0.00024676680914126337, 0.00024396739900112152, 0.00025164600810967386, 0.00026994329527951777, 0.00029482541140168905, 0.0003206272085662931, 0.00034322019200772047, 0.0003610267012845725, 0.00037335880915634334, 0.000379036704543978, 0.0003787236928474158, 0.0003754291101358831, 0.00036986079066991806, 0.00035777530865743756, 0.00033700550557114184, 0.00030894350493326783, 0.00027549860533326864, 0.00023727960069663823, 0.000196908600628376, 0.00015953229740262032, 0.0001303643948631361, 0.00011179110151715577, 0.00010468540131114423, 0.00010981880041072145, 0.00012448820052668452, 0.00014290980470832437, 0.0001592467015143484, 0.00016733059601392597, 0.00016127449634950608, 0.00013992239837534726, 0.00010760690202005208, 7.042757351882756e-05, 3.2708889193600044e-05, -2.44290004047798e-06, -3.36358389176894e-05, -6.247692363103852e-05, -9.107126243179664e-05, -0.00012111329851904884, -0.0001514947070972994, -0.00017732659762259573, -0.0001898579066619277, -0.00018166650261264294, -0.00015149109822232276, -0.00010351410310249776, -4.892101060249843e-05, -7.163874897742062e-07, 3.1753901566844434e-05, 4.462166180019267e-05, 3.926160934497602e-05, 2.0206880435580388e-05, -6.803004907851573e-06, -3.719633969012648e-05, -6.714346091030166e-05, -9.419147681910545e-05, -0.0001177594022010453, -0.00013604060222860426, -0.00014601490693166852, -0.00014583830488845706, -0.0001383417984470725, -0.00012930319644510746, -0.0001227829052368179, -0.00011992619693046436, -0.00011921839904971421, -0.00011920819815713912, -0.00012033840175718069, -0.00012619930203072727, -0.00014104010188020766, -0.0001665861054789275, -0.00020278070587664843, -0.00024913749075494707, -0.00030261260690167546, -0.0003572870045900345, -0.00040824819006957114, -0.00045293220318853855, -0.0004884001100435853, -0.0005121345166116953, -0.0005216164281591773, -0.0005150752840563655, -0.00049183628289029, -0.00045466801384463906, -0.00040736570372246206, -0.0003534005954861641, -0.0002976988034788519, -0.0002458849048707634, -0.00020447210408747196, -0.00017950139590539038, -0.00017549250333104283, -0.0001936982007464394, -0.00023230729857459664, -0.0002834922925103456, -0.00033546920167282224, -0.00037840180448256433, -0.00040539068868383765, -0.0004166720900684595, -0.00041922880336642265, -0.000421129196183756, -0.00042708340333774686, -0.00043820569408126175, -0.00045341430814005435, -0.00046780798584222794, -0.00047260618885047734, -0.0004602115077432245, -0.00042820858652703464, -0.00037998100742697716, -0.0003205290122423321, -0.0002540588902775198, -0.00018381049449089915, -0.00011315120354993269, -4.5456941734300926e-05, 1.5848689145059325e-05, 6.638289778493345e-05, 0.00010337160347262397, 0.00012711199815385044, 0.00014093739446252584, 0.00014747880049981177, 0.00014678449952043593, 0.00013837890583090484, 0.00012298699584789574, 0.00010389539966126904, 8.802019146969542e-05, 8.269085810752586e-05, 8.934752258937806e-05, 0.00010195629874942824, 0.00011133970110677183, 0.00011024260311387479, 9.488200885243714e-05, 6.648353155469522e-05, 2.945559026557021e-05, -1.1943459867325146e-05, -5.460244938149117e-05, -9.776712249731645e-05, -0.00014336399908643216, -0.00019397240248508751, -0.0002508678880985826, -0.00031406921334564686, -0.00038387280073948205, -0.00045910890912637115, -0.0005349668208509684, -0.0006061248132027686, -0.0006704857805743814, -0.0007270142086781561, -0.0007753035170026124, -0.0008156087133102119, -0.0008470481843687594, -0.0008685900829732418, -0.0008818937931209803, -0.0008913591736927629, -0.0009031667141243815, -0.0009218946797773242, -0.0009474955732002854, -0.0009763228008523583, -0.001003416022285819, -0.0010236790403723717, -0.0010318659478798509, -0.0010248159524053335, -0.0010033630533143878, -0.0009689796133898199, -0.0009221744257956743, -0.0008617111016064882, -0.0007859520264901221, -0.0006946790963411331, -0.000592840020544827, -0.0004936850164085627, -0.0004132367903366685, -0.00036186640500091016, -0.00034259509993717074, -0.00035344139905646443, -0.0003888788924086839, -0.0004421763005666435, -0.000506626209244132, -0.0005754873272962868, -0.0006391929928213358, -0.0006837231921963394, -0.0006947777001187205, -0.0006625435198657215, -0.0005840928060933948, -0.0004657809913624078, -0.00031963299261406064, -0.00015990500105544925, 1.1892219617948285e-06, 0.00015454420645255595, 0.00029138728859834373, 0.0004029338888358325, 0.0004814256972167641, 0.0005256058066152036, 0.0005403045215643942, 0.0005343772936612368, 0.0005183733883313835, 0.0004994110204279423, 0.00048068829346448183, 0.0004650015907827765, 0.00045664049685001373, 0.00045868189772590995, 0.0004715700924862176, 0.000494214182253927, 0.0005264516221359372, 0.000567203271202743, 0.0006104637286625803, 0.0006468915962614119, 0.0006694396724924445, 0.0006761502008885145, 0.0006681531085632741, 0.000645495078060776, 0.0006080046878196299, 0.0005565698957070708, 0.0004932237206958234, 0.0004221929993946105, 0.0003489706141408533, 0.00027956400299444795, 0.00021685629326384515, 0.00015987560618668795, 0.00010411239782115445, 4.6108110836939886e-05, -1.4028530131326988e-05, -7.633480709046125e-05, -0.00014376940089277923, -0.0002220838941866532, -0.0003158070903737098, -0.0004262999864295125, -0.0005504500004462898, -0.0006823656731285155, -0.0008163884049281478, -0.0009469966171309352, -0.00107096997089684, -0.0011865870328620076, -0.001289566047489643, -0.0013719010166823864, -0.0014243409968912601, -0.001438237028196454, -0.001406347961165011, -0.00132651103194803, -0.001203989959321916, -0.001051530009135604, -0.0008899404783733189, -0.0007413430721499026, -0.0006232361774891615, -0.0005454493802972138, -0.0005083535215817392, -0.0005060879047960043, -0.0005287015810608864, -0.000564918911550194, -0.0006023250753059983, -0.0006290004239417613, -0.0006381077109836042, -0.0006278317887336016, -0.0005962650757282972, -0.0005415905034169555, -0.0004641049890778959, -0.0003683835966512561, -0.0002641436003614217, -0.00016373379912693053, -7.839142926968634e-05, -1.1758250366256107e-05, 4.0370930946664885e-05, 8.570707723265514e-05, 0.00013230140029918402, 0.00018659490160644054, 0.0002489098988007754, 0.00031649108859710395, 0.00038617709651589394, 0.0004556037893053144, 0.0005219975137151778, 0.0005821305094286799, 0.0006309421150945127, 0.0006617917097173631, 0.0006700978265143931, 0.0006557510932907462, 0.0006240499787963927, 0.0005816586199216545, 0.0005352199077606201, 0.000489953497890383, 0.00045008279266767204, 0.00041720439912751317, 0.00038923879037611187, 0.00036210360121913254, 0.00033117301063612103, 0.0002954385126940906, 0.0002583758032415062, 0.0002246548974653706, 0.00019702650024555624, 0.00017079009558074176, 0.00013719640264753252, 8.89176080818288e-05, 2.5718820324982516e-05, -4.615488069248386e-05, -0.00011833690223284066, -0.0001843508071033284, -0.0002421160024823621, -0.00029364199144765735, -0.00034341320861130953, -0.00039348480640910566, -0.0004392105038277805, -0.0004704651073552668, -0.00047692880616523325, -0.00045290039270184934, -0.0003979757020715624, -0.0003189166891388595, -0.00023036569473333657, -0.00014852560707367957, -8.367069676751271e-05, -3.9723490772303194e-05, -1.4428879694605712e-05, -7.505840926569363e-07, 9.660206160333473e-06, 2.417212090222165e-05, 4.7102090320549905e-05, 7.807101792423055e-05, 0.00011433669715188444, 0.0001519901998108253, 0.00018950180674437433, 0.00022968670236878097, 0.0002771473955363035, 0.0003338610986247659, 0.0003986562951467931, 0.0004677466058637947, 0.0005343515076674521, 0.0005911394255235791, 0.000634420313872397, 0.0006654280005022883, 0.0006900171865709126, 0.0007156101055443287, 0.0007472378201782703, 0.0007877346943132579, 0.0008366642287001014, 0.0008869637968018651, 0.0009252203744836152, 0.0009390030172653496, 0.0009225750109180808, 0.0008799794013611972, 0.0008222899050451815, 0.0007627524901181459, 0.0007123267278075218, 0.0006762549164704978, 0.0006546758231706917, 0.0006417090771719813, 0.0006283249822445214, 0.0006064549088478088, 0.0005722715286538005, 0.0005278523894958198, 0.00048017941298894584, 0.00043923238990828395, 0.00041437079198658466, 0.0004114201874472201, 0.0004298053099773824, 0.0004613214114215225, 0.0004947750712744892, 0.000520664791110903, 0.0005333452136255801, 0.0005311043933033943, 0.0005132487858645618, 0.00047916319454088807, 0.0004287601914256811, 0.00036212700069881976, 0.00028215680504217744, 0.0001946694974321872, 0.00010641250264598057, 2.426564969937317e-05, -4.6639470383524895e-05, -0.00010139300138689578, -0.0001378207962261513, -0.00016009710088837892, -0.00017358410696033388, -0.0001833317946875468, -0.00019233599596191198, -0.00019897180027328432, -0.00019666469597723335, -0.00017693899280857295, -0.00013638449308928102, -7.918424671515822e-05, -1.1636179806373548e-05, 6.073609984014183e-05, 0.00013270600175019354, 0.00019766429613810033, 0.00024868210311979055, 0.0002785178949125111, 0.00028262700652703643, 0.0002620313025545329, 0.0002248897944809869, 0.00018534960690885782, 0.000157449598191306, 0.00015112600522115827, 0.00016737690020818263, 0.00020188509370200336, 0.0002495991066098213, 0.0003049277001991868, 0.00036300410283729434, 0.0004190276958979666, 0.00046774960355833173, 0.0005054274224676192, 0.0005302862846292555, 0.0005410655867308378, 0.000538550375495106, 0.000524756673257798, 0.0005003978149034083, 0.0004669349000323564, 0.0004271102952770889, 0.0003827108012046665, 0.00033385519054718316, 0.0002817035128828138, 0.00023012940073385835, 0.00018418139370623976, 0.0001459774939576164, 0.00011304380313958973, 8.200861338991672e-05, 5.307063111104071e-05, 3.225283944630064e-05, 2.5268869649153203e-05, 3.169400952174328e-05, 4.973847171640955e-05, 7.73503998061642e-05, 0.00010965260298689827, 0.00014211679808795452, 0.00017425209807697684, 0.00020842179947067052, 0.0002474019129294902, 0.00029162169084884226, 0.0003410473873373121, 0.0003966173098888248, 0.000461512798210606, 0.000538629072252661, 0.000623692583758384, 0.0007070775027386844, 0.0007768053910695016, 0.0008235372952185571, 0.00084354990394786, 0.0008396998164243996, 0.0008198270807042718, 0.000792484381236136, 0.0007649922044947743, 0.0007423852803185582, 0.0007270019850693643, 0.0007148127187974751, 0.0006970650865696371, 0.0006689102156087756, 0.0006307394942268729, 0.000585948524530977, 0.0005396861233748496, 0.0004943201201967895, 0.000445629091700539, 0.0003876657865475863, 0.0003157664032187313, 0.000226123898755759, 0.0001198683021357283, 3.1433698950422695e-06, -0.0001153838966274634, -0.00022803009778726846, -0.00033055461244657636, -0.0004253133956808597, -0.0005214589182287455, -0.0006262966780923307, -0.0007392126717604697, -0.0008520116098225117, -0.000955834926571697, -0.0010452100541442633, -0.0011194919934496284, -0.0011823589447885752, -0.0012379740364849567, -0.0012871259823441505, -0.0013273980002850294, -0.0013567289570346475, -0.0013745409669354558, -0.001383148948661983, -0.0013867999659851193, -0.0013901849742978811, -0.0013980569783598185, -0.0014113859506323934, -0.0014269109815359116, -0.001442042994312942, -0.0014546130551025271, -0.0014610439538955688, -0.0014564819866791368, -0.0014366500545293093, -0.0013984240358695388, -0.0013428200036287308, -0.001276210998184979, -0.0012049729702994227, -0.0011310289846733212, -0.0010511280270293355, -0.0009604949154891074, -0.0008570008794777095, -0.0007447152165696025, -0.0006341856205835938, -0.0005356675828807056, -0.0004528299905359745, -0.00038289499934762716, -0.0003197896876372397, -0.0002570773067418486, -0.00019259970576968044, -0.0001306852063862607, -7.725688919890672e-05, -3.360061964485794e-05, 4.085619821125874e-06, 4.251412974554114e-05, 8.765356324147433e-05, 0.00014350000128615648, 0.00021442670549731702, 0.0003044499026145786, 0.00041301059536635876, 0.0005345555837266147, 0.0006609532865695655, 0.000782801304012537, 0.0008914825157262385, 0.0009816032834351063, 0.001052386942319572, 0.0011066349688917398, 0.001147228991612792, 0.0011746040545403957, 0.0011874879710376263, 0.0011844780528917909, 0.001168080954812467, 0.0011423990363255143, 0.0011106040328741074, 0.0010751240188255906, 0.0010370520176365972, 0.0009975516004487872, 0.0009558586752973497, 0.0009088426013477147, 0.0008528552716597915, 0.0007861931808292866, 0.0007129019941203296, 0.0006390149937942624, 0.000571739801671356, 0.0005179141880944371, 0.00047948129940778017, 0.000454056600574404, 0.0004368149093352258, 0.00042034030775539577, 0.0003981440095230937, 0.0003663914103526622, 0.0003231125883758068, 0.00026962620904669166, 0.00021055599790997803, 0.0001509556022938341, 9.556711302138865e-05, 4.6393979573622346e-05, 2.2341430394590134e-06, -3.763478161999956e-05, -7.035458838799968e-05, -8.862760296324268e-05, -8.44916794449091e-05, -5.470206087920815e-05, -1.944298901435104e-06, 6.614442827412859e-05, 0.00013796970597468317, 0.00020120250701438636, 0.00024704300449229777, 0.00027214980218559504, 0.0002792880986817181, 0.00027550029335543513, 0.00027011509519070387, 0.00027112659881822765, 0.00028009130619466305, 0.00029558729147538543, 0.0003139715117868036, 0.0003276508941780776, 0.0003298354858998209, 0.00031824730103835464, 0.0002965677995234728, 0.00027305580442771316, 0.0002586746122688055, 0.00026490099844522774, 0.0003015540132764727, 0.00037488600355573, 0.0004866931994911283, 0.0006319158710539341, 0.0007974358159117401, 0.00096632179338485, 0.001124404021538794, 0.0012624009978026152, 0.0013758509885519743, 0.0014645470073446631, 0.001531671965494752, 0.0015812950441613793, 0.0016181019600480795, 0.0016466829692944884, 0.001669366960413754, 0.0016861390322446823, 0.0016956259496510029, 0.0016954640159383416, 0.0016842179466038942, 0.0016618820372968912, 0.001626807963475585, 0.0015737720532342792, 0.0014999370323494077, 0.0014081139815971255, 0.0013048399705439806, 0.0011992730433121324, 0.0011019610101357102, 0.0010194870410487056, 0.0009498735889792442, 0.0008876466890797019, 0.0008268483798019588, 0.0007642019190825522, 0.0006983298226259649, 0.0006262570968829095, 0.0005431331228464842, 0.00044733480899594724, 0.00034185589174740016, 0.00023239929578267038, 0.0001256456016562879, 2.6123560019186698e-05, -6.225176912266761e-05, -0.0001367305958410725, -0.00019865170179400593, -0.0002513343933969736, -0.000295824691420421, -0.00033038630499504507, -0.00035316860885359347, -0.00036533380625769496, -0.0003711793979164213, -0.00037742240238003433, -0.00039009639294818044, -0.0004128105938434601, -0.0004476727917790413, -0.0004969210713170469, -0.0005632442771457136, -0.0006457972922362387, -0.0007390921236947179, -0.000834914215374738, -0.0009238289785571396, -0.0009961287723854184, -0.0010433739516884089, -0.0010608700104057789, -0.0010454549919813871, -0.000994182308204472, -0.0009060692973434925, -0.0007864260114729404, -0.0006505876081064343, -0.0005172244273126125, -0.0004021227068733424, -0.0003128104144707322, -0.0002495736989658326, -0.00020771590061485767, -0.0001781798928277567, -0.00015076229465194046, -0.00011384169920347631, -5.944440999883227e-05, 1.0232270142296329e-05, 8.795302710495889e-05, 0.00016551009321119636, 0.0002368082059547305, 0.0003012708912137896, 0.00035979971289634705, 0.00041424931259825826, 0.00046740210382267833, 0.0005218929727561772, 0.0005804823013022542, 0.0006434426177293062, 0.0007057375041767955, 0.0007571931928396225, 0.000787263794336468, 0.0007922713994048536, 0.0007758288993500173, 0.0007454432779923081, 0.0007089534192346036, 0.0006692755850963295, 0.000625109882093966, 0.0005710106925107539, 0.0005008911830373108, 0.0004109363944735378, 0.00029995921067893505, 0.0001691448997007683, 1.9840050299535505e-05, -0.0001464727974962443, -0.00032702001044526696, -0.0005129952915012836, -0.0006915840785950422, -0.0008506120066158473, -0.00098010478541255, -0.0010759140131995082, -0.0011383979581296444, -0.0011718620080500841, -0.001184634049423039, -0.0011859240476042032, -0.0011836879421025515, -0.001181571977213025, -0.0011776420287787914, -0.001164486980997026, -0.0011338359909132123, -0.0010831990512087941, -0.0010111170122399926, -0.0009145305957645178, -0.0007909446721896529, -0.0006398119148798287, -0.0004645092994906008, -0.00027428180328570306, -8.082309068413451e-05, 0.00010460490011610091, 0.00027447010506875813, 0.0004264898889232427, 0.0005616900161840022, 0.000682230107486248, 0.00078889838187024, 0.000882440188433975, 0.0009655613102950156, 0.001043834025040269, 0.0011251169489696622, 0.0012158669997006655, 0.0013170959427952766, 0.0014236080460250378, 0.0015255489852279425, 0.001614477951079607, 0.0016884070355445147, 0.0017505900468677282, 0.001805383013561368, 0.0018568569794297218, 0.0019079430494457483, 0.0019628629088401794, 0.002026681089773774, 0.002102561993524432, 0.0021902350708842278, 0.002284891903400421, 0.0023800861090421677, 0.0024695659521967173, 0.0025455099530518055, 0.0025984710082411766, 0.0026165670715272427, 0.002588283969089389, 0.0025073010474443436, 0.0023760648909956217, 0.0022032600827515125, 0.0019996738992631435, 0.0017771970015019178, 0.001545647974126041, 0.001313467975705862, 0.00108698895201087, 0.0008672592812217772, 0.0006514915730804205, 0.0004367576912045479, 0.00022234530479181558, 1.0437939636176452e-05, -0.00019323709420859814, -0.0003812180075328797, -0.0005481931730173528, -0.0006909485091455281, -0.0008061780827119946, -0.0008893624763004482, -0.000934598792809993, -0.0009356820955872536, -0.0008922741981223226, -0.0008139032870531082, -0.0007140933885239065, -0.0006056465208530426, -0.0004990901215933263, -0.00040161630022339523, -0.00031896779546514153, -0.0002569278876762837, -0.00021859370463062078, -0.00020419030624907464, -0.00021197370369918644, -0.00023532840714324266, -0.0002632910036481917, -0.0002837369975168258, -0.00028662479599006474, -0.00026526639703661203, -0.00021753530018031597, -0.00014655580162070692, -5.571529982262291e-05, 5.341587893781252e-05, 0.00017806660616770387, 0.00031293221400119364, 0.0004527198907453567, 0.0005933665088377893, 0.0007308963104151189, 0.0008624790934845805, 0.0009854446398094296, 0.001093789003789425, 0.0011787839466705918, 0.0012335809879004955, 0.0012588270474225283, 0.0012639079941436648, 0.0012621659552678466, 0.00126628705766052, 0.0012870749924331903, 0.0013290089555084705, 0.001386774005368352, 0.001450521987862885, 0.0015112810069695115, 0.0015677310293540359, 0.0016252710483968258, 0.0016912199789658189, 0.0017700400203466415, 0.0018585469806566834, 0.0019497249741107225, 0.0020350900012999773, 0.0021087690256536007, 0.0021688949782401323, 0.0022151849698275328, 0.0022488210815936327, 0.0022704889997839928, 0.0022802678868174553, 0.0022755530662834644, 0.0022526539396494627, 0.0022089609410613775, 0.002143709920346737, 0.002058961894363165, 0.0019599581137299538, 0.0018536599818617105, 0.0017459969967603683, 0.0016402410110458732, 0.001537322998046875, 0.0014330450212582946, 0.0013186390278860927, 0.0011870160233229399, 0.0010360049782320857, 0.0008667224901728332, 0.0006828323821537197, 0.0004918241174891591, 0.00030282430816441774, 0.00012454019451979548, -3.798881152761169e-05, -0.000183414900675416, -0.0003082942857872695, -0.00040550061385147274, -0.00046822690637782216, -0.0004958899808116257, -0.000496429274789989, -0.00048281010822393, -0.00046819710405543447, -0.0004630943003576249, -0.0004725349135696888, -0.0004946484114043415, -0.0005239772144705057, -0.0005511114723049104, -0.000565060880035162, -0.0005577611154876649, -0.0005275344010442495, -0.0004815015126951039, -0.00043068171362392604, -0.00038567750016227365, -0.0003529161913320422, -0.0003355683002155274, -0.0003333860950078815, -0.00034357179538346827, -0.00036208401434123516, -0.00038521859096363187, -0.00041067099664360285, -0.0004373429110273719, -0.0004654410877265036, -0.0004939840873703361, -0.0005196426063776016, -0.000537548097781837, -0.0005428909207694232, -0.0005318291950970888, -0.0005015042261220515, -0.0004534810141194612, -0.00039702479261904955, -0.0003467726055532694, -0.00031456220312975347, -0.0003044196928385645, -0.0003109755052719265, -0.0003230618021916598, -0.00033054559025913477, -0.0003294810885563493, -0.00032131740590557456, -0.00031175740878097713, -0.00030861940467730165, -0.00032054539769887924, -0.00035410100826993585, -0.0004117350035812706, -0.0004928847192786634, -0.0005929954932071269, -0.0007034286973066628, -0.00081416848115623, -0.0009149935212917626, -0.0009966748766601086, -0.0010526649421080947, -0.0010825080098584294, -0.0010925199603661895, -0.001093655009754002, -0.0010960500221699476, -0.0011062000412493944, -0.0011246720096096396, -0.0011467289878055453, -0.0011666619684547186, -0.0011806039838120341, -0.001188409049063921, -0.0011919779935851693, -0.001194723998196423, -0.0012001469731330872, -0.0012107460061088204, -0.0012291229795664549, -0.0012563109630718827, -0.001289358944632113, -0.0013233580393716693, -0.0013550319708883762, -0.001382671995088458, -0.0014049039455130696, -0.0014237579889595509, -0.00144472299143672, -0.0014692960539832711, -0.0014899390516802669, -0.00149051402695477, -0.001453935052268207, -0.001368541968986392, -0.0012319970410317183, -0.0010518749477341771, -0.0008447826257906854, -0.000634513096883893, -0.00044890970457345247, -0.0003096289874520153, -0.0002247144002467394, -0.00018847039609681815, -0.00018571640248410404, -0.00019825970230158418, -0.00020935549400746822, -0.0002056741068372503, -0.00017793590086512268, -0.0001206520973937586, -3.281711906311102e-05, 8.249885286204517e-05, 0.00021806090080644935, 0.0003622705116868019, 0.0004994219052605331, 0.0006104353233240545, 0.0006783332210034132, 0.0006934229750186205, 0.000655913318041712, 0.0005743950023315847, 0.00046136739547364414, 0.0003313239139970392, 0.00019910170522052795, 7.875299343140796e-05, -2.2040110707166605e-05, -0.00010411380208097398, -0.00016781530575826764, -0.000206552300369367, -0.00021065700275357813, -0.00017234659753739834, -9.025335020851344e-05, 2.9126160370651633e-05, 0.0001707974006421864, 0.00031689461320638657, 0.00045417388901114464, 0.0005754097946919501, 0.0006794232758693397, 0.0007689502090215683, 0.0008449049200862646, 0.0009038652060553432, 0.0009439103887416422, 0.0009683900279924273, 0.0009842382278293371, 0.0009960411116480827, 0.001004862948320806, 0.0010127919958904386, 0.001023179036565125, 0.0010392169933766127, 0.0010633040219545364, 0.0010943040251731873, 0.0011258419835940003, 0.0011459849774837494, 0.0011419879738241434, 0.0011078650131821632, 0.0010475900489836931, 0.0009728210279718041, 0.0008970306953415275, 0.0008320009219460189, 0.000786328106187284, 0.0007641061092726886, 0.0007653608918190002, 0.000786679913289845, 0.0008245253120549023, 0.0008778747287578881, 0.0009447279153391719, 0.00101839704439044, 0.0010905100498348475, 0.001153178047388792, 0.0012017369735985994, 0.0012367439921945333, 0.001262048026546836, 0.0012819640105590224, 0.0012969759991392493, 0.0013024560175836086, 0.0012923020403832197, 0.0012626009993255138, 0.00121474196203053, 0.0011545580346137285, 0.0010897800093516707, 0.0010299179702997208, 0.000983617384918034, 0.0009567976812832057, 0.0009489586809650064, 0.0009513234836049378, 0.0009517946746200323, 0.0009396453970111907, 0.0009081158204935491, 0.0008544753072783351, 0.0007782885222695768, 0.0006823358125984669, 0.000569998228456825, 0.0004418920143507421, 0.0002990140928886831, 0.00014387740520760417, -2.0560970369842835e-05, -0.00018864420417230576, -0.000353464885847643, -0.0005103665753267705, -0.0006566246156580746, -0.0007945480174385011, -0.0009321615798398852, -0.0010776700219139457, -0.001236859941855073, -0.0014104190049692988, -0.001594268949702382, -0.0017793929437175393, -0.0019517740001901984, -0.0020992690697312355, -0.0022176310885697603, -0.0023115859366953373, -0.0023889539297670126, -0.002457842929288745, -0.002526935888454318, -0.0026007189881056547, -0.0026755989529192448, -0.0027411379851400852, -0.0027871939819306135, -0.002808409044519067, -0.002802330069243908, -0.0027650310657918453, -0.0026908109430223703, -0.0025770149659365416, -0.00242978404276073, -0.0022664950229227543, -0.002110718982294202, -0.0019855389837175608, -0.0019121549557894468, -0.0019068090477958322, -0.0019775310065597296, -0.0021203169599175453, -0.0023193340748548508, -0.0025522441137582064, -0.002794597065076232, -0.003022765973582864, -0.0032131040934473276, -0.0033450850751250982, -0.00340835889801383, -0.0034027099609375, -0.003334897104650736, -0.0032173190265893936, -0.0030658480245620012, -0.0028961729258298874, -0.002721887081861496, -0.0025512289721518755, -0.002382277976721525, -0.002205523895099759, -0.0020088190212845802, -0.0017814389429986477, -0.0015169359976425767, -0.001216538017615676, -0.0008882951224222779, -0.0005423534894362092, -0.00018892450316343457, 0.0001615034998394549, 0.0004993787733837962, 0.000815986713860184, 0.0011038649827241898, 0.0013576969504356384, 0.0015739209484308958, 0.0017498249653726816, 0.0018849499756470323, 0.001981307053938508, 0.0020437759812921286, 0.002078430028632283, 0.002092663897201419, 0.0020948240999132395, 0.0020929130259901285, 0.00209237402305007, 0.002093113958835602, 0.002091015921905637, 0.0020796549506485462, 0.002051400952041149, 0.002002368913963437, 0.0019327850313857198, 0.0018468309426680207, 0.0017526430310681462, 0.0016594480257481337, 0.0015750189777463675, 0.0015014909440651536, 0.0014348450349643826, 0.0013689600164070725, 0.0012977420119568706, 0.0012137610465288162, 0.0011075399816036224, 0.0009718009969219565, 0.0008041938999667764, 0.0006080192979425192, 0.0003931031096726656, 0.00017565330199431628, -2.5459579774178565e-05, -0.00019304369925521314, -0.00031456779106520116, -0.00038689348730258644, -0.0004142393881920725, -0.00040648059803061187, -0.00037549439002759755, -0.00033155170967802405, -0.00027971650706604123, -0.00021954230032861233, -0.00014877860667183995, -6.557284359587356e-05, 2.948807923530694e-05, 0.0001334964035777375, 0.00023893230536486953, 0.00033401369000785053, 0.0004070136055815965, 0.00044782200711779296, 0.000450549996457994, 0.0004143436090089381, 0.00034391749068163335, 0.000247069401666522, 0.00013099009811412543, 2.697097897907952e-06, -0.00013269559713080525, -0.00027162808692082763, -0.0004111622110940516, -0.0005470113828778267, -0.0006722675170749426, -0.0007780250743962824, -0.0008556811953894794, -0.0008990570204332471, -0.0009061460150405765, -0.0008835952030494809, -0.000845614995341748, -0.0008076183148659766, -0.0007811635150574148, -0.000773733772803098, -0.0007861243793740869, -0.0008104671724140644, -0.0008324523805640638, -0.0008395552285946906, -0.0008241113973781466, -0.0007820167811587453, -0.0007131114252842963, -0.0006208621198311448, -0.0005114789819344878, -0.0003912078100256622, -0.0002659921010490507, -0.00014021640527062118, -1.4668090443592519e-05, 0.0001115413979277946, 0.00023634849640075117, 0.0003528463130351156, 0.0004527500132098794, 0.0005282043130137026, 0.000574579811654985, 0.0005902362172491848, 0.0005766673712059855, 0.0005368309211917222, 0.0004750535008497536, 0.0003980426990892738, 0.00031388920615427196, 0.0002311488933628425, 0.00015911819355096668, 0.00010694080265238881, 8.233748667407781e-05, 9.11518291104585e-05, 0.0001341618044534698, 0.0002027964947046712, 0.0002833681064657867, 0.00035983530688099563, 0.00041872909059748054, 0.0004520589136518538, 0.00045658991439267993, 0.0004326986090745777, 0.0003827165928669274, 0.00031071470584720373, 0.0002192406973335892, 0.00010645340080372989, -2.905549990828149e-05, -0.00018015819659922272, -0.0003328587918076664, -0.0004727584891952574, -0.000587373913731426, -0.0006699673249386251, -0.0007193997153081, -0.0007368826773017645, -0.0007276264950633049, -0.0006983287748880684, -0.0006548804230988026, -0.0006015487015247345, -0.0005418782238848507, -0.0004792239051312208, -0.00041966591379605234, -0.0003744116984307766, -0.00035642649163492024, -0.00037346911267377436, -0.0004240474954713136, -0.0004995047929696739, -0.0005880063981749117, -0.0006785215809941292, -0.0007620570249855518, -0.0008319459739141166, -0.0008846108103170991, -0.0009205415262840688, -0.0009432992083020508, -0.0009567185188643634, -0.0009641313808970153, -0.0009676516056060791, -0.0009670634171925485, -0.0009612289723008871, -0.0009466347983106971, -0.0009175498853437603, -0.0008675028802827001, -0.0007909446721896529, -0.0006871892837807536, -0.0005632186075672507, -0.00043077970622107387, -0.0002995549002662301, -0.0001742134045343846, -5.804804095532745e-05, 4.759497824124992e-05, 0.0001455947058275342, 0.00024388039309997112, 0.00035115060745738447, 0.0004698474076576531, 0.0005976642132736742, 0.0007282817969098687, 0.0008532323990948498, 0.0009606116218492389, 0.0010323210153728724, 0.0010474870214238763, 0.0009866913314908743, 0.0008374929893761873, 0.0005997198168188334, 0.00028762250440195203, -7.246388850035146e-05, -0.00044812800479121506, -0.0008040792890824378, -0.0011066009756177664, -0.0013273650547489524, -0.0014454950578510761, -0.0014498409582301974, -0.0013415219727903605, -0.0011358909541741014, -0.0008612027741037309, -0.0005562945734709501, -0.0002640718885231763, -2.552085970819462e-05, 0.00012861780123785138, 0.00017962510173674673, 0.0001179230966954492, -5.136480831424706e-05, -0.00030619269818998873, -0.0006118380115367472, -0.0009288929868489504, -0.001222515944391489, -0.0014684259658679366, -0.0016567090060561895, -0.0017896420322358608, -0.0018787230364978313, -0.0019381040474399924, -0.001979920081794262, -0.0020150020718574524, -0.0020534340292215347, -0.0021016369573771954, -0.0021625300869345665, -0.00223716301843524, -0.0023236959241330624, -0.0024167438969016075, -0.0025104740634560585, -0.0026022770907729864, -0.0026908759027719498, -0.0027743480168282986, -0.0028507988899946213, -0.0029163178987801075, -0.0029639611020684242, -0.0029856350738555193, -0.002974345115944743, -0.00292574311606586, -0.0028365401085466146, -0.002704811980947852, -0.002533863065764308, -0.0023356089368462563, -0.0021288800053298473, -0.0019351179944351315, -0.0017728309612721205, -0.0016546309925615788, -0.0015855790115892887, -0.0015597169985994697, -0.0015610350528731942, -0.001566583989188075, -0.0015535580459982157, -0.0015088190557435155, -0.0014270750107243657, -0.001306738005951047, -0.0011510159820318222, -0.0009702639072202146, -0.0007810412207618356, -0.0006026303744874895, -0.0004533535975497216, -0.0003468449867796153, -0.0002901357947848737, -0.0002817432105075568, -0.0003135779988951981, -0.0003751326003111899, -0.0004535866028163582, -0.0005318776238709688, -0.0005914730136282742, -0.0006161748897284269, -0.0005955399828962982, -0.0005297713214531541, -0.00043080339673906565, -0.00031891430262476206, -0.00022045770310796797, -0.0001599178067408502, -0.00015345719293691218, -0.0002075418015010655, -0.00032073669717647135, -0.00048546871403232217, -0.0006873512174934149, -0.0009088731021620333, -0.0011334510054439306, -0.0013456769520416856, -0.001529844943434, -0.0016733109951019287, -0.0017690049717202783, -0.0018130550161004066, -0.0018047059420496225, -0.0017471989849582314, -0.0016486779786646366, -0.0015185970114544034, -0.0013658460229635239, -0.0011996510438621044, -0.001031395047903061, -0.0008731252164579928, -0.0007349600200541317, -0.0006244555115699768, -0.0005428817821666598, -0.00048271811101585627, -0.00042912669596262276, -0.00036718009505420923, -0.0002886395959649235, -0.00019114630413241684, -7.847519009374082e-05, 3.978360109613277e-05, 0.00015385460574179888, 0.0002592676901258528, 0.00035853200824931264, 0.00045719920308329165, 0.0005613479879684746, 0.0006757649825885892, 0.0008027144940569997, 0.0009382839198224247, 0.0010708540212363005, 0.0011842449894174933, 0.0012619179906323552, 0.0012913000537082553, 0.0012668089475482702, 0.0011916039511561394, 0.0010765519691631198, 0.0009352738852612674, 0.0007830471149645746, 0.0006350089097395539, 0.0005029792082495987, 0.0003969868121203035, 0.00032652198569849133, 0.0003013366076629609, 0.00032696890411898494, 0.00040182878728955984, 0.0005194778786972165, 0.0006699736113660038, 0.0008380134822800756, 0.0010027439566329122, 0.0011463180417194963, 0.0012581689516082406, 0.0013350070221349597, 0.001377742039039731, 0.0013900420162826777, 0.0013765309704467654, 0.0013378079747781157, 0.0012694579781964421, 0.0011654780246317387, 0.001023510005325079, 0.0008448470034636557, 0.0006343802087940276, 0.00040252460166811943, 0.00016272469656541944, -6.850084173493087e-05, -0.00027094490360468626, -0.0004243922885507345, -0.0005167489871382713, -0.0005508121103048325, -0.0005407824064604938, -0.0005090191261842847, -0.000480807910207659, -0.0004791306855622679, -0.0005196878919377923, -0.0006079126033000648, -0.000738701201044023, -0.0008966514724306762, -0.0010574229527264833, -0.0011902609840035439, -0.0012649260461330414, -0.0012595070293173194, -0.001163588953204453, -0.0009803371503949165, -0.0007258941768668592, -0.0004264063900336623, -0.00011397070193197578, 0.00017904670676216483, 0.00042429970926605165, 0.0006000198191031814, 0.0006928971270099282, 0.0007020886987447739, 0.0006392861250787973, 0.0005236442084424198, 0.00037558309850282967, 0.0002128453052137047, 5.355820030672476e-05, -8.132340735755861e-05, -0.00017455990018788725, -0.0002195864071836695, -0.0002218417066615075, -0.0001963515969691798, -0.0001619339018361643, -0.00013683880388271064, -0.00013502560614142567, -0.00016608690202701837, -0.00023217429406940937, -0.0003263264079578221, -0.0004358454898465425, -0.0005462361150421202, -0.0006409200141206384, -0.0007014037109911442, -0.000711681495886296, -0.0006644303794018924, -0.0005615773261524737, -0.0004124412953387946, -0.00023395610332954675, -4.437397001311183e-05, 0.00014006100536789745, 0.00030376770882867277, 0.00043358991388231516, 0.0005193090182729065, 0.0005555506213568151, 0.0005431990139186382, 0.0004905745154246688, 0.0004119205113966018, 0.0003192296135239303, 0.00021913780074100941, 0.00011232629913138226, -3.3155990877276054e-06, -0.00013066020619589835, -0.0002707242965698242, -0.00041669310303404927, -0.0005548606859520078, -0.0006699573714286089, -0.0007505055982619524, -0.0007889054249972105, -0.000783541880082339, -0.0007440883200615644, -0.0006856115069240332, -0.0006214188179001212, -0.0005591781227849424, -0.0004992788890376687, -0.00043571958667598665, -0.0003609439008869231, -0.00027198309544473886, -0.00016865860379766673, -5.251296897768043e-05, 7.516778714489192e-05, 0.00021574880520347506, 0.0003705667913891375, 0.0005361774237826467, 0.0007055398891679943, 0.0008718182216398418, 0.0010291229700669646, 0.0011744239600375295, 0.0013069550041109324, 0.0014265900244936347, 0.0015323429834097624, 0.0016174359479919076, 0.00167135801166296, 0.0016852630069479346, 0.0016591340536251664, 0.0016014729626476765, 0.0015235119499266148, 0.0014355520252138376, 0.0013428189558908343, 0.0012474879622459412, 0.0011505379807204008, 0.00105329102370888, 0.0009600076009519398, 0.0008791215950623155, 0.0008222907199524343, 0.000801721413154155, 0.000825977826025337, 0.0008958064136095345, 0.00100149295758456, 0.0011286139488220215, 0.0012623330112546682, 0.0013895990559831262, 0.0015007370384410024, 0.0015906690387055278, 0.001656898995861411, 0.0016972919693216681, 0.0017137640388682485, 0.001712752040475607, 0.0017017399659380317, 0.0016848179511725903, 0.0016627879813313484, 0.0016331180231645703, 0.0015916830161586404, 0.0015353510389104486, 0.0014659330481663346, 0.001392193022184074, 0.0013259670231491327, 0.0012749989982694387, 0.00123831897508353, 0.0012056860141456127, 0.0011657599825412035, 0.001111202989704907, 0.0010402309708297253, 0.0009585068910382688, 0.0008742681820876896, 0.0007938559865579009, 0.0007204260909929872, 0.0006527361110784113, 0.0005877393996343017, 0.0005215192795731127, 0.000447197409812361, 0.000358177610905841, 0.0002530924102757126, 0.00013710699568036944, 1.9822269678115845e-05, -8.818950300337747e-05, -0.00017769519763533026, -0.00024064960598479956, -0.0002713467110879719, -0.0002711414999794215, -0.0002494252985343337, -0.0002186919009545818, -0.00019391070236451924, -0.0001901674986584112, -0.00021684900275431573, -0.0002737194881774485, -0.00035135250072926283, -0.00043649229337461293, -0.0005176680278964341, -0.0005905557190999389, -0.0006548573728650808, -0.0007118582725524902, -0.000768209109082818, -0.0008330551208928227, -0.0009099323069676757, -0.0009952452965080738, -0.0010798670118674636, -0.0011515930527821183, -0.0011994210071861744, -0.0012172299902886152, -0.0012089409865438938, -0.0011875319760292768, -0.0011682109907269478, -0.0011602339800447226, -0.001163142966106534, -0.001168085029348731, -0.0011620080331340432, -0.0011311050038784742, -0.001062712981365621, -0.0009519098093733191, -0.0008057701052166522, -0.0006382392020896077, -0.00046524550998583436, -0.00030131739913485944, -0.00015957749565131962, -4.919827915728092e-05, 2.529063931433484e-05, 6.264002149691805e-05, 6.373102951329201e-05, 2.97562492050929e-05, -3.597123941290192e-05, -0.00012754219642374665, -0.00023633020464330912, -0.00035016750916838646, -0.00045459289685823023, -0.0005367550766095519, -0.0005887855077162385, -0.0006056592101231217, -0.0005852854228578508, -0.0005301011842675507, -0.00044641148997470737, -0.0003440348955336958, -0.00023199559655040503, -0.0001167012014775537, -2.3327650069404626e-06, 0.00010621979890856892, 0.00020175229292362928, 0.00027804001001641154, 0.0003327383892610669, 0.0003677938075270504, 0.00038639610284008086, 0.000391685200156644, 0.00038546440191566944, 0.0003712981997523457, 0.0003551444096956402, 0.0003427125921007246, 0.00033998480648733675, 0.0003518222947604954, 0.0003817832039203495, 0.0004286481998860836, 0.0004848336102440953, 0.0005431203753687441, 0.0005991096841171384, 0.0006524752825498581, 0.0007070287247188389, 0.0007692669751122594, 0.0008467664010822773, 0.0009464151808060706, 0.0010716370306909084, 0.0012188779655843973, 0.0013789150398224592, 0.001541387988254428, 0.0016975620528683066, 0.0018408099422231317, 0.0019650340545922518, 0.0020659680012613535, 0.0021430549677461386, 0.002197488909587264, 0.002228931989520788, 0.0022370500955730677, 0.002225280972197652, 0.0021981028839945793, 0.0021563570480793715, 0.002099056029692292, 0.0020260571036487818, 0.0019381180172786117, 0.0018343989504501224, 0.00171268405392766, 0.0015717330388724804, 0.0014155659591779113, 0.0012519529554992914, 0.0010908209951594472, 0.0009430943173356354, 0.0008162030717357993, 0.0007117831846699119, 0.0006231984007172287, 0.0005395180778577924, 0.00044851680286228657, 0.00033833389170467854, 0.00020268770458642393, 4.165006976108998e-05, -0.00013811769895255566, -0.00032337679294869304, -0.0004982845857739449, -0.0006496366113424301, -0.0007740071159787476, -0.0008799554198049009, -0.0009830802446231246, -0.0010983790270984173, -0.0012346080038696527, -0.0013909509871155024, -0.0015569919487461448, -0.0017185109900310636, -0.00186190998647362, -0.0019782669842243195, -0.0020633370149880648, -0.0021177208982408047, -0.0021487229969352484, -0.002164758974686265, -0.002169146900996566, -0.002158197108656168, -0.002125407103449106, -0.002064407104626298, -0.001973364967852831, -0.0018568179802969098, -0.001722277025692165, -0.0015791900223121047, -0.001435016980394721, -0.0012952269753441215, -0.0011658519506454468, -0.0010547270067036152, -0.0009704479016363621, -0.0009171628043986857, -0.0008933371864259243, -0.0008946378948166966, -0.0009154565050266683, -0.0009493280085735023, -0.0009897862328216434, -0.0010292979422956705, -0.0010578640503808856, -0.0010665419977158308, -0.0010498800547793508, -0.0010026809759438038, -0.0009203706867992878, -0.000802937604021281, -0.0006561169284395874, -0.00048804760444909334, -0.0003056752902921289, -0.00011571269715204835, 7.389640086330473e-05, 0.00025507970713078976, 0.00042150169610977173, 0.0005711205885745585, 0.0007047703838907182, 0.0008223255863413215, 0.0009208176052197814, 0.000999466166831553, 0.0010642949491739273, 0.001127387979067862, 0.0012011020444333553, 0.0012927260249853134, 0.0014042219845578074, 0.0015314619522541761, 0.001667274977080524, 0.0018024840392172337, 0.0019269220065325499, 0.0020331658888608217, 0.00211845594458282, 0.0021831479389220476, 0.0022282819263637066, 0.00225480692461133, 0.002262627938762307, 0.0022513919975608587, 0.002221327042207122, 0.002175966976210475, 0.002123716054484248, 0.0020770670380443335, 0.002048447960987687, 0.002045671921223402, 0.002071223920211196, 0.002122042002156377, 0.0021920991130173206, 0.002271929057314992, 0.0023467130959033966, 0.0024012639187276363, 0.002428570995107293, 0.002434907015413046, 0.00243612308986485, 0.0024530079681426287, 0.002505426062270999, 0.002605979098007083, 0.002757072914391756, 0.002946974942460656, 0.0031555190216749907, 0.003359158057719469, 0.0035370970144867897, 0.0036751350853592157, 0.0037661809474229813, 0.003808004083111882, 0.00379724008962512, 0.003729823976755142, 0.0036056959070265293, 0.0034323320724070072, 0.0032253870740532875, 0.003001492004841566, 0.0027748250868171453, 0.0025586560368537903, 0.002366680884733796, 0.0022117970511317253, 0.0021014490630477667, 0.0020347218960523605, 0.0020026599522680044, 0.0019903790671378374, 0.0019822109024971724, 0.0019652689807116985, 0.001929517020471394, 0.0018672270234674215, 0.001771230949088931, 0.0016342060407623649, 0.0014473899500444531, 0.0012023360468447208, 0.0008959788247011602, 0.0005332023720256984, 0.0001259895070688799, -0.0003073310072068125, -0.0007428969838656485, -0.0011541680432856083, -0.0015211240388453007, -0.0018358660163357854, -0.002097710967063904, -0.0023102129343897104, -0.00247908104211092, -0.0026088228914886713, -0.002700560027733445, -0.002752705942839384, -0.0027624950744211674, -0.0027300259098410606, -0.0026631790678948164, -0.0025730179622769356, -0.0024674308951944113, -0.0023485668934881687, -0.002216652035713196, -0.002071406925097108, -0.0019142860546708107, -0.0017468889709562063, -0.0015702820383012295, -0.0013879790203645825, -0.001204770989716053, -0.0010261599672958255, -0.0008579317945986986, -0.0007066412945277989, -0.0005755535094067454, -0.00046217278577387333, -0.00035730638774111867, -0.0002463090931996703, -0.00011563809675863013, 3.989351898781024e-05, 0.00021629099501296878, 0.0004046717949677259, 0.0005957554094493389, 0.0007822447223588824, 0.0009602598147466779, 0.0011282910127192736, 0.0012866329634562135, 0.0014368420233950019, 0.001580214942805469, 0.0017158440314233303, 0.0018407580209895968, 0.0019526970572769642, 0.002050539944320917, 0.0021335850469768047, 0.002199856098741293, 0.0022438031155616045, 0.002258111024275422, 0.0022352309897542, 0.0021673510782420635, 0.002051982097327709, 0.0018938829889521003, 0.001701466040685773, 0.0014860349474474788, 0.001259922981262207, 0.0010367119684815407, 0.0008309949189424515, 0.0006570718251168728, 0.0005252892151474953, 0.00043820528662763536, 0.00039159960579127073, 0.0003761055995710194, 0.0003818485129158944, 0.0003972889971919358, 0.0004088688874617219, 0.0004034136945847422, 0.00037102081114426255, 0.0003059724986087531, 0.0002037679951172322, 6.112117989687249e-05, -0.00012092830002075061, -0.0003397784021217376, -0.0005930776824243367, -0.0008792845183052123, -0.0011950100306421518, -0.0015305590350180864, -0.0018698700005188584, -0.0021960700396448374, -0.0024938140995800495, -0.00275065703317523, -0.0029608700424432755, -0.0031234899070113897, -0.0032371440902352333, -0.0032988348975777626, -0.0033076039981096983, -0.003268249100074172, -0.003189424052834511, -0.0030813131015747786, -0.002956551034003496, -0.0028293870855122805, -0.0027124190237373114, -0.0026176508981734514, -0.002554209902882576, -0.0025250690523535013, -0.002527188044041395, -0.0025511060375720263, -0.0025820808950811625, -0.0026037280913442373, -0.0026005960535258055, -0.0025612199679017067, -0.0024805429857224226, -0.002358274068683386, -0.0022006630897521973, -0.002016776939854026, -0.0018123290501534939, -0.001590498024597764, -0.0013525449903681874, -0.0010997309582307935, -0.0008347939001396298, -0.0005600915173999965, -0.0002780315116979182, 6.177008799568284e-06, 0.0002871197066269815, 0.0005627573118545115, 0.0008341684006154537, 0.0011052440386265516, 0.001379534020088613, 0.001657675951719284, 0.0019362079910933971, 0.0022056710440665483, 0.002451172098517418, 0.002658768091350794, 0.0028221909888088703, 0.0029446189291775227, 0.0030332570895552635, 0.003096702042967081, 0.003140450920909643, 0.0031639710068702698, 0.003164184046909213, 0.0031386620830744505, 0.0030868060421198606, 0.0030083449091762304, 0.0029046270065009594, 0.00277877994813025, 0.0026348840910941362, 0.002475281013175845, 0.002296704100444913, 0.0020961000118404627, 0.0018767319852486253, 0.0016467149835079908, 0.0014160240534693003, 0.0011945440201088786, 0.0009915103437379003, 0.0008129628258757293, 0.0006611517164856195, 0.0005344690289348364, 0.00042799211223609746, 0.00033189350506290793, 0.00023354140284936875, 0.00012357129890006036, -1.335747015218658e-06, -0.00013612759357783943, -0.0002714935108087957, -0.0003977011947426945, -0.0005091439816169441, -0.0006057210266590118, -0.0006903506000526249, -0.0007688842015340924, -0.0008455489878542721, -0.0009197596809826791, -0.0009874384850263596, -0.0010452379938215017, -0.0010952240554615855, -0.0011434439802542329, -0.0011973329819738865, -0.0012631589779630303, -0.0013448350364342332, -0.0014437480131164193, -0.0015547149814665318, -0.001665450050495565, -0.0017609780188649893, -0.0018304820405319333, -0.0018710989970713854, -0.0018819889519363642, -0.0018603099742904305, -0.0018048109486699104, -0.0017179310088977218, -0.0016075540333986282, -0.0014870919985696673, -0.0013726509641855955, -0.0012772480258718133, -0.0012072400422766805, -0.0011610840447247028, -0.0011307180393487215, -0.0011049900203943253, -0.0010710180504247546, -0.0010181680554524064, -0.0009422170114703476, -0.0008469205931760371, -0.0007407325902022421, -0.000633156974799931, -0.0005332896835170686, -0.0004463540099095553, -0.00037158268969506025, -0.0003022307937499136, -0.0002281104971189052, -0.0001375206047669053, -1.7245449271285906e-05, 0.00014601049770135432, 0.00036192729021422565, 0.0006319452077150345, 0.0009485805057920516, 0.0012959339655935764, 0.001652113045565784, 0.0019912479910999537, 0.0022894490975886583, 0.002529042074456811, 0.0027015109080821276, 0.0028086560778319836, 0.002860046923160553, 0.0028683310374617577, 0.002844512928277254, 0.0027962320018559694, 0.0027256030589342117, 0.002632156014442444, 0.0025161278899759054, 0.0023806989192962646, 0.002231951104477048, 0.0020779080223292112, 0.0019255980150774121, 0.0017752180574461818, 0.001619643997400999, 0.00144693604670465, 0.0012460829457268119, 0.0010117259807884693, 0.0007460956112481654, 0.0004563101101666689, 0.0001504442043369636, -0.00016255950322374701, -0.00047532859025523067, -0.0007836589938960969, -0.001084072981029749, -0.0013713960070163012, -0.0016407599905505776, -0.001889407983981073, -0.0021183479111641645, -0.002330969087779522, -0.002532576909288764, -0.0027266410179436207, -0.0029116570949554443, -0.003084493102505803, -0.003244082909077406, -0.0033902660943567753, -0.003523360937833786, -0.0036468070466071367, -0.003766352077946067, -0.003888272913172841, -0.004015511833131313, -0.004146679770201445, -0.004276713822036982, -0.004399226047098637, -0.004509117919951677, -0.004602614790201187, -0.004675066098570824, -0.004721614066511393, -0.004736479837447405, -0.004716787952929735, -0.004664374981075525, -0.004581662826240063, -0.004472624976187944, -0.004342768806964159, -0.004196629859507084, -0.004036160185933113, -0.003861933946609497, -0.0036742750089615583, -0.0034747279714792967, -0.0032678639981895685, -0.0030596700962632895, -0.0028574299067258835, -0.002666749060153961, -0.002490225015208125, -0.0023254340048879385, -0.002162930089980364, -0.0019906999077647924, -0.0017991369822993875, -0.0015849519986659288, -0.0013496680185198784, -0.0010969899594783783, -0.0008326303213834763, -0.0005657090223394334, -0.00030660349875688553, -6.171502900542691e-05, 0.00016738810518290848, 0.00038498599315062165, 0.0005975082749500871, 0.0008107019821181893, 0.0010301369475200772, 0.0012591569684445858, 0.0014978729886934161, 0.0017417189665138721, 0.0019824409391731024, 0.0022113919258117676, 0.0024190940894186497, 0.0025950120761990547, 0.002730448031798005, 0.002818379085510969, 0.002852350939065218, 0.0028283570427447557, 0.0027458439581096172, 0.0026114110369235277, 0.002437555929645896, 0.0022371390368789434, 0.002025661990046501, 0.001821603043936193, 0.0016430510440841317, 0.0015001690480858088, 0.0013889239635318518, 0.0012986590154469013, 0.001218824996612966, 0.0011439899681136012, 0.0010754979448392987, 0.0010160079691559076, 0.0009679659269750118, 0.0009328736923635006, 0.0009097842848859727, 0.0008949487237259746, 0.0008815203909762204, 0.0008609705255366862, 0.0008241881732828915, 0.0007657899986952543, 0.0006876441184431314, 0.0005965869058854878, 0.0005010081804357469, 0.00040828698547556996, 0.00032428180566057563, 0.00025344471214339137, 0.00019614030316006392, 0.0001486984983785078, 0.0001084496034309268, 7.596726209158078e-05, 5.5800741392886266e-05, 5.471543045132421e-05, 7.847329106880352e-05, 0.0001274051028303802, 0.00019263039575889707, 0.0002613771939650178, 0.0003218121128156781, 0.0003668208955787122, 0.0003967277880292386, 0.0004170787869952619, 0.0004358156002126634, 0.0004628509923350066, 0.0005101874121464789, 0.000587618793360889, 0.0006971855764277279, 0.000833313271868974, 0.0009840041166171432, 0.001132918056100607, 0.001264333026483655, 0.0013672830536961555, 0.0014395919861271977, 0.0014840669464319944, 0.0015037859557196498, 0.0015018719714134932, 0.0014783500228077173, 0.0014298750320449471, 0.00135509402025491, 0.0012549960520118475, 0.0011339030461385846, 0.0010023500071838498, 0.0008742036879993975, 0.0007611744804307818, 0.0006703775725327432, 0.0006024552858434618, 0.0005534887895919383, 0.0005218225996941328, 0.000509750796481967, 0.0005212576943449676, 0.0005599349969998002, 0.0006252651801332831, 0.0007110012229532003, 0.0008037614170461893, 0.0008851098245941103, 0.0009348980966024101, 0.0009374152286909521, 0.0008868572767823935, 0.0007897727773524821, 0.0006620096974074841, 0.0005230295937508345, 0.00039376888889819384, 0.000293487188173458, 0.0002360975049668923, 0.0002286100061610341, 0.00026977641391567886, 0.0003514502022881061, 0.00046159850899130106, 0.0005864084232598543, 0.0007097232155501842, 0.0008165491162799299, 0.0008963639265857637, 0.0009456287953071296, 0.000969869492109865, 0.000982919940724969, 0.0010022730566561222, 0.0010399490129202604, 0.0010961269726976752, 0.0011620339937508106, 0.0012236320180818439, 0.001268360996618867, 0.0012884100433439016, 0.0012800820404663682, 0.0012422569561749697, 0.001175106968730688, 0.0010805450147017837, 0.0009631142020225525, 0.0008305938099510968, 0.0006915248814038932, 0.0005522806895896792, 0.00041764919296838343, 0.00028921099146828055, 0.00016648649761918932, 4.903920125798322e-05, -6.214647874003276e-05, -0.00016484969819430262, -0.00025616950006224215, -0.00033171309041790664, -0.00038791311089880764, -0.00042492488864809275, -0.0004468821862246841, -0.0004625573055818677, -0.0004833019047509879, -0.0005157553241588175, -0.000560204905923456, -0.0006169643020257354, -0.0006867442280054092, -0.0007678173715248704, -0.0008556853281334043, -0.0009440261055715382, -0.0010233860230073333, -0.0010821899631991982, -0.0011113689979538321, -0.0011057589435949922, -0.0010640770196914673, -0.0009888106724247336, -0.0008840655791573226, -0.0007575136260129511, -0.000617543701082468, -0.00047241381253115833, -0.0003330307954456657, -0.00021044739696662873, -0.00011429510050220415, -5.0854028813773766e-05, -2.4580309400334954e-05, -3.675658081192523e-05, -8.469520980725065e-05, -0.00016169169975910336, -0.0002581205917522311, -0.00036352479946799576, -0.00046615200699307024, -0.0005537444958463311, -0.0006152249989099801, -0.0006473928224295378, -0.0006572838174179196, -0.0006585770752280951, -0.0006671114242635667, -0.0006978792953304946, -0.000761847011744976, -0.0008638811996206641, -0.001000317046418786, -0.0011601339792832732, -0.0013279160484671593, -0.0014868739526718855, -0.0016233649803325534, -0.0017300850013270974, -0.0018066520569846034, -0.0018579380121082067, -0.0018948980141431093, -0.0019317000405862927, -0.0019820239394903183, -0.0020565090235322714, -0.0021613389253616333, -0.0022974188905209303, -0.002456354908645153, -0.002623734064400196, -0.0027816470246762037, -0.0029120598919689655, -0.002998840995132923, -0.0030319830402731895, -0.003010964021086693, -0.0029427779372781515, -0.002840061904862523, -0.0027158919256180525, -0.002581849927082658, -0.0024472461082041264, -0.0023200209252536297, -0.0022094598971307278, -0.0021244268864393234, -0.0020710269454866648, -0.0020483280532062054, -0.002044813008978963, -0.0020421789959073067, -0.0020204458851367235, -0.001962054055184126, -0.0018559599993750453, -0.0016992120072245598, -0.0014963160501793027, -0.0012611269485205412, -0.0010154149495065212, -0.000781106820795685, -0.0005751635180786252, -0.0004065886896569282, -0.00027501030126586556, -0.0001729085051920265, -8.887262811185792e-05, -7.977789209689945e-06, 8.266093209385872e-05, 0.00018602820637170225, 0.00029932500910945237, 0.00041601588600315154, 0.0005267923115752637, 0.0006248129066079855, 0.0007050855201669037, 0.0007631607004441321, 0.000797045009676367, 0.0008084396831691265, 0.0008024962735362351, 0.0007875084993429482, 0.0007706983014941216, 0.0007518312777392566, 0.0007252878858707845, 0.0006851973012089729, 0.0006285398849286139, 0.0005564467865042388, 0.0004751766100525856, 0.0003946876968257129, 0.00032549790921621025, 0.0002772694861050695, 0.000259008607827127, 0.0002763461961876601, 0.0003287545114289969, 0.00040918460581451654, 0.0005079766851849854, 0.0006134756258688867, 0.0007137954817153513, 0.0008011005120351911, 0.0008714402792975307, 0.0009193497244268656, 0.0009348489111289382, 0.000908733403775841, 0.0008379481150768697, 0.0007235215744003654, 0.0005698685999959707, 0.00038764681085012853, 0.0001915343018481508, -6.153582035040017e-06, -0.00019741810683626682, -0.0003768005990423262, -0.0005406017880886793, -0.000684914703015238, -0.0008055226062424481, -0.0009029117063619196, -0.0009825609158724546, -0.0010521740186959505, -0.0011210970114916563, -0.0011956170201301575, -0.0012759800301864743, -0.001358908019028604, -0.0014405379770323634, -0.0015160540351644158, -0.0015813990030437708, -0.0016363549511879683, -0.001682150992564857, -0.0017189380014315248, -0.0017446390120312572, -0.0017558879917487502, -0.001751153962686658, -0.0017314429860562086, -0.0017004429828375578, -0.0016616559587419033, -0.001620942959561944, -0.0015898819547146559, -0.001580541953444481, -0.001600653980858624, -0.0016511189751327038, -0.001725386013276875, -0.00181312405038625, -0.0019051600247621536, -0.001993299927562475, -0.002071365946903825, -0.0021369359456002712, -0.0021899319253861904, -0.002231067046523094, -0.0022601280361413956, -0.0022766690235584974, -0.0022802839521318674, -0.0022705181036144495, -0.0022479600738734007, -0.0022118149790912867, -0.0021592089906334877, -0.002087427070364356, -0.001998073887079954, -0.001896618981845677, -0.0017906019929796457, -0.0016867320518940687, -0.0015897629782557487, -0.0015016760444268584, -0.0014208010397851467, -0.0013433489948511124, -0.001266050967387855, -0.0011888189474120736, -0.0011138259433209896, -0.0010440560290589929, -0.0009799620602279902, -0.0009171618730761111, -0.0008497245144098997, -0.0007732249796390533, -0.0006864427123218775, -0.0005926078883931041, -0.0004969473811797798, -0.00040391000220552087, -0.00031441598548553884, -0.00022520939819514751, -0.00013114360626786947, -3.0239780244301073e-05, 7.501828076783568e-05, 0.00018129519594367594, 0.0002852586912922561, 0.0003837475087493658, 0.00047237551189027727, 0.0005479885148815811, 0.0006096035940572619, 0.000657973694615066, 0.0006970326066948473, 0.0007339188014157116, 0.0007793112890794873, 0.0008431968162767589, 0.0009282398968935013, 0.00103062205016613, 0.0011443640105426311, 0.001264033024199307, 0.0013858400052413344, 0.0015072179958224297, 0.0016238070093095303, 0.0017276050057262182, 0.0018114789854735136, 0.0018725449917837977, 0.0019139789510518312, 0.0019450959516689181, 0.001977552892640233, 0.002019863110035658, 0.0020758449099957943, 0.0021451120264828205, 0.002225222997367382, 0.0023117640521377325, 0.002396439900621772, 0.00246933801099658, 0.0025199430529028177, 0.0025375760160386562, 0.002514821942895651, 0.002450921107083559, 0.0023511280305683613, 0.0022277471143752337, 0.0020989279728382826, 0.001983274007216096, 0.0018952389946207404, 0.0018454990349709988, 0.0018391950288787484, 0.0018726950511336327, 0.0019320229766890407, 0.001997539075091481, 0.0020514819771051407, 0.002083434024825692, 0.002091513015329838, 0.002080023055896163, 0.002054309006780386, 0.0020186700858175755, 0.001977191073819995, 0.0019330809591338038, 0.001888897968456149, 0.0018475389806553721, 0.001811132999137044, 0.0017780240159481764, 0.0017405679682269692, 0.0016896160086616874, 0.001621649949811399, 0.0015425479505211115, 0.0014669590163975954, 0.0014146859757602215, 0.0014012890169396996, 0.0014300550101324916, 0.0014960940461605787, 0.0015906529733911157, 0.0017020499799400568, 0.001818323042243719, 0.0019282969878986478, 0.0020216929260641336, 0.0020918180234730244, 0.0021374321077018976, 0.0021622790955007076, 0.002176044974476099, 0.002193413907662034, 0.00223059905692935, 0.0023002170491963625, 0.002409430919215083, 0.0025604579132050276, 0.002748070051893592, 0.002961430000141263, 0.0031858859583735466, 0.0034075051080435514, 0.003615668974816799, 0.0038025870453566313, 0.003964104223996401, 0.004098927136510611, 0.004211930092424154, 0.004314232151955366, 0.004417866934090853, 0.004531695041805506, 0.004658701829612255, 0.004795977845788002, 0.0049338131211698055, 0.0050572678446769714, 0.005150318145751953, 0.005198421888053417, 0.005192139185965061, 0.005131238140165806, 0.005024596117436886, 0.004883996210992336, 0.004722146783024073, 0.004551799967885017, 0.004384077154099941, 0.004225437995046377, 0.004076763987541199, 0.003936208784580231, 0.003799852915108204, 0.003662083065137267, 0.0035136379301548004, 0.003345897886902094, 0.0031538179609924555, 0.002935986965894699, 0.002695753937587142, 0.0024408779572695494, 0.002180584007874131, 0.0019216010114178061, 0.0016668230528011918, 0.001416380051523447, 0.0011698839953169227, 0.0009282786049880087, 0.0006972287083044648, 0.00048548670019954443, 0.00030012550996616483, 0.00014487920270767063, 1.7910100723383948e-05, -8.690205868333578e-05, -0.00017912790644913912, -0.0002681681071408093, -0.0003612597065512091, -0.00046404459862969816, -0.0005793292075395584, -0.0007065547979436815, -0.0008439581724815071, -0.000992066808976233, -0.0011513440404087305, -0.0013192760525271297, -0.001492809969931841, -0.0016688379691913724, -0.0018464319873601198, -0.0020266540814191103, -0.0022101670037955046, -0.0023963290732353926, -0.002581836888566613, -0.002760350937023759, -0.0029249279759824276, -0.003071347950026393, -0.0031991449650377035, -0.003312238957732916, -0.0034165331162512302, -0.003519400954246521, -0.003629629034548998, -0.003756105899810791, -0.003906590864062309, -0.004082521889358759, -0.0042772372253239155, -0.004478240851312876, -0.00467131519690156, -0.004844184033572674, -0.004985955078154802, -0.005085621029138565, -0.0051344819366931915, -0.0051293810829520226, -0.005069965962320566, -0.004955905955284834, -0.004788408987224102, -0.004572949837893248, -0.004322046879678965, -0.0040549528785049915, -0.0037910249084234238, -0.003542887046933174, -0.003313510911539197, -0.003098075045272708, -0.0028893828857690096, -0.002679168013855815, -0.0024576690047979355, -0.002214841078966856, -0.0019418320152908564, -0.001635286957025528, -0.001297031994909048, -0.0009298846125602722, -0.0005348692066036165, -0.00011174249812029302, 0.0003383625007700175, 0.000810622819699347, 0.0012949099764227867, 0.0017773889703676105, 0.0022434641141444445, 0.0026774948928505182, 0.003061650088056922, 0.0033792450558394194, 0.0036185740027576685, 0.003776618978008628, 0.0038596689701080322, 0.0038827750831842422, 0.0038665449246764183, 0.0038321660831570625, 0.003798969089984894, 0.0037818809505552053, 0.0037901978939771652, 0.0038257550913840532, 0.003882460994645953, 0.003945670090615749, 0.003995717968791723, 0.004011696204543114, 0.003976458217948675, 0.003879325930029154, 0.0037142690271139145, 0.0034776299726217985, 0.0031707279849797487, 0.0027994029223918915, 0.0023722329642623663, 0.001903280965052545, 0.001411890028975904, 0.0009204300004057586, 0.0004498501948546618, 1.6336280168616213e-05, -0.00037047031219117343, -0.0007081982912495732, -0.0009999804897233844, -0.001252969028428197, -0.0014776280149817467, -0.0016868480015546083, -0.001894269953481853, -0.0021119790617376566, -0.0023458770010620356, -0.0025941019412130117, -0.002848088974133134, -0.0030942929442971945, -0.003318147035315633, -0.0035084648989140987, -0.003658361965790391, -0.003765365108847618, -0.0038300510495901108, -0.003856122028082609, -0.00384857808239758, -0.00381092494353652, -0.0037465558853000402, -0.0036600849125534296, -0.0035578529350459576, -0.0034480870235711336, -0.003341339062899351, -0.0032514079939574003, -0.0031921688932925463, -0.0031726809684187174, -0.003193018026649952, -0.0032457190100103617, -0.0033164010383188725, -0.003385073971003294, -0.003431915072724223, -0.0034448460210114717, -0.0034242530819028616, -0.0033792490139603615, -0.0033246399834752083, -0.0032757380977272987, -0.0032450358849018812, -0.0032427150290459394, -0.0032766959629952908, -0.0033503130543977022, -0.003461696906015277, -0.0036022430285811424, -0.0037588980048894882, -0.003918316215276718, -0.0040708570741117, -0.004210446961224079, -0.0043329838663339615, -0.004436879884451628, -0.004523843992501497, -0.004598577972501516, -0.004665683954954147, -0.004724462050944567, -0.004766012076288462, -0.004776660818606615, -0.004744675010442734, -0.004665980115532875, -0.0045464481227099895, -0.004397176206111908, -0.0042301020585000515, -0.00405433913692832, -0.0038732169196009636, -0.0036863989662379026, -0.0034916140139102936, -0.003284754930064082, -0.0030631551053375006, -0.0028270299080759287, -0.0025801709853112698, -0.00233366503380239, -0.0021047419868409634, -0.001909328973852098, -0.0017586459871381521, -0.0016579310176894069, -0.0016025969525799155, -0.0015806240262463689, -0.001577220973558724, -0.0015766529832035303, -0.0015658850315958261, -0.0015372990164905787, -0.001488563953898847, -0.0014231790555641055, -0.0013489510165527463, -0.0012697819620370865, -0.0011818789644166827, -0.0010780870215967298, -0.0009500739979557693, -0.0007921889191493392, -0.0006031569209881127, -0.00038709360524080694, -0.0001523430983070284, 9.16932913241908e-05, 0.00033633181010372937, 0.0005761992069892585, 0.000811010308098048, 0.0010452340357005596, 0.0012852340005338192, 0.0015343469567596912, 0.0017882529646158218, 0.0020350769627839327, 0.0022588069550693035, 0.002442643977701664, 0.0025722880382090807, 0.0026378300972282887, 0.002632956951856613, 0.0025527379475533962, 0.0023982441052794456, 0.0021829719189554453, 0.0019308760529384017, 0.0016717249527573586, 0.0014365119859576225, 0.001249313005246222, 0.0011199209839105606, 0.001047985046170652, 0.0010277279652655125, 0.0010498999617993832, 0.001101379981264472, 0.0011664419434964657, 0.0012304079718887806, 0.0012823910219594836, 0.0013155860360711813, 0.0013284779852256179, 0.001327101024799049, 0.0013230020413175225, 0.001330130035057664, 0.0013606500579044223, 0.0014235300477594137, 0.0015212070429697633, 0.0016491779824718833, 0.0018006230238825083, 0.0019684000872075558, 0.0021461080759763718, 0.002328665927052498, 0.0025143350940197706, 0.0027026960160583258, 0.00289426208473742, 0.003092946019023657, 0.0033034069929271936, 0.003527678083628416, 0.0037625839468091726, 0.004001793917268515, 0.004236170090734959, 0.004455246962606907, 0.004649376031011343, 0.004812994971871376, 0.004945314023643732, 0.005047652870416641, 0.0051241060718894005, 0.005178647115826607, 0.005210749804973602, 0.005218372214585543, 0.005199134815484285, 0.005150720942765474, 0.005069771781563759, 0.004954826086759567, 0.004808945115655661, 0.004638118203729391, 0.004448383115231991, 0.004244654905050993, 0.0040296101942658424, 0.0038004189264029264, 0.0035499949008226395, 0.00327501492574811, 0.002979100914672017, 0.002670333022251725, 0.0023595390375703573, 0.0020561639685183764, 0.0017676970455795527, 0.0015005309833213687, 0.0012582909548655152, 0.0010425460059195757, 0.0008513223729096353, 0.0006757347146049142, 0.0005036151851527393, 0.00032391789136454463, 0.00012885169417131692, -8.450649329461157e-05, -0.0003115014114882797, -0.0005405358970165253, -0.0007551274029538035, -0.0009377407841384411, -0.001071559963747859, -0.0011448819423094392, -0.0011572380317375064, -0.0011210850207135081, -0.0010540620423853397, -0.0009735235944390297, -0.0008944591972976923, -0.000826990813948214, -0.0007786236237734556, -0.0007534588221460581, -0.0007496292237192392, -0.0007600265089422464, -0.0007734369137324393, -0.0007780113955959678, -0.0007653777138330042, -0.0007325074984692037, -0.0006815216038376093, -0.0006174910231493413, -0.0005469074822030962, -0.00047529040602967143, -0.0004039524937979877, -0.0003293977933935821, -0.0002444651909172535, -0.00014250210369937122, -2.1051200747024268e-05, 0.00011945409642066807, 0.00027812301414087415, 0.0004540905065368861, 0.0006451687077060342, 0.0008455606875941157, 0.0010444530053064227, 0.001230034977197647, 0.0013917130418121815, 0.0015201079659163952, 0.0016072579892352223, 0.0016467149835079908, 0.0016400739550590515, 0.0015984210185706615, 0.0015403579454869032, 0.0014870420563966036, 0.0014554460067301989, 0.0014541830169036984, 0.001482093008235097, 0.0015311939641833305, 0.0015908279456198215, 0.001649903948418796, 0.0016965699614956975, 0.0017200859729200602, 0.001711979042738676, 0.001667437027208507, 0.00158654002007097, 0.0014704209752380848, 0.0013186499709263444, 0.0011318669421598315, 0.0009143155766651034, 0.0006750766769982874, 0.0004266730975359678, 0.00018203939544036984, -4.836649895878509e-05, -0.0002565713948570192, -0.000440100091509521, -0.0006036531995050609, -0.0007558231009170413, -0.0009079729206860065, -0.0010726329637691379, -0.0012607560493052006, -0.0014770219568163157, -0.0017195469699800014, -0.0019768800120800734, -0.002228498924523592, -0.0024516680277884007, -0.00262584094889462, -0.0027375840581953526, -0.002783786039799452, -0.002769713057205081, -0.002706924919039011, -0.0026087670121341944, -0.0024860911071300507, -0.0023477959912270308, -0.0022012239787727594, -0.002049514092504978, -0.0018902439624071121, -0.0017166699981316924, -0.0015211900463327765, -0.0012989239767193794, -0.001050711958669126, -0.0007838094024918973, -0.0005136379040777683, -0.0002601678133942187, -4.293541132938117e-05, 0.00012335620704106987, 0.00023002870148047805, 0.0002734613080974668, 0.0002558118139859289, 0.00018508460198063403, 7.400350295938551e-05, -6.0261831094976515e-05, -0.0001982676039915532, -0.0003231475129723549, -0.0004234065127093345, -0.0004932013107463717, -0.0005299319745972753, -0.0005349909770302474, -0.000513544597197324, -0.0004715824034065008, -0.00041588940075598657, -0.0003543485945556313, -0.0002970822970382869, -0.0002564151945989579, -0.00024611869594082236, -0.00027873789076693356, -0.00036239190376363695, -0.0004964653053320944, -0.0006722848047502339, -0.00087792391423136, -0.0011017610086128116, -0.0013369519729167223, -0.0015829140320420265, -0.0018400759436190128, -0.002106847008690238, -0.0023785019293427467, -0.002648944966495037, -0.002913110889494419, -0.003165144007652998, -0.0033967660274356604, -0.0035985009744763374, -0.003763512009754777, -0.0038877190090715885, -0.0039713080041110516, -0.004021549131721258, -0.004051040858030319, -0.004076092038303614, -0.004112468101084232, -0.0041721579618752, -0.004262187983840704, -0.004385462962090969, -0.004537574015557766, -0.004706989973783493, -0.004878638777881861, -0.005036922171711922, -0.005167808849364519, -0.0052611990831792355, -0.005312213208526373, -0.005320331081748009, -0.005288373213261366, -0.005221640225499868, -0.005129239987581968, -0.005023525096476078, -0.004915720783174038, -0.004808786790817976, -0.004698249977082014, -0.004575077909976244, -0.004429817199707031, -0.004256951157003641, -0.00405847979709506, -0.0038427431136369705, -0.0036214140709489584, -0.0034052219707518816, -0.0032000429928302765, -0.003006181912496686, -0.002818579087033868, -0.0026271590031683445, -0.002423078054562211, -0.0022049429826438427, -0.001976554049178958, -0.0017452819738537073, -0.0015193830477073789, -0.0013039129553362727, -0.0011010660091415048, -0.0009149310062639415, -0.0007524637039750814, -0.0006226508994586766, -0.0005327999242581427, -0.00048353068996220827, -0.00046809628838673234, -0.0004767974023707211, -0.0005016727955080569, -0.0005386212142184377, -0.0005869134911336005, -0.0006471829256042838, -0.0007192955235950649, -0.0007984741241671145, -0.0008788944105617702, -0.0009560766047798097, -0.00102747802156955, -0.0010884649818763137, -0.0011320309713482857, -0.0011535970261320472, -0.0011524129658937454, -0.001132132951170206, -0.0010988370049744844, -0.0010576910572126508, -0.0010113780153915286, -0.0009606651728972793, -0.0009054215042851865, -0.0008427667780779302, -0.0007671496132388711, -0.0006698835059069097, -0.0005425220006145537, -0.00037881769821979105, -0.0001789719972293824, 4.8315450840163976e-05, 0.0002911076880991459, 0.0005388780846260488, 0.0007822837796993554, 0.0010128830326721072, 0.0012243749806657434, 0.0014120859559625387, 0.0015701729571446776, 0.0016917870379984379, 0.0017702860059216619, 0.001802906976081431, 0.0017920229583978653, 0.001744949957355857, 0.0016733199590817094, 0.0015891790390014648, 0.001503390958532691, 0.0014259150484576821, 0.0013632680056616664, 0.0013164370320737362, 0.0012795489747077227, 0.0012406460009515285, 0.0011856330092996359, 0.0011018819641321898, 0.0009821688290685415, 0.0008271466940641403, 0.0006441671284846961, 0.00044423999497666955, 0.0002415274066152051, 5.356694964575581e-05, -0.00010146379645448178, -0.00021178029419388622, -0.0002749247069004923, -0.00029909430304542184, -0.00030070520006120205, -0.00030123008764348924, -0.0003226303088013083, -0.0003832895017694682, -0.0004935290780849755, -0.0006540914764627814, -0.000855219375807792, -0.0010765560436993837, -0.0012960199965164065, -0.001500174985267222, -0.0016847529914230108, -0.0018505200278013945, -0.0020004950929433107, -0.002137593924999237, -0.00226154294796288, -0.002368031069636345, -0.002449149964377284, -0.0024960068985819817, -0.002502277959138155, -0.0024627400562167168, -0.0023731249384582043, -0.002228924073278904, -0.0020267849322408438, -0.001767260953783989, -0.001456064055673778, -0.0011024270206689835, -0.0007206492009572685, -0.0003336833033245057, 3.122431007795967e-05, 0.00034776408574543893, 0.0005978567060083151, 0.000777103123255074, 0.0008936948725022376, 0.0009652309236116707, 0.0010146190179511905, 0.001064877025783062, 0.0011350440327078104, 0.001235336996614933, 0.0013672129716724157, 0.0015235600294545293, 0.0016923650400713086, 0.0018592070555314422, 0.002008948940783739, 0.002126422943547368, 0.0021977019496262074, 0.0022142690140753984, 0.0021723241079598665, 0.0020735689904540777, 0.0019248389871791005, 0.0017401400255039334, 0.001540158991701901, 0.0013480669585987926, 0.001183627056889236, 0.001058851950801909, 0.0009773188503459096, 0.0009328055894002318, 0.0009112533880397677, 0.0008934094803407788, 0.0008586824988014996, 0.0007894738810136914, 0.0006765046273358166, 0.0005226469947956502, 0.00034177990164607763, 0.00015509680088143796, -1.545172926853411e-05, -0.0001551888999529183, -0.00025809291400946677, -0.00032686381018720567, -0.0003721791144926101, -0.00041045190300792456, -0.00046022748574614525, -0.0005374758038669825, -0.0006523085758090019, -0.0008085548761300743, -0.0010043550282716751, -0.0012304040137678385, -0.001473836018703878, -0.0017216249834746122, -0.0019584898836910725, -0.0021671210415661335, -0.0023317160084843636, -0.002443575067445636, -0.0025019580498337746, -0.0025142740923911333, -0.002494867891073227, -0.0024655379820615053, -0.0024513478856533766, -0.0024725969415158033, -0.002539160894230008, -0.0026465889532119036, -0.0027803070843219757, -0.002918455982580781, -0.0030354668851941824, -0.0031079109758138657, -0.0031207529827952385, -0.0030665479134768248, -0.0029440370853990316, -0.0027608759701251984, -0.0025345711037516594, -0.002287226030603051, -0.0020431510638445616, -0.001824449049308896, -0.0016426059883087873, -0.0014943480491638184, -0.001368319964967668, -0.001247728941962123, -0.0011120110284537077, -0.0009410487255081534, -0.0007217347156256437, -0.0004524017858784646, -0.00014099449617788196, 0.00019800559675786644, 0.0005462851258926094, 0.0008846177952364087, 0.0011994770029559731, 0.0014890170423313975, 0.0017624220345169306, 0.0020357139874249697, 0.002324292901903391, 0.0026391390711069107, 0.0029858509078621864, 0.003362484974786639, 0.0037605699617415667, 0.0041672708466649055, 0.004568508826196194, 0.004949252121150494, 0.005294770002365112, 0.005591366905719042, 0.00582893006503582, 0.006006369832903147, 0.006132869049906731, 0.006225410848855972, 0.006302728783339262, 0.0063804988749325275, 0.006470569875091314, 0.006578221917152405, 0.006701274774968624, 0.00683262012898922, 0.006962546147406101, 0.007082472089678049, 0.007186857983469963, 0.0072714779525995255, 0.007329113781452179, 0.007350251078605652, 0.007324484176933765, 0.007244572043418884, 0.00711017195135355, 0.006926131900399923, 0.006697736214846373, 0.006429087836295366, 0.006127743050456047, 0.005804658867418766, 0.005468035116791725, 0.005122299771755934, 0.004767858888953924, 0.004401364829391241, 0.004019367042928934, 0.003621897893026471, 0.0032140109688043594, 0.0028048621024936438, 0.002405507955700159, 0.0020237730350345373, 0.0016633890336379409, 0.0013258600374683738, 0.0010121819796040654, 0.0007212844793684781, 0.0004498767957556993, 0.00019275369413662702, -5.368763959268108e-05, -0.00028857740107923746, -0.0005055608926340938, -0.0006931109237484634, -0.0008398647187277675, -0.0009420004789717495, -0.0010053260484710336, -0.0010447680251672864, -0.0010788829531520605, -0.0011242530308663845, -0.001192064955830574, -0.0012875270331278443, -0.0014092379715293646, -0.0015495390398427844, -0.0016943119699135423, -0.0018239800119772553, -0.0019205049611628056, -0.001972832949832082, -0.0019805049523711205, -0.0019515339517965913, -0.001898122951388359, -0.001829931978136301, -0.0017523779533803463, -0.0016702349530532956, -0.0015866579487919807, -0.0015013329684734344, -0.0014102599816396832, -0.001310323947109282, -0.0012015049578621984, -0.001084742951206863, -0.0009602038189768791, -0.0008304098737426102, -0.0007021905039437115, -0.0005832944880239666, -0.0004801586037501693, -0.00039935510721988976, -0.000346337998053059, -0.0003223275125492364, -0.0003230021975468844, -0.0003400559944566339, -0.00036343460669741035, -0.0003837709955405444, -0.00039251489215530455, -0.00038311429671011865, -0.0003517635923344642, -0.0003034932888112962, -0.00025536189787089825, -0.00022883540077600628, -0.00024261609360110015, -0.0003071351093240082, -0.00042404470150358975, -0.0005855074268765748, -0.0007764332112856209, -0.0009765105205588043, -0.0011620779987424612, -0.0013101770309731364, -0.0014005450066179037, -0.0014194080140441656, -0.0013658959651365876, -0.0012513509718701243, -0.0010937460465356708, -0.0009129390818998218, -0.0007289734203368425, -0.0005606302875094116, -0.0004246557946316898, -0.00033350239391438663, -0.0002930130867753178, -0.00030433578649535775, -0.00036436470691114664, -0.000467408390250057, -0.0006043780012987554, -0.0007624098216183484, -0.0009254678152501583, -0.001078363973647356, -0.0012073939433321357, -0.0013019850011914968, -0.0013616960495710373, -0.0013972900342196226, -0.001425268012098968, -0.0014615310356020927, -0.0015175800072029233, -0.0015972580295056105, -0.0016972559969872236, -0.0018092429963871837, -0.0019216729560866952, -0.0020225499756634235, -0.0021019699051976204, -0.0021535248961299658, -0.002173776039853692, -0.0021620579063892365, -0.002119330922141671, -0.0020473299082368612, -0.0019500410417094827, -0.0018358000088483095, -0.0017126289894804358, -0.0015853779623284936, -0.0014561070129275322, -0.0013272790238261223, -0.001200504950247705, -0.0010751719819381833, -0.0009514614939689636, -0.0008303874055854976, -0.0007147429860197008, -0.0006086889770813286, -0.0005172098753973842, -0.0004453352012205869, -0.00039690101402811706, -0.00037054860149510205, -0.00035767239751294255, -0.0003438178973738104, -0.0003100965986959636, -0.00023529530153609812, -9.902363672154024e-05, 0.00011447299766587093, 0.0004125201085116714, 0.0007889685221016407, 0.0012191570131108165, 0.0016654989449307323, 0.0020858619827777147, 0.002442781114950776, 0.0027115109842270613, 0.002880532993003726, 0.002952289069071412, 0.0029456319753080606, 0.0028913840651512146, 0.00282582500949502, 0.002783054020255804, 0.0027898310218006372, 0.002859981032088399, 0.002992491004988551, 0.00317252310924232, 0.0033757761120796204, 0.003570025088265538, 0.003719140077009797, 0.003793105948716402, 0.0037738990504294634, 0.0036589358933269978, 0.003461217973381281, 0.003206169931218028, 0.0029246180783957243, 0.002643887884914875, 0.0023827520199120045, 0.002148651983588934, 0.0019400139572098851, 0.0017487299628555775, 0.0015614910516887903, 0.001362015027552843, 0.0011373480083420873, 0.0008810862200334668, 0.0005931567284278572, 0.0002812886086758226, -4.103652827325277e-05, -0.0003575554001145065, -0.0006539021851494908, -0.0009199646883644164, -0.001149612944573164, -0.0013411079999059439, -0.0014966450398787856, -0.0016219010576605797, -0.0017245300114154816, -0.0018139679450541735, -0.0019009140087291598, -0.0019951879512518644, -0.0021020660642534494, -0.0022217980585992336, -0.002352037001401186, -0.0024866480380296707, -0.002616221085190773, -0.002729845931753516, -0.0028194100596010685, -0.002884299959987402, -0.002929368056356907, -0.0029635459650307894, -0.0029988850001245737, -0.0030487109906971455, -0.0031237569637596607, -0.0032253488898277283, -0.003342566080391407, -0.0034546880051493645, -0.003536387113854289, -0.0035630168858915567, -0.003515251912176609, -0.0033811458852142096, -0.003158740932121873, -0.0028557979967445135, -0.002487370977178216, -0.002076151082292199, -0.0016505729872733355, -0.0012355060316622257, -0.0008470797911286354, -0.0004927433910779655, -0.00017020439554471523, 0.00013075830065645278, 0.00042217219015583396, 0.0007155319908633828, 0.001022389973513782, 0.0013532160082831979, 0.001714952988550067, 0.0021082249004393816, 0.0025258390232920647, 0.002950680907815695, 0.0033583389595150948, 0.0037221258971840143, 0.0040220278315246105, 0.0042486959137022495, 0.004404181148856878, 0.0045013269409537315, 0.004560274071991444, 0.004604692105203867, 0.004655222874134779, 0.00472575519233942, 0.004823809023946524, 0.004950587172061205, 0.005101691000163555, 0.005267233122140169, 0.005432241130620241, 0.005579088814556599, 0.005689182784408331, 0.0057466221041977406, 0.005742774810642004, 0.005678420886397362, 0.005561706144362688, 0.005405798088759184, 0.005225268192589283, 0.005033488851040602, 0.004841262940317392, 0.004654833115637302, 0.004478168208152056, 0.004312202800065279, 0.004150888882577419, 0.0039802901446819305, 0.003783178050071001, 0.003544829087331891, 0.0032567279413342476, 0.002917109988629818, 0.002529816934838891, 0.0021026700269430876, 0.0016456219600513577, 0.0011725099757313728, 0.0007007236126810312, 0.000248128199018538, -0.0001688050979282707, -0.0005367604899220169, -0.0008483533747494221, -0.0011014649644494057, -0.0012980500468984246, -0.001443085027858615, -0.0015470229554921389, -0.001622923999093473, -0.0016853930428624153, -0.0017477889778092504, -0.001820283941924572, -0.0019076550379395485, -0.0020083009731024504, -0.0021138109732419252, -0.002213496947661042, -0.0023005360271781683, -0.0023749780375510454, -0.002440383890643716, -0.0024986390490084887, -0.002546716947108507, -0.0025771199725568295, -0.0025793490931391716, -0.0025447579100728035, -0.002473024884238839, -0.002371137961745262, -0.0022487530950456858, -0.002115112030878663, -0.0019785920158028603, -0.001847121980972588, -0.0017291719559580088, -0.0016308859921991825, -0.0015544360503554344, -0.001498386962339282, -0.001457893056795001, -0.00142530701123178, -0.001390520017594099, -0.001344737014733255, -0.0012819350231438875, -0.0012003500014543533, -0.001100894995033741, -0.0009848858462646604, -0.0008544484153389931, -0.0007126069976948202, -0.0005644788034260273, -0.00042035849764943123, -0.00029559520771726966, -0.00020665570627897978, -0.0001660131965763867, -0.00017684769409243017, -0.00023167769541032612, -0.0003169942065142095, -0.0004172518092673272, -0.0005125816096551716, -0.0005814501782879233, -0.0006062465254217386, -0.0005797481862828135, -0.0005034218193031847, -0.000386330095352605, -0.0002410893066553399, -8.033050107769668e-05, 8.386236004298553e-05, 0.00024198199389502406, 0.00038719098665751517, 0.0005176573758944869, 0.0006378124817274511, 0.0007581273093819618, 0.0008910964825190604, 0.0010466990061104298, 0.0012307589640840888, 0.001441549975425005, 0.001668964046984911, 0.0018981200410053134, 0.0021137669682502747, 0.0023020480293780565, 0.0024546911008656025, 0.0025703359860926867, 0.002650046953931451, 0.0026927071157842875, 0.0026956379879266024, 0.002658664947375655, 0.002584995934739709, 0.0024797029327601194, 0.00234945397824049, 0.0021996491122990847, 0.002033460885286331, 0.0018497590208426118, 0.0016435639699921012, 0.001409722026437521, 0.0011456350330263376, 0.0008549786289222538, 0.0005473130731843412, 0.00023717069416306913, -5.791027069790289e-05, -0.0003177642065566033, -0.0005219305166974664, -0.0006532525876536965, -0.000700592587236315, -0.0006634371820837259, -0.0005546765751205385, -0.00039455879596062005, -0.0002068744070129469, -1.8325230485061184e-05, 0.00014639720029663295, 0.00026869450812228024, 0.00033680920023471117, 0.0003474765981081873, 0.000305686000501737, 0.0002221745962742716, 0.00011213259858777747, -8.5831970864092e-06, -0.0001250884961336851, -0.0002252904960187152, -0.00030061270808801055, -0.0003469930961728096, -0.0003649523132480681, -0.0003599940100684762, -0.00034001749008893967, -0.0003115157887805253, -0.00028017209842801094, -0.00025431759422644973, -0.00024307089915964752, -0.00025300419656559825, -0.00028784299502149224, -0.000350270391209051, -0.000440226896898821, -0.0005516278906725347, -0.0006730487220920622, -0.0007929094135761261, -0.0009022129816003144, -0.0009915056871250272, -0.0010485469829291105, -0.001060212031006813, -0.0010189269669353962, -0.0009249901049770415, -0.0007861867779865861, -0.000614354619756341, -0.0004231189959682524, -0.00022419780725613236, -2.410353954473976e-05, 0.00017407830455340445, 0.0003666300908662379, 0.0005526053137145936, 0.000733950815629214, 0.0009146733791567385, 0.00109910499304533, 0.0012915290426462889, 0.0014949400210753083, 0.0017092210473492742, 0.0019311680225655437, 0.0021533749531954527, 0.0023644680622965097, 0.002553876955062151, 0.0027137589640915394, 0.002840285887941718, 0.002935641910880804, 0.003008439904078841, 0.0030729409772902727, 0.0031435969285666943, 0.003231812035664916, 0.003349347971379757, 0.003508077934384346, 0.003714597085490823, 0.003966114949434996, 0.004248593933880329, 0.004539194982498884, 0.004808517172932625, 0.00502731092274189, 0.0051710158586502075, 0.005222194828093052, 0.005173155106604099, 0.005027643870562315, 0.004800823051482439, 0.0045156278647482395, 0.004198139067739248, 0.003870835993438959, 0.00354828592389822, 0.0032355349976569414, 0.0029296251013875008, 0.002622306114062667, 0.002305936999619007, 0.00197582202963531, 0.0016295569948852062, 0.0012693930184468627, 0.0009011661750264466, 0.0005326428217813373, 0.0001742135063977912, -0.00016553429304622114, -0.0004826473887078464, -0.0007745934999547899, -0.0010387880029156804, -0.0012755340430885553, -0.0014875440392643213, -0.0016806030180305243, -0.0018645540112629533, -0.002049004891887307, -0.0022399520967155695, -0.002440335927531123, -0.0026510830502957106, -0.0028756209649145603, -0.003119091968983412, -0.0033860590774565935, -0.0036804669070988894, -0.004001971799880266, -0.004343991167843342, -0.004693096037954092, -0.005031928885728121, -0.005343729164451361, -0.0056132059544324875, -0.005827995017170906, -0.005979376845061779, -0.0060631767846643925, -0.00607739994302392, -0.006023713853210211, -0.005908770952373743, -0.0057424758560955524, -0.005536912940442562, -0.005306988023221493, -0.005068275146186352, -0.00483183516189456, -0.0046041421592235565, -0.004386622924357653, -0.004177133087068796, -0.0039742072112858295, -0.0037786168977618217, -0.0035926769487559795, -0.0034202919341623783, -0.003266145009547472, -0.0031295870430767536, -0.003005957929417491, -0.00288956705480814, -0.0027727270498871803, -0.002646401058882475, -0.002500117989256978, -0.002325182082131505, -0.0021150358952581882, -0.0018680499633774161, -0.0015907629858702421, -0.001298328978009522, -0.0010132159804925323, -0.0007622293778695166, -0.0005731952260248363, -0.00046794168883934617, -0.0004579855885822326, -0.0005425788112916052, -0.0007087176200002432, -0.000933690695092082, -0.0011893820483237505, -0.0014475759817287326, -0.0016839000163599849, -0.0018821050180122256, -0.0020372390281409025, -0.002151734894141555, -0.0022307359613478184, -0.0022778469137847424, -0.002294284990057349, -0.0022827209904789925, -0.00225130096077919, -0.0022155779879540205, -0.002192028099671006, -0.0021934390533715487, -0.002226833952590823, -0.002294003963470459, -0.002392101101577282, -0.002515641041100025, -0.002656972035765648, -0.0028056830633431673, -0.0029482899699360132, -0.0030712750740349293, -0.003162720939144492, -0.003215106902644038, -0.003226934000849724, -0.003201819024980068, -0.003146436996757984, -0.0030681591015309095, -0.0029753618873655796, -0.0028768470510840416, -0.0027789499145001173, -0.002686125924810767, -0.0026058040093630552, -0.0025441069155931473, -0.0025017301086336374, -0.0024747420102357864, -0.0024550838861614466, -0.002428855048492551, -0.0023792930878698826, -0.0022908479440957308, -0.0021516450215131044, -0.0019553969614207745, -0.0017043149564415216, -0.0014108530012890697, -0.0010959040373563766, -0.0007857189048081636, -0.0005079315742477775, -0.00029009440913796425, -0.00015435130626428872, -0.00011027540313079953, -0.00015309710579458624, -0.0002686512016225606, -0.00043721080874092877, -0.0006362231215462089, -0.0008425660198554397, -0.0010327589698135853, -0.0011857330100610852, -0.0012879780260846019, -0.0013349199434742332, -0.0013278999831527472, -0.0012707579880952835, -0.001168451039120555, -0.0010273599764332175, -0.000856309721712023, -0.0006665291148237884, -0.00047018390614539385, -0.0002793798048514873, -0.00010747720079962164, 3.451465818216093e-05, 0.00014078669482842088, 0.00021134789858479053, 0.0002515414962545037, 0.0002710227854549885, 0.000278709689155221, 0.0002801076043397188, 0.00027916551334783435, 0.00027927098562940955, 0.0002849730954039842, 0.0003001347940880805, 0.0003290410968475044, 0.0003775969962589443, 0.000451746309408918, 0.0005543524166569114, 0.0006820838898420334, 0.0008287554956041276, 0.0009847311303019524, 0.0011353279696777463, 0.0012624770170077682, 0.0013487699907273054, 0.0013850380200892687, 0.0013737690169364214, 0.0013255970552563667, 0.0012534200213849545, 0.001169694005511701, 0.0010854729916900396, 0.0010097180493175983, 0.0009484824840910733, 0.0009028890053741634, 0.0008723235805518925, 0.0008575182873755693, 0.0008594073005951941, 0.0008750408887863159, 0.000895748904440552, 0.0009109359816648066, 0.0009122479241341352, 0.0008945299778133631, 0.0008588245254941285, 0.0008129089837893844, 0.0007658936083316803, 0.0007228375179693103, 0.0006844414165243506, 0.0006473573157563806, 0.0006077507277950644, 0.0005628237850032747, 0.000513426202815026, 0.0004650930059142411, 0.0004300368018448353, 0.00042616939754225314, 0.00047126319259405136, 0.000579345622099936, 0.0007574008777737617, 0.0010048149852082133, 0.001316242036409676, 0.001680174027569592, 0.002078344114124775, 0.0024852619972079992, 0.0028741909191012383, 0.003221445018425584, 0.0035095680505037308, 0.0037283350247889757, 0.0038765110075473785, 0.0039622168987989426, 0.004001252818852663, 0.004014161881059408, 0.004024138208478689, 0.004053800832480192, 0.004120281897485256, 0.004227939061820507, 0.004366692155599594, 0.004515239968895912, 0.004648142959922552, 0.004742552060633898, 0.004787066951394081, 0.004785609897226095, 0.004753067158162594, 0.004712558817118406, 0.004688352812081575, 0.004696634132415056, 0.004742238204926252, 0.004819600842893124, 0.004915325902402401, 0.005009923130273819, 0.005084536969661713, 0.005127284210175276, 0.005132581107318401, 0.0050966800190508366, 0.005016809795051813, 0.004894997924566269, 0.0047386931255459785, 0.004560884088277817, 0.004377466160804033, 0.004205205012112856, 0.004057095851749182, 0.00393786421045661, 0.003841979894787073, 0.0037526609376072884, 0.0036467791069298983, 0.0035033340100198984, 0.003309225896373391, 0.0030604589264839888, 0.002763281110674143, 0.0024321810342371464, 0.0020869290456175804, 0.0017504279967397451, 0.0014456850476562977, 0.0011919359676539898, 0.0009977214504033327, 0.0008539087139070034, 0.0007373241824097931, 0.000618441088590771, 0.00046752949128858745, 0.0002651088871061802, 8.226063073379919e-06, -0.0002877057995647192, -0.0005957434186711907, -0.0008863477851264179, -0.0011341810459271073, -0.001320751034654677, -0.0014367110561579466, -0.0014828119892627, -0.0014714939752593637, -0.0014240440214052796, -0.0013629950117319822, -0.0013074789894744754, -0.001273258007131517, -0.0012717610225081444, -0.001309953979216516, -0.0013898330507799983, -0.001505931024439633, -0.0016447550151497126, -0.0017872420139610767, -0.001912732026539743, -0.0020043200347572565, -0.0020550331100821495, -0.002069636946544051, -0.002062617102637887, -0.0020549329929053783, -0.002065477892756462, -0.0021064879838377237, -0.002179723000153899, -0.0022775810211896896, -0.002387617016211152, -0.0024945249315351248, -0.002582354936748743, -0.002638279926031828, -0.0026554970536381006, -0.00263313390314579, -0.0025769718922674656, -0.002498053014278412, -0.0024103939067572355, -0.002328772097826004, -0.002267753006890416, -0.002240878064185381, -0.0022540208883583546, -0.002302940934896469, -0.0023745479993522167, -0.0024508091155439615, -0.002512407023459673, -0.002541294088587165, -0.002523438073694706, -0.0024557379074394703, -0.0023484849371016026, -0.0022185449488461018, -0.0020848019048571587, -0.001966811018064618, -0.0018817849922925234, -0.0018382190028205514, -0.0018330520251765847, -0.0018551009707152843, -0.0018892280058935285, -0.0019166909623891115, -0.001918161055073142, -0.0018798649543896317, -0.0017979240510612726, -0.0016782509628683329, -0.0015376630472019315, -0.001396839041262865, -0.0012749549932777882, -0.001186502049677074, -0.0011394090251997113, -0.0011345340171828866, -0.0011669059749692678, -0.001228349981829524, -0.0013081099605187774, -0.0013953810557723045, -0.0014792409492656589, -0.0015494360122829676, -0.001597000053152442, -0.0016167160356417298, -0.001609847997315228, -0.0015824140282347798, -0.0015462780138477683, -0.0015179240144789219, -0.0015108260558918118, -0.0015293279429897666, -0.0015683920355513692, -0.0016155029879882932, -0.001651969039812684, -0.0016554950270801783, -0.001602889969944954, -0.0014736560406163335, -0.0012541810283437371, -0.0009439929272048175, -0.0005585784092545509, -0.00012434560630936176, 0.00032997020753100514, 0.0007783466135151684, 0.0011975329834967852, 0.0015666249673813581, 0.001870727981440723, 0.002104684943333268, 0.0022756229154765606, 0.0023991831112653017, 0.002492319094017148, 0.002567816060036421, 0.002632143907248974, 0.0026860178913921118, 0.0027252871077507734, 0.0027437019161880016, 0.0027351730968803167, 0.0026952619664371014, 0.0026220891159027815, 0.0025180489756166935, 0.0023892309982329607, 0.0022419060114771128, 0.0020800239872187376, 0.001902241026982665, 0.0017032800242304802, 0.0014794720336794853, 0.0012319439556449652, 0.0009668255224823952, 0.0006942041800357401, 0.0004261508001945913, 0.0001752029056660831, -4.6911191020626575e-05, -0.0002306180977029726, -0.00036967749474570155, -0.00046400990686379373, -0.0005226543871685863, -0.0005610662046819925, -0.0005986426258459687, -0.000653476279694587, -0.0007383825141005218, -0.0008607589988969266, -0.0010220949770882726, -0.0012147970264777541, -0.0014243449550122023, -0.0016319929854944348, -0.0018173189600929618, -0.00196004007011652, -0.0020418879576027393, -0.002052428899332881, -0.0019943679217249155, -0.0018779210513457656, -0.001716668950393796, -0.0015249550342559814, -0.001315703964792192, -0.0010979289654642344, -0.0008782822987996042, -0.0006638264749199152, -0.00046201710938476026, -0.00027932680677622557, -0.00012012600200250745, 1.5181150047283154e-05, 0.0001286269980482757, 0.00022225160500966012, 0.00029993339558131993, 0.00036738908966071904, 0.0004284764872863889, 0.0004886130918748677, 0.000554366793949157, 0.0006285370909608901, 0.0007111622835509479, 0.0008025480201467872, 0.0009012711234390736, 0.0010019260225817561, 0.001097199972718954, 0.0011815419420599937, 0.0012511479435488582, 0.0013023309875279665, 0.0013297549448907375, 0.001326023950241506, 0.0012854200322180986, 0.0012062829919159412, 0.001091817975975573, 0.0009486449998803437, 0.000786554825026542, 0.0006182272918522358, 0.00045961569412611425, 0.0003262688114773482, 0.000225555500946939, 0.00015714680193923414, 0.00011855329648824409, 0.0001047948026098311, 0.0001065753967850469, 0.00011214429832762107, 0.00010881549678742886, 8.643411274533719e-05, 3.5988799936603755e-05, -5.026704093324952e-05, -0.00017496860527899116, -0.00033577351132407784, -0.0005266385269351304, -0.0007392321713268757, -0.0009633838781155646, -0.0011876439675688744, -0.0013988990103825927, -0.001582409953698516, -0.001725425012409687, -0.0018207409884780645, -0.001866844017058611, -0.0018673379672691226, -0.0018305130070075393, -0.0017696829745545983, -0.0016986479749903083, -0.0016307990299537778, -0.0015772189944982529, -0.0015439019771292806, -0.0015331630129367113, -0.0015450320206582546, -0.0015758730005472898, -0.0016177779762074351, -0.0016602389514446259, -0.001692158984951675, -0.0017026549903675914, -0.0016856769798323512, -0.00164090096950531, -0.001573677989654243, -0.0014925319701433182, -0.0014063860289752483, -0.0013214580249041319, -0.0012431349605321884, -0.0011760520283132792, -0.001120776985771954, -0.0010749050416052341, -0.0010334739927202463, -0.0009912062669172883, -0.0009418823174200952, -0.0008780207135714591, -0.0007933542947284877, -0.0006849835044704378, -0.0005552283837459981, -0.00041154021164402366, -0.00026532571064308286, -0.0001300824951613322, -1.8108139556716196e-05, 6.274969928199425e-05, 0.00011021840327885002, 0.0001279050047742203, 0.00012440579303074628, 0.00011179529974469915, 0.00010219730029348284, 0.00010761959856608883, 0.00013552300515584648, 0.00018579489551484585, 0.0002517515094950795, 0.00032462889794260263, 0.0003961171896662563, 0.000459331989986822, 0.0005078702815808356, 0.000533349986653775, 0.0005270937108434737, 0.00048463520943187177, 0.0004084892862010747, 0.00030601039179600775, 0.00018777410150505602, 6.597487663384527e-05, -4.986319981981069e-05, -0.000154183799168095, -0.0002443490957375616, -0.0003198813064955175, -0.00038294849218800664, -0.0004361674946267158, -0.00048167150816880167, -0.0005200639134272933, -0.0005531883216463029, -0.0005856358911842108, -0.0006218578782863915, -0.0006664675893262029, -0.0007218124228529632, -0.0007852602284401655, -0.0008510064799338579, -0.0009121578768827021, -0.0009595432784408331, -0.000983558245934546, -0.0009772111661732197, -0.0009379482944495976, -0.0008699268219061196, -0.0007841733167879283, -0.0006922321044839919, -0.0006038972060196102, -0.0005242525949142873, -0.00045185518683865666, -0.0003801664861384779, -0.0003013256937265396, -0.0002091390051646158, -9.828853217186406e-05, 3.532426126184873e-05, 0.00019381579477339983, 0.000375715404516086, 0.000578143575694412, 0.0007959636859595776, 0.001018499955534935, 0.0012295970227569342, 0.0014106399612501264, 0.001547183026559651, 0.0016322929877787828, 0.0016645039431750774, 0.0016477080062031746, 0.0015890629729256034, 0.0014981409767642617, 0.001383833005093038, 0.0012526949867606163, 0.0011075170477852225, 0.0009496128186583519, 0.0007812025141902268, 0.0006045149057172239, 0.00042120370198972523, 0.0002318855986231938, 3.6507750337477773e-05, -0.0001644711010158062, -0.00036952621303498745, -0.0005755507736466825, -0.000777370878495276, -0.0009711651946417987, -0.0011553219519555569, -0.001327318954281509, -0.0014800799544900656, -0.001602598000317812, -0.0016841549659147859, -0.001718249055556953, -0.0017007889691740274, -0.0016293389489874244, -0.001504810992628336, -0.0013330490328371525, -0.0011227020295336843, -0.0008844895055517554, -0.000629876391030848, -0.00037219151272438467, -0.00012478159624151886, 0.0001060600989148952, 0.0003216748882550746, 0.0005264836945571005, 0.0007254512747749686, 0.0009220071951858699, 0.0011180799920111895, 0.0013127910206094384, 0.0015026669716462493, 0.001682159025222063, 0.0018469829810783267, 0.0019967490807175636, 0.0021353759802877903, 0.002266868017613888, 0.002391850110143423, 0.0025089499540627003, 0.002615028992295265, 0.00270474492572248, 0.0027708408888429403, 0.002807680983096361, 0.002811589976772666, 0.002781763905659318, 0.0027193010319024324, 0.0026260900776833296, 0.0025074149016290903, 0.0023725000210106373, 0.00223329896107316, 0.0021015810780227184, 0.001987637020647526, 0.0018998440355062485, 0.001842192024923861, 0.0018116449937224388, 0.0017981460550799966, 0.001786440028809011, 0.0017621919978410006, 0.001715144026093185, 0.0016370819648727775, 0.001518748002126813, 0.001351680955849588, 0.0011334179434925318, 0.0008705465006642044, 0.0005750645068474114, 0.0002623962936922908, -4.8249468818539754e-05, -0.0003354627115186304, -0.0005801938241347671, -0.0007691709906794131, -0.0008956756209954619, -0.000961242476478219, -0.0009745879215188324, -0.00094835419440642, -0.0008996367105282843, -0.0008507964084856212, -0.0008228303049691021, -0.0008319159969687462, -0.0008883090922608972, -0.0009964207420125604, -0.0011553879594430327, -0.0013601910322904587, -0.00159973104018718, -0.0018559140153229237, -0.002104898914694786, -0.0023195119574666023, -0.002476399065926671, -0.002564762020483613, -0.002586446003988385, -0.0025555850006639957, -0.002493994077667594, -0.002424498088657856, -0.0023662219755351543, -0.002335598925128579, -0.0023428569547832012, -0.0023894659243524075, -0.0024716691114008427, -0.0025840098969638348, -0.0027205098886042833, -0.0028708460740745068, -0.0030188939999789, -0.0031474221032112837, -0.00324633507989347, -0.00331537495367229, -0.003358883084729314, -0.0033814560156315565, -0.003386877942830324, -0.003377791028469801, -0.003355171997100115, -0.0033207510132342577, -0.0032813660800457, -0.003245765110477805, -0.003222139086574316, -0.003217794932425022, -0.003239284036681056, -0.003289788030087948, -0.0033677041064947844, -0.003468734910711646, -0.0035858559422194958, -0.0037091190461069345, -0.0038261450827121735, -0.003923994954675436, -0.003991574980318546, -0.004019867163151503, -0.0040034218691289425, -0.003943074028939009, -0.0038457289338111877, -0.0037221249658614397, -0.003583932062610984, -0.0034446679055690765, -0.0033155600540339947, -0.003202053951099515, -0.003103693015873432, -0.0030138608999550343, -0.002923467895016074, -0.0028220880776643753, -0.0026991849299520254, -0.0025468049570918083, -0.002360787009820342, -0.002137154107913375, -0.001870805979706347, -0.0015589749673381448, -0.0012069110525771976, -0.0008303031208924949, -0.0004492427106015384, -8.583990711485967e-05, 0.00023974079522304237, 0.0005141496076248586, 0.0007335470290854573, 0.0009036579867824912, 0.0010391490068286657, 0.0011585609754547477, 0.001277004019357264, 0.0014022040413692594, 0.0015314649790525436, 0.0016575079644098878, 0.0017747159581631422, 0.0018794999923557043, 0.001971327932551503, 0.002055810997262597, 0.002144542057067156, 0.0022506089881062508, 0.002384789986535907, 0.0025504520162940025, 0.0027398481033742428, 0.0029360901098698378, 0.003118193941190839, 0.0032667729537934065, 0.003367228899151087, 0.0034115740563720465, 0.003399183042347431, 0.003337977919727564, 0.003243199083954096, 0.0031324599403887987, 0.003023476107046008, 0.0029277780558913946, 0.002847539959475398, 0.00277962489053607, 0.0027166439685970545, 0.002646141918376088, 0.002554967999458313, 0.0024353149347007275, 0.0022864509373903275, 0.002114363946020603, 0.0019310599891468883, 0.0017529999604448676, 0.001596326008439064, 0.0014715490397065878, 0.001384721021167934, 0.0013386260252445936, 0.0013334830291569233, 0.0013645089929923415, 0.0014191759983077645, 0.001481610001064837, 0.0015406559687107801, 0.0015914899995550513, 0.001631218008697033, 0.001656025997363031, 0.0016626520082354546, 0.0016488659894093871, 0.001612905994988978, 0.0015550019452348351, 0.001477919053286314, 0.0013863580534234643, 0.0012842660071328282, 0.001177879050374031, 0.0010789090301841497, 0.0010023670038208365, 0.0009617524920031428, 0.000967365805990994, 0.0010243869619444013, 0.00113389000762254, 0.001291670952923596, 0.0014867970021441579, 0.0017047059955075383, 0.0019321630243211985, 0.0021595770958811045, 0.002381260972470045, 0.002594158984720707, 0.002795533975586295, 0.0029829060658812523, 0.003155013080686331, 0.0033112019300460815, 0.0034499249886721373, 0.003564526094123721, 0.003643118077889085, 0.0036741408985108137, 0.0036527919583022594, 0.003583855926990509, 0.0034823580645024776, 0.0033673211000859737, 0.003255543066188693, 0.0031551430001854897, 0.0030629211105406284, 0.0029677399434149265, 0.0028541400097310543, 0.0027041349094361067, 0.0024984919000416994, 0.00222244905307889, 0.0018699129577726126, 0.00144409597851336, 0.0009567873203195632, 0.0004272662044968456, -0.00011965440353378654, -0.0006571870762854815, -0.0011608890490606427, -0.0016097580082714558, -0.0019903930369764566, -0.0023050459567457438, -0.0025684640277177095, -0.0028000380843877792, -0.0030167989898473024, -0.0032302918843925, -0.003450097981840372, -0.0036863379646092653, -0.003949216101318598, -0.004246646072715521, -0.0045831347815692425, -0.004960825201123953, -0.005379317793995142, -0.005832098890095949, -0.006305725779384375, -0.0067821890115737915, -0.007237690966576338, -0.007643695920705795, -0.007973662577569485, -0.008211906999349594, -0.008356704376637936, -0.008416485041379929, -0.008407608605921268, -0.008354534395039082, -0.008282857947051525, -0.00821019895374775, -0.008144786581397057, -0.008083033375442028, -0.008008930832147598, -0.007898285053670406, -0.007726228795945644, -0.007476840168237686, -0.007149984128773212, -0.006758925039321184, -0.006322889123111963, -0.005861605051904917, -0.005392603110522032, -0.004929232876747847, -0.004482084885239601, -0.004057846963405609, -0.003659335896372795, -0.003288313979282975, -0.0029430300928652287, -0.0026181871071457863, -0.002307326067239046, -0.0020025840494781733, -0.0016966690309345722, -0.001381134963594377, -0.0010448669781908393, -0.0006778347888030112, -0.00027686660178005695, 0.00015281040396075696, 0.0005939840921200812, 0.0010184720158576965, 0.0013954209862276912, 0.0017015100456774235, 0.0019286050228402019, 0.002083374885842204, 0.0021815448999404907, 0.002241874113678932, 0.002281248103827238, 0.0023089179303497076, 0.0023259210865944624, 0.0023309870157390833, 0.002322085900232196, 0.00229397090151906, 0.0022399660665541887, 0.002154336078092456, 0.002033775905147195, 0.0018773130141198635, 0.0016879889881238341, 0.0014724190114066005, 0.001240230049006641, 0.001002316945232451, 0.0007696687243878841, 0.0005519143887795508, 0.0003588229010347277, 0.00020068249432370067, 8.546801836928353e-05, 1.5189690202532802e-05, -1.6346479242201895e-05, -2.40391291299602e-05, -2.7692989533534274e-05, -4.949951107846573e-05, -0.00010954689787467942, -0.00022143969545140862, -0.0003868475032504648, -0.0005943014984950423, -0.0008260589092969894, -0.0010611870093271136, -0.0012785299913957715, -0.0014633700484409928, -0.0016089429846033454, -0.0017149440245702863, -0.0017875590128824115, -0.0018391900230199099, -0.0018843900179490447, -0.001931641949340701, -0.001980427885428071, -0.0020247451029717922, -0.0020548610482364893, -0.0020624829921871424, -0.0020451790187507868, -0.0020067919977009296, -0.001957912929356098, -0.0019117980264127254, -0.0018759999657049775, -0.0018501660088077188, -0.001830414985306561, -0.00181000295560807, -0.001780199003405869, -0.0017337360186502337, -0.001668476965278387, -0.0015862450236454606, -0.0014906900469213724, -0.0013884160434827209, -0.0012896000407636166, -0.0012041389709338546, -0.0011389759602025151, -0.0010941349901258945, -0.0010620419634506106, -0.0010282440343871713, -0.0009753110934980214, -0.0008855758933350444, -0.0007475307211279869, -0.0005580441793426871, -0.00032073850161395967, -4.517523848335259e-05, 0.00025584478862583637, 0.0005699801258742809, 0.0008884560083970428, 0.001207093009725213, 0.001524023013189435, 0.001836773008108139, 0.0021419739350676537, 0.0024356080684810877, 0.002713118912652135, 0.002971006091684103, 0.003207098925486207, 0.0034206300042569637, 0.0036119678989052773, 0.0037793400697410107, 0.003921835217624903, 0.004042167216539383, 0.004146614111959934, 0.004242647904902697, 0.004336288198828697, 0.004428699146956205, 0.004514344967901707, 0.00458321999758482, 0.00462361192330718, 0.004624534863978624, 0.00457968981936574, 0.00448915408924222, 0.004359889775514603, 0.004203596152365208, 0.0040336898528039455, 0.0038631169591099024, 0.0037034780252724886, 0.0035630210768431425, 0.0034439999144524336, 0.0033426559530198574, 0.0032507660798728466, 0.0031575351022183895, 0.003050497965887189, 0.0029196729883551598, 0.002759861061349511, 0.0025709690526127815, 0.0023578270338475704, 0.002128545893356204, 0.0018952200189232826, 0.001672851969487965, 0.001477641984820366, 0.0013239639811217785, 0.0012210230343043804, 0.0011692040134221315, 0.0011597300181165338, 0.001178878010250628, 0.0012096100253984332, 0.0012319900561124086, 0.0012305090203881264, 0.0011975809466093779, 0.0011300649493932724, 0.0010268089827150106, 0.0008908450836315751, 0.0007307592895813286, 0.0005573396920226514, 0.0003789704933296889, 0.00020042830146849155, 2.1955980628263205e-05, -0.00015894739772193134, -0.00034489919198676944, -0.000538440712261945, -0.0007422477938234806, -0.0009568720124661922, -0.0011788560077548027, -0.0013986179837957025, -0.001600799965672195, -0.0017666990170255303, -0.0018788919551298022, -0.0019234269857406616, -0.0018931720405817032, -0.0017939279787242413, -0.0016435639699921012, -0.001464911038056016, -0.0012800369877368212, -0.0011082109995186329, -0.0009645334212109447, -0.000858534884173423, -0.0007947463891468942, -0.000771604070905596, -0.0007803948828950524, -0.0008070701151154935, -0.0008356688776984811, -0.0008509166073054075, -0.0008406788110733032, -0.0007969518774189055, -0.0007176296203397214, -0.0006044423207640648, -0.0004621584084816277, -0.0002987271873280406, -0.00012464419705793262, 4.8847421567188576e-05, 0.000212602099054493, 0.0003618180053308606, 0.000495683285407722, 0.0006158087053336203, 0.0007268221233971417, 0.0008343762019649148, 0.0009440326248295605, 0.0010591070167720318, 0.0011793229496106505, 0.0012978370068594813, 0.0014012650353834033, 0.001471634954214096, 0.0014906000578776002, 0.0014439619844779372, 0.0013250400079414248, 0.00113601703196764, 0.0008880964014679193, 0.000600990722887218, 0.0002987394982483238, 3.4042859624605626e-06, -0.00026809360133484006, -0.0005077082896605134, -0.0007189444149844348, -0.0009137177257798612, -0.0011077809613198042, -0.001314896042458713, -0.001541013945825398, -0.001783297979272902, -0.0020334171131253242, -0.0022798830177634954, -0.0025096810422837734, -0.002709544962272048, -0.0028681219555437565, -0.00297622405923903, -0.0030257960315793753, -0.0030124750919640064, -0.002938590943813324, -0.002814806066453457, -0.002657335950061679, -0.002483749995008111, -0.0023109340108931065, -0.002152371918782592, -0.002017738064751029, -0.0019129290012642741, -0.0018412109930068254, -0.0018013949738815427, -0.0017874300247058272, -0.0017899960512295365, -0.0017963650170713663, -0.001793042989447713, -0.0017678920412436128, -0.001713008969090879, -0.001629121950827539, -0.0015254650497809052, -0.001415580976754427, -0.0013123450335115194, -0.0012228760169818997, -0.001146181020885706, -0.0010758780408650637, -0.001001426950097084, -0.0009070939267985523, -0.0007767686038278043, -0.0005973331280983984, -0.0003614609013311565, -6.955565186217427e-05, 0.00026855271426029503, 0.0006295741186477244, 0.0009808685863390565, 0.0012847610050812364, 0.0015073210233822465, 0.0016275059897452593, 0.001638098037801683, 0.001545664039440453, 0.0013694519875571132, 0.0011370850261300802, 0.0008800742216408253, 0.000632353825494647, 0.0004262448928784579, 0.00028745768941007555, 0.00022935570450499654, 0.0002499558904673904, 0.00033055979292839766, 0.00043924429337494075, 0.0005394840845838189, 0.0006003694725222886, 0.0005999560817144811, 0.0005268392851576209, 0.00038132211193442345, 0.00017546680464874953, -6.90886881784536e-05, -0.0003252991009503603, -0.0005658441223204136, -0.000769972219131887, -0.0009231470758095384, -0.0010152050526812673, -0.001040876959450543, -0.0009990767575800419, -0.0008934852085076272, -0.0007357746944762766, -0.0005446685245260596, -0.00034151700674556196, -0.00014353319420479238, 4.0015860577113926e-05, 0.00020730039977934211, 0.0003638913040049374, 0.0005165777984075248, 0.0006656580953858793, 0.0008073116187006235, 0.0009363458957523108, 0.0010486639803275466, 0.0011456100037321448, 0.001235045026987791, 0.001329457969404757, 0.0014416410122066736, 0.0015814669895917177, 0.0017562579596415162, 0.0019720839336514473, 0.002232325030490756, 0.0025360509753227234, 0.0028799381107091904, 0.003258436918258667, 0.0036622569896280766, 0.004076369106769562, 0.004483542870730162, 0.004865886177867651, 0.005207246169447899, 0.005495244171470404, 0.005721126217395067, 0.005880128126591444, 0.005974818021059036, 0.006016726139932871, 0.006020353175699711, 0.005999322049319744, 0.005963664967566729, 0.005919413175433874, 0.005868128966540098, 0.005808738060295582, 0.005740842781960964, 0.005665847100317478, 0.005586323793977499, 0.0055038807913661, 0.005415887106209993, 0.005319997202605009, 0.00521805789321661, 0.005113951861858368, 0.005011749919503927, 0.004913088865578175, 0.004815223161131144, 0.004711249843239784, 0.004590513184666634, 0.00443989597260952, 0.004249290097504854, 0.0040154787711799145, 0.0037431030068546534, 0.003444263944402337, 0.0031339048873633146, 0.002829187083989382, 0.0025480680633336306, 0.0023081449326127768, 0.002122909063473344, 0.001998760038986802, 0.0019333510426804423, 0.0019173159962520003, 0.001934592961333692, 0.001965244999155402, 0.0019940100610256195, 0.0020136309321969748, 0.002022413071244955, 0.0020239760633558035, 0.0020273649133741856, 0.0020428579300642014, 0.002076219068840146, 0.00212803203612566, 0.0021922909654676914, 0.002254215069115162, 0.002295524114742875, 0.0023020419757813215, 0.002268702955916524, 0.0022002069745212793, 0.002108243992552161, 0.0020068350713700056, 0.0019121869700029492, 0.0018416079692542553, 0.0018100349698215723, 0.0018267020350322127, 0.0018924650503322482, 0.0020002699457108974, 0.0021363170817494392, 0.0022811470553278923, 0.002415322931483388, 0.002525168005377054, 0.002605103887617588, 0.002655147109180689, 0.0026752410922199488, 0.0026656200643628836, 0.002631187904626131, 0.0025838869623839855, 0.002543604001402855, 0.0025356560945510864, 0.002583246910944581, 0.00270085409283638, 0.002891805022954941, 0.003147735958918929, 0.0034509170800447464, 0.003778683952987194, 0.004106373991817236, 0.004411404021084309, 0.004676343873143196, 0.004892689175903797, 0.00506218895316124, 0.005194495897740126, 0.0053024268709123135, 0.005399329122155905, 0.00549562182277441, 0.005597278010100126, 0.005705248098820448, 0.005818199831992388, 0.005934472195804119, 0.006050652824342251, 0.006162305828183889, 0.006267144810408354, 0.0063653611578047276, 0.0064598871394991875, 0.006554312072694302, 0.0066502890549600124, 0.006745967082679272, 0.006837932858616114, 0.006920748855918646, 0.006985009182244539, 0.0070206038653850555, 0.007018938194960356, 0.006974439136683941, 0.0068835909478366375, 0.0067452359944581985, 0.0065584671683609486, 0.006321968976408243, 0.006032933946698904, 0.005687486845999956, 0.0052836379036307335, 0.004822460003197193, 0.0043106297962367535, 0.003761789994314313, 0.0031934620346874, 0.0026247058995068073, 0.002070588991045952, 0.0015445699682459235, 0.0010580930393189192, 0.0006196323083713651, 0.00023201419389806688, -0.00010702150029828772, -0.0004029149131383747, -0.00066713138949126, -0.0009157439926639199, -0.0011660140007734299, -0.0014372499426826835, -0.0017463569529354572, -0.002102358965203166, -0.002504460047930479, -0.002944381907582283, -0.0034088410902768373, -0.003881443990394473, -0.00434502400457859, -0.004786132834851742, -0.005198535043746233, -0.005581376142799854, -0.005935798864811659, -0.006262606009840965, -0.006564638111740351, -0.006847260054200888, -0.007118651177734137, -0.007388107944279909, -0.0076631479896605015, -0.007945594377815723, -0.008229791186749935, -0.008507048711180687, -0.008769705891609192, -0.009010730311274529, -0.009223440662026405, -0.009402954019606113, -0.009548226371407509, -0.00966173317283392, -0.00974742416292429, -0.009806253015995026, -0.00983412191271782, -0.009819920174777508, -0.009749224409461021, -0.009610144421458244, -0.009396951645612717, -0.009108610451221466, -0.008746502920985222, -0.008315451443195343, -0.007825386710464954, -0.007287180982530117, -0.0067101651802659035, -0.006101899780333042, -0.005469464231282473, -0.004820690024644136, -0.0041648028418421745, -0.003507267916575074, -0.002847184892743826, -0.0021790550090372562, -0.0014998669503256679, -0.0008134787785820663, -0.00012944420450367033, 0.0005421835812740028, 0.0011943669524043798, 0.0018243519589304924, 0.0024339270312339067, 0.0030305141117423773, 0.003622734919190407, 0.004220934119075537, 0.0048369900323450565, 0.005477935075759888, 0.00614567007869482, 0.006835910025984049, 0.0075357528403401375, 0.008227239362895489, 0.008891184814274311, 0.009509272873401642, 0.010069009847939014, 0.010564870201051235, 0.010996519587934017, 0.011370079591870308, 0.01169470977038145, 0.0119825704023242, 0.012246490456163883, 0.012498630210757256, 0.012747109867632389, 0.012996019795536995, 0.013245549984276295, 0.01349152997136116, 0.01372515968978405, 0.013933369889855385, 0.014101560227572918, 0.014216500334441662, 0.01426582969725132, 0.014241700060665607, 0.014144199900329113, 0.013979869894683361, 0.01375959999859333, 0.013499969616532326, 0.013224230147898197, 0.01295814011245966, 0.012724170461297035, 0.01253926008939743, 0.012412579730153084, 0.012341800145804882, 0.012313899584114552, 0.012311359867453575, 0.012314469553530216, 0.012302929535508156, 0.012257089838385582, 0.012161660008132458, 0.01200832985341549, 0.011793759651482105, 0.011518679559230804, 0.011186059564352036, 0.010799949988722801, 0.010367419570684433, 0.009897344745695591, 0.009399556554853916, 0.008885572664439678, 0.008368486538529396, 0.007862196303904057, 0.007380775175988674, 0.006937054917216301, 0.006543263792991638, 0.006209581159055233, 0.005941040813922882, 0.005737750791013241, 0.005592070985585451, 0.005487979855388403, 0.00540416082367301, 0.005320780910551548, 0.005224859807640314, 0.005112166982144117, 0.004985167179256678, 0.004849660210311413, 0.004714571870863438, 0.004589767195284367, 0.0044821929186582565, 0.0043964870274066925, 0.004332929849624634, 0.004285584203898907, 0.004246924072504044, 0.0042117987759411335, 0.004177155904471874, 0.00414004921913147, 0.0040960488840937614, 0.004043239168822765, 0.003982251044362783, 0.00391306122764945, 0.0038354520220309496, 0.0037505680229514837, 0.003658897941932082, 0.003558466909453273, 0.0034457119181752205, 0.003317934926599264, 0.0031784470193088055, 0.0030393400229513645, 0.002917258068919182, 0.002825909061357379, 0.0027710290160030127, 0.00274566188454628, 0.002734122099354863, 0.002720806049183011, 0.0026944910641759634, 0.0026509889867156744, 0.0025915000587701797, 0.002521608956158161, 0.0024462419096380472, 0.0023670790251344442, 0.0022873610723763704, 0.002214543055742979, 0.0021589230746030807, 0.0021292229648679495, 0.0021291410084813833, 0.0021578141022473574, 0.0022065620869398117, 0.0022640249226242304, 0.002318895887583494, 0.0023634040262550116, 0.002393866889178753, 0.002407236024737358, 0.002398259937763214, 0.0023635278921574354, 0.002304073888808489, 0.002223158022388816, 0.002122775884345174, 0.0020008638966828585, 0.0018514690455049276, 0.0016699220286682248, 0.001455942983739078, 0.0012150000547990203, 0.0009543811902403831, 0.0006807327154092491, 0.0003958886954933405, 9.673940803622827e-05, -0.00022260799596551806, -0.000566198315937072, -0.000932767172344029, -0.0013121579540893435, -0.0016880870098248124, -0.0020469028968364, -0.002382538979873061, -0.0026972759515047073, -0.003002203069627285, -0.003312269924208522, -0.0036411790642887354, -0.0039964709430933, -0.0043776631355285645, -0.0047789160162210464, -0.005193389020860195, -0.005614881869405508, -0.006039538886398077, -0.006464710924774408, -0.006886700168251991, -0.007300242781639099, -0.007698834873735905, -0.00807594507932663, -0.008426636457443237, -0.008745864033699036, -0.009029180742800236, -0.009273082949221134, -0.00947624258697033, -0.009639020077884197, -0.009764974936842918, -0.009861081838607788, -0.009935717098414898, -0.009994049556553364, -0.010036850348114967, -0.0100595997646451, -0.01005444023758173, -0.010012869723141193, -0.009930809028446674, -0.009806896559894085, -0.009640549309551716, -0.009432381018996239, -0.009185973554849625, -0.008906558156013489, -0.008599908091127872, -0.00827121827751398, -0.007925355806946754, -0.007569558918476105, -0.007212852127850056, -0.006865331903100014, -0.006535375956445932, -0.006227036938071251, -0.005936893168836832, -0.005655048880726099, -0.005367112811654806, -0.005060058087110519, -0.004725491162389517, -0.004359629936516285, -0.003964785020798445, -0.0035480959340929985, -0.003120314097031951, -0.0026934209745377302, -0.002275790087878704, -0.0018704090034589171, -0.001474812044762075, -0.0010832080151885748, -0.0006901427987031639, -0.0002921285922639072, 0.00011136109969811514, 0.0005176031263545156, 0.0009214027086272836, 0.0013180860551074147, 0.0017029179725795984, 0.0020697179716080427, 0.0024127939250320196, 0.0027273460291326046, 0.0030125079210847616, 0.0032715050037950277, 0.0035104460548609495, 0.0037379050627350807, 0.003961999900639057, 0.004188817925751209, 0.004418062046170235, 0.0046403370797634125, 0.004841662012040615, 0.005007944069802761, 0.005126943811774254, 0.005189383868128061, 0.0051930188201367855, 0.005143377929925919, 0.005051991902291775, 0.004931692034006119, 0.004795437213033438, 0.0046575628221035, 0.004533545114099979, 0.004437536932528019, 0.004375950898975134, 0.00434829480946064, 0.004348189104348421, 0.004364699125289917, 0.004382520914077759, 0.004383911844342947, 0.004351910203695297, 0.004275375045835972, 0.004153664223849773, 0.003997423220425844, 0.0038245979230850935, 0.0036528799682855606, 0.0034941979683935642, 0.0033568849321454763, 0.0032431790605187416, 0.0031462740153074265, 0.0030534309335052967, 0.0029511249158531427, 0.002829700941219926, 0.00268470193259418, 0.0025194529443979263, 0.002342470921576023, 0.0021640239283442497, 0.0019955190364271402, 0.001846382045187056, 0.0017247849609702826, 0.0016369540244340897, 0.0015879239654168487, 0.0015807809541001916, 0.0016143260290846229, 0.0016810100059956312, 0.0017713740235194564, 0.001877355040051043, 0.001991007011383772, 0.002103762933984399, 0.002203444018959999, 0.0022772829979658127, 0.00232030195184052, 0.0023370690178126097, 0.002339283935725689, 0.002342736115679145, 0.0023629639763385057, 0.0024076360277831554, 0.002473738044500351, 0.002552479039877653, 0.002634611912071705, 0.0027139869052916765, 0.002788648009300232, 0.00285815610550344, 0.0029194920789450407, 0.0029699180740863085, 0.003010963089764118, 0.0030474350787699223, 0.003086400916799903, 0.0031329370103776455, 0.003185991896316409, 0.0032408449333161116, 0.0032897840719670057, 0.0033210960682481527, 0.0033231729175895452, 0.0032917559146881104, 0.003232768038287759, 0.003160947933793068, 0.003095038002356887, 0.0030509880743920803, 0.0030413460917770863, 0.003072175895795226, 0.003137272084131837, 0.0032212489750236273, 0.0033067860640585423, 0.003379873000085354, 0.003433461068198085, 0.003468492068350315, 0.0034914559219032526, 0.0035079719964414835, 0.0035140831023454666, 0.003495957935228944, 0.0034370229113847017, 0.0033238930627703667, 0.003150280099362135, 0.0029171069618314505, 0.002633723895996809, 0.002315457910299301, 0.0019791850354522467, 0.0016394329722970724, 0.001306519960053265, 0.0009856604738160968, 0.0006785431760363281, 0.00038491509621962905, 0.00010285819735145196, -0.00017353059956803918, -0.0004543031973298639, -0.0007504784734919667, -0.0010705660097301006, -0.0014201570302248001, -0.0017998659750446677, -0.0022028249222785234, -0.002616852056235075, -0.0030292810406535864, -0.0034282319247722626, -0.003806319087743759, -0.004160313867032528, -0.00449081277474761, -0.004801108036190271, -0.005092334933578968, -0.005364344920963049, -0.005615551955997944, -0.005842986982315779, -0.006043316796422005, -0.006209651939570904, -0.006331561133265495, -0.00639935489743948, -0.006410065107047558, -0.006370450835675001, -0.0062963152304291725, -0.006209229119122028, -0.00613254914060235, -0.006088939029723406, -0.00609517190605402, -0.006159528158605099, -0.006278377026319504, -0.0064320918172597885, -0.006589776836335659, -0.006718926131725311, -0.006794644054025412, -0.006803419906646013, -0.006744973827153444, -0.006630016025155783, -0.00647530285641551, -0.0062972609885036945, -0.006108323112130165, -0.005914962850511074, -0.005720431916415691, -0.0055283741094172, -0.005342139862477779, -0.0051647680811584, -0.004995785187929869, -0.004830779042094946, -0.004663762170821428, -0.004485717974603176, -0.004288321826606989, -0.004069441929459572, -0.0038336319848895073, -0.003593205939978361, -0.0033629960380494595, -0.00315546290948987, -0.002978347009047866, -0.0028340849094092846, -0.0027197650633752346, -0.0026241960003972054, -0.0025291999336332083, -0.002417593030259013, -0.0022796939592808485, -0.0021144640631973743, -0.001926771947182715, -0.0017245820490643382, -0.001518651028163731, -0.0013208880554884672, -0.0011416670167818666, -0.0009876854019239545, -0.0008608272764831781, -0.0007592710899189115, -0.0006782065029256046, -0.0006121523911133409, -0.0005569867207668722, -0.0005077074165455997, -0.000458219408756122, -0.0004028510011266917, -0.00033728161361068487, -0.000258877087617293, -0.00016820429300423712, -7.259339326992631e-05, 1.7039550584740937e-05, 9.125103679252788e-05, 0.000143904093420133, 0.00017192830273415893, 0.00017750280676409602, 0.00016713139484636486, 0.00014792020374443382, 0.0001288091007154435, 0.00012080860324203968, 0.00013569889415521175, 0.00018475379329174757, 0.0002768666890915483, 0.0004152496112510562, 0.0005936981760896742, 0.000798009627033025, 0.001011030049994588, 0.001214894000440836, 0.0013957699993625283, 0.0015464660245925188, 0.0016639940440654755, 0.0017487469594925642, 0.0018047570483759046, 0.0018411270575597882, 0.0018688089912757277, 0.0018952039536088705, 0.0019244930008426309, 0.0019570160657167435, 0.001986372983083129, 0.0020029330626130104, 0.0019979849457740784, 0.001962515991181135, 0.0018891670042648911, 0.001773020951077342, 0.001608793972991407, 0.001391818979755044, 0.001127535942941904, 0.0008328750845976174, 0.0005291471024975181, 0.00023280520690605044, -4.8630328819854185e-05, -0.000314392993459478, -0.0005650697858072817, -0.0008018807275220752, -0.0010294020175933838, -0.0012574000284075737, -0.0015006009489297867, -0.0017754669534042478, -0.0020971139892935753, -0.0024766060523688793, -0.002917506033554673, -0.0034170779399573803, -0.003965157084167004, -0.004544543102383614, -0.005133249796926975, -0.005709891207516193, -0.006254600826650858, -0.006752382963895798, -0.007198721170425415, -0.007599459029734135, -0.00796640757471323, -0.008314530365169048, -0.008655743673443794, -0.008997838944196701, -0.009347187355160713, -0.009708059020340443, -0.0100786704570055, -0.010449649766087532, -0.010806519538164139, -0.011136299930512905, -0.011431010439991951, -0.011688780039548874, -0.011912080459296703, -0.01210705004632473, -0.012283430434763432, -0.012451940216124058, -0.012621560133993626, -0.012795659713447094, -0.012969809584319592, -0.013133250176906586, -0.013270679861307144, -0.013368530198931694, -0.013420309871435165, -0.01342542003840208, -0.013386170379817486, -0.013308409601449966, -0.01320314034819603, -0.013083660043776035, -0.012961549684405327, -0.01284439954906702, -0.012736259959638119, -0.012641320005059242, -0.012565620243549347, -0.012514130212366581, -0.012488390319049358, -0.012486210092902184, -0.012500029988586903, -0.012515770271420479, -0.012514140456914902, -0.012476439587771893, -0.01238980982452631, -0.012247810140252113, -0.012052569538354874, -0.011813949793577194, -0.011546489782631397, -0.011267789639532566, -0.010995959863066673, -0.010747220367193222, -0.010532010346651077, -0.010352489538490772, -0.010203770361840725, -0.010075319558382034, -0.009956154972314835, -0.009840983897447586, -0.009728960692882538, -0.009621135890483856, -0.009519827552139759, -0.009425166994333267, -0.009333296678960323, -0.009237712249159813, -0.009131267666816711, -0.009009165689349174, -0.008871455676853657, -0.008718300610780716, -0.008546627126634121, -0.008350462652742863, -0.008125100284814835, -0.007868344895541668, -0.007581876125186682, -0.007271017879247665, -0.006946350913494825, -0.006622299086302519, -0.0063110701739788055, -0.006019121035933495, -0.005749811884015799, -0.005504886154085398, -0.005279767792671919, -0.0050647081807255745, -0.004850063938647509, -0.004628259222954512, -0.00439971499145031, -0.004170806147158146, -0.003949242178350687, -0.0037449148949235678, -0.0035642508883029222, -0.0034079840406775475, -0.0032744070049375296, -0.0031627670396119356, -0.003071052022278309, -0.0029941119719296694, -0.002922849962487817, -0.0028473129495978355, -0.0027600999455899, -0.0026557259261608124, -0.0025324830785393715, -0.002393689937889576, -0.002248764969408512, -0.0021119210869073868, -0.00200231303460896, -0.0019399479497224092, -0.001939216977916658, -0.002003544010221958, -0.0021225051023066044, -0.002275029895827174, -0.002436039038002491, -0.002583703026175499, -0.002703645033761859, -0.002789566060528159, -0.0028448670636862516, -0.002880603075027466, -0.002913753967732191, -0.00296319299377501, -0.0030441461130976677, -0.0031650778837502003, -0.003324927994981408, -0.0035131049808114767, -0.003710479009896517, -0.003893160028383136, -0.004039534833282232, -0.004133870825171471, -0.004169931169599295, -0.004149565007537603, -0.004081416875123978, -0.003979548811912537, -0.0038589381147176027, -0.003732467070221901, -0.0036110179498791695, -0.0035010259598493576, -0.0034019749145954847, -0.003309423103928566, -0.0032173621002584696, -0.0031194020994007587, -0.003008676925674081, -0.0028800300788134336, -0.0027313579339534044, -0.0025640069507062435, -0.0023816379252821207, -0.0021922860760241747, -0.002010788070037961, -0.0018534660339355469, -0.0017324560321867466, -0.0016530259745195508, -0.0016144539695233107, -0.0016158079961314797, -0.0016573929460719228, -0.0017376550240442157, -0.0018498320132493973, -0.0019813459366559982, -0.0021158899180591106, -0.002237635897472501, -0.0023362699430435896, -0.0024087210185825825, -0.002461961004883051, -0.0025075620505958796, -0.00255708210170269, -0.002622236032038927, -0.00271024601534009, -0.002816590014845133, -0.0029285980854183435, -0.0030340710654854774, -0.003124343929812312, -0.003193550044670701, -0.003239104989916086, -0.003266091924160719, -0.0032910320442169905, -0.003334284061565995, -0.003410309087485075, -0.0035244629252701998, -0.0036725751124322414, -0.0038446190301328897, -0.004030573181807995, -0.004221939016133547, -0.004411202855408192, -0.004590920172631741, -0.004754514899104834, -0.0048984079621732235, -0.005019187927246094, -0.005112621001899242, -0.005173829849809408, -0.005198341794312, -0.005188093055039644, -0.005149884149432182, -0.00509251793846488, -0.005025617778301239, -0.004956407006829977, -0.004885942209511995, -0.0048114219680428505, -0.004726840183138847, -0.004625645000487566, -0.004504707176238298, -0.004363492131233215, -0.004206082783639431, -0.004044513218104839, -0.0038930769078433514, -0.0037614579778164625, -0.0036526869516819715, -0.0035625179298222065, -0.003480887971818447, -0.003397297114133835, -0.0033036749809980392, -0.0031954480800777674, -0.003070523962378502, -0.0029300409369170666, -0.002775938017293811, -0.002610159106552601, -0.0024360809475183487, -0.002256050007417798, -0.002070886082947254, -0.0018837129464372993, -0.0017010070150718093, -0.0015301259700208902, -0.0013774520484730601, -0.001248082029633224, -0.0011452080216258764, -0.0010673130163922906, -0.0010059180203825235, -0.0009511542739346623, -0.0008978457772172987, -0.0008439347730018198, -0.0007872263086028397, -0.0007256155950017273, -0.0006624542875215411, -0.0006074085831642151, -0.0005708792014047503, -0.0005595554248429835, -0.0005749791744165123, -0.0006156350718811154, -0.0006774667999707162, -0.0007547112181782722, -0.0008413243922404945, -0.0009341876721009612, -0.0010345550253987312, -0.0011426130076870322, -0.0012538139708340168, -0.00135976099409163, -0.0014516180381178856, -0.0015218850458040833, -0.0015673850430175662, -0.0015918869758024812, -0.0016019030008465052, -0.0016032529529184103, -0.0015998140443116426, -0.001595771056599915, -0.001596627989783883, -0.001608990947715938, -0.001640742993913591, -0.0016958119813352823, -0.0017714600544422865, -0.0018598289461806417, -0.0019514349987730384, -0.002036816906183958, -0.002108108950778842, -0.0021601140033453703, -0.0021891500800848007, -0.002192375948652625, -0.002171587897464633, -0.0021330108866095543, -0.002083271974697709, -0.0020272540859878063, -0.0019644969142973423, -0.0018885909812524915, -0.0017901810351759195, -0.0016630409518256783, -0.00150944699998945, -0.0013406709767878056, -0.001173458993434906, -0.001024447032250464, -0.0009052125969901681, -0.0008206223137676716, -0.0007679712143726647, -0.0007379304151982069, -0.0007213226053863764, -0.0007117210770957172, -0.000703744706697762, -0.0006930637173354626, -0.0006750925094820559, -0.000646802072878927, -0.0006047873175702989, -0.0005458511877804995, -0.00047045270912349224, -0.00037880989839322865, -0.0002696540905162692, -0.0001450475974706933, -8.192673703888431e-06, 0.00013654360373038799, 0.0002826566924341023, 0.0004213603970129043, 0.000541707209777087, 0.0006337382947094738, 0.0006891777156852186, 0.0007037225877866149, 0.000677798583637923, 0.0006163808866403997, 0.0005277632735669613, 0.0004255244857631624, 0.0003285713028162718, 0.00025690390611998737, 0.00022996739426162094, 0.00026227300986647606, 0.0003597679897211492, 0.0005193910910747945, 0.0007292312802746892, 0.0009710824815556407, 0.0012220590142533183, 0.001457393984310329, 0.0016512159490957856, 0.0017784129595384002, 0.0018212150316685438, 0.0017730649560689926, 0.001640788046643138, 0.0014434129698202014, 0.0012048729695379734, 0.0009495610138401389, 0.0007025497034192085, 0.00048485881416127086, 0.00030803069239482284, 0.00017599589773453772, 8.671209798194468e-05, 3.2667321647750214e-05, 6.150215085654054e-06, 2.4302130441355985e-06, 2.1403089704108424e-05, 6.716873758705333e-05, 0.00014303300122264773, 0.0002478570968378335, 0.00037716238875873387, 0.0005229582893662155, 0.0006706488202326, 0.0008049156749621034, 0.0009139569010585546, 0.0009899671422317624, 0.0010326739866286516, 0.0010498049668967724, 0.0010545389959588647, 0.0010608519660308957, 0.0010802870383486152, 0.0011225870111957192, 0.0011961020063608885, 0.0013047880493104458, 0.0014449319569393992, 0.001605179044418037, 0.00177122897002846, 0.0019281499553471804, 0.002058529993519187, 0.0021449080668389797, 0.0021747120190411806, 0.002141068922355771, 0.002044535940513015, 0.0018957259599119425, 0.001710255048237741, 0.0015061870217323303, 0.0013010710244998336, 0.001108511001802981, 0.000941339589189738, 0.0008126230095513165, 0.0007320825825445354, 0.0007007485837675631, 0.0007099650101736188, 0.0007438390166498721, 0.0007799789891578257, 0.0007958610076457262, 0.0007724144961684942, 0.0006960337050259113, 0.0005585079779848456, 0.0003573326102923602, 9.432250953977928e-05, -0.00022563509992323816, -0.0005955903907306492, -0.0010057060280814767, -0.0014428369468078017, -0.001892969012260437, -0.0023425340186804533, -0.002779050962999463, -0.0031888450030237436, -0.003558153985068202, -0.0038755880668759346, -0.004131391178816557, -0.004320091102272272, -0.004443233832716942, -0.004508771933615208, -0.0045296791940927505, -0.004520094953477383, -0.0044950018636882305, -0.004468029830604792, -0.004449322819709778, -0.004441247787326574, -0.0044372049160301685, -0.00442697387188673, -0.004399500787258148, -0.004344393033534288, -0.004251592792570591, -0.004111690912395716, -0.003914679866284132, -0.003650663886219263, -0.0033146371133625507, -0.002908505965024233, -0.0024447920732200146, -0.0019420860335230827, -0.0014202829916030169, -0.0008999393903650343, -0.00039771199226379395, 7.909222040325403e-05, 0.0005328687257133424, 0.000973832793533802, 0.0014133340446278453, 0.0018581999465823174, 0.0023100480902940035, 0.0027668699622154236, 0.003225587075576186, 0.0036840930115431547, 0.004139801021665335, 0.0045910668559372425, 0.005037651862949133, 0.005481052212417126, 0.005922514013946056, 0.006363116204738617, 0.006800754927098751, 0.007227317895740271, 0.007631284184753895, 0.007999296300113201, 0.00831853412091732, 0.008581230416893959, 0.008786613121628761, 0.008938360959291458, 0.009039762429893017, 0.009093793109059334, 0.00910183135420084, 0.009061533957719803, 0.00897113885730505, 0.008837065659463406, 0.00867411307990551, 0.008502417244017124, 0.008342942222952843, 0.008212856017053127, 0.00811980664730072, 0.008062968030571938, 0.008032778277993202, 0.008015918545424938, 0.007999145425856113, 0.00796904880553484, 0.007915172725915909, 0.007830264046788216, 0.007708284072577953, 0.0075439452193677425, 0.007334270980209112, 0.007082223892211914, 0.006797824986279011, 0.006494069006294012, 0.006182708777487278, 0.00587125588208437, 0.005564408842474222, 0.005266963038593531, 0.004982862155884504, 0.004711740184575319, 0.004450513981282711, 0.004199921153485775, 0.003967017866671085, 0.0037611129228025675, 0.003588794032111764, 0.0034517140593379736, 0.0033452999778091908, 0.0032598080579191446, 0.0031841639429330826, 0.003109823912382126, 0.003032421926036477, 0.0029489139560610056, 0.0028542550280690193, 0.0027432849165052176, 0.0026149291079491377, 0.002472108928486705, 0.0023221969604492188, 0.0021756100468337536, 0.002043151995167136, 0.0019327809568494558, 0.0018450800562277436, 0.0017754039727151394, 0.0017153799999505281, 0.0016555089969187975, 0.001590196043252945, 0.0015192539431154728, 0.0014469960005953908, 0.0013813090045005083, 0.001331927953287959, 0.0013103580567985773, 0.001328191952779889, 0.0013938939664512873, 0.0015107450308278203, 0.0016756339464336634, 0.0018791770562529564, 0.0021059629507362843, 0.002336215926334262, 0.0025476529262959957, 0.0027188649401068687, 0.0028321780264377594, 0.002879591891542077, 0.002866932889446616, 0.0028121930081397295, 0.0027370809111744165, 0.0026589669287204742, 0.0025891039986163378, 0.002534278901293874, 0.002497680950909853, 0.0024785620626062155, 0.002473666099831462, 0.00247652898542583, 0.002479379065334797, 0.002472291002050042, 0.002447328995913267, 0.0024016539100557566, 0.0023347269743680954, 0.0022470129188150167, 0.002138399053364992, 0.0020078159868717194, 0.0018529120134189725, 0.0016735800309106708, 0.0014737709425389767, 0.0012593020219355822, 0.001036279951222241, 0.0008128226036205888, 0.0006003823946230114, 0.00040980649646371603, 0.0002466281002853066, 0.00011536930105648935, 2.316549034730997e-05, -2.2068930775276385e-05, -1.6113239325932227e-05, 4.033227014588192e-05, 0.00013857059821020812, 0.00026207760674878955, 0.00039055111119523644, 0.0005028549931012094, 0.0005806757835671306, 0.0006108718807809055, 0.0005880288081243634, 0.0005133150261826813, 0.0003930166130885482, 0.00023637519916519523, 5.56960585527122e-05, -0.00013475739979185164, -0.0003219053032808006, -0.0004939478822052479, -0.0006414111121557653, -0.0007586764986626804, -0.0008452818728983402, -0.0009043944883160293, -0.0009422341827303171, -0.0009662494994699955, -0.0009809701004996896, -0.0009875275427475572, -0.000982989906333387, -0.0009623471996746957, -0.0009189696866087615, -0.0008443212136626244, -0.0007316689006984234, -0.0005779530038125813, -0.0003853210946545005, -0.00016048259567469358, 8.981425344245508e-05, 0.0003618795017246157, 0.0006517810979858041, 0.0009534551063552499, 0.001260005054064095, 0.0015621980419382453, 0.0018487479537725449, 0.0021074959076941013, 0.0023290920071303844, 0.0025089539121836424, 0.0026510499883443117, 0.0027681849896907806, 0.0028783311136066914, 0.002998894080519676, 0.003141202963888645, 0.003308757906779647, 0.0034990650601685047, 0.003705003997310996, 0.003917701076716185, 0.00412733806297183, 0.004326287191361189, 0.00451052887365222, 0.0046809022314846516, 0.004841352812945843, 0.004994256887584925, 0.005138772074133158, 0.005271303001791239, 0.0053890058770775795, 0.005490365903824568, 0.005573534872382879, 0.005635897163301706, 0.00567530607804656, 0.0056905727833509445, 0.005680808797478676, 0.005647038109600544, 0.005592823028564453, 0.005521180108189583, 0.005434543825685978, 0.00533660314977169, 0.00523492693901062, 0.005139679182320833, 0.005058011040091515, 0.004992487840354443, 0.004940862767398357, 0.004897321108728647, 0.004855656065046787, 0.0048093670047819614, 0.004750499036163092, 0.004673123825341463, 0.0045758080668747425, 0.004462142009288073, 0.00433753477409482, 0.00420565577223897, 0.004069063812494278, 0.003930165898054838, 0.003789633046835661, 0.003643869888037443, 0.003487502923235297, 0.003316927934065461, 0.0031331030186265707, 0.0029404188971966505, 0.0027421650011092424, 0.0025394039694219828, 0.002331281080842018, 0.0021173530258238316, 0.0019030480179935694, 0.0016989270225167274, 0.0015146649675443769, 0.0013550779549404979, 0.001219470053911209, 0.0011039749952033162, 0.0010052230209112167, 0.0009213663870468736, 0.0008534207008779049, 0.0008040759130381048, 0.0007743831956759095, 0.0007632978959009051, 0.0007686304743401706, 0.0007875091978348792, 0.0008161527221091092, 0.0008492611232213676, 0.0008830424048937857, 0.0009148954995907843, 0.0009439697023481131, 0.0009734318009577692, 0.0010075160535052419, 0.0010520699433982372, 0.00111356598790735, 0.0011980249546468258, 0.0013088600244373083, 0.001446272013708949, 0.0016068919794633985, 0.0017854500329121947, 0.00197502295486629, 0.002168710110709071, 0.002362149069085717, 0.002554526086896658, 0.0027461729478091, 0.002937332959845662, 0.0031308759935200214, 0.003331755055114627, 0.0035451429430395365, 0.003774269949644804, 0.004017564933747053, 0.004267462063580751, 0.004511686973273754, 0.004739081021398306, 0.004942989908158779, 0.005121518857777119, 0.005277330055832863, 0.005415314808487892, 0.005539541132748127, 0.005650804843753576, 0.005747622810304165, 0.005826938897371292, 0.005884876009076834, 0.005917664151638746, 0.005924123805016279, 0.0059051369316875935, 0.005861962214112282, 0.0057991608045995235, 0.005725201219320297, 0.005648986902087927, 0.005579385906457901, 0.0055258069187402725, 0.0054931980557739735, 0.005476744845509529, 0.005461518187075853, 0.005431949160993099, 0.005377442110329866, 0.005295062903314829, 0.005188080947846174, 0.005063352175056934, 0.0049309819005429745, 0.004804819822311401, 0.004699151962995529, 0.004621861968189478, 0.004573922138661146, 0.004549869801849127, 0.004540698137134314, 0.004536367952823639, 0.004529075231403112, 0.004513384774327278, 0.004483213182538748, 0.004435336217284203, 0.00437061907723546, 0.004292875062674284, 0.004205501172691584, 0.004107731860131025, 0.003997073974460363, 0.0038693819660693407, 0.0037230600137263536, 0.0035626220051199198, 0.003399013075977564, 0.0032468580175191164, 0.003119251923635602, 0.0030247881077229977, 0.0029641129076480865, 0.002929819980636239, 0.002910858951508999, 0.0028957671020179987, 0.0028741289861500263, 0.002838843036442995, 0.0027872170321643353, 0.0027209899853914976, 0.002646984066814184, 0.0025765320751816034, 0.0025237121153622866, 0.0025005401112139225, 0.0025118389166891575, 0.0025572380982339382, 0.002631101058796048, 0.0027270540595054626, 0.0028405480552464724, 0.0029692118987441063, 0.0031106879469007254, 0.003260438097640872, 0.0034134311135858297, 0.003566707018762827, 0.0037199389189481735, 0.0038741850294172764, 0.004032679833471775, 0.004199779126793146, 0.004380769096314907, 0.004578916821628809, 0.00479357922449708, 0.005022372119128704, 0.005260452162474394, 0.005500609055161476, 0.005733763799071312, 0.005951539147645235, 0.006148323882371187, 0.006320131942629814, 0.00646525714546442, 0.006581998895853758, 0.00666843680664897, 0.006721861194819212, 0.006739141885191202, 0.006721110083162785, 0.0066749220713973045, 0.006613447796553373, 0.006551964208483696, 0.006505434866994619, 0.006484644021838903, 0.006494778208434582, 0.006535928230732679, 0.006600281223654747, 0.0066734920255839825, 0.006736829876899719, 0.006773056928068399, 0.006770369131118059, 0.00672175595536828, 0.006623751949518919, 0.006475450005382299, 0.006277712062001228, 0.006031541153788567, 0.005737788043916225, 0.005398537032306194, 0.005017717834562063, 0.004601743072271347, 0.004159621894359589, 0.0037021159660071135, 0.003241030965000391, 0.0027872829232364893, 0.0023451519664376974, 0.0019108799751847982, 0.001477023004554212, 0.0010369770461693406, 0.0005883955745957792, 0.00013259099796414375, -0.00032880270737223327, -0.0007934579043649137, -0.0012596610467880964, -0.0017265330534428358, -0.002194642089307308, -0.002666329964995384, -0.003145888913422823, -0.0036354910116642714, -0.004134933929890394, -0.004640774801373482, -0.005147982854396105, -0.005651100073009729, -0.006142470054328442, -0.006613635923713446, -0.007057033013552427, -0.007468620780855417, -0.00785087700933218, -0.008211682550609112, -0.008561271242797375, -0.00890862476080656, -0.009260846301913261, -0.009620213881134987, -0.009984702803194523, -0.010347289964556694, -0.010697449557483196, -0.0110227195546031, -0.011308410204946995, -0.011543129570782185, -0.011722399853169918, -0.011846429668366909, -0.011920100077986717, -0.011949770152568817, -0.011942369863390923, -0.011906130239367485, -0.01184780988842249, -0.011772979982197285, -0.011683350428938866, -0.011575089767575264, -0.01144460029900074, -0.011293919757008553, -0.011131989769637585, -0.010970639996230602, -0.010821850039064884, -0.010695260018110275, -0.01059412956237793, -0.010512299835681915, -0.01043654978275299, -0.010349350050091743, -0.010233409702777863, -0.010077140294015408, -0.009875462390482426, -0.009628117084503174, -0.00933743454515934, -0.009007579647004604, -0.008642380125820637, -0.00824592262506485, -0.007823717780411243, -0.007384071126580238, -0.006937216967344284, -0.006491732783615589, -0.006055665202438831, -0.005635417066514492, -0.00522998021915555, -0.004831349011510611, -0.004427103791385889, -0.004005827009677887, -0.00356138008646667, -0.003095603082329035, -0.002617571037262678, -0.002143552992492914, -0.0016914779553189874, -0.0012753249611705542, -0.0009015543037094176, -0.0005695814033970237, -0.00027479720301926136, -1.0938800187432207e-05, 0.000229346303967759, 0.00045546769979409873, 0.0006771744810976088, 0.0009026143234223127, 0.0011388829443603754, 0.001390589983202517, 0.0016598410438746214, 0.0019440730102360249, 0.0022378889843821526, 0.0025357340928167105, 0.0028341710567474365, 0.0031319139525294304, 0.003429548116400838, 0.0037292290944606066, 0.00403317715972662, 0.004341511055827141, 0.004653144162148237, 0.004964366089552641, 0.005270096007734537, 0.005565527826547623, 0.005845728795975447, 0.006104839034378529, 0.006338578183203936, 0.006544293835759163, 0.006719564087688923, 0.006861134897917509, 0.006966690998524427, 0.007039770949631929, 0.00709184305742383, 0.007139481138437986, 0.007198721170425415, 0.007280655205249786, 0.007392961997538805, 0.007540660910308361, 0.007722415961325169, 0.007929185405373573, 0.008146953769028187, 0.00836020428687334, 0.008554781787097454, 0.008721472695469856, 0.00885729305446148, 0.008963544853031635, 0.009045159444212914, 0.009107984602451324, 0.009156265296041965, 0.009190195240080357, 0.009206092916429043, 0.009202387183904648, 0.009181312285363674, 0.009145986288785934, 0.009098043665289879, 0.00903945043683052, 0.00897261407226324, 0.008900516666471958, 0.008825908415019512, 0.008751394227147102, 0.008678142912685871, 0.008605719543993473, 0.008535152301192284, 0.008468135260045528, 0.008405469357967377, 0.008346536196768284, 0.008289402350783348, 0.008230660110712051, 0.008166656829416752, 0.008093710988759995, 0.008008996024727821, 0.007910780608654022, 0.007797660771757364, 0.007668237201869488, 0.007520488929003477, 0.007355616893619299, 0.007181054912507534, 0.007009719964116812, 0.006856685969978571, 0.006734066177159548, 0.006648931186646223, 0.006601621862500906, 0.006586881820112467, 0.0065999990329146385, 0.006637842860072851, 0.006695027928799391, 0.0067633697763085365, 0.006830601952970028, 0.006881846114993095, 0.006903143133968115, 0.006884702015668154, 0.0068225921131670475, 0.0067183529026806355, 0.0065795788541436195, 0.006414791103452444, 0.006230636965483427, 0.00603473000228405, 0.0058393320068717, 0.005662421230226755, 0.005522219929844141, 0.005429952871054411, 0.005385859869420528, 0.0053816549479961395, 0.00540270796045661, 0.005430418066680431, 0.005445098038762808, 0.005431510973721743, 0.005382842849940062, 0.005301033146679401, 0.005194244906306267, 0.005070832092314959, 0.004935677163302898, 0.004789756145328283, 0.004632159136235714, 0.00446196598932147, 0.00428029615432024, 0.0040902611799538136, 0.0038948869332671165, 0.0036948840133845806, 0.003489523893222213, 0.0032785239163786173, 0.0030602579936385155, 0.002830391051247716, 0.0025848140940070152, 0.002322237007319927, 0.0020433960016816854, 0.0017488020239397883, 0.0014413660392165184, 0.0011271110270172358, 0.0008119365083985031, 0.0004992462927475572, 0.00018978409934788942, -0.00012092300312360749, -0.0004410597903188318, -0.0007781372987665236, -0.001136463019065559, -0.0015164939686655998, -0.0019148379797115922, -0.0023216810077428818, -0.0027191999834030867, -0.003088427009060979, -0.0034156988840550184, -0.0036962570156902075, -0.003932284191250801, -0.004131540190428495, -0.004306981805711985, -0.004473756067454815, -0.004645880777388811, -0.004836572799831629, -0.005054471082985401, -0.005300189834088087, -0.005564431194216013, -0.0058296541683375835, -0.006076072808355093, -0.006288070231676102, -0.006454893853515387, -0.006568457931280136, -0.006623608060181141, -0.006621973123401403, -0.006571706850081682, -0.006483856122940779, -0.006371620111167431, -0.006248887162655592, -0.006128058768808842, -0.006019366905093193, -0.005929235834628344, -0.005857580807060003, -0.005799204111099243, -0.005750508978962898, -0.005708531942218542, -0.005669272970408201, -0.005629620049148798, -0.005584903061389923, -0.0055295201018452644, -0.005463346838951111, -0.005392487160861492, -0.005323404911905527, -0.005259472876787186, -0.005201071035116911, -0.005146001931279898, -0.0050916410982608795, -0.00503728911280632, -0.004983020015060902, -0.004927920177578926, -0.004870456177741289, -0.004810212180018425, -0.004752646200358868, -0.00470832409337163, -0.0046911342069506645, -0.004713438916951418, -0.004781248047947884, -0.004893407225608826, -0.005044323857873678, -0.005224431864917278, -0.00542072718963027, -0.005620001815259457, -0.005812747869640589, -0.005994447041302919, -0.006166001781821251, -0.006330979987978935, -0.006494301836937666, -0.0066615501418709755, -0.0068385060876607895, -0.007029972039163113, -0.007238870952278376, -0.007467282935976982, -0.007717583794146776, -0.00798880122601986, -0.008275656960904598, -0.008570191450417042, -0.008860878646373749, -0.009132464416325092, -0.00937172956764698, -0.009569394402205944, -0.009721045382320881, -0.009828082285821438, -0.009895045310258865, -0.009928027167916298, -0.009934154339134693, -0.009921655058860779, -0.009898817166686058, -0.009871811605989933, -0.009843618609011173, -0.009813937358558178, -0.009779182262718678, -0.009732183068990707, -0.009662955068051815, -0.009561151266098022, -0.009419208392500877, -0.009234311990439892, -0.009008325636386871, -0.008748716674745083, -0.008467365987598896, -0.0081773791462183, -0.007888136431574821, -0.00760271493345499, -0.007319110911339521, -0.00703273294493556, -0.006739723030477762, -0.006440755911171436, -0.006142281927168369, -0.005853056907653809, -0.0055794198997318745, -0.005322305951267481, -0.005076980218291283, -0.00483643589541316, -0.004594882950186729, -0.004347172100096941, -0.004089434165507555, -0.003821444930508733, -0.003544338047504425, -0.0032588960602879524, -0.002966670086607337, -0.0026717009022831917, -0.0023780479095876217, -0.002088933950290084, -0.0018049849895760417, -0.0015254480531439185, -0.001249411958269775, -0.0009792373748496175, -0.0007237499812617898, -0.0004946141270920634, -0.00029949890449643135, -0.00013806790229864419, -2.774341965050553e-06, 0.00011797850311268121, 0.0002353864983888343, 0.0003565498918760568, 0.00048306360258720815, 0.0006122150225564837, 0.000737240188755095, 0.0008482494158670306, 0.0009343398851342499, 0.000986325554549694, 0.0009983150521293283, 0.0009686314733698964, 0.0009003942832350731, 0.0007992403116077185, 0.0006739977980032563, 0.0005360950017347932, 0.0003984193899668753, 0.0002737595932558179, 0.0001708271011011675, 9.109400707529858e-05, 3.4478580346331e-05, 1.6248139900199021e-06, -7.1365261646860745e-06, 3.1322640552389203e-06, 2.1003630536142737e-05, 3.195214958395809e-05, 2.042555934167467e-05, -2.674965980986599e-05, -0.00011939799878746271, -0.0002611347008496523, -0.00044822771451435983, -0.0006704865954816341, -0.0009116154978983104, -0.0011536229867488146, -0.0013784939656034112, -0.0015700870426371694, -0.0017150910571217537, -0.0018057150300592184, -0.001842417987063527, -0.0018316099885851145, -0.0017824650276452303, -0.0017019340302795172, -0.0015951760578900576, -0.001466394984163344, -0.0013207109877839684, -0.001168117974884808, -0.0010210450273007154, -0.000888490176293999, -0.0007732184021733701, -0.0006745437276549637, -0.0005902984994463623, -0.000517423904966563, -0.0004510637081693858, -0.00038814981235191226, -0.0003268985019531101, -0.00026512768818065524, -0.0002012568002101034, -0.00013401059550233185, -6.14838718320243e-05, 1.7408219719072804e-05, 9.936241258401424e-05, 0.00017725469660945237, 0.00024136340653058141, 0.0002807716082315892, 0.00028484739596024156, 0.0002456691872794181, 0.00016100489301607013, 3.734253914444707e-05, -0.00010917989857262, -0.00025582811213098466, -0.00038197438698261976, -0.00047743270988576114, -0.0005431995959952474, -0.0005896177026443183, -0.0006296196952462196, -0.0006749785970896482, -0.0007341870223172009, -0.0008115806267596781, -0.000906469183973968, -0.0010136880446225405, -0.0011245450004935265, -0.0012267479905858636, -0.0013072530273348093, -0.0013568890281021595, -0.0013744879979640245, -0.0013649440370500088, -0.0013393210247159004, -0.001311297994107008, -0.001293887966312468, -0.0012960380408912897, -0.00131977500859648, -0.001362079055979848, -0.001417970983311534, -0.0014815579634159803, -0.0015451549552381039, -0.0016020849579945207, -0.0016506570391356945, -0.0016939659835770726, -0.0017369469860568643, -0.0017841779626905918, -0.0018380139954388142, -0.0018992420518770814, -0.001968557946383953, -0.0020450609736144543, -0.0021271060686558485, -0.0022154159378260374, -0.0023126809392124414, -0.002424261998385191, -0.0025557701010257006, -0.0027049120981246233, -0.002860171953216195, -0.003002784913405776, -0.0031110988929867744, -0.0031650608871132135, -0.0031524149235337973, -0.0030739670619368553, -0.0029385830275714397, -0.0027587648946791887, -0.002545709954574704, -0.00230797310359776, -0.0020553350914269686, -0.001802206039428711, -0.0015631000278517604, -0.0013505170354619622, -0.0011746829841285944, -0.0010424869833514094, -0.000956507574301213, -0.0009153470164164901, -0.0009143020724877715, -0.0009457244887016714, -0.0009992201812565327, -0.0010653069475665689, -0.001136380946263671, -0.0012080769520252943, -0.0012796339578926563, -0.0013553219614550471, -0.0014424410182982683, -0.0015453719533979893, -0.0016634840285405517, -0.001792781986296177, -0.0019285540329292417, -0.0020649819634854794, -0.002196487970650196, -0.002317778067663312, -0.002426126040518284, -0.0025228809099644423, -0.0026104459539055824, -0.0026904649566859007, -0.0027660110499709845, -0.0028443909250199795, -0.0029331159312278032, -0.003036834066733718, -0.00315365893766284, -0.0032749311067163944, -0.0033877980895340443, -0.003477067919448018, -0.0035291770473122597, -0.003533625975251198, -0.0034845639020204544, -0.0033820250537246466, -0.0032324769999831915, -0.0030461999122053385, -0.002834059065207839, -0.0026058750227093697, -0.002368262968957424, -0.0021253719460219145, -0.001881567994132638, -0.0016404699999839067, -0.0014021169627085328, -0.0011623799800872803, -0.0009177066967822611, -0.0006675879121758044, -0.0004133429902140051, -0.00015892299416009337, 8.969027840066701e-05, 0.00032435631146654487, 0.0005374380853027105, 0.0007248519104905427, 0.0008866111747920513, 0.0010284560266882181, 0.0011608339846134186, 0.0012934280093759298, 0.0014296260196715593, 0.001567660947330296, 0.0017031989991664886, 0.0018332330510020256, 0.001958827953785658, 0.002084573032334447, 0.002215621992945671, 0.002354610012844205, 0.002499775029718876, 0.002643585903570056, 0.002775656059384346, 0.002885754918679595, 0.0029653029050678015, 0.0030081679578870535, 0.0030126580968499184, 0.002983435057103634, 0.0029303880874067545, 0.002863640896975994, 0.0027913989033550024, 0.002716697985306382, 0.002639289014041424, 0.0025579629000276327, 0.002472887048497796, 0.0023886479903012514, 0.0023151689674705267, 0.0022645338904112577, 0.0022456711158156395, 0.0022647948935627937, 0.0023225159384310246, 0.002413880079984665, 0.0025286029558628798, 0.002654721960425377, 0.0027822048868983984, 0.002902040956541896, 0.003005279926583171, 0.0030824351124465466, 0.0031269730534404516, 0.00313792796805501, 0.0031182330567389727, 0.0030725309625267982, 0.00300977798178792, 0.0029430589638650417, 0.002886787988245487, 0.00285328202880919, 0.0028495320584625006, 0.002879031002521515, 0.0029438959900289774, 0.0030432939529418945, 0.0031737100798636675, 0.003328405087813735, 0.003495605895295739, 0.003662476083263755, 0.003818555036559701, 0.0039588590152561665, 0.004081331193447113, 0.004185888916254044, 0.004276394844055176, 0.004360471852123737, 0.004447396844625473, 0.004543970804661512, 0.0046522668562829494, 0.004772392101585865, 0.004901675041764975, 0.00503308791667223, 0.005156600847840309, 0.005261145997792482, 0.0053364732302725315, 0.005374872125685215, 0.005372839979827404, 0.005331053864210844, 0.005253797862678766, 0.005146251991391182, 0.005015489179641008, 0.004869879223406315, 0.004718097858130932, 0.004566616844385862, 0.004418834112584591, 0.004272093065083027, 0.004118926823139191, 0.0039518531411886215, 0.003765743924304843, 0.003560496959835291, 0.0033401839900761843, 0.0031134220771491528, 0.002890933072194457, 0.002683372003957629, 0.0024979650042951107, 0.002337547019124031, 0.002199392067268491, 0.0020780470222234726, 0.0019666149746626616, 0.0018561920151114464, 0.0017398210475221276, 0.0016151999589055777, 0.001485095010139048, 0.001357270055450499, 0.0012411529896780849, 0.0011469200253486633, 0.0010825609788298607, 0.0010515990434214473, 0.0010543089592829347, 0.0010879900073632598, 0.0011489390162751079, 0.0012312460457906127, 0.001327181002125144, 0.0014271939871832728, 0.0015204929513856769, 0.0015974519774317741, 0.0016536880284547806, 0.001690597040578723, 0.0017115609953179955, 0.0017192249651998281, 0.0017135570524260402, 0.00169402698520571, 0.0016604720149189234, 0.0016131519805639982, 0.0015529609518125653, 0.0014814309542998672, 0.0013985770056024194, 0.0013025760417804122, 0.0011947560124099255, 0.0010820700554177165, 0.0009737682994455099, 0.0008792724111117423, 0.0008035543141886592, 0.0007467200048267841, 0.0007070843712426722, 0.0006810522172600031, 0.0006640846258960664, 0.0006498369039036334, 0.0006328482995741069, 0.0006113798008300364, 0.0005850329180248082, 0.0005513951764442027, 0.0005075929220765829, 0.00045191191020421684, 0.000381866586394608, 0.0002926609886344522, 0.00017575320089235902, 2.222678995167371e-05, -0.00017286049842368811, -0.0004076114855706692, -0.0006734256749041378, -0.0009589422843419015, -0.0012518060393631458, -0.0015370890032500029, -0.0018014099914580584, -0.0020392299629747868, -0.002252537989988923, -0.002445684978738427, -0.0026234209071844816, -0.002789720892906189, -0.0029487109277397394, -0.0031049149110913277, -0.0032600359991192818, -0.003412859980016947, -0.003564302111044526, -0.0037175840698182583, -0.0038767470978200436, -0.004044848028570414, -0.00422229478135705, -0.004407356958836317, -0.00459644990041852, -0.004783446900546551, -0.004961186088621616, -0.005123795010149479, -0.0052692340686917305, -0.0054001822136342525, -0.005522563122212887, -0.005642875097692013, -0.005766816902905703, -0.005897196009755135, -0.006033030804246664, -0.0061697461642324924, -0.0062998090870678425, -0.0064154420979321, -0.006512385793030262, -0.0065893870778381824, -0.006648805923759937, -0.0066941771656274796, -0.006729220971465111, -0.006760770920664072, -0.006797946989536285, -0.0068464120849967, -0.00690458994358778, -0.0069643971510231495, -0.0070133269764482975, -0.007038731127977371, -0.007031990215182304, -0.006988416891545057, -0.006908314768224955, -0.006795316934585571, -0.006655268836766481, -0.006495174951851368, -0.0063222721219062805, -0.006145054940134287, -0.005970946047455072, -0.005803165957331657, -0.005639650858938694, -0.005476688966155052, -0.005309131927788258, -0.005128228105604649, -0.004924147855490446, -0.0046890610828995705, -0.004419685807079077, -0.004117434844374657, -0.00378890591673553, -0.003445030888542533, -0.003100086934864521, -0.002768466016277671, -0.0024613640271127224, -0.0021857700776308775, -0.0019446410005912185, -0.001737563987262547, -0.0015602370258420706, -0.0014039230300113559, -0.0012553019914776087, -0.001098126987926662, -0.00091678457101807, -0.0006988050881773233, -0.00043611699948087335, -0.00013001369370613247, 0.0002093720977427438, 0.0005666280048899353, 0.0009263514075428247, 0.0012746050488203764, 0.001601853989996016, 0.0019034090219065547, 0.002181323943659663, 0.0024435780942440033, 0.0027002329006791115, 0.002958805998787284, 0.0032236899714916945, 0.0034963719081133604, 0.0037735109217464924, 0.004047942813485861, 0.004310207907110453, 0.00455131521448493, 0.004765083082020283, 0.004948793910443783, 0.005103650037199259, 0.005233677104115486, 0.0053427438251674175, 0.00543225510045886, 0.005500342231243849, 0.005544254090636969, 0.00556117994710803, 0.005551671143621206, 0.005522624123841524, 0.005485821980983019, 0.005454290192574263, 0.005437037907540798, 0.005437543150037527, 0.00545466085895896, 0.005485611967742443, 0.005524688865989447, 0.005563217215240002, 0.00558915501460433, 0.005590546876192093, 0.005559824872761965, 0.00549562880769372, 0.0053999219089746475, 0.005271926987916231, 0.005109856836497784, 0.00491253612563014, 0.004681265912950039, 0.004419440869241953, 0.0041338419541716576, 0.0038353970739990473, 0.003535649972036481, 0.00324536906555295, 0.0029722019098699093, 0.002717816038057208, 0.0024791210889816284, 0.0022492820862680674, 0.0020209290087223053, 0.0017868450377136469, 0.0015427550533786416, 0.0012895349645987153, 0.0010330489603802562, 0.0007817542064003646, 0.0005448088049888611, 0.0003288490988779813, 0.00013893470168113708, -1.9886969312210567e-05, -0.00014442800602409989, -0.00023249340301845223, -0.0002830658049788326, -0.0002985442988574505, -0.0002828795986715704, -0.0002412570029264316, -0.00018117070430889726, -0.00011054499918827787, -3.836383984889835e-05, 2.6874389732256532e-05, 7.90886624599807e-05, 0.00011696109868353233, 0.00014269859821069986, 0.0001587354054208845, 0.00016897160094231367, 0.0001780656020855531, 0.00019002679619006813, 0.00020623370073735714, 0.00022599940712098032, 0.0002466210862621665, 0.00026514899218454957, 0.0002792071900330484, 0.0002856726059690118, 0.00028435589047148824, 0.00027969060465693474, 0.0002797488996293396, 0.00029270179220475256, 0.0003262207901570946, 0.00038647849578410387, 0.0004762730095535517, 0.0005951629718765616, 0.0007388778030872345, 0.0009022300946526229, 0.0010798630537465215, 0.001265338039956987, 0.0014516320079565048, 0.0016307609621435404, 0.0017971120541915298, 0.0019501609494909644, 0.002095781033858657, 0.0022436389699578285, 0.002403985010460019, 0.0025842590257525444, 0.002784505020827055, 0.002999129006639123, 0.0032194750383496284, 0.003436456900089979, 0.003641346003860235, 0.0038285860791802406, 0.004000429064035416, 0.004166712984442711, 0.004340223036706448, 0.004529376979917288, 0.004735914990305901, 0.004956606775522232, 0.005184021778404713, 0.005407472141087055, 0.0056131090968847275, 0.00578693812713027, 0.005920593161135912, 0.006011961027979851, 0.006063995882868767, 0.006085976958274841, 0.006094765849411488, 0.006111095193773508, 0.0061531998217105865, 0.0062331329099833965, 0.0063513838686048985, 0.006499826908111572, 0.006663870997726917, 0.0068260361440479755, 0.0069695268757641315, 0.007080419920384884, 0.0071480232290923595, 0.007165980990976095, 0.007131299935281277, 0.007043804973363876, 0.006909660995006561, 0.006741621997207403, 0.006555338855832815, 0.006367214024066925, 0.006191250868141651, 0.006039006169885397, 0.00591905415058136, 0.005836525931954384, 0.005791951902210712, 0.005778876133263111, 0.0057839262299239635, 0.005792070180177689, 0.005790844094008207, 0.00577163090929389, 0.0057294717989861965, 0.005662432871758938, 0.005569826811552048, 0.005452016834169626, 0.005312267225235701, 0.00515760388225317, 0.004998812917619944, 0.004850686993449926, 0.004726441111415625, 0.004629211965948343, 0.004551811143755913, 0.004484735894948244, 0.004419596865773201, 0.004350096918642521, 0.004273901227861643, 0.004188924096524715, 0.004089708905667067, 0.003971974831074476, 0.0038354960270226, 0.003682863898575306, 0.003515796037390828, 0.003334315028041601, 0.0031362250447273254, 0.0029191349167376757, 0.002682924037799239, 0.002432666951790452, 0.002175125991925597, 0.0019148250576108694, 0.0016545229591429234, 0.0013962930534034967, 0.0011397419730201364, 0.0008838797220960259, 0.0006274539045989513, 0.0003652673913165927, 9.048764331964776e-05, -0.0002009388990700245, -0.0005080385017208755, -0.0008247190271504223, -0.0011449320008978248, -0.0014643620233982801, -0.0017780039925128222, -0.002078660996630788, -0.002356411889195442, -0.0026022009551525116, -0.002813484985381365, -0.002993820933625102, -0.0031499650795012712, -0.003286320948973298, -0.003404637100175023, -0.003507518908008933, -0.003601779928430915, -0.003694158047437668, -0.0037890670355409384, -0.0038863299414515495, -0.0039800307713449, -0.004060031846165657, -0.004115724004805088, -0.004140493925660849, -0.0041338009759783745, -0.004096988122910261, -0.004031376913189888, -0.003938787151128054, -0.0038226121105253696, -0.0036891470663249493, -0.003544586943462491, -0.0033914989326149225, -0.003229113994166255, -0.0030552439857274294, -0.0028685000725090504, -0.00266671902500093, -0.0024474600795656443, -0.002208814024925232, -0.001951094949617982, -0.0016783119644969702, -0.001396559993736446, -0.0011117140529677272, -0.0008258767193183303, -0.0005406636046245694, -0.00026112981140613556, 5.8072650972462725e-06, 0.000250371202128008, 0.00046188710257411003, 0.0006292472244240344, 0.0007428003009408712, 0.0007985968259163201, 0.0008022526744753122, 0.0007685921736992896, 0.0007159903179854155, 0.0006590635166503489, 0.000607235124334693, 0.0005653667030856013, 0.0005324594094417989, 0.000501887989230454, 0.00046626231051050127, 0.0004189905012026429, 0.0003527730004861951, 0.0002602389140520245, 0.00013641809346154332, -1.839109063439537e-05, -0.00019801700545940548, -0.00039557309355586767, -0.0006077163270674646, -0.0008343906956724823, -0.0010776149574667215, -0.00134017295204103, -0.0016214889474213123, -0.0019174970220774412, -0.002222656039521098, -0.0025267628952860832, -0.002815498970448971, -0.0030792600009590387, -0.003315218025818467, -0.0035237420815974474, -0.003707580966874957, -0.003872324014082551, -0.004024412948638201, -0.004172335844486952, -0.0043242499232292175, -0.0044866809621453285, -0.004665587097406387, -0.004867510870099068, -0.005097195040434599, -0.005355786066502333, -0.005638939794152975, -0.005937838926911354, -0.006243086885660887, -0.006547107826918364, -0.0068456148728728294, -0.007135823834687471, -0.007414503023028374, -0.007676886860281229, -0.007917732000350952, -0.008131151087582111, -0.00831365492194891, -0.008467376232147217, -0.008601524867117405, -0.008729820139706135, -0.008865276351571083, -0.009013675153255463, -0.009169437922537327, -0.009319300763309002, -0.009449006989598274, -0.009549489244818687, -0.009616508148610592, -0.009648243896663189, -0.009645543992519379, -0.009612598456442356, -0.009555311873555183, -0.009478733874857426, -0.009386155754327774, -0.009276779368519783, -0.009148775599896908, -0.009002665989100933, -0.008839298039674759, -0.008656815625727177, -0.008451510220766068, -0.008219950832426548, -0.007961447350680828, -0.007676437962800264, -0.007366465870290995, -0.007033541798591614, -0.006682645995169878, -0.006318266037851572, -0.005943838972598314, -0.005561854224652052, -0.005175366997718811, -0.00478722807019949, -0.004401130136102438, -0.004021810833364725, -0.003653198014944792, -0.0032995170913636684, -0.002964962972328067, -0.002652313094586134, -0.002361173974350095, -0.00208783196285367, -0.001828146050684154, -0.001576822018250823, -0.0013278309488669038, -0.001076831016689539, -0.0008247552905231714, -0.0005795736215077341, -0.0003549300890881568, -0.0001656969980103895, -2.642163963173516e-05, 5.203907858231105e-05, 6.362902058754116e-05, 1.0063649824587628e-05, -9.83469799393788e-05, -0.00024393459898419678, -0.00040358779369853437, -0.0005565906758420169, -0.0006900795269757509, -0.0007986308773979545, -0.0008816398913040757, -0.0009440265130251646, -0.0009939797455444932, -0.0010415849974378943, -0.001096484949812293, -0.0011667880462482572, -0.001257693045772612, -0.001370570040307939, -0.0015036039985716343, -0.0016519969794899225, -0.0018113820115104318, -0.001979158027097583, -0.002155303955078125, -0.0023400080390274525, -0.0025305759627372026, -0.002719973912462592, -0.002899518935009837, -0.0030666959937661886, -0.003226791974157095, -0.003384263953194022, -0.003536755917593837, -0.0036772729363292456, -0.0037972258869558573, -0.0038889660499989986, -0.003948577214032412, -0.003976637031883001, -0.003976713865995407, -0.003955846186727285, -0.0039248219691216946, -0.0038946550339460373, -0.0038746208883821964, -0.003872449044138193, -0.003893123008310795, -0.003936528228223324, -0.003997898194938898, -0.004069535061717033, -0.0041426001116633415, -0.004210156854242086, -0.004268344957381487, -0.004315918777137995, -0.00435365317389369, -0.004382752813398838, -0.0044048200361430645, -0.004422562196850777, -0.004439149051904678, -0.004456301219761372, -0.004472814034670591, -0.004482623189687729, -0.0044742547906935215, -0.004433081950992346, -0.00434820307418704, -0.004216698929667473, -0.004044549074023962, -0.0038438430055975914, -0.0036314709577709436, -0.0034248109441250563, -0.0032356351148337126, -0.0030692529398947954, -0.002926238114014268, -0.0028033049311488867, -0.0026935581117868423, -0.0025885149370878935, -0.0024809979368001223, -0.0023668259382247925, -0.0022414689883589745, -0.002099707955494523, -0.001939116045832634, -0.0017595370300114155, -0.0015653410227969289, -0.0013610109454020858, -0.0011511800112202764, -0.0009415845270268619, -0.0007365052006207407, -0.0005393208120949566, -0.0003513985138852149, -0.00017208029748871922, -6.44820374873234e-07, 0.00016319169662892818, 0.000319535902235657, 0.0004685303138103336, 0.0006111428956501186, 0.0007507234113290906, 0.0008915106882341206, 0.0010372080141678452, 0.0011898139491677284, 0.001350346952676773, 0.0015181789640337229, 0.0016914770239964128, 0.0018664540257304907, 0.0020373519510030746, 0.0021993599366396666, 0.002348921960219741, 0.0024828698951750994, 0.002598135033622384, 0.00269392691552639, 0.002773744985461235, 0.002843396971002221, 0.0029103029519319534, 0.002980790100991726, 0.003059437032788992, 0.003148334100842476, 0.0032476179767400026, 0.0033548660576343536, 0.003464065957814455, 0.003567456966266036, 0.0036560639273375273, 0.003723242087289691, 0.0037667860742658377, 0.0037851170636713505, 0.0037749910261482, 0.003733190940693021, 0.0036590690724551678, 0.003556635929271579, 0.0034355490934103727, 0.0033068840857595205, 0.003176921047270298, 0.003047423902899027, 0.0029166829772293568, 0.002783087082207203, 0.002646719105541706, 0.002507129916921258, 0.0023644519969820976, 0.002218788955360651, 0.0020717140287160873, 0.0019251089543104172, 0.0017804260132834315, 0.0016398660372942686, 0.0015071609523147345, 0.0013866890221834183, 0.0012827409664168954, 0.001199468970298767, 0.0011366179678589106, 0.0010862980270758271, 0.0010347870411351323, 0.0009662691154517233, 0.0008665216155350208, 0.000727216771338135, 0.000548495096154511, 0.00034126261016353965, 0.0001268477935809642, -7.263563020387664e-05, -0.00024257809855043888, -0.000377069489331916, -0.0004793883999809623, -0.000558434403501451, -0.0006276848143897951, -0.000701822922565043, -0.0007914244779385626, -0.0009010339854285121, -0.001030461979098618, -0.0011719129979610443, -0.001311706961132586, -0.0014389980351552367, -0.001547118998132646, -0.0016338430577889085, -0.001699791057035327, -0.0017470340244472027, -0.001779851969331503, -0.0018033840460702777, -0.0018243020167574286, -0.0018486280459910631, -0.0018800690304487944, -0.0019200750393792987, -0.001969225937500596, -0.0020290170796215534, -0.002102901926264167, -0.0021937519777566195, -0.0023021239321678877, -0.0024256741162389517, -0.0025592739693820477, -0.0026969679165631533, -0.0028303160797804594, -0.0029509488958865404, -0.003055104985833168, -0.003141911933198571, -0.003212240058928728, -0.003268938045948744, -0.0033147670328617096, -0.003352134022861719, -0.0033838769886642694, -0.003415169892832637, -0.0034500400070101023, -0.0034905080683529377, -0.0035372721031308174, -0.003587838029488921, -0.0036384379491209984, -0.0036850098986178637, -0.00372517597861588, -0.003758349921554327, -0.003786162007600069, -0.003811900969594717, -0.003838975913822651, -0.003868834115564823, -0.003900685114786029, -0.003931765910238028, -0.003956940956413746, -0.0039711641147732735, -0.003970639780163765, -0.003954894840717316, -0.003926890902221203, -0.003891752101480961, -0.003857094096019864, -0.003830478060990572, -0.0038180199917405844, -0.0038220910355448723, -0.003839618992060423, -0.003861896926537156, -0.0038769340608268976, -0.003871652064844966, -0.0038357640150934458, -0.003763801883906126, -0.0036568089853972197, -0.00352186500094831, -0.0033709739800542593, -0.0032194301020354033, -0.003082755021750927, -0.002973881084471941, -0.002902100095525384, -0.0028711610939353704, -0.002878938103094697, -0.0029178299009799957, -0.002977275988087058, -0.0030454678926616907, -0.0031120909843593836, -0.0031686800066381693, -0.0032077189534902573, -0.003223575884476304, -0.003212671959772706, -0.0031744330190122128, -0.0031114460434764624, -0.0030296100303530693, -0.002940189093351364, -0.0028587100096046925, -0.0028023249469697475, -0.0027864770963788033, -0.0028225008863955736, -0.0029141989070922136, -0.003055565059185028, -0.0032342120539397, -0.0034331900533288717, -0.003634139895439148, -0.003822141094133258, -0.003987892065197229, -0.004129427019506693, -0.004250319208949804, -0.00435556098818779, -0.004450844135135412, -0.004540126770734787, -0.004625400993973017, -0.004706198815256357, -0.004782191012054682, -0.00485558807849884, -0.004933340009301901, -0.005022854078561068, -0.005128986202180386, -0.005256071221083403, -0.0054076057858765125, -0.005587058141827583, -0.005796570796519518, -0.006037055980414152, -0.006306477822363377, -0.006599714048206806, -0.006911782082170248, -0.0072376541793346405, -0.007571650203317404, -0.007907776162028313, -0.00824043620377779, -0.008563763462007046, -0.0088737141340971, -0.009167580865323544, -0.009440688416361809, -0.009687146171927452, -0.00990010891109705, -0.010074679739773273, -0.010212750174105167, -0.010319620370864868, -0.010402490384876728, -0.01046966016292572, -0.010529830120503902, -0.010589109733700752, -0.010648390278220177, -0.010703399777412415, -0.010747999884188175, -0.010779060423374176, -0.010794620029628277, -0.010793659836053848, -0.01077624037861824, -0.01074496004730463, -0.01070442982017994, -0.01065846998244524, -0.010607689619064331, -0.010547650046646595, -0.010469360277056694, -0.010361379943788052, -0.01021603960543871, -0.01003270037472248, -0.009817375801503658, -0.009578379802405834, -0.009321358986198902, -0.009048514068126678, -0.008761364035308361, -0.008462642319500446, -0.008155779913067818, -0.007844297215342522, -0.007530224043875933, -0.007212440948933363, -0.006889644078910351, -0.006563834846019745, -0.006240755785256624, -0.005924760829657316, -0.005615750793367624, -0.005308188032358885, -0.004993141163140535, -0.004661210812628269, -0.004306402988731861, -0.0039261761121451855, -0.003521841950714588, -0.003095177933573723, -0.0026451940648257732, -0.0021680810023099184, -0.001660478999838233, -0.0011237770086154342, -0.0005642084288410842, 9.844367014011368e-06, 0.0005878055817447603, 0.0011574180098250508, 0.001708748983219266, 0.002237096894532442, 0.002739554038271308, 0.003213295014575124, 0.0036571710370481014, 0.00407232902944088, 0.004461992997676134, 0.0048310537822544575, 0.005182170774787664, 0.00551638612523675, 0.00583414314314723, 0.006135018076747656, 0.006416195072233677, 0.006673077121376991, 0.006898597814142704, 0.007087016943842173, 0.0072344401851296425, 0.007337450049817562, 0.00739565584808588, 0.007415723986923695, 0.007411071099340916, 0.007399342022836208, 0.007396947126835585, 0.007411933038383722, 0.0074469828978180885, 0.007499540224671364, 0.007556017022579908, 0.007597126066684723, 0.007604384794831276, 0.007562567014247179, 0.007463363930583, 0.007308330852538347, 0.007106637116521597, 0.006873320788145065, 0.006623794790357351, 0.0063681951723992825, 0.006108923815190792, 0.0058426507748663425, 0.005566282197833061, 0.005280512850731611, 0.004989758133888245, 0.004700417164713144, 0.0044165379367768764, 0.00413811020553112, 0.003863302990794182, 0.003589139087125659, 0.003314046887680888, 0.003039757953956723, 0.002771718893200159, 0.0025184929836541414, 0.00228946004062891, 0.0020911889150738716, 0.0019284050213173032, 0.0018039740389212966, 0.0017154579982161522, 0.0016558630159124732, 0.0016170799499377608, 0.0015901699662208557, 0.00156625104136765, 0.0015416579553857446, 0.0015150830149650574, 0.0014832729939371347, 0.00144582602661103, 0.0014060060493648052, 0.0013654630165547132, 0.0013198739616200328, 0.0012643360532820225, 0.0011961329728364944, 0.001114794984459877, 0.001021350035443902, 0.000918246281798929, 0.0008058248786255717, 0.000682077428791672, 0.0005462893168441951, 0.0003985443036071956, 0.0002420821983832866, 8.205018093576655e-05, -7.748186180833727e-05, -0.0002302744978806004, -0.0003667194105219096, -0.00047341189929284155, -0.0005369725986383855, -0.0005505986046046019, -0.0005181874730624259, -0.00045205288915894926, -0.00036585520138032734, -0.00026978898677043617, -0.00016941399371717125, -6.556422886205837e-05, 4.5524291635956615e-05, 0.00016916969616431743, 0.00030929830973036587, 0.00046504350029863417, 0.0006316415965557098, 0.0008047731244005263, 0.000982123427093029, 0.0011622400488704443, 0.001343423966318369, 0.0015260030049830675, 0.0017131409840658307, 0.0019076770404353738, 0.0021113241091370583, 0.0023213329259306192, 0.0025289910845458508, 0.0027230209670960903, 0.002895503072068095, 0.003043504897505045, 0.0031682730186730623, 0.0032762489281594753, 0.0033770669251680374, 0.0034814788959920406, 0.003596387105062604, 0.003720497014001012, 0.003847721964120865, 0.003968268167227507, 0.0040719821117818356, 0.004152887035161257, 0.00421132380142808, 0.004252794198691845, 0.004284447990357876, 0.0043143341317772865, 0.004349921829998493, 0.004398256074637175, 0.00446311105042696, 0.0045423610135912895, 0.004628797061741352, 0.004711509216576815, 0.004780322778970003, 0.004830420948565006, 0.004864790942519903, 0.004886236973106861, 0.004892504774034023, 0.004880115855485201, 0.004844973795115948, 0.004784250166267157, 0.00469485018402338, 0.004574811086058617, 0.0044242930598556995, 0.004242638126015663, 0.004031448159366846, 0.0037967900279909372, 0.003549447050318122, 0.0033054170198738575, 0.003081049071624875, 0.002887411043047905, 0.002731726039201021, 0.0026183261070400476, 0.0025496839080005884, 0.002525466028600931, 0.002539265900850296, 0.002579252002760768, 0.002629321999847889, 0.002674971939995885, 0.0027068080380558968, 0.0027189310640096664, 0.002707601059228182, 0.002672564936801791, 0.0026196360122412443, 0.0025605119299143553, 0.002509560901671648, 0.0024807280860841274, 0.0024840340483933687, 0.002525290008634329, 0.0026030540466308594, 0.0027107009664177895, 0.002841369016095996, 0.0029898779466748238, 0.0031503511127084494, 0.0033159360755234957, 0.003478395054116845, 0.003629653947427869, 0.0037638279609382153, 0.0038800430484116077, 0.003981363959610462, 0.004072216805070639, 0.0041588651947677135, 0.00424799881875515, 0.00434460211545229, 0.004454107955098152, 0.004584508016705513, 0.004745625890791416, 0.0049433521926403046, 0.00517491577193141, 0.005433504935353994, 0.005709647201001644, 0.005993593018501997, 0.006275712978094816, 0.006547317840158939, 0.006800503935664892, 0.007026719860732555, 0.007216183003038168, 0.007361448835581541, 0.007460169959813356, 0.0075142099522054195, 0.007526541128754616, 0.00749980378895998, 0.007437680847942829, 0.00734609505161643, 0.007233100943267345, 0.007105897180736065, 0.00696921581402421, 0.0068271588534116745, 0.006682351231575012, 0.006531890016049147, 0.006369569804519415, 0.0061900559812784195, 0.0059907869435846806, 0.005771899130195379, 0.005536907818168402, 0.00528913177549839, 0.00502766715362668, 0.004750237800180912, 0.004456841852515936, 0.004149014130234718, 0.00383044988848269, 0.0035086360294371843, 0.003189393086358905, 0.0028705240692943335, 0.002546747913584113, 0.0022153339814394712, 0.0018791770562529564, 0.0015464740572497249, 0.0012273859465494752, 0.0009293382172472775, 0.0006558034219779074, 0.00040664890548214316, 0.0001765252964105457, -4.1148341551888734e-05, -0.00025178660871461034, -0.00046131189446896315, -0.000674157403409481, -0.0008939031977206469, -0.001124058966524899, -0.0013650290202349424, -0.0016117229824885726, -0.0018541530007496476, -0.0020787110552191734, -0.0022728319745510817, -0.002429927932098508, -0.0025468498934060335, -0.002623002976179123, -0.0026614039670675993, -0.002665749052539468, -0.0026393160223960876, -0.0025859109591692686, -0.002510471036657691, -0.0024161450564861298, -0.002302482957020402, -0.002167836995795369, -0.002012695884332061, -0.0018402510322630405, -0.0016535449540242553, -0.0014539819676429033, -0.0012411250500008464, -0.001016531023196876, -0.0007847733213566244, -0.0005506132147274911, -0.00031848440994508564, -9.075700654648244e-05, 0.00013419659808278084, 0.0003614604938775301, 0.0005965044256299734, 0.000843825691845268, 0.0011074820067733526, 0.0013878720346838236, 0.0016827969811856747, 0.0019877550657838583, 0.002296348102390766, 0.0025997059419751167, 0.0028882259503006935, 0.0031534270383417606, 0.0033921590074896812, 0.003607355058193207, 0.0038064720574766397, 0.0039990427903831005, 0.004194927867501974, 0.0044029089622199535, 0.004631995223462582, 0.004890704993158579, 0.005183272995054722, 0.005507849156856537, 0.0058560678735375404, 0.006214782129973173, 0.006568313110619783, 0.006900180131196976, 0.0071948510594666, 0.007438831962645054, 0.007623505778610706, 0.007747345138341188, 0.007817414589226246, 0.007847628556191921, 0.007856928743422031, 0.007866669446229935, 0.007896183989942074, 0.007958805188536644, 0.008059770800173283, 0.00819696020334959, 0.008361982181668282, 0.008543870411813259, 0.008730136789381504, 0.008909345604479313, 0.009071962907910347, 0.009211313910782337, 0.009323257021605968, 0.009405718185007572, 0.00945814698934555, 0.009479643777012825, 0.009472008794546127, 0.00944000855088234, 0.009388072416186333, 0.00931764580309391, 0.00922803208231926, 0.009116721339523792, 0.008983032777905464, 0.008830543607473373, 0.008665597066283226, 0.008495880290865898, 0.008330876007676125, 0.008184042759239674, 0.008070389740169048, 0.007999066263437271, 0.007971128448843956, 0.007978991605341434, 0.00800981093198061, 0.00804623682051897, 0.008069047704339027, 0.008066055364906788, 0.008035639300942421, 0.007984204217791557, 0.007920457981526852, 0.007852344773709774, 0.0077839200384914875, 0.007714258041232824, 0.0076416609808802605, 0.007567975204437971, 0.007498355116695166, 0.007437941152602434, 0.007385736797004938, 0.007335339207202196, 0.007274752948433161, 0.007192532066255808, 0.00708062993362546, 0.006935729179531336, 0.006759794894605875, 0.006560856010764837, 0.006350071169435978, 0.006137874908745289, 0.005930895917117596, 0.005729285068809986, 0.005530320107936859, 0.005331229884177446, 0.005130634177476168, 0.004927477799355984, 0.00472134817391634, 0.00451271515339613, 0.004303665831685066, 0.004097921773791313, 0.0038997631054371595, 0.0037138250190764666, 0.0035438518971204758, 0.003391468897461891, 0.0032549730967730284, 0.0031286869198083878, 0.0030020989943295717, 0.0028648129664361477, 0.0027096939738839865, 0.002532375045120716, 0.0023293730337172747, 0.0021013449877500534, 0.0018547120271250606, 0.001599675975739956, 0.0013474259758368134, 0.0011084240395575762, 0.0008894582279026508, 0.000693088280968368, 0.0005173574900254607, 0.00035752818803302944, 0.00020679610315710306, 5.8355319197289646e-05, -9.32116963667795e-05, -0.00025002050097100437, -0.0004125871928408742, -0.0005821387167088687, -0.0007577858050353825, -0.0009374797227792442, -0.0011189739452674985, -0.001300796982832253, -0.001479597995057702, -0.0016493999864906073, -0.0018050529761239886, -0.001945098047144711, -0.002074776915833354, -0.0022034260910004377, -0.0023409519344568253, -0.0024960769806057215, -0.002673269947990775, -0.002870656084269285, -0.0030811510514467955, -0.0032954919151961803, -0.003506297944113612, -0.0037077460438013077, -0.0038959761150181293, -0.004068746231496334, -0.004226665012538433, -0.0043710279278457165, -0.004501222167164087, -0.0046138400211930275, -0.004705133847892284, -0.004774465225636959, -0.00482217688113451, -0.004848895128816366, -0.004858416970819235, -0.004856377840042114, -0.004849820863455534, -0.004844356793910265, -0.004843359813094139, -0.004847678821533918, -0.004857304040342569, -0.004873754922300577, -0.004896280821412802, -0.0049196030013263226, -0.004935857839882374, -0.004935921169817448, -0.0049118660390377045, -0.004857222083956003, -0.004769069142639637, -0.004650196060538292, -0.0045047481544315815, -0.004334933124482632, -0.004142589867115021, -0.003932487219572067, -0.0037098880857229233, -0.003479671897366643, -0.0032472889870405197, -0.0030168381053954363, -0.0027884389273822308, -0.0025588308926671743, -0.0023244349285960197, -0.0020834479946643114, -0.0018352889455854893, -0.0015795249491930008, -0.001314320950768888, -0.0010358899598941207, -0.0007403441122733057, -0.00042647900409065187, -9.572364797350019e-05, 0.00025308941258117557, 0.0006256134947761893, 0.0010274129454046488, 0.00146127596963197, 0.0019279109546914697, 0.002423491096124053, 0.0029388319235295057, 0.00346604292280972, 0.004000171087682247, 0.004539546091109514, 0.005082557909190655, 0.005627965088933706, 0.0061737229116261005, 0.0067170108668506145, 0.007252876181155443, 0.0077746352180838585, 0.008274485357105732, 0.00874640978872776, 0.009187603369355202, 0.009596535935997963, 0.009970825165510178, 0.010310440324246883, 0.010619300417602062, 0.010903400368988514, 0.011165370233356953, 0.01140195969492197, 0.011605910025537014, 0.011772310361266136, 0.011901970021426678, 0.012000460177659988, 0.012073390185832977, 0.012120679952204227, 0.012141830287873745, 0.012140190228819847, 0.01212012954056263, 0.012083129957318306, 0.012027510441839695, 0.011953080072999, 0.011862380430102348, 0.011759289540350437, 0.01164788007736206, 0.011532739736139774, 0.0114164799451828, 0.011297089979052544, 0.011169170029461384, 0.011027369648218155, 0.01086840033531189, 0.010689360089600086, 0.010488609783351421, 0.010264740325510502, 0.010013939812779427, 0.009730028919875622, 0.009407402947545052, 0.009044603444635868, 0.008644879795610905, 0.008214211091399193, 0.007759586907923222, 0.007289492059499025, 0.006814002990722656, 0.006341588217765093, 0.0058790650218725204, 0.005430764984339476, 0.004999734926968813, 0.004588800016790628, 0.004198696929961443, 0.003827182110399008, 0.003473218996077776, 0.003137239022180438, 0.0028189150616526604, 0.002515074098482728, 0.0022223240230232477, 0.001938113011419773, 0.0016599140362814069, 0.001382702961564064, 0.001102310954593122, 0.0008196611888706684, 0.0005403275135904551, 0.0002730170963332057, 2.4017799660214223e-05, -0.0002045680012088269, -0.00040993568836711347, -0.0005862694815732539, -0.0007263525039888918, -0.0008268979727290571, -0.0008875068742781878, -0.0009112306288443506, -0.0009055790724232793, -0.0008832925232127309, -0.0008599084103479981, -0.0008480416727252305, -0.000853939272928983, -0.0008773311274126172, -0.0009139140020124614, -0.0009583028731867671, -0.0010058520128950477, -0.001052694977261126, -0.0010968559654429555, -0.0011395210167393088, -0.001183390966616571, -0.001232272945344448, -0.0012868300545960665, -0.0013420480536296964, -0.0013875779695808887, -0.0014127009781077504, -0.001412414014339447, -0.0013839700259268284, -0.00132590695284307, -0.0012418710393831134, -0.001142362947575748, -0.0010437059681862593, -0.0009648572886362672, -0.0009217461920343339, -0.0009239831124432385, -0.0009755815262906253, -0.001072610029950738, -0.001205208944156766, -0.0013594389893114567, -0.001519281999208033, -0.0016715510282665491, -0.0018087440403178334, -0.0019316569669172168, -0.0020473410841077566, -0.002166135935112834, -0.0022990319412201643, -0.0024551479145884514, -0.0026404550299048424, -0.002857021987438202, -0.0031035649590194225, -0.0033744669053703547, -0.003661941969767213, -0.003959531895816326, -0.004265535157173872, -0.004581382963806391, -0.00490933284163475, -0.0052505480125546455, -0.005603870842605829, -0.005966547876596451, -0.006336113903671503, -0.006709645036607981, -0.007083909120410681, -0.007455537095665932, -0.00782250240445137, -0.008183714002370834, -0.008537819609045982, -0.008881199173629284, -0.009208680130541325, -0.009514177218079567, -0.00979082565754652, -0.010033530183136463, -0.010243000462651253, -0.010427829809486866, -0.010600849986076355, -0.010773959569633007, -0.010955650359392166, -0.011149040423333645, -0.01135443989187479, -0.011570420116186142, -0.01179272960871458, -0.012014330364763737, -0.012226860038936138, -0.012421660125255585, -0.012591030448675156, -0.01272668968886137, -0.012821890413761139, -0.012876180000603199, -0.012893239967525005, -0.012879160232841969, -0.012839600443840027, -0.01277828961610794, -0.012699680402874947, -0.012609199620783329, -0.012513370253145695, -0.012418380007147789, -0.01232870016247034, -0.012244230136275291, -0.012159920297563076, -0.012069189921021461, -0.011963429860770702, -0.011831659823656082, -0.011662350036203861, -0.011448689736425877, -0.011193029582500458, -0.010906339623034, -0.010603910312056541, -0.0103005301207304, -0.010006359778344631, -0.009723369032144547, -0.009446551091969013, -0.009168284945189953, -0.008880935609340668, -0.008580118417739868, -0.008264710195362568, -0.00793737918138504, -0.007601973135024309, -0.0072610448114573956, -0.006915547885000706, -0.006567317992448807, -0.006221462972462177, -0.005884580779820681, -0.005561222787946463, -0.005254807882010937, -0.004966231063008308, -0.00469334376975894, -0.004427414853125811, -0.004156060051172972, -0.0038675449322909117, -0.003555272938683629, -0.0032191830687224865, -0.00286289700306952, -0.0024914899840950966, -0.002111959969624877, -0.0017343750223517418, -0.0013709960039705038, -0.0010337800486013293, -0.0007288947235792875, -0.00045297539327293634, -0.0001948371937032789, 6.053292963770218e-05, 0.00032660950091667473, 0.0006124817882664502, 0.0009185482049360871, 0.0012378570390865207, 0.001564068952575326, 0.001893679960630834, 0.00221976893953979, 0.0025295810773968697, 0.0028063540812581778, 0.0030363500118255615, 0.0032129939645528793, 0.0033374920021742582, 0.0034165910910815, 0.0034606740809977055, 0.0034813599195331335, 0.0034906489308923483, 0.0034994708839803934, 0.0035182919818907976, 0.0035558980889618397, 0.00361520703881979, 0.003695945953950286, 0.003795407945290208, 0.003907761070877314, 0.004024668131023645, 0.004136492032557726, 0.00423603318631649, 0.004319535102695227, 0.004388007801026106, 0.004446967970579863, 0.004506730008870363, 0.004578608088195324, 0.004670130088925362, 0.004783207084983587, 0.004916885867714882, 0.005072338972240686, 0.0052502150647342205, 0.005445058923214674, 0.005647997837513685, 0.0058472538366913795, 0.006033805198967457, 0.006203448865562677, 0.006356086116284132, 0.006493364926427603, 0.006616184953600168, 0.00672631710767746, 0.006828151177614927, 0.006926864851266146, 0.00702766003087163, 0.00713443523272872, 0.007245180197060108, 0.007350157015025616, 0.0074378130957484245, 0.0074975029565393925, 0.007523225154727697, 0.0075155640952289104, 0.007480955217033625, 0.007429860066622496, 0.007374675944447517, 0.007325944025069475, 0.007291014771908522, 0.007274349220097065, 0.007278814911842346, 0.007303480990231037, 0.00734067615121603, 0.007375959772616625, 0.007392701227217913, 0.007376622874289751, 0.0073180608451366425, 0.007212699856609106, 0.007062389049679041, 0.006874069105833769, 0.006658234167844057, 0.006426422856748104, 0.006187422201037407, 0.005946684163063765, 0.005708063021302223, 0.005477167200297117, 0.005258824210613966, 0.0050553129985928535, 0.004865483846515417, 0.004686030093580484, 0.00451247813180089, 0.004341073799878359, 0.0041698371060192585, 0.003999247215688229, 0.0038318370934575796, 0.0036699529737234116, 0.0035143019631505013, 0.0033659508917480707, 0.0032252310775220394, 0.0030887098982930183, 0.002950953086838126, 0.0028050069231539965, 0.0026465500704944134, 0.0024765098933130503, 0.002302831970155239, 0.002139424905180931, 0.0020022860262542963, 0.0019031900446861982, 0.001843431033194065, 0.0018170169787481427, 0.0018140010070055723, 0.0018227760447189212, 0.0018298060167580843, 0.001824249979108572, 0.001800440950319171, 0.0017588060582056642, 0.0017049240414053202, 0.001646692049689591, 0.0015920409932732582, 0.0015461919829249382, 0.0015101350145414472, 0.0014830559957772493, 0.0014644870534539223, 0.0014547760365530849, 0.0014553129440173507, 0.0014683579793199897, 0.0014954740181565285, 0.0015387580497190356, 0.0016008010134100914, 0.0016811899840831757, 0.0017765579978004098, 0.0018830789485946298, 0.001998485065996647, 0.0021213360596448183, 0.0022511850111186504, 0.0023900240194052458, 0.0025398049037903547, 0.0026982189156115055, 0.0028592830058187246, 0.0030166239012032747, 0.0031672129407525063, 0.0033076528925448656, 0.003431475954130292, 0.003535008989274502, 0.0036229740362614393, 0.003707712981849909, 0.003804486943408847, 0.003926115110516548, 0.0040784478187561035, 0.004260154906660318, 0.0044630891643464565, 0.0046766651794314384, 0.004889281932264566, 0.005089594051241875, 0.00526665011420846, 0.005413777194917202, 0.0055298940278589725, 0.005618747789412737, 0.005687003023922443, 0.005742535926401615, 0.0057909851893782616, 0.005834090057760477, 0.005872718058526516, 0.005910051986575127, 0.005950840190052986, 0.005997340194880962, 0.006047029048204422, 0.006096918135881424, 0.006146375089883804, 0.006192873232066631, 0.0062310281209647655, 0.006256944965571165, 0.006269981153309345, 0.006270762998610735, 0.006260876078158617, 0.0062415748834609985, 0.006212296895682812, 0.00617374200373888, 0.006127775181084871, 0.0060754078440368176, 0.006017690058797598, 0.005955791100859642, 0.00588958477601409, 0.005817533005028963, 0.005734569858759642, 0.0056337639689445496, 0.0055095660500228405, 0.005358742084354162, 0.005181643180549145, 0.0049833860248327255, 0.004775486886501312, 0.004574184771627188, 0.004393810871988535, 0.004242206923663616, 0.004119101911783218, 0.004016220103949308, 0.003922127187252045, 0.0038236009422689676, 0.00371062895283103, 0.003579607931897044, 0.0034316719975322485, 0.003270393004640937, 0.0031004250049591064, 0.002925537060946226, 0.0027479929849505424, 0.0025704388972371817, 0.0023958319798111916, 0.0022269131150096655, 0.00206645205616951, 0.0019174630288034678, 0.001780729042366147, 0.0016559589421376586, 0.0015441919676959515, 0.001446870039217174, 0.001365288975648582, 0.001298106973990798, 0.0012397109530866146, 0.0011849619913846254, 0.0011303520295768976, 0.0010740129509940743, 0.001015890040434897, 0.0009572735289111733, 0.0008999155834317207, 0.0008449078886769712, 0.000791871570982039, 0.0007384967757388949, 0.0006825255113653839, 0.000622642575763166, 0.0005578208947554231, 0.0004886828828603029, 0.000417859700974077, 0.00035008700797334313, 0.0002894772042054683, 0.00023946509463712573, 0.00020183839660603553, 0.00017658559954725206, 0.00016086810501292348, 0.000149606799823232, 0.00013434530410449952, 0.00010391510295448825, 4.900705971522257e-05, -3.3803098631324247e-05, -0.00014401449880097061, -0.0002800665097311139, -0.0004384999047033489, -0.000612017116509378, -0.0007915967144072056, -0.0009673450840637088, -0.0011314869625493884, -0.0012800239492207766, -0.001415360951796174, -0.0015430550556629896, -0.0016701120184734464, -0.0018043579766526818, -0.0019507290562614799, -0.0021085930056869984, -0.002272553974762559, -0.0024345279671251774, -0.0025859950110316277, -0.0027217420283704996, -0.002840162953361869, -0.002943475032225251, -0.0030360259115695953, -0.003121756948530674, -0.003205025102943182, -0.0032911000307649374, -0.0033849019091576338, -0.003489387920126319, -0.0036038109101355076, -0.0037250949535518885, -0.0038482239469885826, -0.003968026954680681, -0.004083964042365551, -0.0041988808661699295, -0.004319436848163605, -0.004450250882655382, -0.004591932985931635, -0.004740457981824875, -0.004890398122370243, -0.005038035102188587, -0.005180785898119211, -0.005319326184689999, -0.005457359831780195, -0.005600663833320141, -0.005754155106842518, -0.005918850190937519, -0.0060901460237801075, -0.0062584360130131245, -0.00641676178202033, -0.0065652597695589066, -0.006706944201141596, -0.006842183880507946, -0.006970723159611225, -0.007095642853528261, -0.007220290135592222, -0.007346066180616617, -0.007470616139471531, -0.007588899228721857, -0.007694859988987446, -0.007785233203321695, -0.007862390950322151, -0.007931454107165337, -0.007996373809874058, -0.008057196624577045, -0.008113401010632515, -0.008168810978531837, -0.008229328319430351, -0.008295906707644463, -0.008363301865756512, -0.008424894884228706, -0.0084750447422266, -0.008512662723660469, -0.008539708331227303, -0.008557957597076893, -0.008571000769734383, -0.008580543100833893, -0.008585730567574501, -0.008581962436437607, -0.008564100600779057, -0.008526523597538471, -0.008464147336781025, -0.00837605632841587, -0.008266052231192589, -0.008139819838106632, -0.008002858608961105, -0.007859398610889912, -0.007713045924901962, -0.007567673921585083, -0.00742444209754467, -0.007281640078872442, -0.007137254811823368, -0.0069912332110106945, -0.006846384145319462, -0.0067078350111842155, -0.006582279223948717, -0.0064745680429041386, -0.0063848658464848995, -0.0063102152198553085, -0.006247565150260925, -0.00619537103921175, -0.00615212507545948, -0.006113693118095398, -0.006072739139199257, -0.006019641179591417, -0.005946263205260038, -0.005850120913237333, -0.005734588950872421, -0.005607395898550749, -0.005478803068399429, -0.005357726011425257, -0.005248800851404667, -0.005151817109435797, -0.005062054842710495, -0.0049736639484763145, -0.004882000852376223, -0.00478530116379261, -0.00468373904004693, -0.004579300060868263, -0.004472469910979271, -0.00436204019933939, -0.004248653072863817, -0.004138747230172157, -0.004042723216116428, -0.0039689610712230206, -0.003920875955373049, -0.0038973239716142416, -0.0038914100732654333, -0.0038956899661570787, -0.003906317986547947, -0.003922254778444767, -0.003947305027395487, -0.003988970071077347, -0.004053561016917229, -0.004144656006246805, -0.004263576120138168, -0.004408115986734629, -0.004573367070406675, -0.004752185195684433, -0.0049341279082000256, -0.00510710384696722, -0.005260984878987074, -0.0053909700363874435, -0.005501023028045893, -0.005599136929959059, -0.005692796781659126, -0.00578588480129838, -0.005877489224076271, -0.005964632146060467, -0.00604231795296073, -0.006103782914578915, -0.0061411671340465546, -0.006150214001536369, -0.006133075803518295, -0.006095035932958126, -0.00604413915425539, -0.005987232085317373, -0.005929084029048681, -0.0058716111816465855, -0.005814800038933754, -0.00575815886259079, -0.005701403133571148, -0.00564158707857132, -0.005571584217250347, -0.005484092980623245, -0.0053740208968520164, -0.005240981932729483, -0.005089105106890202, -0.004923095926642418, -0.004744790028780699, -0.0045529319904744625, -0.004342828877270222, -0.004107378888875246, -0.003839801996946335, -0.003536726115271449, -0.0031997771002352238, -0.0028344730380922556, -0.002449217950925231, -0.002053949050605297, -0.001659017987549305, -0.001271659042686224, -0.0008929917821660638, -0.0005188505165278912, -0.0001419549953425303, 0.0002439542004140094, 0.0006425419123843312, 0.0010529380524531007, 0.001470818999223411, 0.0018903829623013735, 0.002308068098500371, 0.0027219669427722692, 0.0031325079035013914, 0.003540480975061655, 0.003947487100958824, 0.004355086944997311, 0.004761409014463425, 0.005160640925168991, 0.005544053856283426, 0.005901340860873461, 0.006221670191735029, 0.006497005932033062, 0.006725634913891554, 0.006910494063049555, 0.007056461181491613, 0.007170639932155609, 0.007260628044605255, 0.007330894935876131, 0.0073833828791975975, 0.007417337968945503, 0.007430917117744684, 0.0074213529005646706, 0.007387456018477678, 0.0073286499828100204, 0.007245216052979231, 0.007139727007597685, 0.007017055060714483, 0.006883217953145504, 0.0067420899868011475, 0.006592308171093464, 0.006430450826883316, 0.006253671832382679, 0.006059679202735424, 0.005847101099789143, 0.0056144618429243565, 0.005359373055398464, 0.005079666152596474, 0.00477564986795187, 0.004451189190149307, 0.004113273229449987, 0.0037683609407395124, 0.0034208849538117647, 0.003071758896112442, 0.002719936892390251, 0.00236537610180676, 0.0020095070358365774, 0.0016556510236114264, 0.0013079129857942462, 0.000969614484347403, 0.0006422554142773151, 0.00032563498825766146, 1.8200560589320958e-05, -0.0002811049052979797, -0.0005715335137210786, -0.000850957992952317, -0.0011178459972143173, -0.0013732770457863808, -0.001617736998014152, -0.0018487339839339256, -0.002062099054455757, -0.0022556630428880453, -0.002428831998258829, -0.0025808559730648994, -0.0027106909547001123, -0.002817742060869932, -0.002902266103774309, -0.0029646409675478935, -0.0030069819185882807, -0.0030332980677485466, -0.0030487258918583393, -0.003057424910366535, -0.00306293205358088, -0.003066397039219737, -0.0030661579221487045, -0.0030590470414608717, -0.0030439419206231833, -0.003022893099114299, -0.002996578114107251, -0.0029625750612467527, -0.002916967961937189, -0.002857594983652234, -0.0027851059567183256, -0.0027040699496865273, -0.002619815059006214, -0.002535017905756831, -0.0024490379728376865, -0.0023586119059473276, -0.0022608148865401745, -0.002154347952455282, -0.0020392739679664373, -0.0019150619627907872, -0.001779443002305925, -0.0016312970547005534, -0.0014704560162499547, -0.0012976420111954212, -0.001114540034905076, -0.0009235054021701217, -0.0007263246225193143, -0.0005261803744360805, -0.0003296328941360116, -0.00014373719750437886, 2.6170300770900212e-05, 0.00017860760272014886, 0.0003161614004056901, 0.0004421308112796396, 0.0005559924175031483, 0.0006532701081596315, 0.0007274319068528712, 0.0007736412226222456, 0.0007902372744865716, 0.0007772095268592238, 0.000734152621589601, 0.0006628957926295698, 0.0005686507793143392, 0.0004587121948134154, 0.0003397235122974962, 0.0002177088026655838, 9.791606134967878e-05, -1.4769500012334902e-05, -0.00011857839854201302, -0.00021537620341405272, -0.0003082547918893397, -0.0004010942066088319, -0.0004959192010574043, -0.0005937623791396618, -0.0006948295049369335, -0.0007967168930917978, -0.0008966164896264672, -0.0009914733236655593, -0.001079921959899366, -0.001166015979833901, -0.0012593260034918785, -0.001370641984976828, -0.0015074419789016247, -0.0016715589445084333, -0.001858141040429473, -0.002057932084426284, -0.002262287074699998, -0.0024647200480103493, -0.0026568749453872442, -0.002830313052982092, -0.002983293030411005, -0.00312033505178988, -0.003246121108531952, -0.0033637341111898422, -0.0034754390362650156, -0.0035809900145977736, -0.003677159082144499, -0.0037605890538543463, -0.003829641966149211, -0.00388701306656003, -0.0039390381425619125, -0.003993466030806303, -0.0040565840899944305, -0.004131331108510494, -0.004217354115098715, -0.004312026780098677, -0.004412556998431683, -0.004517427179962397, -0.004622055217623711, -0.004718611016869545, -0.0047987219877541065, -0.004854802042245865, -0.00487927719950676, -0.004865867085754871, -0.0048133558593690395, -0.004725527949631214, -0.004613080061972141, -0.004489774815738201, -0.004366355016827583, -0.0042484961450099945, -0.004136903211474419, -0.0040308209136128426, -0.00393061013892293, -0.003837602911517024, -0.003750791074708104, -0.003664728021249175, -0.0035728150978684425, -0.003469852963462472, -0.003350293030962348, -0.0032085429411381483, -0.0030411980114877224, -0.0028476009611040354, -0.0026279110461473465, -0.002385210944339633, -0.0021252608858048916, -0.0018529710359871387, -0.0015717160422354937, -0.0012847620528191328, -0.0009992121485993266, -0.0007237925892695785, -0.0004652384086512029, -0.00022637119400314987, -5.934028195042629e-06, 0.00020074620260857046, 0.00040011509554460645, 0.0005980920977890491, 0.0007991651073098183, 0.0010053960140794516, 0.0012174659641459584, 0.0014357749605551362, 0.0016596369678154588, 0.0018856329843401909, 0.0021081441082060337, 0.0023220779839903116, 0.0025231209583580494, 0.002707473933696747, 0.0028741098940372467, 0.0030259808991104364, 0.003171880031004548, 0.003325415076687932, 0.0034952270798385143, 0.003679900895804167, 0.0038725959602743387, 0.00406360998749733, 0.004242944996803999, 0.004401661921292543, 0.004534839186817408, 0.004644162021577358, 0.004735354799777269, 0.004814593121409416, 0.004887061193585396, 0.004955505020916462, 0.005019871983677149, 0.005077658221125603, 0.005125896073877811, 0.005162192042917013, 0.005186235066503286, 0.005199161823838949, 0.005204879213124514, 0.0052079129964113235, 0.005207145120948553, 0.005198093131184578, 0.005176878999918699, 0.005140787921845913, 0.005085784010589123, 0.005009497050195932, 0.0049119628965854645, 0.004794557113200426, 0.004659648053348064, 0.0045097749680280685, 0.004349148832261562, 0.004183366894721985, 0.004019200801849365, 0.0038595409132540226, 0.0037002419121563435, 0.00353301502764225, 0.0033511288929730654, 0.0031521229539066553, 0.002936257980763912, 0.0027047640178352594, 0.002459289040416479, 0.002201161114498973, 0.001930902013555169, 0.0016491520218551159, 0.0013582879910245538, 0.0010610379977151752, 0.0007610428147017956, 0.00046268620644696057, 0.00016881090414244682, -0.00012012980005238205, -0.0004056986072100699, -0.0006881278241053224, -0.0009643840021453798, -0.0012307410361245275, -0.0014846209669485688, -0.0017230029916390777, -0.0019416429568082094, -0.0021388770546764135, -0.0023138821125030518, -0.0024670620914548635, -0.002598749939352274, -0.002709273947402835, -0.002802706090733409, -0.002886418020352721, -0.002966729924082756, -0.003048270009458065, -0.0031346420291811228, -0.003228631103411317, -0.0033311680890619755, -0.0034386650659143925, -0.0035412150900810957, -0.0036252550780773163, -0.003679540939629078, -0.003697497071698308, -0.003677044063806534, -0.003621577052399516, -0.003537385957315564, -0.0034325439482927322, -0.003316018031910062, -0.003193975891917944, -0.0030678780749440193, -0.00293358089402318, -0.002786792116239667, -0.002626151079311967, -0.002450333908200264, -0.0022587410639971495, -0.002050834009423852, -0.00182780297473073, -0.0015929179498925805, -0.0013503310037776828, -0.0011046630097553134, -0.0008581954753026366, -0.0006109807873144746, -0.0003609434934332967, -0.00010707639739848673, 0.00015219260239973664, 0.0004172185144852847, 0.0006842506118118763, 0.0009466796764172614, 0.0011991240317001939, 0.0014399780193343759, 0.001669747056439519, 0.0018887219484895468, 0.0020961069967597723, 0.002288839081302285, 0.0024611279368400574, 0.002607583999633789, 0.0027257311157882214, 0.0028169320430606604, 0.0028864520136266947, 0.0029422419611364603, 0.0029927389696240425, 0.003041737014427781, 0.0030864239670336246, 0.00312620191834867, 0.0031639039516448975, 0.0032001000363379717, 0.0032359519973397255, 0.0032726700883358717, 0.003311116946861148, 0.0033492879010736942, 0.0033827871084213257, 0.003407890908420086, 0.0034218239597976208, 0.0034235629718750715, 0.0034130949061363935, 0.0033907799515873194, 0.003357931040227413, 0.003315173089504242, 0.0032602380961179733, 0.003189187031239271, 0.003099139081314206, 0.002989462111145258, 0.002861953107640147, 0.002719075884670019, 0.0025626320857554674, 0.0023972229100763798, 0.0022297720424830914, 0.002066605957224965, 0.0019110890571027994, 0.001766782021149993, 0.0016360509907826781, 0.0015170919941738248, 0.0014064100105315447, 0.0013030900154262781, 0.00120984495151788, 0.0011311030248180032, 0.0010710930218920112, 0.0010311369551345706, 0.0010087150149047375, 0.0009954303968697786, 0.0009781495900824666, 0.0009450215729884803, 0.0008900549728423357, 0.0008125274907797575, 0.0007151099853217602, 0.000602979096584022, 0.0004833797866012901, 0.00036531168734654784, 0.0002577932027634233, 0.00016793109534773976, 9.775689250091091e-05, 4.399962926981971e-05, -2.186608071497176e-06, -5.252753180684522e-05, -0.00011860320228151977, -0.0002072398056043312, -0.000320561695843935, -0.0004557254142127931, -0.0006069759256206453, -0.0007655143272131681, -0.0009216144098900259, -0.0010675829835236073, -0.0011981399729847908, -0.001310474006459117, -0.0014031470054760575, -0.0014790119603276253, -0.001544579048641026, -0.0016078590415418148, -0.0016760060098022223, -0.001753531047143042, -0.0018414410296827555, -0.0019350829534232616, -0.0020246650092303753, -0.002100266981869936, -0.002155713038519025, -0.002191165927797556, -0.002212811028584838, -0.0022300430573523045, -0.0022514129523187876, -0.0022812848910689354, -0.002321098931133747, -0.0023690781090408564, -0.002418472897261381, -0.002460357965901494, -0.002487112069502473, -0.002495362889021635, -0.0024886620230972767, -0.002475043060258031, -0.0024637789465487003, -0.0024632608983665705, -0.002479197923094034, -0.0025123769883066416, -0.002558151027187705, -0.002610997064039111, -0.0026693108957260847, -0.002733703004196286, -0.002804072108119726, -0.002878759056329727, -0.0029541810508817434, -0.003024251898750663, -0.0030807489529252052, -0.003115844912827015, -0.003125949064269662, -0.0031147769186645746, -0.003089637029916048, -0.00305755902081728, -0.0030236931052058935, -0.0029925319831818342, -0.0029677439015358686, -0.0029526820871979, -0.002949279034510255, -0.0029585170559585094, -0.002981276949867606, -0.0030146129429340363, -0.0030517498962581158, -0.0030858370009809732, -0.003110029036179185, -0.003118820022791624, -0.0031119019258767366, -0.0030951460357755423, -0.003079579910263419, -0.0030774909537285566, -0.003097858978435397, -0.003143901005387306, -0.003212854964658618, -0.0032961389515548944, -0.0033816860523074865, -0.0034559189807623625, -0.0035065640695393085, -0.003528354922309518, -0.0035239860881119967, -0.0035005579702556133, -0.003463844070211053, -0.003418449079617858, -0.003371377009898424, -0.0033274369779974222, -0.0032900699879974127, -0.0032648949418216944, -0.003256801050156355, -0.0032671289518475533, -0.003295823000371456, -0.003342228941619396, -0.0034042210318148136, -0.0034788260236382484, -0.0035625749733299017, -0.0036525160539895296, -0.003745890920981765, -0.0038401149213314056, -0.003933708183467388, -0.004027105867862701, -0.0041204290464520454, -0.00421327818185091, -0.004305209964513779, -0.0043964628130197525, -0.004486040212213993, -0.004569388926029205, -0.00464041018858552, -0.0046959188766777515, -0.004736252129077911, -0.004765986930578947, -0.004790558014065027, -0.0048129260540008545, -0.004833301994949579, -0.0048491028137505054, -0.004856468178331852, -0.004851684905588627, -0.00483294203877449, -0.004802356008440256, -0.00476333312690258, -0.004717757925391197, -0.004666610155254602, -0.004611127078533173, -0.004549779929220676, -0.004479933064430952, -0.004401416052132845, -0.004312395118176937, -0.0042081861756742, -0.004083158913999796, -0.003937101922929287, -0.0037756790407001972, -0.0036044290754944086, -0.003425274044275284, -0.003237440949305892, -0.0030400999821722507, -0.00283239409327507, -0.0026142029091715813, -0.0023851320147514343, -0.002145339036360383, -0.0018941080197691917, -0.0016323650488629937, -0.0013647939777001739, -0.0010979940416291356, -0.0008388599962927401, -0.0005905242287553847, -0.0003528982924763113, -0.00012516060087364167, 9.53784110606648e-05, 0.0003122044145129621, 0.0005267265951260924, 0.0007372780237346888, 0.0009431309881620109, 0.0011432430474087596, 0.0013372759567573667, 0.0015273080207407475, 0.0017160970019176602, 0.001906228018924594, 0.0020993819925934076, 0.002295789076015353, 0.002494585933163762, 0.00269230711273849, 0.002884153975173831, 0.0030652759596705437, 0.003233525902032852, 0.003389693098142743, 0.003537710988894105, 0.003683722112327814, 0.003834052011370659, 0.0039931610226631165, 0.0041623301804065704, 0.004341109190136194, 0.004527869168668985, 0.004720817785710096, 0.004917339887470007, 0.00511130690574646, 0.005295002833008766, 0.005459715146571398, 0.005598627962172031, 0.005710025783628225, 0.005796314217150211, 0.0058633009903132915, 0.005920260213315487, 0.005974397994577885, 0.006026641931384802, 0.00607368815690279, 0.006111370865255594, 0.006136793177574873, 0.006147541105747223, 0.006139200180768967, 0.00610625185072422, 0.006046317983418703, 0.005960916168987751, 0.005856283940374851, 0.005740281194448471, 0.005621106829494238, 0.005506189074367285, 0.005402176175266504, 0.005315203219652176, 0.005248030181974173, 0.005199462175369263, 0.005162876099348068, 0.005130121950060129, 0.005094694904983044, 0.005052247084677219, 0.004999728873372078, 0.004933854099363089, 0.004850327968597412, 0.004744228906929493, 0.0046132029965519905, 0.004458711016923189, 0.004285316914319992, 0.004098689183592796, 0.003903189906850457, 0.003704586997628212, 0.0035094809718430042, 0.0033251389395445585, 0.003157644998282194, 0.00300621404312551, 0.0028635719791054726, 0.0027213268913328648, 0.0025741111021488905, 0.0024230070412158966, 0.002275309059768915, 0.002140275901183486, 0.002026794943958521, 0.0019378210417926311, 0.0018663350492715836, 0.0018001629505306482, 0.0017300710314884782, 0.0016498699551448226, 0.0015558069571852684, 0.0014465400017797947, 0.0013217260129749775, 0.0011822109809145331, 0.0010312780505046248, 0.0008707402157597244, 0.0007005520164966583, 0.0005209494847804308, 0.00033475441159680486, 0.00014475149509962648, -4.6747121814405546e-05, -0.0002381942031206563, -0.0004291397053748369, -0.0006201153737492859, -0.0008122968138195574, -0.001006921986117959, -0.001204660045914352, -0.0014047930017113686, -0.0016029729740694165, -0.0017934819916263223, -0.0019688960164785385, -0.0021218189503997564, -0.002246788004413247, -0.002341632964089513, -0.00240674102678895, -0.0024457979016005993, -0.0024645240046083927, -0.002469219034537673, -0.002466013887897134, -0.002458408009260893, -0.0024475969839841127, -0.002435833914205432, -0.0024256580509245396, -0.0024196358863264322, -0.0024202989879995584, -0.0024276229087263346, -0.00243781809695065, -0.002446606056764722, -0.002451889915391803, -0.002454387955367565, -0.002460543066263199, -0.0024766160640865564, -0.002503457944840193, -0.002536504063755274, -0.002569227945059538, -0.0025978200137615204, -0.0026210499927401543, -0.0026368380058556795, -0.0026424298994243145, -0.002635096898302436, -0.0026139039546251297, -0.002580022905021906, -0.0025344460736960173, -0.0024774689227342606, -0.0024093580432236195, -0.002327559981495142, -0.0022268889006227255, -0.0021018690895289183, -0.0019498890032991767, -0.0017731740372255445, -0.0015794399660080671, -0.0013772440142929554, -0.0011714099673554301, -0.0009625247912481427, -0.0007526783156208694, -0.0005477805971167982, -0.0003561727935448289, -0.00018369349709246308, -3.24807406286709e-05, 9.80686818365939e-05, 0.00021109300723765045, 0.0003101624024566263, 0.000396756106056273, 0.0004710571956820786, 0.0005352835869416595, 0.0005920956027694046, 0.0006434955867007375, 0.0006910678930580616, 0.0007372627151198685, 0.0007845665095373988, 0.0008349596173502505, 0.0008910964825190604, 0.0009559288155287504, 0.0010294540552422404, 0.0011082839919254184, 0.0011865530395880342, 0.0012602920178323984, 0.001329301972873509, 0.0013947909465059638, 0.001456795958802104, 0.001514520961791277, 0.0015664820093661547, 0.0016130040166899562, 0.0016584020340815187, 0.0017095690127462149, 0.001774588949047029, 0.001858597039245069, 0.001961875008419156, 0.002078078920021653, 0.0021970150992274284, 0.0023086159490048885, 0.0024058809503912926, 0.0024859749246388674, 0.0025480089243501425, 0.0025941459462046623, 0.0026292919646948576, 0.0026569049805402756, 0.0026781719643622637, 0.002692050999030471, 0.0026964759454131126, 0.0026885580737143755, 0.0026663439348340034, 0.002630518050864339, 0.002583181019872427, 0.0025260529946535826, 0.002462860895320773, 0.0024004289880394936, 0.002345910994336009, 0.002303536981344223, 0.002272275974974036, 0.0022479610051959753, 0.002224506111815572, 0.0021963799372315407, 0.0021605188958346844, 0.00211698398925364, 0.0020692269317805767, 0.002021318068727851, 0.0019755640532821417, 0.0019308320479467511, 0.001881906995549798, 0.0018236140022054315, 0.0017537360545247793, 0.0016733469674363732, 0.0015845310408622026, 0.00148994498886168, 0.0013945299433544278, 0.0013037329772487283, 0.001219009980559349, 0.0011407899437472224, 0.0010712449438869953, 0.0010136429918929935, 0.0009696868946775794, 0.0009355348884128034, 0.0009027820779010653, 0.000863162218593061, 0.0008093140204437077, 0.0007337951101362705, 0.00063374760793522, 0.0005135310930199921, 0.0003839572018478066, 0.0002593300014268607, 0.00015117159637156874, 6.685186963295564e-05, 6.862565896881279e-06, -3.369971091160551e-05, -6.397612014552578e-05, -9.546388173475862e-05, -0.00014042049588169903, -0.00020847779524046928, -0.00030382920522242785, -0.00042458390817046165, -0.0005623751785606146, -0.0007047618273645639, -0.0008397898054681718, -0.0009585008956491947, -0.0010535550536587834, -0.0011210109805688262, -0.00116292096208781, -0.0011855709599331021, -0.00119864905718714, -0.0012135700089856982, -0.001238288008607924, -0.001276141032576561, -0.0013289670459926128, -0.0013992589665576816, -0.0014888319419696927, -0.001595727982930839, -0.0017136710230261087, -0.0018332699546590447, -0.0019455800065770745, -0.002043843036517501, -0.002128175925463438, -0.0022072310093790293, -0.0022935180459171534, -0.002398150973021984, -0.002527069067582488, -0.002678960096091032, -0.0028466819785535336, -0.0030199920292943716, -0.0031875199638307095, -0.003338616108521819, -0.0034644820261746645, -0.0035620180424302816, -0.00363483396358788, -0.003686971962451935, -0.0037217820063233376, -0.0037410850636661053, -0.0037453279364854097, -0.003736312035471201, -0.0037184099201112986, -0.00369632407091558, -0.003673240076750517, -0.003649734891951084, -0.0036255279555916786, -0.0036025019362568855, -0.003583149053156376, -0.003566635074093938, -0.0035474400501698256, -0.0035194531083106995, -0.0034796649124473333, -0.003426804905757308, -0.003360525006428361, -0.003283476922661066, -0.0032028919085860252, -0.0031253378838300705, -0.00305189099162817, -0.002980933990329504, -0.0029126419685781, -0.002847529947757721, -0.002785047050565481, -0.0027230610139667988, -0.002660714089870453, -0.002598447958007455, -0.002537267981097102, -0.002476020948961377, -0.002408944070339203, -0.002326984889805317, -0.0022216381039470434, -0.002087861066684127, -0.001926859957166016, -0.0017465970013290644, -0.0015583459753543139, -0.0013733910163864493, -0.001201704959385097, -0.0010496790055185556, -0.0009187799878418446, -0.0008063819259405136, -0.0007071256986819208, -0.0006148894899524748, -0.0005226152134127915, -0.00042388291331008077, -0.0003142768982797861, -0.00019216339569538832, -5.951747152721509e-05, 7.694320811424404e-05, 0.0002105468010995537, 0.0003366802993696183, 0.0004532797902356833, 0.0005619733710773289, 0.000667095126118511, 0.0007740759174339473, 0.0008879692177288234, 0.0010096350451931357, 0.001133844954892993, 0.0012525529600679874, 0.0013603479601442814, 0.0014561739517375827, 0.0015414520166814327, 0.001617391943000257, 0.0016836229478940368, 0.001739092986099422, 0.0017842239467427135, 0.0018212479772046208, 0.0018554830458015203, 0.0018967429641634226, 0.001956051914021373, 0.002040525898337364, 0.0021496149711310863, 0.0022730990312993526, 0.002394930925220251, 0.0024997319560498, 0.0025773909874260426, 0.0026245610788464546, 0.002644122112542391, 0.0026428319979459047, 0.002629257971420884, 0.0026116210501641035, 0.0025957811158150434, 0.0025837980210781097, 0.002572209108620882, 0.002555226907134056, 0.002527375938370824, 0.002487397054210305, 0.002440233016386628, 0.0023931520991027355, 0.002353498013690114, 0.002327864058315754, 0.002322529908269644, 0.002342232968658209, 0.0023860109504312277, 0.0024486519396305084, 0.002520421054214239, 0.002592393895611167, 0.002658477984368801, 0.002714663976803422, 0.0027563991025090218, 0.002778874011710286, 0.0027804209385067225, 0.002764103002846241, 0.002738154958933592, 0.002711303997784853, 0.002689091954380274, 0.002674889052286744, 0.002666576998308301, 0.0026588928885757923, 0.002646910957992077, 0.002630491042509675, 0.002611943054944277, 0.0025910090189427137, 0.0025643070694059134, 0.0025298648979514837, 0.0024878359399735928, 0.0024391699116677046, 0.002385498955845833, 0.002327623078599572, 0.0022635229397565126, 0.002188713988289237, 0.002097086049616337, 0.0019849929958581924, 0.0018527399515733123, 0.001704085967503488, 0.001546362997032702, 0.001387897995300591, 0.0012344949645921588, 0.0010891889687627554, 0.000952532805968076, 0.0008238130249083042, 0.0007016825838945806, 0.0005836791242472827, 0.0004654667864087969, 0.0003441711887717247, 0.0002184865006711334, 8.782903023529798e-05, -4.5687258534599096e-05, -0.00017866170674096793, -0.0003086568904109299, -0.0004326665948610753, -0.000550789525732398, -0.0006706317071802914, -0.0008006033021956682, -0.0009441060828976333, -0.001098425011150539, -0.0012550370302051306, -0.0014039749512448907, -0.001539719058200717, -0.0016633080085739493, -0.0017797050531953573, -0.0018925060285255313, -0.0020016098860651255, -0.0021033459343016148, -0.002193426014855504, -0.0022714571096003056, -0.002342693042010069, -0.002414810936897993, -0.0024944539181888103, -0.0025854469276964664, -0.0026878919452428818, -0.0027996220160275698, -0.0029178059194236994, -0.0030398499220609665, -0.0031617190688848495, -0.0032808019313961267, -0.003396738087758422, -0.003510002978146076, -0.003621448064222932, -0.003731065895408392, -0.0038369710091501474, -0.003937243018299341, -0.004029289819300175, -0.004111084155738354, -0.004182862117886543, -0.004248627927154303, -0.004313203971832991, -0.004381441045552492, -0.004457737784832716, -0.004544905852526426, -0.004644509870558977, -0.004756723064929247, -0.00488028209656477, -0.0050116111524403095, -0.005143885966390371, -0.005268346983939409, -0.005376465152949095, -0.005459901876747608, -0.005512785166501999, -0.005535533186048269, -0.0055314539931714535, -0.005503926891833544, -0.005454399157315493, -0.005383365787565708, -0.005291415844112635, -0.005180887877941132, -0.005055973771959543, -0.004920244216918945, -0.004777752794325352, -0.0046328529715538025, -0.004491350147873163, -0.004358070902526379, -0.004233858082443476, -0.004116512835025787, -0.003999824170023203, -0.003873986890539527, -0.003729880088940263, -0.0035643549636006355, -0.003382145892828703, -0.00319176004268229, -0.003003990976139903, -0.0028285218868404627, -0.002670888090506196, -0.0025309710763394833, -0.002405162900686264, -0.0022882199846208096, -0.002173142973333597, -0.0020511068869382143, -0.0019156710477545857, -0.0017634800169616938, -0.001593629946000874, -0.0014055799692869186, -0.0012004160089418292, -0.000980276963673532, -0.0007490921998396516, -0.0005115647800266743, -0.0002735719026532024, -4.126251951674931e-05, 0.00017953060159925371, 0.0003860403085127473, 0.0005809601861983538, 0.0007715310784988105, 0.0009647805709391832, 0.001163744949735701, 0.0013683190336450934, 0.0015768849989399314, 0.0017888459842652082, 0.002004150999709964, 0.002220707945525646, 0.0024355431087315083, 0.002645188942551613, 0.002845047041773796, 0.003029565094038844, 0.003195347962900996, 0.003343688091263175, 0.003480267943814397, 0.003612264059484005, 0.003743262030184269, 0.0038708948995918036, 0.003987696021795273, 0.004082769155502319, 0.0041454569436609745, 0.004169827792793512, 0.0041566272266209126, 0.0041132839396595955, 0.0040521021001040936, 0.003986279014497995, 0.003924666903913021, 0.003871372900903225, 0.0038255269173532724, 0.003780171973630786, 0.0037253079935908318, 0.0036521509755402803, 0.003554099937900901, 0.0034270728938281536, 0.0032712509855628014, 0.003090586978942156, 0.002893157070502639, 0.002690244000405073, 0.002491577062755823, 0.0023038729559630156, 0.0021316800266504288, 0.001978403888642788, 0.0018441410502418876, 0.0017257039435207844, 0.0016157299978658557, 0.001504412037320435, 0.001381470006890595, 0.001239671022631228, 0.0010768090141937137, 0.000894047028850764, 0.0006933010881766677, 0.0004771254025399685, 0.00024784920969977975, 9.820356353884563e-06, -0.00023023970425128937, -0.00046617400948889554, -0.0006957467994652689, -0.0009206081740558147, -0.001146299997344613, -0.0013783039757981896, -0.0016184940468519926, -0.0018645819509401917, -0.002110379049554467, -0.002348564099520445, -0.0025734470691531897, -0.0027808710001409054, -0.002969555091112852, -0.0031407650094479322, -0.003298253985121846, -0.0034462010953575373, -0.003586254082620144, -0.003717822954058647, -0.0038410110864788294, -0.003956274129450321, -0.00406675087288022, -0.00417625205591321, -0.00428594509139657, -0.004394026007503271, -0.004494733177125454, -0.0045764087699353695, -0.00462556816637516, -0.004632939118891954, -0.004596391227096319, -0.004520163871347904, -0.0044142939150333405, -0.0042933807708323, -0.004174899775534868, -0.004071950912475586, -0.003989284858107567, -0.003924903925508261, -0.003870787099003792, -0.0038156649097800255, -0.003750031115487218, -0.003668529912829399, -0.003573040943592787, -0.003469873918220401, -0.0033643520437180996, -0.0032595519442111254, -0.003154108067974448, -0.0030435570515692234, -0.0029242360033094883, -0.0027956541161984205, -0.00266043609008193, -0.0025227200239896774, -0.002384474966675043, -0.002246009884402156, -0.0021077790297567844, -0.001969690900295973, -0.0018333570333197713, -0.0017010070150718093, -0.0015720550436526537, -0.001443765009753406, -0.0013137819478288293, -0.001181459054350853, -0.001050604972988367, -0.00092940719332546, -0.0008239587186835706, -0.0007349994848482311, -0.0006615049205720425, -0.0005993858212605119, -0.0005405992269515991, -0.00047595371142961085, -0.00040009309304878116, -0.00031440731254406273, -0.00022501099738292396, -0.00013978520291857421, -6.471361848525703e-05, -2.905884002757375e-06, 4.584455018630251e-05, 8.397395868087187e-05, 0.00011351770081091672, 0.0001373744016746059, 0.00015817969688214362, 0.00017851039592642337, 0.0001995351049117744, 0.00022343400632962584, 0.0002527603937778622, 0.00028733789804391563, 0.0003263925027567893, 0.0003667270066216588, 0.00040237800567410886, 0.00042929701157845557, 0.0004473711014725268, 0.0004585426941048354, 0.0004645886947400868, 0.0004649448092095554, 0.0004580586974043399, 0.0004435514856595546, 0.00042280511115677655, 0.0003993242862634361, 0.00037774149677716196, 0.00036106299376115203, 0.0003515832941047847, 0.0003505928907543421, 0.00035751701216213405, 0.00036932871444150805, 0.0003823117003776133, 0.000392376008676365, 0.0003986970114056021, 0.00040519749745726585, 0.0004173381021246314, 0.00043873500544577837, 0.00046928550000302494, 0.0005061295232735574, 0.0005440819077193737, 0.0005763655062764883, 0.0005959096015430987, 0.0005993582890368998, 0.0005894490168429911, 0.000571661104913801, 0.0005533850053325295, 0.0005439845845103264, 0.0005510594928637147, 0.0005798278143629432, 0.0006302808178588748, 0.0006950877723284066, 0.0007629402098245919, 0.0008250916725955904, 0.0008772545261308551, 0.0009180242195725441, 0.0009493487887084484, 0.0009745795978233218, 0.0009974613785743713, 0.001021640026010573, 0.0010503659723326564, 0.0010850309627130628, 0.0011254360433667898, 0.00117031903937459, 0.0012173140421509743, 0.00126552302390337, 0.001316088018938899, 0.0013689040206372738, 0.0014227740466594696, 0.0014773469883948565, 0.0015336730284616351, 0.0015929300570860505, 0.0016562719829380512, 0.0017227299977093935, 0.0017902350518852472, 0.0018538259901106358, 0.001903568976558745, 0.0019310059724375606, 0.0019353260286152363, 0.0019216480432078242, 0.0018961339956149459, 0.0018643479561433196, 0.0018283670069649816, 0.0017884890548884869, 0.0017457560170441866, 0.0017017009668052197, 0.001657673972658813, 0.0016139160143211484, 0.0015689609572291374, 0.0015204859664663672, 0.0014669609954580665, 0.0014081510016694665, 0.0013443779898807406, 0.0012751939939334989, 0.001198905985802412, 0.0011125010205432773, 0.001013459055684507, 0.0009024729952216148, 0.0007840400794520974, 0.0006649530841968954, 0.0005532986833713949, 0.00045550669892691076, 0.0003748559101950377, 0.0003122513007838279, 0.0002662868064362556, 0.00023569150653202087, 0.00021896109683439136, 0.00021521009330172092, 0.0002239380992250517, 0.00024327420396730304, 0.0002695737057365477, 0.0002980506978929043, 0.00032530329190194607, 0.00034807249903678894, 0.00036334770265966654, 0.0003703027905430645, 0.00036982129677198827, 0.0003638791968114674, 0.0003557495947461575, 0.00034873010008595884, 0.0003467164933681488, 0.00035553230554796755, 0.0003812561044469476, 0.00042612760444171727, 0.00048744140076451004, 0.0005574919050559402, 0.0006280377856455743, 0.0006944378837943077, 0.0007565144915133715, 0.0008170027867890894, 0.0008792533772066236, 0.0009477296844124794, 0.0010276760440319777, 0.001124851987697184, 0.0012447419576346874, 0.0013891840353608131, 0.0015540029853582382, 0.0017292409902438521, 0.001906124991364777, 0.00207872805185616, 0.0022450019605457783, 0.002402703044936061, 0.002547220094129443, 0.0026737460866570473, 0.002778321970254183, 0.002861842978745699, 0.0029312320984899998, 0.002996186027303338, 0.0030651050619781017, 0.003144321031868458, 0.0032380390912294388, 0.0033481260761618614, 0.003473808988928795, 0.003613336943089962, 0.003765546018257737, 0.003927525132894516, 0.004092772025614977, 0.004252876155078411, 0.004398656077682972, 0.004524720832705498, 0.004631946794688702, 0.004725352860987186, 0.004811055026948452, 0.0048958538100123405, 0.004985225852578878, 0.005080495961010456, 0.005180826876312494, 0.005284599959850311, 0.005390620790421963, 0.0054969871416687965, 0.005601552780717611, 0.005700618028640747, 0.005788764916360378, 0.005862697027623653, 0.005922925192862749, 0.005971552804112434, 0.006009124219417572, 0.006037565879523754, 0.006062528118491173, 0.0060910121537745, 0.006127906963229179, 0.00617229612544179, 0.006218248978257179, 0.006258769892156124, 0.006288518197834492, 0.006302117835730314, 0.006294506136327982, 0.006263377144932747, 0.006209570914506912, 0.0061372630298137665, 0.006052377168089151, 0.0059565887786448, 0.0058463867753744125, 0.005717895925045013, 0.0055698188953101635, 0.005402817856520414, 0.005217975936830044, 0.0050182039849460125, 0.00480598583817482, 0.004581667948514223, 0.0043479399755597115, 0.004109859932214022, 0.0038733540568500757, 0.0036430410109460354, 0.00342353992164135, 0.0032187621109187603, 0.0030298810452222824, 0.0028576808981597424, 0.0027034298982471228, 0.002566710114479065, 0.0024433990474790335, 0.0023269408848136663, 0.0022121239453554153, 0.002095910022035241, 0.001973968930542469, 0.001838825992308557, 0.001685169991105795, 0.0015131899854168296, 0.0013280239654704928, 0.001137665007263422, 0.0009503794135525823, 0.000772322528064251, 0.0006063159089535475, 0.0004522883100435138, 0.00030637270538136363, 0.0001654421939747408, 2.765353929135017e-05, -0.00010803530312841758, -0.00024081330047920346, -0.00036692930734716356, -0.00048160439473576844, -0.0005813195020891726, -0.0006634125020354986, -0.0007287369226105511, -0.0007816933793947101, -0.0008249552920460701, -0.000859652878716588, -0.000887213391251862, -0.0009082541218958795, -0.0009208836127072573, -0.000924505409784615, -0.0009216823964379728, -0.0009157533058896661, -0.0009085077908821404, -0.0008983553852885962, -0.0008830698789097369, -0.0008610949153080583, -0.000830075703561306, -0.0007889497792348266, -0.0007374819251708686, -0.0006777315866202116, -0.00061281758826226, -0.0005462266271933913, -0.0004833152052015066, -0.000431729102274403, -0.00039766650297679007, -0.00038372058770619333, -0.0003908062062691897, -0.00041918960050679743, -0.0004671151109505445, -0.0005292203277349472, -0.0005959001719020307, -0.0006586600211448967, -0.0007130461162887514, -0.0007588529260829091, -0.0007975143962539732, -0.0008339544874615967, -0.0008763156947679818, -0.0009321817778982222, -0.0010027979733422399, -0.001084518968127668, -0.0011711700353771448, -0.0012575549772009254, -0.001341228955425322, -0.0014228059444576502, -0.001503617037087679, -0.0015843380242586136, -0.0016660169931128621, -0.0017513480270281434, -0.001842699944972992, -0.0019420030293986201, -0.0020496940705925226, -0.002163924975320697, -0.0022797859273850918, -0.002389068016782403, -0.0024839791003614664, -0.0025601049419492483, -0.0026151658967137337, -0.0026508138980716467, -0.002672746079042554, -0.002688613021746278, -0.002705605933442712, -0.0027302668895572424, -0.002765144919976592, -0.0028083580546081066, -0.002855984028428793, -0.0029025119729340076, -0.002942410996183753, -0.0029705630149692297, -0.0029822099022567272, -0.002970705972984433, -0.002929378068074584, -0.0028582599479705095, -0.0027619050815701485, -0.0026467670686542988, -0.0025197009090334177, -0.002387958113104105, -0.0022587270941585302, -0.002138084964826703, -0.0020302319899201393, -0.0019387720385566354, -0.0018637980101630092, -0.0018002160359174013, -0.0017401829827576876, -0.0016770800575613976, -0.0016065869713202119, -0.0015286150155588984, -0.0014468779554590583, -0.0013682759599760175, -0.0013001069892197847, -0.0012480879668146372, -0.0012139660539105535, -0.0011941459961235523, -0.0011805229587480426, -0.0011637309798970819, -0.0011381020303815603, -0.001104666036553681, -0.0010675130179151893, -0.0010296580148860812, -0.000991868320852518, -0.0009535283898003399, -0.0009144479990936816, -0.0008759383927099407, -0.0008394562173634768, -0.0008060242980718613, -0.0007773120887577534, -0.000755304004997015, -0.000741113384719938, -0.0007339859730564058, -0.0007300868164747953, -0.0007244048174470663, -0.0007134036277420819, -0.0006946654175408185, -0.0006683263927698135, -0.0006374611984938383, -0.000604394415859133, -0.0005704340874217451, -0.0005362320225685835, -0.0005022839177399874, -0.00046939810272306204, -0.000441723910626024, -0.00042804848635569215, -0.00043725408613681793, -0.00047273910604417324, -0.0005307028186507523, -0.000601546373218298, -0.0006730513996444643, -0.0007348685758188367, -0.0007780783926136792, -0.0007947871927171946, -0.0007825770881026983, -0.000748444173950702, -0.0007058283081278205, -0.000667317071929574, -0.000643130682874471, -0.000641017104499042, -0.0006659087957814336, -0.0007195899961516261, -0.0007988897268660367, -0.000894888595212251, -0.0009931304957717657, -0.0010773449903354049, -0.0011362129589542747, -0.0011671649990603328, -0.0011739840265363455, -0.0011649850057438016, -0.0011495030485093594, -0.0011373789748176932, -0.0011389290448278189, -0.001162325032055378, -0.001210120040923357, -0.0012816369999200106, -0.0013744400348514318, -0.001483301050029695, -0.0016020600451156497, -0.0017231550300493836, -0.0018380279652774334, -0.0019411409739404917, -0.0020293339621275663, -0.002099368954077363, -0.002149547915905714, -0.0021800079848617315, -0.002190991071984172, -0.0021841339766979218, -0.0021645950619131327, -0.0021391441114246845, -0.002112630056217313, -0.0020884829573333263, -0.0020711920224130154, -0.0020656040869653225, -0.002075253054499626, -0.0021007840987294912, -0.0021402740385383368, -0.0021895719692111015, -0.0022434459533542395, -0.0022979460190981627, -0.0023538360837846994, -0.0024127380456775427, -0.0024760249070823193, -0.002544452901929617, -0.002618660917505622, -0.0027003749273717403, -0.0027932259254157543, -0.0028997380286455154, -0.0030181061010807753, -0.0031419540755450726, -0.0032617771066725254, -0.003368966979905963, -0.00345901888795197, -0.0035312180407345295, -0.003591103944927454, -0.003648220095783472, -0.0037105348892509937, -0.0037818748969584703, -0.0038623050786554813, -0.003949312027543783, -0.0040396638214588165, -0.0041303131729364395, -0.0042177969589829445, -0.004299155902117491, -0.0043742042034864426, -0.004444850143045187, -0.0045144702307879925, -0.004587590228766203, -0.004667595028877258, -0.004755508154630661, -0.004849005024880171, -0.004942580126225948, -0.005030958913266659, -0.0051133600063622, -0.005193940829485655, -0.0052764881402254105, -0.005360713228583336, -0.005441934801638126, -0.00551227992400527, -0.005564031191170216, -0.005593587178736925, -0.005603502970188856, -0.005599628202617168, -0.005587996914982796, -0.005574606824666262, -0.005565926898270845, -0.005566677078604698, -0.005578331183642149, -0.005597113166004419, -0.005615240894258022, -0.005624246783554554, -0.00561867281794548, -0.005595094058662653, -0.005550254136323929, -0.00548217911273241, -0.005392211023718119, -0.005283581092953682, -0.005159835796803236, -0.005025310907512903, -0.004886525217443705, -0.0047499737702310085, -0.004620058927685022, -0.004498851019889116, -0.004384926054626703, -0.0042750160209834576, -0.004167729057371616, -0.004063103813678026, -0.003963165916502476, -0.0038704590406268835, -0.0037873219698667526, -0.00371380103752017, -0.003646859899163246, -0.0035832941066473722, -0.0035240850411355495, -0.003469809889793396, -0.0034170818980783224, -0.00336087797768414, -0.003295233938843012, -0.0032113459892570972, -0.0031006759963929653, -0.0029580830596387386, -0.0027846419252455235, -0.0025906111113727093, -0.002392384922131896, -0.002205556957051158, -0.002038333099335432, -0.0018895609537139535, -0.0017542940331622958, -0.001625332050025463, -0.0014934019418433309, -0.0013494939776137471, -0.0011878849472850561, -0.0010056949686259031, -0.0008034944767132401, -0.0005839316290803254, -0.00035177470999769866, -0.00011164439638378099, 0.0001329123042523861, 0.00037854848778806627, 0.0006208643899299204, 0.0008556146058253944, 0.001078170957043767, 0.0012873030500486493, 0.0014869429869577289, 0.001684620976448059, 0.0018865979509428144, 0.0020963361021131277, 0.0023122720886021852, 0.0025274520739912987, 0.002731872955337167, 0.002917383098974824, 0.0030808919109404087, 0.0032258499413728714, 0.0033581529278308153, 0.0034810530487447977, 0.0035953789483755827, 0.0037042018957436085, 0.003812643000856042, 0.003927139099687338, 0.004051249008625746, 0.004182523116469383, 0.004313160199671984, 0.004432240966707468, 0.004531960003077984, 0.004610204137861729, 0.004670160822570324, 0.004717804957181215, 0.004759038798511028, 0.004799012094736099, 0.004840570036321878, 0.004885904025286436, 0.004936370067298412, 0.004991868976503611, 0.005052259191870689, 0.00511619308963418, 0.00517968600615859, 0.005238589830696583, 0.005291061010211706, 0.005335303954780102, 0.005366323050111532, 0.0053773787803947926, 0.005362925119698048, 0.005321925040334463, 0.005258228164166212, 0.005177658051252365, 0.005085842218250036, 0.0049867089837789536, 0.004879747983068228, 0.004762472119182348, 0.004634193144738674, 0.004495367873460054, 0.004347003996372223, 0.004191068932414055, 0.004030351992696524, 0.0038690539076924324, 0.0037131980061531067, 0.0035687610507011414, 0.003437696024775505, 0.0033172559924423695, 0.003200008999556303, 0.003078531939536333, 0.0029505910351872444, 0.002817647997289896, 0.0026815079618245363, 0.002543810987845063, 0.00240487908013165, 0.0022648130543529987, 0.0021252750884741545, 0.0019889690447598696, 0.0018604190554469824, 0.0017448699800297618, 0.0016485860105603933, 0.0015759930247440934, 0.0015250700525939465, 0.0014915349893271923, 0.0014708240050822496, 0.0014542220160365105, 0.0014312040293589234, 0.0013946479884907603, 0.0013416589936241508, 0.0012719640508294106, 0.0011882609687745571, 0.0010965249966830015, 0.0010030720150098205, 0.0009136609151028097, 0.0008331091958098114, 0.000765870907343924, 0.0007157539948821068, 0.0006845662137493491, 0.0006735774222761393, 0.0006789949256926775, 0.0006904536858201027, 0.0006982705090194941, 0.0006983279017731547, 0.0006929470109753311, 0.0006869640201330185, 0.0006855180254206061, 0.0006902114837430418, 0.00069895462365821, 0.0007073230226524174, 0.0007119706133380532, 0.0007135861087590456, 0.0007154998020268977, 0.0007209607283584774, 0.000731561507564038, 0.0007461516070179641, 0.0007611684268340468, 0.0007710270001552999, 0.0007697762921452522, 0.0007519139908254147, 0.0007144829141907394, 0.0006563237984664738, 0.0005783831002190709, 0.0004820818139705807, 0.0003689969889819622, 0.0002445534919388592, 0.00011759740300476551, -2.39766200138547e-06, -0.00010981660307152197, -0.0002039593964582309, -0.0002854450140148401, -0.00035669791395775974, -0.0004200087860226631, -0.0004782062896993011, -0.000531261321157217, -0.0005785218090750277, -0.0006243084208108485, -0.0006758582894690335, -0.0007398893940262496, -0.0008206770289689302, -0.0009180885972455144, -0.001029093051329255, -0.0011478259693831205, -0.0012653740122914314, -0.0013736969558522105, -0.0014689010567963123, -0.00155036395881325, -0.0016210370231419802, -0.0016855259891599417, -0.001748549984768033, -0.0018141840118914843, -0.0018856329843401909, -0.0019652959890663624, -0.0020534510258585215, -0.00214586709626019, -0.0022348740603774786, -0.0023159401025623083, -0.0023904331028461456, -0.0024621279444545507, -0.0025338269770145416, -0.002605634042993188, -0.002677326090633869, -0.0027474190574139357, -0.0028130048885941505, -0.0028729229234158993, -0.0029295519925653934, -0.002986065112054348, -0.0030449950136244297, -0.0031086490489542484, -0.0031779929995536804, -0.003251170041039586, -0.0033226669766008854, -0.0033854900393635035, -0.0034342529252171516, -0.003464692970737815, -0.003474839963018894, -0.003466197056695819, -0.003443222027271986, -0.0034104168880730867, -0.0033732359297573566, -0.0033367311116307974, -0.003303482895717025, -0.003273356007412076, -0.003244915045797825, -0.003216858021914959, -0.0031876899302005768, -0.0031562780495733023, -0.0031233809422701597, -0.0030884859152138233, -0.0030475349631160498, -0.0029958789236843586, -0.0029317711014300585, -0.0028549570124596357, -0.0027673819568008184, -0.0026730101089924574, -0.0025757208932191133, -0.002479333896189928, -0.0023869010619819164, -0.0023002158850431442, -0.0022178320214152336, -0.0021351950708776712, -0.002048630965873599, -0.0019592700991779566, -0.0018723109969869256, -0.0017907440196722746, -0.001713986974209547, -0.00164138397667557, -0.0015701360534876585, -0.001496023964136839, -0.001414689002558589, -0.0013238090323284268, -0.0012236960465088487, -0.001116015948355198, -0.001001875032670796, -0.0008802936063148081, -0.0007510678260587156, -0.0006146507221274078, -0.00047388768871314824, -0.00033469090703874826, -0.0002027437003562227, -8.100407285382971e-05, 3.311664841021411e-05, 0.0001464319066144526, 0.00026783719658851624, 0.00040369690395891666, 0.000552511599380523, 0.0007060372154228389, 0.0008534077205695212, 0.0009831228526309133, 0.001084720017388463, 0.0011527120368555188, 0.0011883459519594908, 0.0011988950427621603, 0.0011932889465242624, 0.0011796059552580118, 0.001165754976682365, 0.001160760992206633, 0.001170397037640214, 0.0011938660172745585, 0.001226625987328589, 0.0012637079926207662, 0.001301364041864872, 0.0013391339452937245, 0.001377698965370655, 0.0014160539722070098, 0.0014512039488181472, 0.0014806169783696532, 0.0015017299447208643, 0.0015127479564398527, 0.0015134030254557729, 0.001506416010670364, 0.0014964420115575194, 0.0014869519509375095, 0.0014792169677093625, 0.001474207965657115, 0.001472495961934328, 0.0014746770029887557, 0.0014796130126342177, 0.0014851780142635107, 0.0014894170453771949, 0.0014909369638189673, 0.0014925559516996145, 0.0014984270092099905, 0.0015115570276975632, 0.0015371589688584208, 0.0015803429996594787, 0.0016452319687232375, 0.0017309479881078005, 0.0018314539920538664, 0.001934638014063239, 0.0020286659710109234, 0.002107494045048952, 0.00216996599920094, 0.0022168969735503197, 0.002251832978799939, 0.0022818429861217737, 0.0023152909707278013, 0.002358552999794483, 0.0024134579580277205, 0.002479756949469447, 0.002555789891630411, 0.002635929035022855, 0.0027150639798492193, 0.0027908131014555693, 0.0028617389034479856, 0.0029258779250085354, 0.0029814389999955893, 0.0030257580801844597, 0.00305394409224391, 0.003062634030357003, 0.0030525289475917816, 0.003028897102922201, 0.003000705037266016, 0.0029771269764751196, 0.0029650928918272257, 0.002969851018860936, 0.0029926530551165342, 0.003031281055882573, 0.003083408111706376, 0.003146342933177948, 0.003216989105567336, 0.003294090973213315, 0.003375394968315959, 0.0034561739303171635, 0.003528171917423606, 0.0035817360039800406, 0.0036088749766349792, 0.0036054919473826885, 0.003571108914911747, 0.0035066280979663134, 0.0034143419470638037, 0.003300068899989128, 0.003172921948134899, 0.0030426010489463806, 0.0029175779782235622, 0.0028033440466970205, 0.0027028010226786137, 0.002616079058498144, 0.0025424419436603785, 0.002479986986145377, 0.0024258620105683804, 0.0023758749011904, 0.0023237098939716816, 0.0022607760038226843, 0.002178589114919305, 0.0020730909891426563, 0.0019470859551802278, 0.001808473956771195, 0.0016672139754518867, 0.0015338569646701217, 0.001416004030033946, 0.0013153570471331477, 0.0012299639638513327, 0.0011556249810382724, 0.0010868220124393702, 0.0010186450090259314, 0.0009509663213975728, 0.0008860559901222587, 0.0008258844027295709, 0.0007714941748417914, 0.0007205855217762291, 0.0006693517207168043, 0.0006141324993222952, 0.0005510923801921308, 0.00047756789717823267, 0.0003933102125301957, 0.0003003352030646056, 0.000202022900339216, 0.00010253040090901777, 4.972001079295296e-06, -8.910030010156333e-05, -0.0001775796990841627, -0.00025807699421420693, -0.0003278914955444634, -0.0003885453916154802, -0.0004437995085027069, -0.0004968011053279042, -0.0005485358997248113, -0.0005997904809191823, -0.0006522982730530202, -0.000708032981492579, -0.0007690925849601626, -0.0008341377251781523, -0.0008994244853965938, -0.0009618073818273842, -0.0010177609510719776, -0.0010653489734977484, -0.0011033619521185756, -0.0011326370295137167, -0.0011563299922272563, -0.0011797279585152864, -0.0012086039641872048, -0.0012472179951146245, -0.0012982620391994715, -0.001363535993732512, -0.0014451689785346389, -0.001543535036034882, -0.0016548699932172894, -0.0017708799568936229, -0.0018817749805748463, -0.001980795990675688, -0.0020620739087462425, -0.0021211430430412292, -0.0021586609072983265, -0.002181944902986288, -0.002202230039983988, -0.002228023950010538, -0.0022631778847426176, -0.0023072289768606424, -0.0023562998976558447, -0.002406011102721095, -0.0024540768936276436, -0.0024981170427054167, -0.0025349711067974567, -0.0025619310326874256, -0.0025774938985705376, -0.002581977052614093, -0.0025771220680326223, -0.0025671781040728092, -0.002558367094025016, -0.0025542299263179302, -0.002552957972511649, -0.0025469521060585976, -0.002528067911043763, -0.0024916240945458412, -0.002439698902890086, -0.0023799920454621315, -0.002323213964700699, -0.0022790280636399984, -0.0022527810651808977, -0.00224359892308712, -0.002243724884465337, -0.002243119990453124, -0.002233646111562848, -0.0022097700275480747, -0.0021683829836547375, -0.0021081389859318733, -0.002029439900070429, -0.001937165972776711, -0.0018389419419690967, -0.001741152023896575, -0.0016460709739476442, -0.0015532940160483122, -0.0014631090452894568, -0.0013769729994237423, -0.0012941979803144932, -0.0012115660356357694, -0.0011244730558246374, -0.001029276056215167, -0.0009267386049032211, -0.000819988374132663, -0.0007126511773094535, -0.0006069780210964382, -0.0005021202960051596, -0.00039593499968759716, -0.0002854148915503174, -0.00016771549417171627, -4.260314017301425e-05, 8.900732063921168e-05, 0.00022642059775535017, 0.0003680697991512716, 0.0005089935148134828, 0.0006420214776881039, 0.0007586543215438724, 0.0008532478823326528, 0.0009265663102269173, 0.0009860469726845622, 0.0010431340197101235, 0.001109421020373702, 0.0011929370230063796, 0.0012969709932804108, 0.0014199629658833146, 0.0015574910212308168, 0.001701731001958251, 0.0018434820231050253, 0.001972865080460906, 0.002082914113998413, 0.002172230975702405, 0.0022440149914473295, 0.002304829889908433, 0.0023643390741199255, 0.002431197091937065, 0.0025107809342443943, 0.0026062149554491043, 0.002717291936278343, 0.0028388190548866987, 0.0029626840259879827, 0.003081045113503933, 0.0031893299892544746, 0.0032851239666342735, 0.0033708440605551004, 0.003454865887761116, 0.0035489920992404222, 0.003662366885691881, 0.0037947678938508034, 0.003937455825507641, 0.004079080186784267, 0.004209443926811218, 0.004322000779211521, 0.004414860159158707, 0.004489556886255741, 0.004550015088170767, 0.004601558204740286, 0.004650185815989971, 0.004703125916421413, 0.0047662281431257725, 0.0048389919102191925, 0.0049172439612448215, 0.00499746622517705, 0.005076424218714237, 0.005151179153472185, 0.005220983177423477, 0.005285684019327164, 0.005343297030776739, 0.00539170578122139, 0.005430723074823618, 0.005461812950670719, 0.005484357010573149, 0.005495353136211634, 0.005491822957992554, 0.005471915937960148, 0.005435391794890165, 0.005382813047617674, 0.00531669519841671, 0.005241815932095051, 0.005166293121874332, 0.005100591108202934, 0.005052725784480572, 0.005021880846470594, 0.005002416204661131, 0.004988126922398806, 0.004973340779542923, 0.004953524097800255, 0.004925088956952095, 0.004886175040155649, 0.004835686180740595, 0.004770771134644747, 0.004689808003604412, 0.004595447797328234, 0.004494206048548222, 0.004395083989948034, 0.004306301008909941, 0.004232217092067003, 0.004172328859567642, 0.004118768032640219, 0.00406236108392477, 0.0039972541853785515, 0.003921304829418659, 0.0038361221086233854, 0.0037472040858119726, 0.0036604399792850018, 0.0035801168996840715, 0.003511240938678384, 0.0034569650888442993, 0.0034135389141738415, 0.0033727509435266256, 0.0033286409452557564, 0.003277498995885253, 0.003218132071197033, 0.0031554740853607655, 0.0030966729391366243, 0.0030434520449489355, 0.0029921249952167273, 0.0029375150334089994, 0.002874355996027589, 0.0027998830191791058, 0.002714232075959444, 0.0026221428997814655, 0.0025338740088045597, 0.0024604820646345615, 0.0024076690897345543, 0.002377677010372281, 0.0023674950934946537, 0.002371477894484997, 0.002382131991907954, 0.0023901578970253468, 0.0023882840760052204, 0.002373612020164728, 0.002344850916415453, 0.0023000179789960384, 0.002238671062514186, 0.002161314943805337, 0.0020709449891000986, 0.001974472077563405, 0.0018795019714161754, 0.0017911499598994851, 0.0017117209499701858, 0.0016412000404670835, 0.0015771100297570229, 0.0015133150154724717, 0.0014436639612540603, 0.001366604003123939, 0.0012852289946749806, 0.0012042069574818015, 0.0011298960307613015, 0.0010675910161808133, 0.0010199400130659342, 0.0009851462673395872, 0.000957484997343272, 0.0009279706864617765, 0.000886294525116682, 0.0008279677131213248, 0.0007544959080405533, 0.0006702194805257022, 0.0005804484244436026, 0.0004891558783128858, 0.0003965189098380506, 0.0002987777115777135, 0.00019134979811497033, 7.359399751294404e-05, -5.1849041483365e-05, -0.00018057260604109615, -0.0003072441031690687, -0.0004254147061146796, -0.0005289334803819656, -0.0006148808752186596, -0.0006845302996225655, -0.0007415374275296926, -0.0007905926904641092, -0.0008334178128279746, -0.0008686271030455828, -0.0008939143735915422, -0.000907434499822557, -0.0009071792010217905, -0.0008919627871364355, -0.0008610612712800503, -0.0008139616111293435, -0.0007507316768169403, -0.000672074209433049, -0.0005793874734081328, -0.0004767785139847547, -0.0003712153120432049, -0.00026747610536403954, -0.0001676168030826375, -7.14928173692897e-05, 2.078137913485989e-05, 0.00011050979810534045, 0.00020019549992866814, 0.00029107221052981913, 0.0003861192089971155, 0.0004906858084723353, 0.0006083928747102618, 0.0007378525915555656, 0.0008737614843994379, 0.0010080289794132113, 0.0011340710334479809, 0.0012497040443122387, 0.0013550850562751293, 0.001448765047825873, 0.0015280910301953554, 0.001592732034623623, 0.0016476570162922144, 0.0017030970193445683, 0.0017696679569780827, 0.0018529959488660097, 0.001953735016286373, 0.0020673798862844706, 0.0021851309575140476, 0.0022961210925132036, 0.0023913918994367123, 0.002467396901920438, 0.002525076037272811, 0.002567233983427286, 0.002598010003566742, 0.0026208609342575073, 0.0026383730582892895, 0.0026511079631745815, 0.002658502897247672, 0.0026582051068544388, 0.002646300010383129, 0.0026182320434600115, 0.002570775104686618, 0.00250177807174623, 0.0024118900764733553, 0.002306286944076419, 0.0021939980797469616, 0.0020856510382145643, 0.0019900149200111628, 0.0019122599624097347, 0.0018536490388214588, 0.0018101909663528204, 0.0017759730108082294, 0.0017463299445807934, 0.001718917046673596, 0.0016928180120885372, 0.0016679470427334309, 0.0016433439450338483, 0.0016157659702003002, 0.0015805009752511978, 0.0015334519557654858, 0.0014715750003233552, 0.001393986982293427, 0.0013019420439377427, 0.0011992939980700612, 0.0010908859549090266, 0.0009823351865634322, 0.00087762251496315, 0.0007789109949953854, 0.000685902195982635, 0.0005968806799501181, 0.0005103257717564702, 0.00042720549390651286, 0.00035179281258024275, 0.00028886579093523324, 0.00024078150454442948, 0.0002032332995440811, 0.00016613809566479176, 0.00012078019790351391, 6.285584095166996e-05, -6.859943823656067e-06, -8.450359746348113e-05, -0.00016535900067538023, -0.0002448064915370196, -0.0003204850945621729, -0.0003921964962501079, -0.00046074751298874617, -0.0005271055852063, -0.0005912284250371158, -0.0006525872158817947, -0.0007106811972334981, -0.0007659519906155765, -0.0008153177914209664, -0.0008540598792023957, -0.0008809738792479038, -0.0008971361094154418, -0.0009057570714503527, -0.0009127170196734369, -0.0009257838828489184, -0.0009526634821668267, -0.0009987738449126482, -0.001066369004547596, -0.0011532839853316545, -0.0012530420208349824, -0.001355085987597704, -0.0014468739973381162, -0.0015184140065684915, -0.0015642710495740175, -0.001583685982041061, -0.0015780390240252018, -0.0015510079683735967, -0.0015091130044311285, -0.001461290055885911, -0.0014161609578877687, -0.001379302004352212, -0.0013524600071832538, -0.0013330710353329778, -0.0013181299436837435, -0.0013070859713479877, -0.0012999220052734017, -0.001296728034503758, -0.0012958130100741982, -0.00129280099645257, -0.0012826790334656835, -0.0012639870401471853, -0.001236079027876258, -0.0011983319418504834, -0.0011511980555951595, -0.0010983389802277088, -0.0010472990106791258, -0.0010065650567412376, -0.0009834953816607594, -0.0009821004932746291, -0.0010001440532505512, -0.001030831946991384, -0.0010682709980756044, -0.0011089029721915722, -0.0011511490447446704, -0.0011945810401812196, -0.0012406139867380261, -0.0012879580026492476, -0.001329881022684276, -0.0013552459422498941, -0.001354319043457508, -0.001325787976384163, -0.0012776260264217854, -0.001224756008014083, -0.0011790740536525846, -0.0011439180234447122, -0.0011179869761690497, -0.0010986829875037074, -0.0010820729658007622, -0.0010650049662217498, -0.0010454989969730377, -0.0010238339891657233, -0.001002994948066771, -0.0009882819140329957, -0.0009836208773776889, -0.0009890737710520625, -0.0010012580314651132, -0.0010139900259673595, -0.0010208849562332034, -0.001019135001115501, -0.001010520034469664, -0.0010003040079027414, -0.000991800450719893, -0.0009853350929915905, -0.0009793457575142384, -0.0009724257979542017, -0.0009659776114858687, -0.0009636799222789705, -0.000968290027230978, -0.0009807711467146873, -0.0010011859703809023, -0.0010282599832862616, -0.0010589390294626355, -0.0010898499749600887, -0.0011171470396220684, -0.0011376399779692292, -0.0011494579957798123, -0.001152758952230215, -0.0011484239948913455, -0.0011397149646654725, -0.0011325429659336805, -0.0011301579652354121, -0.0011320889461785555, -0.0011364519596099854, -0.001142106018960476, -0.0011487869778648019, -0.001153799006715417, -0.0011517719831317663, -0.0011362270452082157, -0.001104898052290082, -0.0010600819950923324, -0.001005606958642602, -0.0009486118797212839, -0.0008949520997703075, -0.0008463329286314547, -0.000801097194198519, -0.0007560313097201288, -0.000707097293343395, -0.000651846406981349, -0.0005906890146434307, -0.0005274681025184691, -0.000466981902718544, -0.0004111675079911947, -0.0003582042991183698, -0.00030494280508719385, -0.00025064809597097337, -0.00019907590467482805, -0.00015520170563831925, -0.00012315419735386968, -0.00010400619794381782, -9.470504301134497e-05, -8.964324661064893e-05, -8.0694786447566e-05, -6.0703048802679405e-05, -2.505811062292196e-05, 2.772799962258432e-05, 9.660414070822299e-05, 0.0001755320990923792, 0.0002525038144085556, 0.0003152452118229121, 0.0003541950136423111, 0.00036297619226388633, 0.0003376289096195251, 0.00027715900796465576, 0.0001858746982179582, 7.539017678936943e-05, -3.921049938071519e-05, -0.00014349579578265548, -0.00022540030477102846, -0.00028083191136829555, -0.0003121958870906383, -0.0003248763969168067, -0.00033075601095333695, -0.0003442848101258278, -0.00037623458774760365, -0.00043029661173932254, -0.0005032388144172728, -0.000587145914323628, -0.0006716456264257431, -0.0007435436127707362, -0.0007905694073997438, -0.0008091332856565714, -0.0008042178815230727, -0.0007847789092920721, -0.0007629739120602608, -0.0007514507742598653, -0.000761963427066803, -0.0008011374156922102, -0.0008680985192768276, -0.0009588461252860725, -0.0010692139621824026, -0.0011922649573534727, -0.0013183599803596735, -0.0014375370228663087, -0.001542774960398674, -0.001630396000109613, -0.0017019540537148714, -0.001764202956110239, -0.001825863029807806, -0.0018951479578390718, -0.001975543098524213, -0.0020628839265555143, -0.0021483709570020437, -0.002223239978775382, -0.0022811798844486475, -0.002321302890777588, -0.002346599008888006, -0.0023616370745003223, -0.0023712438996881247, -0.002378910081461072, -0.002387505955994129, -0.002398432930931449, -0.0024134600535035133, -0.002436066046357155, -0.002467128913849592, -0.0025042069610208273, -0.002545040100812912, -0.0025866320356726646, -0.0026246339548379183, -0.0026542439591139555, -0.0026694799307733774, -0.002665458945557475, -0.0026430340949445963, -0.0026073860935866833, -0.002563339890912175, -0.002514539984986186, -0.002465174999088049, -0.002418304095044732, -0.0023753540590405464, -0.002337368903681636, -0.0023038280196487904, -0.0022728859912604094, -0.00224242708645761, -0.0022111129947006702, -0.002178316004574299, -0.002145912032574415, -0.0021162941120564938, -0.002089068992063403, -0.002061661100015044, -0.0020332259591668844, -0.00200501992367208, -0.0019792059902101755, -0.001957068918272853, -0.0019391579553484917, -0.0019234999781474471, -0.0019056960009038448, -0.0018799869576469064, -0.0018431720091030002, -0.0017987079918384552, -0.0017544870497658849, -0.0017191109945997596, -0.0017009270377457142, -0.0017044349806383252, -0.001728252973407507, -0.001767497044056654, -0.0018147530499845743, -0.001860948046669364, -0.001897788024507463, -0.0019176020286977291, -0.0019154009642079473, -0.0018895909888669848, -0.0018437040271237493, -0.0017867940478026867, -0.001729522948153317, -0.0016787879867479205, -0.0016359869623556733, -0.0016009010141715407, -0.0015751189785078168, -0.0015617860481142998, -0.0015627129469066858, -0.001575323985889554, -0.0015951920067891479, -0.0016182749532163143, -0.0016409880481660366, -0.0016605310374870896, -0.001673402963206172, -0.0016775709809735417, -0.001674190047197044, -0.0016689429758116603, -0.0016679440159350634, -0.0016745530301705003, -0.001689709024503827, -0.0017130529740825295, -0.0017437429632991552, -0.001781421946361661, -0.001824963022954762, -0.0018709460273385048, -0.0019158830400556326, -0.0019579059444367886, -0.001998411025851965, -0.002041308907791972, -0.002089652931317687, -0.002144979080185294, -0.002207681071013212, -0.0022778459824621677, -0.0023533760104328394, -0.002429746091365814, -0.00250023091211915, -0.0025582860689610243, -0.002600782085210085, -0.0026275499258190393, -0.0026391539722681046, -0.0026362540666013956, -0.002621412044391036, -0.0026004789397120476, -0.0025796389672905207, -0.0025620029773563147, -0.0025467369705438614, -0.002530724974349141, -0.0025118759367614985, -0.002488482976332307, -0.002458510920405388, -0.002416705945506692, -0.0023574689403176308, -0.0022795149125158787, -0.0021868098992854357, -0.0020879660733044147, -0.0019921730272471905, -0.0019039110047742724, -0.0018223959486931562, -0.0017455939669162035, -0.001670273020863533, -0.001591981970705092, -0.0015056220581755042, -0.001409085001796484, -0.001306410995312035, -0.001201955950818956, -0.0010982089443132281, -0.0009972439147531986, -0.0009013263043016195, -0.0008131756912916899, -0.0007356057758443058, -0.0006695715710520744, -0.0006114530260674655, -0.0005535025848075747, -0.00048695370787754655, -0.00040637271013110876, -0.0003135229926556349, -0.00021399889374151826, -0.00011527020251378417, -2.3438680727849714e-05, 5.654960114043206e-05, 0.00012048800272168592, 0.00016565009718760848, 0.0001925763936014846, 0.00020420139480847865, 0.00020551049965433776, 0.00020422869420144707, 0.0002087183966068551, 0.00022652390180155635, 0.0002603557950351387, 0.00030565541237592697, 0.00035554979695007205, 0.00040396509575657547, 0.0004473786102607846, 0.00048400330706499517, 0.0005112066282890737, 0.0005264469073154032, 0.0005309365806169808, 0.00052917271386832, 0.0005254778079688549, 0.0005204961053095758, 0.0005122942966409028, 0.0004992869799025357, 0.00048073820653371513, 0.0004556179919745773, 0.00042287789983674884, 0.0003812932991422713, 0.00033053228980861604, 0.0002716243907343596, 0.00020712129480671138, 0.0001399372995365411, 7.385543722193688e-05, 1.4997500329627655e-05, -3.0633618735009804e-05, -6.173407018650323e-05, -7.898458716226742e-05, -8.401984086958691e-05, -8.015335333766416e-05, -7.446557719958946e-05, -7.401902257697657e-05, -8.542225259589031e-05, -0.00011436380009399727, -0.00016339699504896998, -0.00022911910491529852, -0.0003013261884916574, -0.00036653620190918446, -0.0004135131021030247, -0.0004349602968432009, -0.00043031948735006154, -0.000406671199016273, -0.0003757948870770633, -0.0003486165951471776, -0.00033261009957641363, -0.0003315368958283216, -0.0003458184073679149, -0.0003748224989976734, -0.00041807349771261215, -0.0004752255917992443, -0.0005443093832582235, -0.000621852173935622, -0.0007067837868817151, -0.0008022157126106322, -0.0009105788776651025, -0.0010300440480932593, -0.0011532820062711835, -0.001269737957045436, -0.0013697609538212419, -0.0014466500142589211, -0.0014981370186433196, -0.001529364031739533, -0.0015492039965465665, -0.0015642240177839994, -0.0015794449718669057, -0.0016017310554161668, -0.0016375059494748712, -0.0016880340408533812, -0.0017502009868621826, -0.0018199889454990625, -0.0018938940484076738, -0.001969302073121071, -0.002044911962002516, -0.0021185739897191525, -0.0021870939526706934, -0.0022487409878522158, -0.0023025800473988056, -0.0023463040124624968, -0.002377605065703392, -0.002397435950115323, -0.0024111359380185604, -0.0024234841112047434, -0.0024347680155187845, -0.002441840013489127, -0.0024435780942440033, -0.002442494034767151, -0.0024426979944109917, -0.0024493790697306395, -0.002465528901666403, -0.0024912930093705654, -0.002521617105230689, -0.0025481239426881075, -0.002564891939982772, -0.002568874042481184, -0.002561718923971057, -0.002548207063227892, -0.00253331009298563, -0.002519568894058466, -0.0025061089545488358, -0.0024898680858314037, -0.0024675331078469753, -0.0024374378845095634, -0.0023983099963515997, -0.0023495210334658623, -0.0022940379567444324, -0.002236285014078021, -0.002180672949180007, -0.0021325231064110994, -0.0020949270110577345, -0.002067907014861703, -0.0020483939442783594, -0.002033909084275365, -0.0020249609369784594, -0.0020220340229570866, -0.0020234868861734867, -0.0020246009808033705, -0.0020200670696794987, -0.002005259972065687, -0.0019769431091845036, -0.001932531944476068, -0.0018724260153248906, -0.001798095996491611, -0.0017119509866461158, -0.0016155310440808535, -0.001509553985670209, -0.0013959399657323956, -0.00127986294683069, -0.0011687870137393475, -0.0010682520223781466, -0.0009804358705878258, -0.0009049564832821488, -0.0008399020880460739, -0.0007843804196454585, -0.0007370521780103445, -0.000696046685334295, -0.0006590337725356221, -0.0006234761094674468, -0.0005850839079357684, -0.000538834894541651, -0.00048197119031101465, -0.00041212240466848016, -0.00032651738729327917, -0.0002243350027129054, -0.00010838249727385119, 1.5066359992488287e-05, 0.0001367090007988736, 0.0002471345942467451, 0.0003387414908502251, 0.00040893390541896224, 0.0004619820974767208, 0.000505670381244272, 0.000547977106180042, 0.0005948094767518342, 0.0006485343910753727, 0.0007094651809893548, 0.0007761706947349012, 0.0008454808266833425, 0.0009147544042207301, 0.000980972545221448, 0.0010389949893578887, 0.0010825899662449956, 0.0011065310100093484, 0.0011087850434705615, 0.0010920950444415212, 0.0010638999519869685, 0.0010344160255044699, 0.0010135089978575706, 0.0010065949754789472, 0.0010133680189028382, 0.0010283800074830651, 0.0010435100411996245, 0.0010501430369913578, 0.00104267499409616, 0.0010198960080742836, 0.0009849140187725425, 0.0009436184773221612, 0.0009037556010298431, 0.000873356475494802, 0.0008583834278397262, 0.0008602844900451601, 0.0008765255915932357, 0.0009022729936987162, 0.0009323644917458296, 0.000962349702604115, 0.0009872784139588475, 0.0010032339487224817, 0.0010078089544549584, 0.0010007929522544146, 0.000984290847554803, 0.0009623554069548845, 0.0009390882914885879, 0.0009175430168397725, 0.0008978446712717414, 0.0008792161243036389, 0.0008617640123702586, 0.0008459176169708371, 0.000832596211694181, 0.000822673027869314, 0.000814551895018667, 0.0008047303999774158, 0.0007902390789240599, 0.0007697450928390026, 0.0007432085112668574, 0.0007108662975952029, 0.0006726473802700639, 0.0006296227220445871, 0.0005855396739207208, 0.0005465680733323097, 0.0005195103003643453, 0.000507937918882817, 0.0005122189177200198, 0.0005299935000948608, 0.0005587097839452326, 0.0005970731726847589, 0.0006458031130023301, 0.0007061698124743998, 0.0007800288731232285, 0.0008680251776240766, 0.000969857326708734, 0.0010842130286619067, 0.0012069579679518938, 0.0013336939737200737, 0.0014614040264859796, 0.0015867339679971337, 0.0017051970353350043, 0.0018129160162061453, 0.0019072090508416295, 0.0019870649557560682, 0.002054477110505104, 0.0021152410190552473, 0.0021770140156149864, 0.0022459090687334538, 0.002324152970686555, 0.002410775050520897, 0.0025026770308613777, 0.0025975489988923073, 0.0026947311125695705, 0.002790705068036914, 0.0028778898995369673, 0.0029475020710378885, 0.0029923319816589355, 0.00301005388610065, 0.0030043378937989473, 0.002984503982588649, 0.0029613710939884186, 0.0029431190341711044, 0.002934189047664404, 0.0029334439896047115, 0.002936274977400899, 0.0029375851154327393, 0.002934102900326252, 0.002925572916865349, 0.0029134571086615324, 0.002897992031648755, 0.002878960920497775, 0.0028590080328285694, 0.0028417170979082584, 0.002829320030286908, 0.0028219460509717464, 0.0028174209874123335, 0.00281155901029706, 0.0027965449262410402, 0.0027634999714791775, 0.002707327948883176, 0.0026272039394825697, 0.0025276269298046827, 0.0024213269352912903, 0.002323644934222102, 0.002241854090243578, 0.002175969071686268, 0.0021239928901195526, 0.002085163025185466, 0.002058963058516383, 0.0020416430197656155, 0.0020290471147745848, 0.0020161750726401806, 0.001994091086089611, 0.001956742024049163, 0.0019045310327783227, 0.0018402519635856152, 0.0017675940180197358, 0.001691751996986568, 0.0016202329425141215, 0.001563544967211783, 0.0015325959539040923, 0.0015339419478550553, 0.0015667330008000135, 0.0016220950055867434, 0.0016874369466677308, 0.0017514779465273023, 0.001803544000722468, 0.0018336880020797253, 0.001836910960264504, 0.001815625000745058, 0.0017787739634513855, 0.0017368349945172668, 0.0016975440084934235, 0.0016664329450577497, 0.0016481219790875912, 0.0016449469840154052, 0.0016559760551899672, 0.0016789339715614915, 0.0017088729655370116, 0.0017380890203639865, 0.0017601799918338656, 0.0017725620418787003, 0.0017752760322764516, 0.0017692360561341047, 0.0017572379438206553, 0.0017450869781896472, 0.0017402670346200466, 0.0017490279860794544, 0.0017750069964677095, 0.0018163389759138227, 0.0018685460090637207, 0.0019269180484116077, 0.0019871171098202467, 0.0020455680787563324, 0.002099832985550165, 0.002148363972082734, 0.002191663021221757, 0.0022331338841468096, 0.002277319086715579, 0.002327165100723505, 0.0023813319858163595, 0.002436090959236026, 0.0024864759761840105, 0.002527601085603237, 0.0025561959482729435, 0.002572794910520315, 0.002583329100161791, 0.0025960500352084637, 0.0026191489305347204, 0.0026577450335025787, 0.0027118490543216467, 0.0027748181018978357, 0.002836894942447543, 0.0028899810276925564, 0.002929701004177332, 0.0029567989986389875, 0.0029758589807897806, 0.0029922749381512403, 0.0030121360905468464, 0.0030419519171118736, 0.0030860770493745804, 0.003143718931823969, 0.0032064819242805243, 0.003263545921072364, 0.003304766956716776, 0.0033249000553041697, 0.0033272390719503164, 0.003320632968097925, 0.003313909051939845, 0.003313652938231826, 0.0033247550018131733, 0.0033477279357612133, 0.0033772368915379047, 0.0034051749389618635, 0.003421595087274909, 0.003419057000428438, 0.003397597000002861, 0.003362318966537714, 0.0033167290966957808, 0.0032642988953739405, 0.0032088831067085266, 0.0031547469552606344, 0.003108569886535406, 0.0030757540371268988, 0.0030577529687434435, 0.0030532970558851957, 0.003060817951336503, 0.0030761039815843105, 0.003091762075200677, 0.003100346075370908, 0.003094482934102416, 0.0030684019438922405, 0.0030189049430191517, 0.002948027104139328, 0.0028660399839282036, 0.002788781886920333, 0.0027303791139274836, 0.0026981919072568417, 0.002692543901503086, 0.002707225037738681, 0.002732468070462346, 0.002757868031039834, 0.0027714651077985764, 0.0027669009286910295, 0.0027485329192131758, 0.0027279790956526995, 0.0027158150915056467, 0.0027181420009583235, 0.002736401977017522, 0.0027673461008816957, 0.0028068250976502895, 0.002850867109373212, 0.0028950138948857784, 0.002933155046775937, 0.002958395052701235, 0.002963484963402152, 0.002943947911262512, 0.0029008688870817423, 0.002840302884578705, 0.0027712720911949873, 0.0027015700470656157, 0.0026359029579907656, 0.002575857099145651, 0.0025174999609589577, 0.0024576480500400066, 0.0023973078932613134, 0.0023395998869091272, 0.0022873389534652233, 0.0022436240687966347, 0.0022094850428402424, 0.0021832180209457874, 0.00216211611405015, 0.0021418870892375708, 0.0021168780513107777, 0.002079833997413516, 0.0020247120410203934, 0.0019496140303090215, 0.0018564489437267184, 0.0017486059805378318, 0.0016302790027111769, 0.0015055770054459572, 0.0013762679882347584, 0.001243478967808187, 0.0011080800322815776, 0.0009700154769234359, 0.0008295727893710136, 0.0006879382999613881, 0.0005472127813845873, 0.0004108021967113018, 0.000281141692539677, 0.0001579610980115831, 4.022233042633161e-05, -7.326064223889261e-05, -0.00018396250379737467, -0.0002947768080048263, -0.0004078978963661939, -0.0005238506128080189, -0.0006420544814318419, -0.0007608439773321152, -0.0008773694280534983, -0.000987941399216652, -0.001089234952814877, -0.0011786799877882004, -0.0012563549680635333, -0.001324084005318582, -0.0013859790051355958, -0.0014464559499174356, -0.0015086870407685637, -0.0015746529679745436, -0.0016464049695059657, -0.0017249550437554717, -0.00180881901178509, -0.0018946450436487794, -0.0019784809555858374, -0.0020557839889079332, -0.002121344907209277, -0.0021719960495829582, -0.0022103730589151382, -0.0022431251127272844, -0.0022777020931243896, -0.0023208290804177523, -0.002377253957092762, -0.002448112005367875, -0.002531341975554824, -0.0026227780617773533, -0.002718640025705099, -0.0028138249181210995, -0.0029014560859650373, -0.0029749879613518715, -0.0030317490454763174, -0.003071886021643877, -0.003097976092249155, -0.003112955018877983, -0.0031200689263641834, -0.0031248319428414106, -0.003133605932816863, -0.0031530580017715693, -0.0031885739881545305, -0.0032413240987807512, -0.0033071490470319986, -0.003377807093784213, -0.0034448299556970596, -0.003502870909869671, -0.003550182096660137, -0.0035878720227628946, -0.0036156061105430126, -0.0036302499938756227, -0.003626628080382943, -0.0035997158847749233, -0.0035498531069606543, -0.0034828109201043844, -0.0034033700358122587, -0.0033132750540971756, -0.0032154330983757973, -0.003114751074463129, -0.003017846029251814, -0.0029282609466463327, -0.002845189068466425, -0.002766922116279602, -0.002693861024454236, -0.002626843051984906, -0.0025652858894318342, -0.0025052179116755724, -0.0024401210248470306, -0.0023656529374420643, -0.0022822669707238674, -0.002196060959249735, -0.002116478979587555, -0.002051888033747673, -0.0020083868876099586, -0.0019891110714524984, -0.0019934100564569235, -0.0020174989476799965, -0.0020551818888634443, -0.002097975928336382, -0.0021358910016715527, -0.0021581200417131186, -0.002156904898583889, -0.0021323570981621742, -0.0020924159325659275, -0.0020450640004128218, -0.001995560945942998, -0.001945015974342823, -0.0018915520049631596, -0.0018316219793632627, -0.0017639519646763802, -0.0016930319834500551, -0.0016275589587166905, -0.001576627022586763, -0.0015478719724342227, -0.0015454390086233616, -0.0015685800462961197, -0.0016161620151251554, -0.001684851013123989, -0.00176563102286309, -0.0018451670184731483, -0.001908175996504724, -0.001939001027494669, -0.0019258529646322131, -0.0018657529726624489, -0.0017669900553300977, -0.001644797041080892, -0.0015201029600575566, -0.0014149179914966226, -0.0013447169912979007, -0.0013139069778844714, -0.0013161359820514917, -0.0013372510438784957, -0.0013604529667645693, -0.0013691720087081194, -0.0013510610442608595, -0.0013028610264882445, -0.0012302730465307832, -0.001140802982263267, -0.001040098024532199, -0.0009317112271673977, -0.000821324298158288, -0.0007143313996493816, -0.0006133604911155999, -0.0005190612282603979, -0.0004324376059230417, -0.00035499079967848957, -0.0002861398970708251, -0.00022270869521889836, -0.00016119239444378763, -0.00010003019997384399, -3.7971291021676734e-05, 2.745813071669545e-05, 9.848504851106554e-05, 0.00017801120702642947, 0.0002667742082849145, 0.0003631325962487608, 0.00046299610403366387, 0.0005609369254671037, 0.0006512167165055871, 0.0007301478181034327, 0.0007977540954016149, 0.0008573487284593284, 0.000914328615181148, 0.0009741064859554172, 0.0010408259695395827, 0.0011155479587614536, 0.0011976540554314852, 0.0012862279545515776, 0.0013799190055578947, 0.001477316953241825, 0.0015753109473735094, 0.0016688399482518435, 0.0017513539642095566, 0.0018164849607273936, 0.001860606949776411, 0.0018832460045814514, 0.0018867070320993662, 0.0018771420000120997, 0.001864611986093223, 0.0018581560580059886, 0.001862777047790587, 0.0018822019919753075, 0.0019188630394637585, 0.001970333978533745, 0.0020281579345464706, 0.002081607934087515, 0.002124310005456209, 0.002154767978936434, 0.002175718080252409, 0.0021910760551691055, 0.0022048770915716887, 0.002220473950728774, 0.0022380310110747814, 0.00225612404756248, 0.0022713590878993273, 0.0022804990876466036, 0.002281889086589217, 0.0022763318847864866, 0.0022660410031676292, 0.0022546679247170687, 0.002245736075565219, 0.0022421160247176886, 0.0022478539030998945, 0.0022647720761597157, 0.0022893568966537714, 0.0023173459339886904, 0.0023455999325960875, 0.0023735619615763426, 0.0023989230394363403, 0.0024158249143511057, 0.0024202640634030104, 0.0024119019508361816, 0.002393048955127597, 0.0023657549172639847, 0.0023331530392169952, 0.002301040105521679, 0.0022756289690732956, 0.002259250031784177, 0.0022490681149065495, 0.0022394719999283552, 0.0022231009788811207, 0.0021939389407634735, 0.0021489718928933144, 0.002090096939355135, 0.002023915061727166, 0.0019591220188885927, 0.001903134980238974, 0.001859860960394144, 0.001831014989875257, 0.001813794020563364, 0.0018019559793174267, 0.001790769980289042, 0.001777700032107532, 0.001763571985065937, 0.0017495539505034685, 0.0017381979851052165, 0.0017313810531049967, 0.0017311150440946221, 0.0017404899699613452, 0.0017619000282138586, 0.0017920329701155424, 0.001822934951633215, 0.0018503499450162053, 0.0018719759536907077, 0.0018856939859688282, 0.0018927010241895914, 0.0018958540167659521, 0.0018976680003106594, 0.0019017650047317147, 0.0019107479602098465, 0.0019225990399718285, 0.0019297050312161446, 0.0019221119582653046, 0.0018919650465250015, 0.0018364250427111983, 0.0017586930189281702, 0.0016653339844197035, 0.0015644809463992715, 0.0014643770409747958, 0.0013716439716517925, 0.001289541949518025, 0.0012188219698145986, 0.0011591300135478377, 0.0011112119536846876, 0.0010770770022645593, 0.0010586159769445658, 0.0010544509859755635, 0.0010592039907351136, 0.0010639639804139733, 0.0010589839657768607, 0.001036548987030983, 0.0009927772916853428, 0.0009290439775213599, 0.000850987620651722, 0.0007664838922210038, 0.0006836940883658826, 0.0006070540985092521, 0.0005373090971261263, 0.00047494578757323325, 0.0004214027139823884, 0.00037744740257039666, 0.0003414177044760436, 0.0003114930004812777, 0.00028738469700329006, 0.0002690528053790331, 0.0002539475099183619, 0.00023898670042399317, 0.00022157200146466494, 0.00020065749413333833, 0.00017758659669198096, 0.00015479499415960163, 0.00013364109327085316, 0.00011414170148782432, 9.487661009188741e-05, 7.610194734297693e-05, 6.119140016380697e-05, 5.4872238251846284e-05, 5.9063640946988016e-05, 7.341813034145162e-05, 9.684570250101388e-05, 0.00012798269744962454, 0.00016501359641551971, 0.00020459860388655216, 0.00024360089446417987, 0.0002793197054415941, 0.00031071939156390727, 0.00033915549283847213, 0.0003671644954010844, 0.00039618241135030985, 0.0004273650120012462, 0.00046020839363336563, 0.0004923372180201113, 0.0005201653111726046, 0.00054006720893085, 0.0005506579182110727, 0.0005543510778807104, 0.0005567324114963412, 0.0005635048146359622, 0.0005784793756902218, 0.0006008864147588611, 0.000628546578809619, 0.0006581019842997193, 0.000684689381159842, 0.000703099591191858, 0.0007102140807546675, 0.0007051556021906435, 0.000690846296492964, 0.0006744707934558392, 0.0006643506931141019, 0.0006668451824225485, 0.0006839971174485981, 0.000709558604285121, 0.0007337640854530036, 0.0007462588255293667, 0.0007407892844639719, 0.0007168138981796801, 0.000678636075463146, 0.0006332530174404383, 0.000585947185754776, 0.0005400815862230957, 0.000497841218020767, 0.000459762493846938, 0.00042387930443510413, 0.0003879904979839921, 0.0003505279019009322, 0.00031113080331124365, 0.0002681440964806825, 0.00021772140462417156, 0.00015704550605732948, 8.367944974452257e-05, -2.9000771064602304e-06, -0.00010120400111190975, -0.0002061397972283885, -0.00030947799677960575, -0.00040499819442629814, -0.0004895520978607237, -0.0005620088195428252, -0.0006245162803679705, -0.0006811203784309328, -0.0007387240184471011, -0.0008061645203270018, -0.0008908166782930493, -0.0009966820944100618, -0.0011258230078965425, -0.0012762469705194235, -0.0014401780208572745, -0.0016059030313044786, -0.0017615080578252673, -0.0018967270152643323, -0.002002652967348695, -0.002075335942208767, -0.0021184340585023165, -0.0021382190752774477, -0.002142152050510049, -0.002136243972927332, -0.0021252399310469627, -0.0021122649777680635, -0.0021000138949602842, -0.0020908641163259745, -0.0020879548974335194, -0.0020936329383403063, -0.00210747797973454, -0.0021265819668769836, -0.002146719954907894, -0.0021658209152519703, -0.002185004996135831, -0.0022053481079638004, -0.002225815085694194, -0.002243258059024811, -0.0022532669827342033, -0.002252462087199092, -0.002240902977064252, -0.002221090020611882, -0.002196625107899308, -0.00217256392352283, -0.0021544990595430136, -0.00214664195664227, -0.002148659899830818, -0.002156475093215704, -0.002165447920560837, -0.0021702831145375967, -0.002166717080399394, -0.002148920902982354, -0.0021117241121828556, -0.0020577351097017527, -0.0019939870107918978, -0.0019265100127086043, -0.0018581990152597427, -0.001790776033885777, -0.0017263490008190274, -0.001667720964178443, -0.001617660978808999, -0.0015790440374985337, -0.0015560470055788755, -0.0015487700002267957, -0.0015492320526391268, -0.001543196034617722, -0.0015165089862421155, -0.0014608510537073016, -0.00137504399754107, -0.0012658319901674986, -0.0011445910204201937, -0.0010231579653918743, -0.0009085853234864771, -0.0008018622174859047, -0.0007004227954894304, -0.0005998368724249303, -0.0004974000039510429, -0.0003932128893211484, -0.00029102989356033504, -0.0001967668067663908, -0.00011618300050031394, -5.394177060225047e-05, -1.2062359928677324e-05, 1.4016999557497911e-05, 3.442203160375357e-05, 6.299070810200647e-05, 0.00011396220361348242, 0.00019484059885144234, 0.000303826091112569, 0.00043502330663613975, 0.0005788102280348539, 0.0007219554972834885, 0.0008512022905051708, 0.0009587854729034007, 0.0010438900208100677, 0.0011107149766758084, 0.0011682809563353658, 0.0012271599844098091, 0.0012942380271852016, 0.001372092985548079, 0.0014609229983761907, 0.0015575039433315396, 0.0016549959545955062, 0.001746334950439632, 0.0018258809577673674, 0.0018889929633587599, 0.0019357360433787107, 0.0019710969645529985, 0.002001390093937516, 0.0020324739161878824, 0.002068507019430399, 0.0021109359804540873, 0.00215932191349566, 0.0022110710851848125, 0.002262759953737259, 0.0023111209738999605, 0.0023514609783887863, 0.0023778160102665424, 0.0023845010437071323, 0.0023696860298514366, 0.0023379079066216946, 0.0022978750057518482, 0.002260413020849228, 0.002233366947621107, 0.002217822941020131, 0.002208059886470437, 0.0021961049642413855, 0.002176047069951892, 0.0021439509000629187, 0.0020970909390598536, 0.002035256940871477, 0.0019615760538727045, 0.0018814250361174345, 0.0018001280259341002, 0.0017203009920194745, 0.0016429610550403595, 0.0015686090337112546, 0.0014974350342527032, 0.0014292249688878655, 0.0013627930311486125, 0.0012972640106454492, 0.0012326940195634961, 0.0011670220410451293, 0.001096672029234469, 0.0010196970542892814, 0.0009363830904476345, 0.0008472133777104318, 0.0007511957082897425, 0.0006486169877462089, 0.0005425324197858572, 0.0004373445990495384, 0.000336125202011317, 0.00024028299958445132, 0.00014865730190649629, 5.812909876112826e-05, -3.614052911871113e-05, -0.0001376134023303166, -0.0002446201106067747, -0.0003517231089062989, -0.00045238708844408393, -0.0005420101806521416, -0.0006195144960656762, -0.0006847048061899841, -0.0007361795287579298, -0.0007728378986939788, -0.0007973578758537769, -0.0008166959160007536, -0.0008402452222071588, -0.0008749521803110838, -0.0009221836808137596, -0.0009779897518455982, -0.0010348829673603177, -0.0010853320127353072, -0.001123341964557767, -0.0011462620459496975, -0.0011553389485925436, -0.001152088982053101, -0.0011374619789421558, -0.0011140709975734353, -0.0010870150290429592, -0.0010610410245135427, -0.001038416987285018, -0.001020780997350812, -0.001010512001812458, -0.0010079949861392379, -0.001010279986076057, -0.001014285022392869, -0.0010189639870077372, -0.0010243089636787772, -0.00103073101490736, -0.0010367849608883262, -0.0010393320117145777, -0.0010365709895268083, -0.0010295440442860126, -0.0010221910197287798, -0.0010176970390602946, -0.001015487010590732, -0.0010124739492312074, -0.00100812001619488, -0.001006097998470068, -0.00101233902387321, -0.001029853941872716, -0.0010571239981800318, -0.0010897249449044466, -0.0011220290325582027, -0.001147605013102293, -0.0011628359789028764, -0.0011669730301946402, -0.0011605529580265284, -0.0011459599481895566, -0.0011282289633527398, -0.0011119140544906259, -0.0010992030147463083, -0.0010906870011240244, -0.001085352967493236, -0.0010808389633893967, -0.001074886997230351, -0.0010671609779819846, -0.0010601129615679383, -0.0010586479911580682, -0.0010680579580366611, -0.0010928009869530797, -0.0011334189912304282, -0.0011829689610749483, -0.001230885973200202, -0.0012677520280703902, -0.0012860799906775355, -0.0012834069784730673, -0.0012627890100702643, -0.001231685047969222, -0.001199275953695178, -0.0011726099764928222, -0.0011558689875528216, -0.0011507549788802862, -0.0011545290471985936, -0.00116198998875916, -0.0011675989953801036, -0.0011675989953801036, -0.0011612869566306472, -0.0011512170312926173, -0.0011395750334486365, -0.0011253809789195657, -0.0011025209678336978, -0.0010646929731592536, -0.0010092540178447962, -0.0009387396275997162, -0.0008587883203290403, -0.0007778662256896496, -0.0007045966922305524, -0.0006444539176300168, -0.0005995837855152786, -0.0005681960028596222, -0.0005441312096081674, -0.0005181729793548584, -0.0004824367933906615, -0.00043439038563519716, -0.00037572981091216207, -0.0003115680883638561, -0.00025047961389645934, -0.00020386719552334398, -0.0001799259043764323, -0.00018026780162472278, -0.0002020131069002673, -0.00023910359595902264, -0.00028149699210189283, -0.0003132828860543668, -0.0003169011906720698, -0.00028327939799055457, -0.00021574870334006846, -0.0001287794002564624, -4.173811976215802e-05, 2.85351798083866e-05, 7.274092786246911e-05, 9.041972225531936e-05, 8.927912131184712e-05, 8.07612668722868e-05, 7.309892680495977e-05, 7.244529842864722e-05, 8.373770106118172e-05, 0.00011103489669039845, 0.00015392090426757932, 0.00020877229690086097, 0.00026987679302692413, 0.0003305684949737042, 0.0003858937125187367, 0.000430284213507548, 0.0004575494967866689, 0.000462428288301453, 0.00044467850239016116, 0.00041087449062615633, 0.00037315679946914315, 0.0003435364051256329, 0.0003287857980467379, 0.00033002669806592166, 0.0003452833043411374, 0.00037263560807332397, 0.0004082006053067744, 0.000444650009740144, 0.00047374959103763103, 0.0004890576237812638, 0.00048774731112644076, 0.00047114279004745185, 0.0004432967980392277, 0.0004076510958839208, 0.00036453260690905154, 0.0003145431983284652, 0.0002605800109449774, 0.00020667779608629644, 0.00015474369865842164, 0.00010392229887656868, 5.49762808077503e-05, 1.1238070328545291e-05, -2.324759952898603e-05, -4.533629908110015e-05, -5.2805549785261974e-05, -4.5710461563430727e-05, -2.5569570425432175e-05, 5.373313797463197e-06, 4.173514025751501e-05, 7.691694918321446e-05, 0.00010591059981379658, 0.00012565440556500107, 0.00013527019473258406, 0.00013546019908972085, 0.00012780209362972528, 0.0001145604983321391, 9.880324796540663e-05, 8.310534758493304e-05, 6.795740046072751e-05, 5.284068902255967e-05, 3.624540113378316e-05, 1.7960859622689895e-05, 3.7699049926231964e-07, -1.3709110135096125e-05, -2.3967009838088416e-05, -3.1853309337748215e-05, -3.969961835537106e-05, -4.930379873258062e-05, -6.251648301258683e-05, -8.203965262509882e-05, -0.00011039119999622926, -0.00014777120668441057, -0.00019104090461041778, -0.00023479580704588443, -0.0002744171069934964, -0.0003085772041231394, -0.00034063690691255033, -0.0003768086025957018, -0.0004238891997374594, -0.0004865941882599145, -0.0005653948173858225, -0.000656920310575515, -0.000755039625801146, -0.0008524933946318924, -0.0009410469210706651, -0.001012225984595716, -0.001061673043295741, -0.0010915539460256696, -0.0011099949479103088, -0.0011255269637331367, -0.0011442330433055758, -0.0011709049576893449, -0.0012066729832440615, -0.0012496759882196784, -0.0012940559536218643, -0.0013318490236997604, -0.0013562219683080912, -0.0013616030337288976, -0.0013471189886331558, -0.0013172510080039501, -0.001280286000110209, -0.001246090978384018, -0.0012244830140843987, -0.0012230159481987357, -0.0012434950331225991, -0.001281031989492476, -0.001326613943092525, -0.0013710790080949664, -0.0014059030218049884, -0.001424100948497653, -0.001420706044882536, -0.001395971979945898, -0.0013575679622590542, -0.0013163640396669507, -0.001280845026485622, -0.0012549690436571836, -0.001239681034348905, -0.0012336750514805317, -0.0012347729643806815, -0.0012395229423418641, -0.0012444589519873261, -0.0012460430152714252, -0.0012407740578055382, -0.001226859982125461, -0.0012045910116285086, -0.0011745080118998885, -0.001138255000114441, -0.0010973189491778612, -0.0010533799650147557, -0.0010082570370286703, -0.0009648703853599727, -0.0009269469883292913, -0.0008989315247163177, -0.0008844021940603852, -0.0008841789094731212, -0.0008963432046584785, -0.0009170342236757278, -0.0009425070020370185, -0.0009692530147731304, -0.0009938530856743455, -0.0010148780420422554, -0.0010324650211259723, -0.0010488659609109163, -0.0010664990404620767, -0.0010871399426832795, -0.0011101820273324847, -0.0011315100127831101, -0.0011457139626145363, -0.0011490460019558668, -0.001141211949288845, -0.0011256779544055462, -0.0011081829434260726, -0.0010965720284730196, -0.001096604042686522, -0.0011078569805249572, -0.0011257600272074342, -0.0011460409732535481, -0.0011653989786282182, -0.001181654050014913, -0.001194800017401576, -0.00120760896243155, -0.0012223890516906977, -0.0012383810244500637, -0.0012524520279839635, -0.0012598569737747312, -0.0012568540405482054, -0.0012417590478435159, -0.001215268042869866, -0.0011803379748016596, -0.001142291002906859, -0.0011072979541495442, -0.0010815459536388516, -0.0010713479714468122, -0.0010815670248121023, -0.0011142570292577147, -0.0011700349859893322, -0.0012478550197556615, -0.0013457350432872772, -0.0014630459481850266, -0.001599426963366568, -0.0017524920403957367, -0.001915434026159346, -0.002076338045299053, -0.0022198930382728577, -0.0023314340505748987, -0.002404669066891074, -0.0024420490954071283, -0.0024516889825463295, -0.002443956909701228, -0.0024294829927384853, -0.0024179129395633936, -0.0024159180466085672, -0.002423844998702407, -0.0024355780333280563, -0.0024423389695584774, -0.0024359289091080427, -0.0024137140717357397, -0.002377820899710059, -0.002334210090339184, -0.0022922379430383444, -0.0022604248952120543, -0.002244661096483469, -0.002247791038826108, -0.0022684920113533735, -0.002299825893715024, -0.002330936025828123, -0.002352295909076929, -0.0023591730277985334, -0.0023504009004682302, -0.0023284279741346836, -0.0023009139113128185, -0.002277117921039462, -0.0022654940839856863, -0.002270098077133298, -0.00228696595877409, -0.0023043761029839516, -0.0023109489120543003, -0.0023036589846014977, -0.0022831859532743692, -0.002249205019325018, -0.0021990900859236717, -0.002133843954652548, -0.00206208904273808, -0.0019945339299738407, -0.00193869904614985, -0.0018960949964821339, -0.0018642659997567534, -0.0018409669864922762, -0.0018237050389871001, -0.0018062740564346313, -0.001779597019776702, -0.0017373920418322086, -0.0016772180097177625, -0.0015999199822545052, -0.0015100579475983977, -0.0014134430093690753, -0.0013159209629520774, -0.0012253000168129802, -0.0011505819857120514, -0.0010997869540005922, -0.001075788983143866, -0.0010751780355349183, -0.0010873000137507915, -0.0010984999826177955, -0.0010971640003845096, -0.0010781349847093225, -0.0010439850157126784, -0.0010011260164901614, -0.000957871787250042, -0.0009206333197653294, -0.0008917006780393422, -0.0008709502872079611, -0.0008566383039578795, -0.0008450868772342801, -0.0008314874721691012, -0.0008120003039948642, -0.0007839411264285445, -0.0007468775729648769, -0.0007014824077486992, -0.0006494529079645872, -0.000593179720453918, -0.0005363016971386969, -0.0004813543055206537, -0.00042867069714702666, -0.00037829650682397187, -0.00033103080932050943, -0.00028756039682775736, -0.0002469315950293094, -0.0002080348931485787, -0.00017247340292669833, -0.00014220470620784909, -0.00011703879863489419, -9.495358244748786e-05, -7.378414738923311e-05, -5.355379107641056e-05, -3.5176701203454286e-05, -1.917018926178571e-05, -3.801522098001442e-06, 1.4750499758520164e-05, 3.9894101064419374e-05, 7.499824278056622e-05, 0.00012200210039736703, 0.00018063159950543195, 0.00024725220282562077, 0.00031662159017287195, 0.0003823305887635797, 0.0004407280939631164, 0.000490961188916117, 0.0005315669113770127, 0.0005602330202236772, 0.0005760117783211172, 0.0005824001273140311, 0.0005854637129232287, 0.000589480681810528, 0.000595823978073895, 0.0006064104964025319, 0.0006260990048758686, 0.0006595936720259488, 0.0007100658840499818, 0.0007769637159071863, 0.0008557420806027949, 0.000939682824537158, 0.0010225640144199133, 0.0010991089511662722, 0.001166102010756731, 0.0012229450512677431, 0.0012719070073217154, 0.0013175460044294596, 0.001365027972497046, 0.0014179670251905918, 0.0014773550210520625, 0.0015427640173584223, 0.0016132090240716934, 0.001687119947746396, 0.0017626129556447268, 0.0018366359872743487, 0.0019068759866058826, 0.0019739139825105667, 0.0020368481054902077, 0.002090177033096552, 0.002126729115843773, 0.0021422419231384993, 0.0021359079983085394, 0.0021102139726281166, 0.002072240924462676, 0.0020337249152362347, 0.0020086849108338356, 0.0020062599796801805, 0.002027380047366023, 0.0020664879120886326, 0.002113365102559328, 0.0021568029187619686, 0.002188391052186489, 0.0022060370538383722, 0.002211431972682476, 0.0022072698920965195, 0.002195626962929964, 0.002179990988224745, 0.0021651210263371468, 0.0021531700622290373, 0.00214347499422729, 0.002132958034053445, 0.0021184440702199936, 0.002097429009154439, 0.0020690090022981167, 0.0020342341158539057, 0.0019958470948040485, 0.0019575110636651516, 0.001921887043863535, 0.0018905450124293566, 0.0018638119800016284, 0.0018428879557177424, 0.0018307809950783849, 0.0018306829733774066, 0.0018454940291121602, 0.001875177025794983, 0.0019156630150973797, 0.001958712935447693, 0.001994447084143758, 0.002014702884480357, 0.002016400918364525, 0.002000917913392186, 0.001972234109416604, 0.001935487031005323, 0.0018947579665109515, 0.001854822039604187, 0.0018200669437646866, 0.0017935089999809861, 0.0017750930273905396, 0.0017597749829292297, 0.0017419690266251564, 0.0017200120491907, 0.0016954209422692657, 0.0016711610369384289, 0.0016500779893249273, 0.0016332860104739666, 0.001622786046937108, 0.0016205740394070745, 0.0016281059943139553, 0.0016438850434496999, 0.001663816045038402, 0.0016837000148370862, 0.0016983610112220049, 0.0017038809601217508, 0.0016979980282485485, 0.0016808409709483385, 0.0016536980401724577, 0.0016196180367842317, 0.0015818839892745018, 0.001543950056657195, 0.0015098679577931762, 0.001482993015088141, 0.0014667550567537546, 0.0014615330146625638, 0.0014619269641116261, 0.001457693986594677, 0.0014374960446730256, 0.0013953819870948792, 0.0013333030510693789, 0.001257790019735694, 0.0011753319995477796, 0.0010923920199275017, 0.0010150759480893612, 0.0009481160086579621, 0.000892716518137604, 0.0008454978815279901, 0.0008009863086044788, 0.0007546931155957282, 0.000705127022229135, 0.0006538304733112454, 0.0006050686934031546, 0.000563891779165715, 0.0005346328835003078, 0.0005190870142541826, 0.000514860381372273, 0.0005170439253561199, 0.0005180910229682922, 0.0005127398180775344, 0.0005017492221668363, 0.00048784149112179875, 0.00047279050340875983, 0.0004574432969093323, 0.00044073211029171944, 0.0004202401905786246, 0.0003942688927054405, 0.0003635809989646077, 0.000331382907461375, 0.00030102088931016624, 0.0002748834958765656, 0.0002547038020566106, 0.00024039350682869554, 0.000231329002417624, 0.00022661070397589356, 0.00022252100461628288, 0.00021394589566625655, 0.00019835350394714624, 0.00017577859398443252, 0.00014617390115745366, 0.00010911539720837027, 6.49078210699372e-05, 1.4836909940640908e-05, -3.925480996258557e-05, -9.578173194313422e-05, -0.000151952393935062, -0.00020368890545796603, -0.0002487988967914134, -0.0002886755974031985, -0.00032561790430918336, -0.00036217691376805305, -0.00039996931445784867, -0.0004397958982735872, -0.0004833771090488881, -0.0005315631860867143, -0.0005822657258249819, -0.000631616625469178, -0.000676638213917613, -0.0007177985971793532, -0.0007567001157440245, -0.0007937385234981775, -0.0008285834919661283, -0.0008603322203271091, -0.0008879153174348176, -0.0009111178223975003, -0.0009312673937529325, -0.0009513195254839957, -0.0009759279200807214, -0.0010116039775311947, -0.001064733020029962, -0.0011392369633540511, -0.0012339879758656025, -0.0013416180154308677, -0.0014497640077024698, -0.0015458520501852036, -0.001623932970687747, -0.0016842179466038942, -0.0017293120035901666, -0.0017626079497858882, -0.0017866840353235602, -0.0018042799783870578, -0.001817338983528316, -0.0018263920210301876, -0.0018296809867024422, -0.0018256240291520953, -0.0018158509628847241, -0.0018044660100713372, -0.001795305055566132, -0.0017904250416904688, -0.0017886440036818385, -0.001787554007023573, -0.0017864269902929664, -0.0017861180240288377, -0.001788984052836895, -0.001795743010006845, -0.0018036030232906342, -0.0018088159849867225, -0.0018062590388581157, -0.0017901170067489147, -0.0017572720535099506, -0.0017070299945771694, -0.0016435040161013603, -0.001572591019794345, -0.0015001390129327774, -0.0014313330175355077, -0.0013704480370506644, -0.0013190590543672442, -0.0012749610468745232, -0.0012319510569795966, -0.0011818059720098972, -0.0011182170128449798, -0.0010379409650340676, -0.0009423458832316101, -0.0008366691181436181, -0.0007296265102922916, -0.0006312960758805275, -0.0005508275935426354, -0.0004944364773109555, -0.000463644799310714, -0.00045439100358635187, -0.00045806579873897135, -0.00046412908704951406, -0.0004619375104084611, -0.0004459710035007447, -0.00041669560596346855, -0.0003762024862226099, -0.0003253729082643986, -0.00026442279340699315, -0.0001917513000080362, -0.00010595769708743319, -8.863807124726009e-06, 9.204234083881602e-05, 0.00018534269474912435, 0.00025815810658968985, 0.0003012290981132537, 0.0003146732924506068, 0.0003060867020394653, 0.0002853271143976599, 0.00026039520162157714, 0.00023569360200781375, 0.00021166120131965727, 0.00018824869766831398, 0.00016698980471119285, 0.00015021109720692039, 0.00014338600158225745, 0.00015367359446827322, 0.00018434939556755126, 0.00023316880105994642, 0.0002916250959970057, 0.0003461923042777926, 0.0003821814898401499, 0.00039018038660287857, 0.00036993029061704874, 0.00032917241333052516, 0.0002799479116220027, 0.00023424449318554252, 0.00020224860054440796, 0.00018892269872594625, 0.00019241120025981218, 0.00020560830307658762, 0.00021708010172005743, 0.00021532780374400318, 0.00019291549688205123, 0.0001488520938437432, 8.704308129381388e-05, 1.5265599358826876e-05, -5.611162123386748e-05, -0.00011559580161701888, -0.00015384580183308572, -0.00016818339645396918, -0.00015975820133462548, -0.00013350069639272988, -9.587888780515641e-05, -5.347721162252128e-05, -1.0979980288539082e-05, 2.8910129913128912e-05, 6.386639142874628e-05, 9.259516082238406e-05, 0.00011386050027795136, 0.0001266861945623532, 0.0001307461061514914, 0.00012590289406944066, 0.00011135249951621518, 8.661128958920017e-05, 5.1971910579595715e-05, 8.52935863804305e-06, -4.097458077012561e-05, -9.190553100779653e-05, -0.00013992009917274117, -0.00018139960593543947, -0.00021355319768190384, -0.00023421940568368882, -0.00024237719480879605, -0.00023723120102658868, -0.00021894350356888026, -0.000192849402083084, -0.0001655985979596153, -0.0001431877026334405, -0.0001295631955144927, -0.0001261337019968778, -0.0001349117956124246, -0.0001580064999870956, -0.00019630510360002518, -0.00024683738593012094, -0.00030408569728024304, -0.00036269109114073217, -0.0004199274117127061, -0.0004755900881718844, -0.0005287830135785043, -0.0005748606054112315, -0.0006066237110644579, -0.0006235964829102159, -0.0006329757743515074, -0.0006445663166232407, -0.0006696797790937126, -0.0007166501018218696, -0.0007870362023822963, -0.0008751014829613268, -0.0009694540058262646, -0.0010577290086075664, -0.0011331080459058285, -0.0011957630049437284, -0.0012482129968702793, -0.0012934509431943297, -0.0013364680344238877, -0.0013818410225212574, -0.0014331650454550982, -0.0014955130172893405, -0.0015746239805594087, -0.001672841957770288, -0.0017875989433377981, -0.0019122420344501734, -0.002036744961515069, -0.00215139496140182, -0.002249153098091483, -0.002324942033737898, -0.002375097945332527, -0.0024022620636969805, -0.002414870075881481, -0.0024223849177360535, -0.002433832036331296, -0.002455462934449315, -0.0024885479360818863, -0.0025295999366790056, -0.0025726770982146263, -0.0026112119667232037, -0.0026404699310660362, -0.0026578400284051895, -0.0026630819775164127, -0.0026581769343465567, -0.0026473531033843756, -0.0026365420781075954, -0.002632135059684515, -0.002638390054926276, -0.002655948046594858, -0.0026838090270757675, -0.002719548065215349, -0.002759031020104885, -0.0027970969676971436, -0.002828034106642008, -0.0028465520590543747, -0.0028498780447989702, -0.002836742904037237, -0.002807913115248084, -0.0027660659980028868, -0.0027151540853083134, -0.002659175079315901, -0.0026029839646071196, -0.0025513130240142345, -0.0025060900952667, -0.0024668790865689516, -0.0024343039840459824, -0.0024094709660857916, -0.002392357913777232, -0.002381060039624572, -0.0023722751066088676, -0.002363957930356264, -0.0023569019977003336, -0.002351281000301242, -0.0023439289070665836, -0.002330886898562312, -0.002310842974111438, -0.002284236019477248, -0.0022543040104210377, -0.002226267009973526, -0.0022058850154280663, -0.0021961070597171783, -0.0021950840018689632, -0.0021979669108986855, -0.0022008230444043875, -0.0022015569265931845, -0.0021991499233990908, -0.0021913431119173765, -0.0021752279717475176, -0.0021470629144459963, -0.00210470799356699, -0.0020528289023786783, -0.0019999840296804905, -0.001956603955477476, -0.0019311909563839436, -0.0019268520409241319, -0.0019420499447733164, -0.001972106983885169, -0.0020112539641559124, -0.002051983028650284, -0.002084945095703006, -0.0021020439453423023, -0.0021017598919570446, -0.002089075045660138, -0.0020712600089609623, -0.0020559111144393682, -0.0020497310906648636, -0.0020562559366226196, -0.0020748190581798553, -0.002102317987009883, -0.002135191112756729, -0.0021722340025007725, -0.0022136240731924772, -0.0022578579373657703, -0.002301817061379552, -0.0023430739529430866, -0.0023795568849891424, -0.00240946002304554, -0.0024291779845952988, -0.0024352790787816048, -0.002427854109555483, -0.002409328008070588, -0.0023809729609638453, -0.0023442809469997883, -0.00230377702973783, -0.002262749942019582, -0.002223279094323516, -0.0021868920885026455, -0.002151927910745144, -0.002113746013492346, -0.0020680930465459824, -0.0020150430500507355, -0.0019583150278776884, -0.0019018599996343255, -0.001848733052611351, -0.001801377977244556, -0.0017616209806874394, -0.0017302479827776551, -0.0017077600350603461, -0.0016932289581745863, -0.0016836629947647452, -0.0016749639762565494, -0.0016621809918433428, -0.0016402440378442407, -0.0016064710216596723, -0.0015640540514141321, -0.0015198140172287822, -0.0014799600467085838, -0.0014485199935734272, -0.0014271290274336934, -0.0014152920339256525, -0.0014121730346232653, -0.0014143709558993578, -0.001414204016327858, -0.0014031770406290889, -0.0013767719501629472, -0.0013354599941521883, -0.0012828819453716278, -0.0012258300557732582, -0.0011714049614965916, -0.0011246829526498914, -0.0010894290171563625, -0.0010685869492590427, -0.0010644530411809683, -0.0010769510408863425, -0.0011025540297850966, -0.001136137987487018, -0.0011729110265150666, -0.0012088390067219734, -0.0012396760284900665, -0.0012605410302057862, -0.0012669500429183245, -0.0012588989920914173, -0.0012422750005498528, -0.0012261070078238845, -0.0012190600391477346, -0.0012226459803059697, -0.001231892965734005, -0.0012428299523890018, -0.001252150977961719, -0.0012576490407809615, -0.0012569800019264221, -0.0012480859877541661, -0.0012297660578042269, -0.0012024069437757134, -0.0011675619753077626, -0.0011285189539194107, -0.0010912800207734108, -0.0010613050544634461, -0.0010405000066384673, -0.0010288440389558673, -0.0010264849988743663, -0.0010323330061510205, -0.0010425850050523877, -0.001052316976711154, -0.0010580529924482107, -0.001059266971424222, -0.0010554669424891472, -0.0010447270469740033, -0.0010244440054520965, -0.0009943675249814987, -0.0009574941941536963, -0.0009173664730042219, -0.0008781467913649976, -0.0008442819234915078, -0.0008204309269785881, -0.0008105983142741024, -0.0008178526186384261, -0.0008413959876634181, -0.0008744496153667569, -0.000905657303519547, -0.0009222758817486465, -0.0009177360916510224, -0.0008940296829678118, -0.0008561440045014024, -0.0008089853799901903, -0.0007572185131721199, -0.0007068471750244498, -0.0006628197152167559, -0.0006294852937571704, -0.0006130092078819871, -0.0006179522024467587, -0.0006450157961808145, -0.000690320273861289, -0.0007445304072462022, -0.0007944703102111816, -0.0008268278907053173, -0.0008343975059688091, -0.0008171341032721102, -0.0007810196839272976, -0.0007354323170147836, -0.0006906443741172552, -0.0006594035075977445, -0.0006540984031744301, -0.0006809229962527752, -0.0007366897189058363, -0.0008109128102660179, -0.000890917785000056, -0.0009665095712989569, -0.0010310979560017586, -0.0010817890288308263, -0.00111857196316123, -0.0011445990530773997, -0.001166027970612049, -0.001188974012620747, -0.0012186130043119192, -0.0012582970084622502, -0.0013096639886498451, -0.0013704679440706968, -0.001433114055544138, -0.0014883599942550063, -0.0015317229554057121, -0.0015632159775123, -0.0015847160248085856, -0.0016012979904189706, -0.0016211170004680753, -0.0016508459812030196, -0.0016921909991651773, -0.0017411269946023822, -0.0017890880117192864, -0.0018269260181114078, -0.0018474439857527614, -0.0018477089470252395, -0.001829297048971057, -0.0017981469864025712, -0.0017624660395085812, -0.0017335800221189857, -0.0017253250116482377, -0.0017473200568929315, -0.0018020389834418893, -0.0018834959482774138, -0.001979066990315914, -0.0020733659621328115, -0.002151669003069401, -0.0022035480942577124, -0.002221754053607583, -0.0022048470564186573, -0.002161063952371478, -0.002102601109072566, -0.0020436521153897047, -0.0019991800654679537, -0.0019802520982921124, -0.001991905039176345, -0.0020338899921625853, -0.0021019820123910904, -0.0021869600750505924, -0.002274339087307453, -0.002348504960536957, -0.0023967688903212547, -0.0024092679377645254, -0.002384166931733489, -0.002330767922103405, -0.00226222793571651, -0.0021887430921196938, -0.0021159499883651733, -0.002047732938081026, -0.0019899660255759954, -0.0019488839898258448, -0.0019300980493426323, -0.0019386899657547474, -0.00197734497487545, -0.0020436099730432034, -0.002127772895619273, -0.002215903950855136, -0.002294529927894473, -0.002355078002437949, -0.0023939679376780987, -0.0024110940285027027, -0.0024078181013464928, -0.0023875560145825148, -0.0023548200260847807, -0.002313016913831234, -0.002264376962557435, -0.002211394952610135, -0.002157763112336397, -0.002109660068526864, -0.0020722888875752687, -0.002046789973974228, -0.002032618038356304, -0.0020301840268075466, -0.0020377899054437876, -0.002050396054983139, -0.0020633810199797153, -0.0020717340521514416, -0.0020701009780168533, -0.0020535460207611322, -0.0020201990846544504, -0.0019728299230337143, -0.0019161819946020842, -0.0018572249682620168, -0.0018052899977192283, -0.0017675859853625298, -0.0017488249577581882, -0.001748397946357727, -0.0017601459985598922, -0.0017757980385795236, -0.001784797990694642, -0.0017768259858712554, -0.0017449919832870364, -0.0016900500049814582, -0.0016181990504264832, -0.0015349419554695487, -0.0014447709545493126, -0.0013486719690263271, -0.0012460349826142192, -0.0011372639564797282, -0.0010272209765389562, -0.0009241212974302471, -0.0008352852892130613, -0.0007654178771190345, -0.0007155885105021298, -0.0006833733059465885, -0.0006627844995819032, -0.0006436749827116728, -0.0006128025124780834, -0.0005587046034634113, -0.00047891310532577336, -0.0003779719118028879, -0.00026535510551184416, -0.00015018389967735857, -3.9824601117288694e-05, 5.804425018141046e-05, 0.00013913109432905912, 0.0002062185958493501, 0.0002671412948984653, 0.00033176341094076633, 0.00040672539034858346, 0.0004911895957775414, 0.0005790619761683047, 0.0006635115132667124, 0.0007391684921458364, 0.0008035911014303565, 0.0008563151932321489, 0.0008976159733720124, 0.0009306303109042346, 0.0009619647171348333, 0.0009972859406843781, 0.0010401520412415266, 0.0010909880511462688, 0.001148344948887825, 0.001209696987643838, 0.0012703080428764224, 0.0013243269640952349, 0.0013650209875777364, 0.0013869509566575289, 0.0013906649546697736, 0.0013839909806847572, 0.0013787290081381798, 0.0013858979800716043, 0.0014139419654384255, 0.0014658150030300021, 0.001534439972601831, 0.0016071610152721405, 0.0016725610475987196, 0.0017235149862244725, 0.001757442019879818, 0.0017762399511411786, 0.0017859629588201642, 0.0017931950278580189, 0.0018010300118476152, 0.0018097179709002376, 0.0018174239667132497, 0.0018215449526906013, 0.0018202710198238492, 0.0018153010169044137, 0.0018117360305041075, 0.0018128990195691586, 0.0018190910341218114, 0.0018303639953956008, 0.0018464589957147837, 0.0018673569429665804, 0.0018926489865407348, 0.001922045019455254, 0.001954978099092841, 0.0019890109542757273, 0.0020214859396219254, 0.002051080111414194, 0.002079190919175744, 0.002109010936692357, 0.002143062883988023, 0.002179943025112152, 0.002216470893472433, 0.0022488709073513746, 0.0022719870321452618, 0.0022822159808129072, 0.002279631095007062, 0.0022663830313831568, 0.002243734896183014, 0.0022137409541755915, 0.0021817460656166077, 0.0021534000989049673, 0.0021289840806275606, 0.00210845610126853, 0.0020955679938197136, 0.0020949579775333405, 0.002108926884829998, 0.0021378579549491405, 0.0021812659688293934, 0.0022360149305313826, 0.0022971429862082005, 0.0023561979178339243, 0.0024038651026785374, 0.0024324089754372835, 0.0024376490619033575, 0.002419847995042801, 0.0023850470315665007, 0.002342205960303545, 0.0022998868953436613, 0.0022631490137428045, 0.002232349943369627, 0.0022057299502193928, 0.002181808929890394, 0.0021621088963001966, 0.0021487621124833822, 0.0021455700043588877, 0.002157794078812003, 0.002185869961977005, 0.0022271969355642796, 0.0022771479561924934, 0.0023298319429159164, 0.0023774520959705114, 0.002410565037280321, 0.002423064084723592, 0.002415566937997937, 0.002395601011812687, 0.002371269976720214, 0.002345900982618332, 0.0023191110230982304, 0.002287191106006503, 0.0022477370221167803, 0.002204804914072156, 0.0021679119672626257, 0.0021439041011035442, 0.0021331130992621183, 0.0021315061021596193, 0.0021341999527066946, 0.002140012104064226, 0.0021499800495803356, 0.0021660709753632545, 0.002190082101151347, 0.0022211100440472364, 0.0022567769046872854, 0.0022924260701984167, 0.0023228831123560667, 0.002343535888940096, 0.0023506039287894964, 0.0023406059481203556, 0.002313121920451522, 0.0022751770447939634, 0.0022370850201696157, 0.0022072959691286087, 0.002191286999732256, 0.002190682105720043, 0.0022026579827070236, 0.0022202921099960804, 0.002236028900370002, 0.002243337919935584, 0.002239213092252612, 0.002225646050646901, 0.002207903889939189, 0.002191101899370551, 0.002175823086872697, 0.0021593880373984575, 0.0021410530898720026, 0.0021250920835882425, 0.0021194471046328545, 0.002131880959495902, 0.0021643040236085653, 0.0022103500086814165, 0.002259280998259783, 0.0023010449949651957, 0.0023292088881134987, 0.0023403901141136885, 0.0023349360562860966, 0.002317362930625677, 0.0022942449431866407, 0.0022718010004609823, 0.0022556770127266645, 0.002248629927635193, 0.002250378020107746, 0.002260196954011917, 0.0022775379475206137, 0.0023032650351524353, 0.0023375831078737974, 0.0023779980838298798, 0.0024216650053858757, 0.002466941950842738, 0.002512721111997962, 0.002558116102591157, 0.0026019581127911806, 0.002642515115439892, 0.0026781680062413216, 0.00270565296523273, 0.00271885609254241, 0.0027149540837854147, 0.002696353942155838, 0.0026672629173845053, 0.0026321960613131523, 0.0025951829738914967, 0.002560212044045329, 0.0025301610585302114, 0.002508081030100584, 0.0024956720881164074, 0.00249147298745811, 0.002493500942364335, 0.002500335918739438, 0.002512529958039522, 0.0025321058928966522, 0.00256091495975852, 0.0025977089535444975, 0.002637763973325491, 0.002675748895853758, 0.0027070411015301943, 0.0027280698996037245, 0.002737568924203515, 0.0027355600614100695, 0.0027218160685151815, 0.0026977011002600193, 0.0026651991065591574, 0.002628647955134511, 0.0025959359481930733, 0.0025746070314198732, 0.002568929921835661, 0.002576129976660013, 0.0025875219143927097, 0.002595518948510289, 0.002596959937363863, 0.0025924560613930225, 0.0025830899830907583, 0.0025700998958200216, 0.002553957048803568, 0.0025349019560962915, 0.0025126999244093895, 0.0024877830874174833, 0.0024613169953227043, 0.002432529116049409, 0.0024001318961381912, 0.002362082013860345, 0.0023181510623544455, 0.0022706619929522276, 0.00222163088619709, 0.0021733141038566828, 0.0021269419230520725, 0.002083390951156616, 0.00204284000210464, 0.0020034140907227993, 0.0019637190271168947, 0.001923228963278234, 0.0018814780050888658, 0.0018395220395177603, 0.0017985750455409288, 0.001757150050252676, 0.001713122008368373, 0.0016629870515316725, 0.0016037860186770558, 0.001538221025839448, 0.0014734190190210938, 0.001419764943420887, 0.0013858280144631863, 0.0013753559906035662, 0.0013887359527871013, 0.0014204089529812336, 0.0014621280133724213, 0.0015037680277600884, 0.0015370820183306932, 0.0015578060410916805, 0.0015650260029360652, 0.0015604749787598848, 0.0015452899970114231, 0.0015212709549814463, 0.0014938770327717066, 0.0014717200538143516, 0.001462677028030157, 0.0014720519538968801, 0.0015010599745437503, 0.0015497090062126517, 0.0016168319853022695, 0.0016965479589998722, 0.0017798109911382198, 0.0018549349624663591, 0.0019115889444947243, 0.0019429170060902834, 0.0019440300529822707, 0.0019156700000166893, 0.0018648989498615265, 0.0017998990369960666, 0.0017291740514338017, 0.001660587964579463, 0.001602404983714223, 0.00156251504085958, 0.0015452089719474316, 0.001548529020510614, 0.0015655539464205503, 0.0015883210580796003, 0.0016077449545264244, 0.001615412998944521, 0.001606942038051784, 0.0015822279965505004, 0.0015451499493792653, 0.00150351005140692, 0.0014652470126748085, 0.0014329280238598585, 0.0014039929956197739, 0.001373586943373084, 0.0013367390492931008, 0.0012900360161438584, 0.0012322829570621252, 0.0011646579951047897, 0.0010903090005740523, 0.0010139050427824259, 0.0009413068764843047, 0.0008773956215009093, 0.0008237048168666661, 0.0007798384758643806, 0.0007463057991117239, 0.00072345050284639, 0.0007117001223377883, 0.0007078577182255685, 0.0007008604006841779, 0.0006798147805966437, 0.0006410133792087436, 0.0005899015231989324, 0.0005391634767875075, 0.0005032895714975893, 0.0004899551859125495, 0.0004952059825882316, 0.0005078972899354994, 0.0005175371188670397, 0.0005182902095839381, 0.0005081577110104263, 0.0004879925982095301, 0.00046020428999327123, 0.0004305063921492547, 0.0004072909941896796, 0.00039795361226424575, 0.0004062411026097834, 0.00042842200491577387, 0.0004564985865727067, 0.0004829817044083029, 0.0005035297945141792, 0.0005173927056603134, 0.0005251879920251667, 0.0005266816006042063, 0.0005221018218435347, 0.0005132147925905883, 0.0005011826287955046, 0.00048431329196318984, 0.00045883809798397124, 0.00042384350672364235, 0.00038402850623242557, 0.0003486856003291905, 0.00032910049776546657, 0.00033356848871335387, 0.00036406650906428695, 0.00041654478991404176, 0.00048376841004937887, 0.0005590189248323441, 0.0006357547244988382, 0.0007079694769345224, 0.0007699084817431867, 0.0008167537744157016, 0.0008454715716652572, 0.0008547732140868902, 0.0008476481889374554, 0.00083099992480129, 0.0008124219020828605, 0.0007972979219630361, 0.0007867987151257694, 0.0007805207278579473, 0.0007818524027243257, 0.0007986798882484436, 0.0008377170888707042, 0.000899348990060389, 0.0009752807090990245, 0.0010519439820200205, 0.0011182710295543075, 0.0011686719954013824, 0.001201701001264155, 0.0012174779549241066, 0.0012173899449408054, 0.0012053040554746985, 0.0011864859843626618, 0.0011672769905999303, 0.0011536739766597748, 0.0011485860450193286, 0.0011524149449542165, 0.0011629400542005897, 0.0011782570509240031, 0.001198449986986816, 0.0012241400545462966, 0.001254384987987578, 0.0012886460172012448, 0.001326733035966754, 0.0013677410315722227, 0.001408752053976059, 0.0014467800501734018, 0.0014806570252403617, 0.0015127570368349552, 0.0015477919951081276, 0.0015896830009296536, 0.0016402980545535684, 0.0016972189769148827, 0.0017529899487271905, 0.0018002010183408856, 0.001835947041399777, 0.001862318953499198, 0.001883444027043879, 0.0019015530124306679, 0.0019181070383638144, 0.001933988998644054, 0.0019486000528559089, 0.0019620959646999836, 0.001975849037989974, 0.0019917921163141727, 0.002011111006140709, 0.0020318040624260902, 0.002050091978162527, 0.0020602659787982702, 0.0020576389506459236, 0.0020429259166121483, 0.0020224980544298887, 0.002005469985306263, 0.002000499051064253, 0.0020112579222768545, 0.00203598290681839, 0.002070765011012554, 0.0021095150150358677, 0.0021443860605359077, 0.0021704519167542458, 0.0021875249221920967, 0.002198433969169855, 0.0022051450796425343, 0.002205335069447756, 0.002194528002291918, 0.0021698379423469305, 0.0021321489475667477, 0.0020872640889137983, 0.0020441939122974873, 0.0020100129768252373, 0.0019862910266965628, 0.0019713970832526684, 0.0019633180927485228, 0.0019611939787864685, 0.0019626340363174677, 0.0019633739721029997, 0.0019609429873526096, 0.001954232109710574, 0.00194352597463876, 0.0019299420528113842, 0.001915876055136323, 0.0019039269536733627, 0.001895583001896739, 0.001889607054181397, 0.0018825649749487638, 0.0018706240225583315, 0.0018515799893066287, 0.0018249599961563945, 0.001790364971384406, 0.0017472639447078109, 0.001694898004643619, 0.001633396022953093, 0.0015641739591956139, 0.0014890050515532494, 0.0014096059603616595, 0.0013278849655762315, 0.001245431019924581, 0.0011641000164672732, 0.0010864690411835909, 0.0010157240321859717, 0.0009547374211251736, 0.0009044036269187927, 0.0008609734941273928, 0.0008176951087079942, 0.0007673790096305311, 0.0007071312866173685, 0.0006417579133994877, 0.0005791173898614943, 0.0005257510929368436, 0.00048284430522471666, 0.0004459033953025937, 0.00040800400893203914, 0.00036239810287952423, 0.00030793860787525773, 0.00024928589118644595, 0.00019327409972902387, 0.00014451669994741678, 0.00010058849875349551, 5.552470975089818e-05, 4.011497821920784e-06, -5.763953959103674e-05, -0.00013191609468776733, -0.00021884069428779185, -0.0003160329069942236, -0.00041915950714610517, -0.0005238379817456007, -0.0006293985061347485, -0.0007378999143838882, -0.0008496204973198473, -0.0009609936969354749, -0.0010679200058802962, -0.0011679379967972636, -0.001258883043192327, -0.0013400099705904722, -0.0014123870059847832, -0.0014765169471502304, -0.0015320410020649433, -0.0015795649960637093, -0.0016223849961534142, -0.001667537959292531, -0.0017221589805558324, -0.0017901830142363906, -0.0018708299612626433, -0.001958967885002494, -0.0020473420154303312, -0.002129774075001478, -0.002203725976869464, -0.0022689090110361576, -0.002326336922124028, -0.0023784060031175613, -0.0024313319008797407, -0.0024935940746217966, -0.0025739639531821012, -0.0026762390043586493, -0.0027981260791420937, -0.0029325371142476797, -0.0030691269785165787, -0.003197154961526394, -0.003305637976154685, -0.003385107032954693, -0.0034325208980590105, -0.003452124074101448, -0.003453363897278905, -0.0034451859537512064, -0.003435299964621663, -0.0034302358981221914, -0.003433859907090664, -0.0034487079828977585, -0.0034733859356492758, -0.00350114400498569, -0.003522861050441861, -0.0035304520279169083, -0.003518274985253811, -0.003483884036540985, -0.0034278349485248327, -0.0033543019089847803, -0.003270169021561742, -0.0031856331042945385, -0.0031131869181990623, -0.003064991906285286, -0.003047896083444357, -0.003060064045712352, -0.0030931918881833553, -0.003134174970909953, -0.0031686059664934874, -0.003186027053743601, -0.0031799960415810347, -0.003149759955704212, -0.003099554916843772, -0.003034787019714713, -0.002960389945656061, -0.002880251035094261, -0.002799978945404291, -0.002723750891163945, -0.002653698902577162, -0.0025914038997143507, -0.0025356169790029526, -0.0024837451055645943, -0.002431974047794938, -0.002376137999817729, -0.0023124380968511105, -0.0022409209050238132, -0.00216692709363997, -0.0020975000225007534, -0.002040558960288763, -0.002002107910811901, -0.0019846290815621614, -0.001984952948987484, -0.0019967169500887394, -0.0020120630506426096, -0.002020864048972726, -0.0020146858878433704, -0.0019847380463033915, -0.0019260910339653492, -0.0018430879572406411, -0.0017464139964431524, -0.0016484089428558946, -0.0015598329482600093, -0.0014882610412314534, -0.001436920021660626, -0.0014069429598748684, -0.0013971710577607155, -0.0014042180264368653, -0.0014240610180422664, -0.0014524719445034862, -0.001485339947976172, -0.0015178140019997954, -0.0015456960536539555, -0.0015660549979656935, -0.0015786669682711363, -0.0015839299885556102, -0.0015831280034035444, -0.0015791900223121047, -0.0015737010398879647, -0.0015671560540795326, -0.0015583679778501391, -0.001544423052109778, -0.0015201680362224579, -0.0014825549442321062, -0.0014334189472720027, -0.001377503969706595, -0.001322875963523984, -0.001277719042263925, -0.0012462950544431806, -0.0012289440492168069, -0.001222398946993053, -0.0012209919514134526, -0.0012194280279800296, -0.0012125270441174507, -0.0011960120173171163, -0.0011668310035020113, -0.0011247099610045552, -0.0010744499741122127, -0.0010247670579701662, -0.0009864730527624488, -0.0009668786078691483, -0.0009663187083788216, -0.0009790905751287937, -0.0009978157468140125, -0.0010166219435632229, -0.0010344210313633084, -0.0010533110471442342, -0.00107634998857975, -0.0011057129595428705, -0.0011413940228521824, -0.0011794640449807048, -0.001213481999002397, -0.0012395030353218317, -0.0012559030437842011, -0.0012628840049728751, -0.0012614179868251085, -0.0012531219981610775, -0.0012399699771776795, -0.0012256479822099209, -0.0012133950367569923, -0.001205479959025979, -0.0012017360422760248, -0.0011989700142294168, -0.0011938050156459212, -0.0011846680426970124, -0.0011741049820557237, -0.0011664109770208597, -0.0011641030432656407, -0.0011673930566757917, -0.0011755089508369565, -0.0011872570030391216, -0.0011991820065304637, -0.0012062479509040713, -0.0012044110335409641, -0.0011938420357182622, -0.0011781740467995405, -0.0011630839435383677, -0.0011555190430954099, -0.001161981956101954, -0.0011868010042235255, -0.0012299399822950363, -0.0012875819811597466, -0.001351882005110383, -0.0014133789809420705, -0.0014642470050603151, -0.0014985930174589157, -0.0015129459789022803, -0.0015065600164234638, -0.0014804430538788438, -0.0014372889418154955, -0.0013814809499308467, -0.001320132054388523, -0.0012637339532375336, -0.0012231790460646152, -0.0012054400285705924, -0.0012115909485146403, -0.0012376379454508424, -0.0012768539600074291, -0.0013213210040703416, -0.001359916990622878, -0.0013815580168738961, -0.0013818050501868129, -0.001359208021312952, -0.0013161799870431423, -0.001263994025066495, -0.0012159580364823341, -0.0011815590551123023, -0.001164378016255796, -0.0011627740459516644, -0.0011737559689208865, -0.0011952159693464637, -0.0012238039635121822, -0.0012545989593490958, -0.0012831309577450156, -0.001307378988713026, -0.001326987985521555, -0.0013432910200208426, -0.0013558289501816034, -0.001361698959954083, -0.0013568829745054245, -0.0013378469739109278, -0.0013019329635426402, -0.0012507779756560922, -0.0011912459740415215, -0.0011333329603075981, -0.0010850969702005386, -0.0010494779562577605, -0.0010249640326946974, -0.0010066879913210869, -0.000987798091955483, -0.0009616594761610031, -0.0009247052948921919, -0.000877786020282656, -0.0008269384270533919, -0.0007801178144291043, -0.0007435310981236398, -0.0007202508277259767, -0.0007096994086168706, -0.0007087389240041375, -0.0007122256211005151, -0.0007133521721698344, -0.0007059324998408556, -0.0006842418806627393, -0.0006426143809221685, -0.0005773936281912029, -0.0004900341737084091, -0.00038826558738946915, -0.0002826665004249662, -0.00018388210446573794, -9.973996202461421e-05, -3.3199590689036995e-05, 1.758954931574408e-05, 5.7990531786344945e-05, 9.550640970701352e-05, 0.0001374335988657549, 0.0001869925035862252, 0.0002434271009406075, 0.00030362969846464694, 0.0003631967992987484, 0.000420011900132522, 0.00047380028991028666, 0.0005237736040726304, 0.0005703294882550836, 0.0006153009016998112, 0.0006586245144717395, 0.0006982092745602131, 0.0007308732019737363, 0.0007555445190519094, 0.0007759046857245266, 0.0007984716212376952, 0.0008291663252748549, 0.0008710926049388945, 0.0009226276888512075, 0.0009784403955563903, 0.0010304399766027927, 0.001072583021596074, 0.001103356946259737, 0.0011237780563533306, 0.0011360079515725374, 0.0011450620368123055, 0.001156045007519424, 0.0011726190568879247, 0.0011954159708693624, 0.0012211799621582031, 0.0012452630326151848, 0.001261575031094253, 0.0012666239636018872, 0.0012622399954125285, 0.0012549830134958029, 0.001253715017810464, 0.0012656720355153084, 0.0012951670214533806, 0.001342238043434918, 0.0014024339616298676, 0.001466228044591844, 0.0015225299866870046, 0.0015621479833498597, 0.0015791590558364987, 0.001571101020090282, 0.0015395720256492496, 0.0014922210248187184, 0.0014421379892155528, 0.0014018589863553643, 0.0013786100316792727, 0.0013714369852095842, 0.0013767300406470895, 0.0013923969818279147, 0.0014148550108075142, 0.0014397019986063242, 0.0014652980025857687, 0.0014926400035619736, 0.0015222750371322036, 0.0015498159918934107, 0.0015682120574638247, 0.0015726200072094798, 0.0015606350498273969, 0.001532503985799849, 0.0014913029735907912, 0.00144409597851336, 0.0014005639823153615, 0.0013676759554073215, 0.0013494410086423159, 0.001349181984551251, 0.0013680249685421586, 0.0014047779841348529, 0.001455932972021401, 0.0015172340208664536, 0.0015842110151425004, 0.0016505050007253885, 0.0017065979773178697, 0.0017422409728169441, 0.0017499929526820779, 0.0017266500508412719, 0.0016746210167184472, 0.001604274963028729, 0.001529813976958394, 0.0014624020550400019, 0.0014088860480114818, 0.0013723080046474934, 0.0013535449979826808, 0.0013516199542209506, 0.0013649150496348739, 0.0013907949905842543, 0.0014261320466175675, 0.0014655840350314975, 0.0015034930547699332, 0.0015349100576713681, 0.001556989038363099, 0.0015688349958509207, 0.0015703310491517186, 0.0015641150530427694, 0.0015565870562568307, 0.0015555189456790686, 0.001566688995808363, 0.0015923379687592387, 0.001630250015296042, 0.0016757410485297441, 0.0017235289560630918, 0.0017687149811536074, 0.0018070780206471682, 0.0018347450532019138, 0.001849589985795319, 0.0018522520549595356, 0.0018452489748597145, 0.001832098001614213, 0.0018192409770563245, 0.0018123829504474998, 0.0018108610529452562, 0.001810761052183807, 0.001810310990549624, 0.0018113020341843367, 0.0018161919433623552, 0.0018248920096084476, 0.0018348220037296414, 0.0018447489710524678, 0.0018564859637990594, 0.001873609027825296, 0.0018991270335391164, 0.001934112049639225, 0.0019748059567064047, 0.0020160500425845385, 0.002052746945992112, 0.0020815751049667597, 0.0021026390604674816, 0.002119662007316947, 0.0021379480604082346, 0.0021601750049740076, 0.0021869689226150513, 0.002216761000454426, 0.0022475249134004116, 0.0022768990602344275, 0.0023029448930174112, 0.0023250929079949856, 0.0023459559306502342, 0.0023708681110292673, 0.0024023118894547224, 0.0024366439320147038, 0.002468547085300088, 0.002494517946615815, 0.002511925995349884, 0.0025175679475069046, 0.0025116349570453167, 0.002499595982953906, 0.0024890799541026354, 0.0024856249801814556, 0.0024897539988160133, 0.0024987279903143644, 0.002508854027837515, 0.002512664068490267, 0.002500783884897828, 0.002468511927872896, 0.0025361289735883474, 0.002471808111295104, 0.002402741927653551, 0.0023358329199254513, 0.0022766978945583105, 0.0022280460689216852, 0.0021905770990997553, 0.0021642730571329594, 0.002146294107660651, 0.00213194009847939, 0.0021179961040616035, 0.0021025550086051226, 0.0020815960597246885, 0.0020489979069679976, 0.0020002119708806276, 0.0019362489692866802, 0.0018629459664225578, 0.0017865749541670084, 0.0017116230446845293, 0.0016428929520770907, 0.0015844169538468122, 0.0015396219678223133, 0.0015115919522941113, 0.0015032689552754164, 0.0015128159429877996, 0.0015310420421883464, 0.00154819805175066, 0.0015570300165563822, 0.00155361695215106, 0.0015368950553238392, 0.0015059680445119739, 0.0014625820331275463, 0.0014123220462352037, 0.001364251016639173, 0.0013292660005390644, 0.0013156679924577475, 0.0013246439630165696, 0.0013522569788619876, 0.0013911649584770203, 0.0014318459434434772, 0.0014662969624623656, 0.00149031903129071, 0.0015039050485938787, 0.0015100289601832628, 0.0015134729910641909, 0.0015201859641820192, 0.0015332140028476715, 0.001549907959997654, 0.0015656229807063937, 0.0015775479841977358, 0.0015856409445405006, 0.0015908180503174663, 0.0015923569444566965, 0.001590820960700512, 0.0015893559902906418, 0.0015905230538919568, 0.0015962700126692653, 0.0016087000258266926, 0.0016286630416288972, 0.0016527960542589426, 0.0016732889926061034, 0.001682383008301258, 0.0016736099496483803, 0.0016436469741165638, 0.0015965759521350265, 0.0015450200298801064, 0.0015045090112835169, 0.0014848409919068217, 0.0014880510279908776, 0.0015076090348884463, 0.0015334079507738352, 0.001554433023557067, 0.0015621799975633621, 0.001554075046442449, 0.001532873953692615, 0.001505495049059391, 0.0014794700546190143, 0.0014595210086554289, 0.001447828020900488, 0.001442415057681501, 0.0014396719634532928, 0.0014372760197147727, 0.0014345899689942598, 0.001430902979336679, 0.001424705027602613, 0.0014152670046314597, 0.0014022879768162966, 0.001386065036058426, 0.0013674870133399963, 0.0013478449545800686, 0.0013286860194057226, 0.0013107949635013938, 0.001293409033678472, 0.001275280024856329, 0.001254018978215754, 0.0012274719774723053, 0.0011953309876844287, 0.001159181003458798, 0.0011186939664185047, 0.0010732610244303942, 0.0010243209544569254, 0.0009751038742251694, 0.000930700683966279, 0.0008976758108474314, 0.000882653403095901, 0.0008922960259951651, 0.0009284929255954921, 0.000984886079095304, 0.0010502260411158204, 0.0011128400219604373, 0.001161359017714858, 0.001187094021588564, 0.0011864149710163474, 0.0011619050055742264, 0.0011218000436201692, 0.0010778489522635937, 0.0010423989733681083, 0.00102549500297755, 0.0010312719969078898, 0.0010586290154606104, 0.0011032610200345516, 0.0011600169818848372, 0.0012265309924259782, 0.0013023769715800881, 0.0013852600241079926, 0.0014690370298922062, 0.0015430960338562727, 0.0015956100542098284, 0.0016170500312000513, 0.0016041089547798038, 0.0015633460134267807, 0.0015087570063769817, 0.0014568079495802522, 0.0014221209567040205, 0.0014096900122240186, 0.0014123390428721905, 0.0014196040574461222, 0.001425144961103797, 0.0014298040186986327, 0.0014378350460901856, 0.0014516890514642, 0.0014713000273332, 0.0014927230076864362, 0.001509596942923963, 0.0015167760429903865, 0.0015138749731704593, 0.0015039639547467232, 0.0014911979669705033, 0.0014791389694437385, 0.0014689459931105375, 0.0014574190136045218, 0.0014389059506356716, 0.001408530049957335, 0.0013642499689012766, 0.001307999948039651, 0.0012460009893402457, 0.0011876419885084033, 0.001139865955337882, 0.0011031939648091793, 0.0010747499763965607, 0.0010519339703023434, 0.0010331739904358983, 0.00101629295386374, 0.0009987709345296025, 0.0009772722842171788, 0.0009488461073487997, 0.0009128397796303034, 0.0008700307225808501, 0.0008212748798541725, 0.0007680932176299393, 0.0007138624205254018, 0.0006623915978707373, 0.0006146114901639521, 0.0005696169100701809, 0.0005276828887872398, 0.0004903092049062252, 0.0004585440910886973, 0.0004328495997469872, 0.000411490211263299, 0.000391566805774346, 0.00037106600939296186, 0.0003494161937851459, 0.00032740310416556895, 0.0003051588137168437, 0.00028178931097500026, 0.0002563243906479329, 0.00022684529540129006, 0.00019382679602131248, 0.00015902440645731986, 0.00012146579683758318, 7.845636719139293e-05, 2.7553749532671645e-05, -3.2989741157507524e-05, -0.00010328060307074338, -0.0001825438957894221, -0.00026756711304187775, -0.00034976049209944904, -0.00041990779573097825, -0.00047500801156274974, -0.0005200189189054072, -0.0005630567902699113, -0.0006092634284868836, -0.000660211022477597, -0.0007131061283871531, -0.00076215312583372, -0.0008038742234930396, -0.0008385683177039027, -0.0008689644746482372, -0.0008993832161650062, -0.000931602728087455, -0.0009630008134990931, -0.0009878157870844007, -0.0010050969431176782, -0.0010185909923166037, -0.0010310140205547214, -0.0010435000294819474, -0.0010567860445007682, -0.001071296981535852, -0.0010887030512094498, -0.0011115840170532465, -0.0011421709787100554, -0.0011829710565507412, -0.0012350310571491718, -0.0012974359560757875, -0.001365924021229148, -0.0014337570173665881, -0.0014953690115362406, -0.0015473259845748544, -0.0015899139689281583, -0.0016269549960270524, -0.0016629910096526146, -0.0017015580087900162, -0.0017431889427825809, -0.0017857420025393367, -0.0018273070454597473, -0.0018658350454643369, -0.0019009719835594296, -0.0019351090304553509, -0.0019741379655897617, -0.0020236950367689133, -0.0020861730445176363, -0.002159788040444255, -0.002239326946437359, -0.002318908926099539, -0.0023944799322634935, -0.002463317010551691, -0.002519587054848671, -0.0025579710491001606, -0.002578645944595337, -0.0025855349376797676, -0.002585724927484989, -0.0025854650884866714, -0.0025860678870230913, -0.0025863531045615673, -0.0025865440256893635, -0.0025888129603117704, -0.0025962560903280973, -0.0026089639868587255, -0.0026227240450680256, -0.002632681978866458, -0.0026353299617767334, -0.0026273969560861588, -0.0026078480295836926, -0.0025806839112192392, -0.002553770085796714, -0.002535673091188073, -0.002532840007916093, -0.0025468599051237106, -0.002575397025793791, -0.002612855052575469, -0.002649361966177821, -0.002674063900485635, -0.002680771052837372, -0.002670814050361514, -0.002650290960446, -0.002627322915941477, -0.002611452015116811, -0.002610132098197937, -0.002625561086460948, -0.002652958035469055, -0.002683660015463829, -0.0027117719873785973, -0.002735756104812026, -0.0027547660283744335, -0.002767707919701934, -0.0027727459091693163, -0.0027684590313583612, -0.002755572088062763, -0.002736492082476616, -0.0027160081081092358, -0.0027009700424969196, -0.0026950330939143896, -0.0026971730403602123, -0.0027043360751122236, -0.0027127598877996206, -0.0027203999925404787, -0.002726695965975523, -0.002729235915467143, -0.0027247590478509665, -0.002714558970183134, -0.0027039649430662394, -0.002697665011510253, -0.002696847077459097, -0.002699580043554306, -0.0027036629617214203, -0.0027077309787273407, -0.00270866509526968, -0.0027012780774384737, -0.002681101905182004, -0.0026456268969923258, -0.0025967040564864874, -0.002540129004046321, -0.002482543932273984, -0.0024264189414680004, -0.0023711149115115404, -0.002317958977073431, -0.0022663769777864218, -0.0022119549103081226, -0.00214834394864738, -0.002072240924462676, -0.001984850037842989, -0.0018901580478996038, -0.00179477094206959, -0.0017041109967976809, -0.0016205300344154239, -0.001543074962683022, -0.00147058698348701, -0.0014032910112291574, -0.0013387450017035007, -0.0012714120093733072, -0.0011970560299232602, -0.0011164259631186724, -0.001033973996527493, -0.0009571692207828164, -0.0008945284062065184, -0.000848504074383527, -0.0008116269018501043, -0.000771409017033875, -0.0007170977187342942, -0.0006435901741497219, -0.0005570029024966061, -0.000472285901196301, -0.0004026136011816561, -0.0003533062990754843, -0.0003202912921551615, -0.00029322190675884485, -0.0002605268091429025, -0.00021577930601779372, -0.00016150949522852898, -0.00010331650264561176, -4.579799860948697e-05, 8.43388625071384e-06, 5.794207027065568e-05, 0.00010142139944946393, 0.0001367821969324723, 0.00016178039368242025, 0.00017634080722928047, 0.00018102480680681765, 0.0001791592949302867, 0.0001772052055457607, 0.00018168629321735352, 0.00019750850333366543, 0.00022759829880669713, 0.00027039251290261745, 0.00031837349524721503, 0.0003621916112024337, 0.00039441880653612316, 0.00041054238681681454, 0.0004079499049112201, 0.00038477679481729865, 0.0003422138106543571, 0.00028621978708542883, 0.00022637929941993207, 0.0001708899944787845, 0.0001242636062670499, 8.860244997777045e-05, 6.655706965830177e-05, 6.0819031205028296e-05, 7.341984746744856e-05, 0.00010398789891041815, 0.0001488940033596009, 0.00020303629571571946, 0.00025975549942813814, 0.00031105391099117696, 0.000348379195202142, 0.00036530778743326664, 0.0003600098134484142, 0.0003361554117873311, 0.0003028007922694087, 0.0002706455998122692, 0.0002488919999450445, 0.00024268169363494962, 0.00025261170230805874, 0.0002771822037175298, 0.00031199160730466247, 0.00035120180109515786, 0.00038948480505496264, 0.0004214702930767089, 0.00044234629604034126, 0.000450238207122311, 0.0004460891941562295, 0.00043203160748817027, 0.0004105516127310693, 0.0003849597997032106, 0.0003599667106755078, 0.0003395084058865905, 0.0003242740058340132, 0.00031360049615614116, 0.00030882429564371705, 0.00031497079180553555, 0.00033823520061559975, 0.00037920678732916713, 0.00043217488564550877, 0.0004898605984635651, 0.0005462553817778826, 0.0005975943058729172, 0.0006419899873435497, 0.0006782026030123234, 0.0007053983863443136, 0.0007260958082042634, 0.0007433568243868649, 0.0007596263894811273, 0.0007766098133288324, 0.0007958872010931373, 0.0008191317901946604, 0.000846690614707768, 0.0008781838114373386, 0.000910807226318866, 0.0009398068068549037, 0.0009613275760784745, 0.0009755890932865441, 0.0009854089003056288, 0.0009921400342136621, 0.000995840411633253, 0.0009969264501705766, 0.0009975781431421638, 0.0010014210129156709, 0.0010115830227732658, 0.0010279440321028233, 0.0010475609451532364, 0.0010672119678929448, 0.0010843840427696705, 0.001100150984711945, 0.0011174400569871068, 0.0011381739750504494, 0.0011629960499703884, 0.0011912989430129528, 0.0012213969603180885, 0.0012509759981185198, 0.0012771639740094543, 0.0013000640319660306, 0.0013224680442363024, 0.0013461810303851962, 0.0013716289540752769, 0.0013970589498057961, 0.0014190439833328128, 0.0014332480495795608, 0.0014347400283440948, 0.001419964013621211, 0.0013879219768568873, 0.0013404929777607322, 0.001284328056499362, 0.0012292159954085946, 0.0011830959701910615, 0.0011486930307000875, 0.001124221016652882, 0.0011067199520766735, 0.0010945559479296207, 0.0010872009443119168, 0.0010824409546330571, 0.0010773279936984181, 0.0010686690220609307, 0.0010516990441828966, 0.0010231209453195333, 0.0009828356560319662, 0.0009348795283585787, 0.0008873431943356991, 0.000849153904709965, 0.0008248297963291407, 0.0008139425772242248, 0.0008140148129314184, 0.0008201554883271456, 0.0008267508237622678, 0.0008276687003672123, 0.0008198869181796908, 0.0008054591016843915, 0.0007889232947491109, 0.0007737486739642918, 0.0007607184816151857, 0.0007474425947293639, 0.0007302596932277083, 0.0007072241278365254, 0.0006791047053411603, 0.0006491307867690921, 0.0006227078847587109, 0.0006066735950298607, 0.0006056796992197633, 0.0006197700276970863, 0.0006441309815272689, 0.000670741603244096, 0.0006930454983375967, 0.0007088548154570162, 0.0007190598989836872, 0.0007245686138048768, 0.0007257848046720028, 0.0007225790759548545, 0.0007129762088879943, 0.0006957696750760078, 0.0006731324829161167, 0.0006507502985186875, 0.0006355039076879621, 0.0006308251176960766, 0.000635010888800025, 0.000642819213680923, 0.0006491141975857317, 0.0006517897127196193, 0.0006521110772155225, 0.0006523974006995559, 0.0006528561934828758, 0.0006522922194562852, 0.0006505653145723045, 0.0006482630269601941, 0.000644817715510726, 0.0006386762834154069, 0.0006268147844821215, 0.0006069712108001113, 0.0005796807818114758, 0.0005493854987435043, 0.0005227671936154366, 0.0005050196195952594, 0.0004986092098988593, 0.0005017779185436666, 0.0005092048086225986, 0.0005156744737178087, 0.0005177850252948701, 0.0005137777770869434, 0.0005037744995206594, 0.0004892416764050722, 0.0004739614960271865, 0.0004646650922950357, 0.00046701999963261187, 0.0004809334932360798, 0.0005024566198699176, 0.0005245988140814006, 0.0005392414168454707, 0.0005398516077548265, 0.0005222958279773593, 0.0004855860024690628, 0.00043141678906977177, 0.0003632715088315308, 0.0002882078115362674, 0.00021730859589297324, 0.0001629312027944252, 0.00013308429333847016, 0.0001276636030524969, 0.0001386402000207454, 0.00015654609887860715, 0.00017353940347675234, 0.0001827944943215698, 0.0001777261059032753, 0.0001536603958811611, 0.00010950739670079201, 4.784912016475573e-05, -2.411497916909866e-05, -9.475604019826278e-05, -0.00015094449918251485, -0.0001838830066844821, -0.00019268569303676486, -0.00018268860003445297, -0.00016250509361270815, -0.00014246150385588408, -0.0001307776983594522, -0.0001313545071752742, -0.00014491050387732685, -0.00017062720144167542, -0.00020772080461028963, -0.0002548912016209215, -0.00031098880572244525, -0.000374751805793494, -0.00044286780757829547, -0.0005104125011712313, -0.0005721739144064486, -0.000624392821919173, -0.0006646753172390163, -0.0006914149853400886, -0.0007056380272842944, -0.0007106941775418818, -0.0007096006884239614, -0.0007041615899652243, -0.0006974833086133003, -0.0006948587251827121, -0.0007002452039159834, -0.0007156403153203428, -0.0007410508114844561, -0.0007730770739726722, -0.0008052384946495295, -0.0008339608903042972, -0.0008611034718342125, -0.0008902428089641035, -0.0009234645985998213, -0.0009614331065677106, -0.0010040940251201391, -0.001049994956701994, -0.0010950060095638037, -0.0011342900106683373, -0.0011649980442598462, -0.0011859890073537827, -0.0011975979432463646, -0.0012021169532090425, -0.0012043289607390761, -0.0012089989613741636, -0.0012188920518383384, -0.0012350049801170826, -0.0012578510213643312, -0.0012869540369138122, -0.0013204619754105806, -0.0013555879704654217, -0.0013894770527258515, -0.0014182280283421278, -0.001437898026779294, -0.0014474720228463411, -0.0014472639886662364, -0.0014383799862116575, -0.0014225230552256107, -0.0014030060265213251, -0.0013848779490217566, -0.0013747930061072111, -0.0013783229514956474, -0.0013972800225019455, -0.0014292499981820583, -0.0014683339977636933, -0.0015063530299812555, -0.0015345830470323563, -0.0015466429758816957, -0.0015409709885716438, -0.0015211020363494754, -0.0014942940324544907, -0.0014687289949506521, -0.0014521100092679262, -0.0014502699486911297, -0.001464611035771668, -0.0014905829448252916, -0.0015213609440252185, -0.0015521720051765442, -0.0015791610348969698, -0.0015989280072972178, -0.001609132974408567, -0.0016087860567495227, -0.0015990269603207707, -0.0015825110021978617, -0.0015634950250387192, -0.0015465799951925874, -0.0015356129733845592, -0.0015328139998018742, -0.0015380550175905228, -0.0015484020113945007, -0.0015585989458486438, -0.0015624839579686522, -0.0015554600395262241, -0.0015370500041171908, -0.001510679954662919, -0.0014824720565229654, -0.0014585769968107343, -0.001443524961359799, -0.0014397440245375037, -0.0014478149823844433, -0.001467050053179264, -0.0014952949713915586, -0.0015284910332411528, -0.001560903969220817, -0.0015878280391916633, -0.0016079730121418834, -0.0016203440027311444, -0.0016243299469351768, -0.0016206289874389768, -0.0016095240134745836, -0.001590974978171289, -0.0015665109967812896, -0.0015391570050269365, -0.0015115380520001054, -0.0014857869828119874, -0.0014645300107076764, -0.0014491919428110123, -0.0014392950106412172, -0.0014335350133478642, -0.001430358039215207, -0.0014280830509960651, -0.0014248780207708478, -0.0014185949694365263, -0.0014078839449211955, -0.0013930719578638673, -0.001376052969135344, -0.001359835034236312, -0.0013487250544130802, -0.0013476320309564471, -0.0013587960274890065, -0.0013793959515169263, -0.0014048860175535083, -0.001432031043805182, -0.0014592099469155073, -0.0014858089853078127, -0.0015096679562702775, -0.001525920000858605, -0.0015290100127458572, -0.0015137499431148171, -0.0014787099789828062, -0.0014285369543358684, -0.0013712210347875953, -0.0013165880227461457, -0.0012720059603452682, -0.0012403189903125167, -0.0012197090545669198, -0.0012047929922118783, -0.001189720002003014, -0.0011708870297297835, -0.0011469230521470308, -0.0011175289982929826, -0.0010851819533854723, -0.0010539799695834517, -0.0010273449588567019, -0.0010051439749076962, -0.0009823365835472941, -0.0009515826241113245, -0.0009081725729629397, -0.0008524404838681221, -0.0007898187031969428, -0.0007290840148925781, -0.0006780594121664762, -0.0006413740920834243, -0.0006198415067046881, -0.000609046604949981, -0.0006009726203046739, -0.0005870900931768119, -0.0005610599182546139, -0.0005196061101742089, -0.00046360859414562583, -0.0003981080953963101, -0.000330818205839023, -0.00027002449496649206, -0.00022307300241664052, -0.00019331950170453638, -0.00017831919831223786, -0.000170406507095322, -0.0001593056949786842, -0.00013707380276173353, -0.00010173750342801213, -5.5882250308059156e-05, -3.461605047050398e-06, 5.163608875591308e-05, 0.0001061868024407886, 0.00015883840387687087, 0.00021068229398224503, 0.00026405180688016117, 0.00031988040427677333, 0.0003750429896172136, 0.0004231393104419112, 0.00045813500764779747, 0.0004771155072376132, 0.00048184310435317457, 0.0004768928047269583, 0.00046709980233572423, 0.0004572891048155725, 0.00045079929986968637, 0.0004469993873499334, 0.0004437530878931284, 0.000440720294136554, 0.00043981391354463995, 0.0004429846885614097, 0.00045132500235922635, 0.0004633872886188328, 0.0004754354013130069, 0.00048398779472336173, 0.0004866599047090858, 0.00048276889720000327, 0.00047315031406469643, 0.0004595619975589216, 0.0004448390973266214, 0.0004321922024246305, 0.0004235199885442853, 0.00041778350714594126, 0.0004128023865632713, 0.00040556499152444303, 0.0003933511907234788, 0.00037523091305047274, 0.0003523858031257987, 0.0003274212940596044, 0.0003033230022992939, 0.00028242889675311744, 0.00026675639674067497, 0.0002573044039309025, 0.00025230259052477777, 0.0002467221929691732, 0.00023572960344608873, 0.00021704960090573877, 0.00019153859466314316, 0.00016206350119318813, 0.00013146309356670827, 0.00010241870040772483, 7.658940012333915e-05, 5.48929201613646e-05, 3.714343984029256e-05, 2.2076210370869376e-05, 6.525167009385768e-06, -1.3388769730227068e-05, -3.863278107019141e-05, -6.602730718441308e-05, -8.950525807449594e-05, -0.00010357770224800333, -0.00010664240107871592, -0.00010131570161320269, -9.202351066051051e-05, -8.205418998841196e-05, -7.222963904496282e-05, -6.081275932956487e-05, -4.483948941924609e-05, -2.3411250367644243e-05, 1.0812150321726222e-06, 2.390866029600147e-05, 3.8814170693513006e-05, 4.1111299651674926e-05, 3.0413730200962164e-05, 9.451496225665323e-06, -1.7455080524086952e-05, -4.527618148131296e-05, -6.939911691006273e-05, -8.703039202373475e-05, -9.672727173892781e-05, -9.867556218523532e-05, -9.525653149466962e-05, -9.062464232556522e-05, -9.012911323225126e-05, -9.786488953977823e-05, -0.00011432130122557282, -0.00013512409350369126, -0.00015384980360977352, -0.0001663527946220711, -0.00017120680422522128, -0.00016793679969850928, -0.00015726100536994636, -0.00014199150609783828, -0.00012653569865506142, -0.00011609800276346505, -0.0001141597967944108, -0.00012078360305167735, -0.00013333800598047674, -0.0001483032974647358, -0.00016262629651464522, -0.00017365420353598893, -0.00018035690300166607, -0.00018430029740557075, -0.00018730279407463968, -0.0001898719056043774, -0.0001917373010655865, -0.0001932025043061003, -0.00019408490334171802, -0.00019344830070622265, -0.00019122099911328405, -0.00018867359904106706, -0.00018701949738897383, -0.00018657150212675333, -0.00018651819846127182, -0.00018523620383348316, -0.00018073880346491933, -0.000171421401319094, -0.0001573493063915521, -0.0001399259053869173, -0.00012120849714847282, -0.00010423950152471662, -9.163415961666033e-05, -8.466572035104036e-05, -8.401923696510494e-05, -9.016307012643665e-05, -0.00010179720266023651, -0.00011508719762787223, -0.0001252703950740397, -0.0001289866049773991, -0.00012468639761209488, -0.00011162390001118183, -9.0937246568501e-05, -6.654953904217109e-05, -4.289932985557243e-05, -2.1996249415678903e-05, -3.983399892604211e-06, 1.216949021909386e-05, 2.859900087059941e-05, 4.6975310397101566e-05, 6.658714119112119e-05, 8.496626833220944e-05, 9.987520752474666e-05, 0.00010965309775201604, 0.0001129434967879206, 0.00011052610352635384, 0.0001067397024598904, 0.00010813680273713544, 0.0001191732008010149, 0.00013967030099593103, 0.00016754229727666825, 0.00020003020472358912, 0.00023403989325743169, 0.0002656911965459585, 0.00029152390197850764, 0.00030965980840846896, 0.0003203485975973308, 0.00032580329570919275, 0.00032878699130378664, 0.0003308625891804695, 0.00033199478639289737, 0.00033180840546265244, 0.000331362709403038, 0.00033323888783343136, 0.00033979289582930505, 0.00035195579403080046, 0.0003682133974507451, 0.00038486349512822926, 0.00039890551124699414, 0.0004091933951713145, 0.0004158605879638344, 0.000419139105360955, 0.0004198595997877419, 0.00041928348946385086, 0.0004171236068941653, 0.0004123440885450691, 0.00040462121251039207, 0.00039445358561351895, 0.0003826832107733935, 0.0003706534917000681, 0.00035917811328545213, 0.0003483809996396303, 0.0003382680006325245, 0.00032910131267271936, 0.000321071594953537, 0.00031400538864545524, 0.0003087604127358645, 0.00030696450266987085, 0.00030937278643250465, 0.000316218298394233, 0.0003260078956373036, 0.0003355081134941429, 0.00034128810511901975, 0.00034096938907168806, 0.00033385970164090395, 0.0003208362031728029, 0.00030380868702195585, 0.00028498409665189683, 0.00026607979089021683, 0.0002477213856764138, 0.00023059410159476101, 0.00021531670063268393, 0.00020128139294683933, 0.0001875511952675879, 0.00017461029347032309, 0.0001646689051995054, 0.0001594835048308596, 0.0001582904951646924, 0.00016008080274332315, 0.00016390549717471004, 0.00016802380559965968, 0.00017118119285441935, 0.00017257180297747254, 0.00017126990132965147, 0.00016697400133125484, 0.0001603046985110268, 0.0001519643992651254, 0.000141479293233715, 0.0001282441953662783, 0.0001128349031205289, 9.707066783448681e-05, 8.329771662829444e-05, 7.37272494006902e-05, 6.920768646523356e-05, 6.817484245402738e-05, 6.770429899916053e-05, 6.49488065391779e-05, 5.839320147060789e-05, 4.828945020562969e-05, 3.582799035939388e-05, 2.3992710339371115e-05, 1.6597199646639638e-05, 1.6536530893063173e-05, 2.5533809093758464e-05, 4.297755003790371e-05, 6.61582889733836e-05, 9.153791324933991e-05, 0.00011517499660840258, 0.00013366350322030485, 0.00014509059838019311, 0.000149318395415321, 0.00014783510414417833, 0.00014306569937616587, 0.00013769129873253405, 0.00013457919703796506, 0.0001365766947856173, 0.0001447117974748835, 0.0001569642045069486, 0.00016982729721348733, 0.0001799963938537985, 0.0001854229049058631, 0.0001853480061981827, 0.00018034469394478947, 0.00017273939738515764, 0.00016510749992448837, 0.00015831799828447402, 0.00015228150004986674, 0.00014756190648768097, 0.00014518460375256836, 0.00014564240700565279, 0.00014935679791960865, 0.00015618160250596702, 0.0001657009997870773, 0.00017765660595614463, 0.00019088569388259202, 0.00020330889674369246, 0.0002129719068761915, 0.00021860719425603747, 0.00021975100389681756, 0.00021702449885196984, 0.0002123891026712954, 0.00020859790674876422, 0.00020783230138476938, 0.0002103377046296373, 0.00021540689340326935, 0.00022180449741426855, 0.00022811000235378742, 0.00023309499374590814, 0.00023514279746450484, 0.00023328450333792716, 0.0002272809942951426, 0.00021706210100091994, 0.00020321659394539893, 0.00018726009875535965, 0.00017135249800048769, 0.0001571414031786844, 0.00014451680181082338, 0.0001318949944106862, 0.00011799130152212456, 0.0001030234998324886, 8.87751521077007e-05, 7.806638313923031e-05, 7.305545295821503e-05, 7.308182102860883e-05, 7.465235830750316e-05, 7.396205910481513e-05, 6.838732224423438e-05, 5.757464168709703e-05, 4.351160896476358e-05, 2.818806933646556e-05, 1.2375369806250092e-05, -3.0189560220605927e-06, -1.6054189472924918e-05, -2.467599006195087e-05, -2.840741944964975e-05, -2.876365942938719e-05, -2.7750860681408085e-05, -2.6518870072322898e-05, -2.495658009138424e-05, -2.2296539100352675e-05, -1.794019954104442e-05, -1.1968980288656894e-05, -5.204416083870456e-06, 1.4897559594828635e-06, 7.346763140958501e-06, 1.2643629816011526e-05, 1.883466939034406e-05, 2.697674062801525e-05, 3.584743171813898e-05, 4.1759369196370244e-05, 4.100436854059808e-05, 3.257342177676037e-05, 1.833691931096837e-05, 1.833695023378823e-06, -1.3388869774644263e-05, -2.5133620511041954e-05, -3.2712090614950284e-05, -3.622242002165876e-05, -3.5399989428697154e-05, -2.940781087090727e-05, -1.806528052838985e-05, -2.886579068217543e-06, 1.3575479897554033e-05, 2.9083270419505425e-05, 4.1786588553804904e-05, 4.9913091061171144e-05, 5.241508915787563e-05, 4.921412983094342e-05, 4.090060974704102e-05, 2.8583370294654742e-05, 1.4455839846050367e-05, 1.3948149444331648e-06, -8.54743666423019e-06, -1.4267960068536922e-05, -1.4766429558221716e-05, -9.531235264148563e-06, -2.25673204568011e-08, 1.0637940249580424e-05, 1.925011929415632e-05, 2.3781060008332133e-05, 2.4144710550899617e-05, 2.1536960048251785e-05, 1.7210209989571013e-05, 1.1656429705908522e-05, 5.209717073739739e-06, -1.4849980516373762e-06, -7.816797733539715e-06, -1.4332889804791193e-05, -2.2455769794760272e-05, -3.2854368328116834e-05, -4.511201041168533e-05, -5.833254908793606e-05, -7.140974048525095e-05, -8.339410851476714e-05, -9.425145981367677e-05, -0.00010447159729665145, -0.0001141796019510366, -0.000122595505672507, -0.0001286335027543828, -0.00013247260358184576, -0.0001359168963972479, -0.00014079360698815435, -0.00014784530503675342, -0.00015679369971621782, -0.0001668777986196801, -0.00017698410374578089, -0.00018660009664017707, -0.00019616750068962574, -0.00020640720322262496, -0.00021716080664191395, -0.00022748700575903058, -0.00023665929620619863, -0.0002442912955302745, -0.00025090010603889823, -0.0002575131074991077, -0.0002648860099725425, -0.0002729427069425583, -0.00028121090144850314, -0.00028970048879273236, -0.0002984695020131767, -0.0003069975064136088, -0.0003138110914733261, -0.0003172034048475325, -0.0003160180931445211, -0.0003095399879384786, -0.0002982991863973439, -0.0002837996871676296, -0.0002674499119166285, -0.0002504537987988442, -0.0002342849038541317, -0.0002202238974859938, -0.00020907330326735973, -0.00020149040210526437, -0.00019776090630330145, -0.0001973447942873463, -0.0001986403949558735, -0.00019964069360867143, -0.000198816298507154, -0.00019528910343069583, -0.0001888411061372608, -0.00017917320656124502, -0.00016546140250284225, -0.00014769429981242865, -0.0001278494019061327, -0.00010846750228665769, -9.138143650488928e-05, -7.742983871139586e-05, -6.631430005654693e-05, -5.725938899558969e-05, -4.9735910579329357e-05, -4.347944923210889e-05, -3.813719013123773e-05, -3.296049908385612e-05, -2.694615068321582e-05, -1.947702003235463e-05, -1.067551966116298e-05, -1.0042019766842714e-06, 9.383104043081403e-06, 2.0537219825200737e-05, 3.243419996579178e-05, 4.509765130933374e-05, 5.8093570260098204e-05, 7.02792385709472e-05, 8.018391235964373e-05, 8.682448969921097e-05, 9.036940173245966e-05, 9.206683171214536e-05, 9.342480188934132e-05, 9.549820970278233e-05, 9.886913176160306e-05, 0.00010355820268159732, 0.0001091782032744959, 0.00011541099956957623, 0.0001218170000356622, 0.00012762710684910417, 0.00013151750317774713, 0.00013209119788371027, 0.00012873229570686817, 0.00012144789798185229, 0.00011072120105382055, 9.793148637982085e-05, 8.467950829071924e-05, 7.206181180663407e-05, 6.0756410675821826e-05, 5.089832848170772e-05, 4.2206251237075776e-05, 3.432506127865054e-05, 2.729226980591193e-05, 2.155054062313866e-05, 1.7248599760932848e-05, 1.3881650374969468e-05, 1.0545960321906023e-05, 6.197024958964903e-06, 6.764943094594855e-08, -8.047129085753113e-06, -1.774003976606764e-05, -2.807985947583802e-05, -3.8072888855822384e-05, -4.7359339077956975e-05, -5.605013939202763e-05, -6.401079008355737e-05, -7.051689317449927e-05, -7.458162872353569e-05, -7.55377477617003e-05, -7.335554255405441e-05, -6.92537723807618e-05, -6.540823233081028e-05, -6.393800867954269e-05, -6.611215212615207e-05, -7.168926822487265e-05, -7.917870971141383e-05, -8.660522871650755e-05, -9.238342317985371e-05, -9.543300257064402e-05, -9.53906710492447e-05, -9.290753223467618e-05, -8.944916044129059e-05, -8.669737144373357e-05, -8.548147161491215e-05, -8.572857768740505e-05, -8.680354221723974e-05, -8.814767352305353e-05, -8.924816211219877e-05, -8.964083826867864e-05, -8.933727076509967e-05, -8.86141715454869e-05, -8.749937114771456e-05, -8.580742724006996e-05, -8.359406638192013e-05, -8.132564835250378e-05, -7.971807644935325e-05, -7.929455750854686e-05, -8.033250196604058e-05, -8.308467658935115e-05, -8.718470053281635e-05, -9.15066702873446e-05, -9.466062329011038e-05, -9.54412535065785e-05, -9.32397015276365e-05, -8.830059232423082e-05, -8.11544232419692e-05, -7.229465700220317e-05, -6.261347880354151e-05, -5.360103023122065e-05, -4.681339851231314e-05, -4.337514110375196e-05, -4.365927088656463e-05, -4.741934026242234e-05, -5.3985411796020344e-05, -6.231394218048081e-05, -7.106328121153638e-05, -7.882482896093279e-05, -8.404853724641725e-05, -8.548014011466876e-05, -8.29133132356219e-05, -7.693530642427504e-05, -6.852800288470462e-05, -5.854970004293136e-05, -4.772534157382324e-05, -3.696000931086019e-05, -2.74303001788212e-05, -2.027218033617828e-05, -1.6154990589711815e-05, -1.5322399121942e-05, -1.7444779587094672e-05, -2.1534569896175526e-05, -2.639603007992264e-05, -3.1250150641426444e-05, -3.6044089938513935e-05, -4.083400926901959e-05, -4.5321081415750086e-05, -4.90124111820478e-05, -5.162871821084991e-05, -5.308332038111985e-05, -5.3609150199918076e-05, -5.3471441788133234e-05, -5.2979521569795907e-05, -5.246251021162607e-05, -5.2560608310159296e-05, -5.424064147518948e-05, -5.820579099236056e-05, -6.462047167588025e-05, -7.282968726940453e-05, -8.15383973531425e-05, -8.93797623575665e-05, -9.525447967462242e-05, -9.881480218609795e-05, -0.00010009299876401201, -9.915485861711204e-05, -9.608182881493121e-05, -9.136086737271398e-05, -8.595648978371173e-05, -8.10423371149227e-05, -7.75501030148007e-05, -7.597709918627515e-05, -7.650384213775396e-05, -7.908019324531779e-05, -8.343761146534234e-05, -8.908761810744181e-05, -9.528185910312459e-05, -0.00010103030217578635, -0.00010531549924053252, -0.00010776839917525649, -0.00010873829887714237, -0.00010894979641307145, -0.00010936320177279413, -0.00011089780309703201, -0.00011378349881852046, -0.00011749730037990957, -0.0001210155023727566, -0.00012322039401624352, -0.00012332080223131925, -0.00012107090151403099, -0.00011697540321620181, -0.00011189859651494771, -0.0001067690973286517, -0.0001025359015329741, -0.00010004729847423732, -9.982530173147097e-05, -0.00010185789869865403, -0.00010552180174272507, -0.00010998010111507028, -0.00011456620268290862, -0.00011868579895235598, -0.00012168719695182517, -0.00012286030687391758, -0.00012179649638710544, -0.00011893299961229786, -0.00011526759772095829, -0.0001117903011618182, -0.00010912220022873953, -0.00010740700236056, -0.00010648989700712264, -0.00010625110007822514, -0.00010665779700502753, -0.00010764040052890778, -0.00010899709741352126, -0.00011020670353900641, -0.0001107322023017332, -0.00011021010141121224, -0.00010835369903361425, -0.00010488439875189215, -9.982626215787604e-05, -9.368306928081438e-05, -8.712334238225594e-05, -8.086251182248816e-05, -7.540418300777674e-05, -7.094060856616125e-05, -6.749993190169334e-05, -6.499081791844219e-05, -6.297280197031796e-05, -6.0840160585939884e-05, -5.817506098537706e-05, -5.480591062223539e-05, -5.072879866929725e-05, -4.600967076839879e-05, -4.073153104400262e-05, -3.495539931464009e-05, -2.8808390197809786e-05, -2.2408099539461546e-05, -1.5922589227557182e-05, -9.777247214515228e-06, -4.406108928378671e-06, 8.172914789383867e-09, 3.5638079225464026e-06, 6.5842727963172365e-06, 9.552327355777379e-06, 1.2967009752173908e-05, 1.7300359104410745e-05, 2.2802880266681314e-05, 2.9319780878722668e-05, 3.643150921561755e-05, 4.3505489884410053e-05, 4.9824840971268713e-05, 5.48892785445787e-05, 5.855623021489009e-05, 6.0954731452511624e-05, 6.237815250642598e-05, 6.31881266599521e-05, 6.382713036146015e-05, 6.470618245657533e-05, 6.594004662474617e-05, 6.733681220794097e-05, 6.87247229507193e-05, 7.004129292909056e-05, 7.119627844076604e-05, 7.200500112958252e-05, 7.23086777725257e-05, 7.205821020761505e-05, 7.143242692109197e-05, 7.077991176629439e-05, 7.047039252938703e-05, 7.089893915690482e-05, 7.219152757897973e-05, 7.41960175218992e-05, 7.656153320567682e-05, 7.88890611147508e-05, 8.095116936601698e-05, 8.271302795037627e-05, 8.433683979092166e-05, 8.599578723078594e-05, 8.778431947575882e-05, 8.971617353381589e-05, 9.166511881630868e-05, 9.361313277622685e-05, 9.562094055581838e-05, 9.770775068318471e-05, 9.983847121475264e-05, 0.00010185399878537282, 0.00010355179983889684, 0.00010478470358066261, 0.00010550589649938047, 0.00010581919923424721, 0.00010596169886412099, 0.0001062320006894879, 0.00010690589988371357, 0.00010803050099639222, 0.000109389096905943, 0.00011067139712395146, 0.00011159400310134515, 0.00011198149877600372, 0.00011178570275660604, 0.00011102249845862389, 0.00010969569848384708, 0.00010801819735206664, 0.00010644950089044869, 0.00010552869935054332, 0.00010560669761616737, 0.00010674879740690812, 0.0001088029021047987, 0.00011141350114485249, 0.00011415860353736207, 0.00011661970347631723, 0.00011845379776787013, 0.0001194774013129063, 0.00011967679893132299, 0.00011915749928448349, 0.00011807189730461687, 0.00011666650243569165, 0.00011528989853104576, 0.00011435570195317268, 0.0001141834000009112, 0.00011477689986350015, 0.00011586920300032943, 0.00011710289982147515, 0.0001181365005322732, 0.000118764401122462, 0.00011897250078618526, 0.00011889309826074168, 0.0001186895024147816, 0.00011848330177599564, 0.00011831150186480954, 0.00011813350283773616, 0.00011791389988502488, 0.00011768400145228952, 0.00011751079728128389, 0.00011741740308934823, 0.00011740450281649828, 0.00011745790106942877, 0.00011751930287573487, 0.00011750769772334024, 0.00011735180305549875, 0.00011708359670592472, 0.00011682119657052681, 0.00011661850294331089, 0.0001164229033747688, 0.00011617229756666347, 0.00011588010238483548, 0.00011561800056369975, 0.00011545069719431922, 0.0001154178025899455, 0.00011550549970706925, 0.00011570910282898694, 0.0001160058964160271, 0.00011634299880824983, 0.0001166657020803541, 0.00011688440281432122, 0.00011690630344673991, 0.00011666220234474167, 0.00011617039854172617, 0.0001155580030172132, 0.00011500000255182385, 0.00011463100236142054, 0.00011452379840193316, 0.0001146258000517264, 0.00011475950304884464, 0.00011478600208647549, 0.0001146650974988006, 0.00011443389666965231, 0.00011414440086809918, 0.00011383170203771442, 0.00011353269655955955, 0.00011329189874231815, 0.00011313590221107006, 0.00011303379869787022, 0.00011291589908069, 0.00011270609684288502, 0.0001123572001233697, 0.00011187900236109272, 0.00011133280349895358, 0.00011079089745180681, 0.00011032399925170466, 0.00010997500066878274, 0.00010975339682772756, 0.0001096264022635296, 0.00010954179742839187, 0.00010944020323222503, 0.00010925860260613263, 0.0001089551005861722, 0.00010850110265891999, 0.00010791140084620565, 0.00010726330219767988, 0.00010666489833965898, 0.00010621349792927504, 0.00010594030027277768, 0.00010582640243228525, 0.00010582450340734795, 0.00010587349970592186, 0.00010590170131763443, 0.00010585199925117195, 0.0001056870969478041, 0.00010539070353843272, 0.00010496089817024767, 0.00010438689787406474, 0.00010367060167482123, 0.00010284710151609033, 0.0001019789997371845, 0.00010114850010722876, 0.00010042599751614034, 9.985946235246956e-05, 9.94587826426141e-05, 9.918001887854189e-05, 9.894400864141062e-05, 9.867575136013329e-05, 9.833201329456642e-05, 9.789555770112202e-05, 9.736540960147977e-05, 9.675297042122111e-05, 9.607786341803148e-05, 9.53703565755859e-05, 9.46666332310997e-05, 9.399372356710956e-05, 9.335904178442433e-05, 9.275453339796513e-05, 9.215204045176506e-05, 9.152771963272244e-05, 9.087972284760326e-05, 9.022477024700493e-05, 8.959161641541868e-05, 8.900213288143277e-05, 8.8466789748054e-05, 8.795761823421344e-05, 8.741226338315755e-05, 8.677170262672007e-05, 8.601586887380108e-05, 8.51725199026987e-05, 8.430417074123397e-05, 8.347834955202416e-05, 8.273892308352515e-05, 8.210814121412113e-05, 8.15856983535923e-05, 8.114649244816974e-05, 8.074531069723889e-05, 8.034244092414156e-05, 7.990573794813827e-05, 7.941445801407099e-05, 7.887245737947524e-05, 7.830667891539633e-05, 7.77451423346065e-05, 7.719743734924123e-05, 7.66712983022444e-05, 7.617307710461318e-05, 7.570986053906381e-05, 7.527980778831989e-05, 7.48698366805911e-05, 7.44759090594016e-05, 7.410453690681607e-05, 7.374907727353275e-05, 7.338535215239972e-05, 7.298457785509527e-05, 7.252181239891797e-05, 7.19793897587806e-05, 7.13560584699735e-05, 7.066903344821185e-05, 6.994701834628358e-05, 6.921731255715713e-05, 6.84999322402291e-05, 6.781623233109713e-05, 6.719138036714867e-05, 6.664066313533112e-05, 6.616098835365847e-05, 6.573850259883329e-05, 6.535276042995974e-05, 6.498731818282977e-05, 6.463199679274112e-05, 6.427249900298193e-05, 6.389778718585148e-05, 6.350148760247976e-05, 6.307681906037033e-05, 6.262071838136762e-05, 6.21390572632663e-05, 6.16435136180371e-05, 6.11432406003587e-05, 6.064862827770412e-05, 6.0170990764163435e-05, 5.971769860479981e-05, 5.928782047703862e-05, 5.887381121283397e-05, 5.8461821026867256e-05, 5.8039331634063274e-05, 5.760311978519894e-05, 5.716130181099288e-05, 5.672209954354912e-05, 5.62846107641235e-05, 5.5845401220722124e-05, 5.540109850699082e-05, 5.494841025210917e-05, 5.4485120926983654e-05, 5.4014031775295734e-05, 5.35388317075558e-05, 5.30668294231873e-05, 5.26095500390511e-05, 5.2175808377796784e-05, 5.1767448894679546e-05, 5.137905100127682e-05, 5.099998088553548e-05, 5.06172509631142e-05, 5.022095137974247e-05, 4.980606900062412e-05, 4.9371188652003184e-05, 4.8916048399405554e-05, 4.844354043598287e-05, 4.796048960997723e-05, 4.747752973344177e-05, 4.700828139903024e-05, 4.6561650378862396e-05, 4.613598866853863e-05, 4.572114994516596e-05, 4.5307260734261945e-05, 4.4887521653436124e-05, 4.445555168786086e-05, 4.4008411350660026e-05, 4.3547668610699475e-05, 4.3077328882645816e-05, 4.2601699533406645e-05, 4.212672865833156e-05, 4.165816062595695e-05, 4.1198200051439926e-05, 4.0747599996393546e-05, 4.030729178339243e-05, 3.987694071838632e-05, 3.945593925891444e-05, 3.904306868207641e-05, 3.8635491364402696e-05, 3.8230340578593314e-05, 3.7824458559043705e-05, 3.7413949030451477e-05, 3.699626904563047e-05, 3.657089109765366e-05, 3.6139281291980296e-05, 3.5704080801224336e-05, 3.526738873915747e-05, 3.483051114017144e-05, 3.4394350223010406e-05, 3.3959651773329824e-05, 3.352624116814695e-05, 3.3094391255872324e-05, 3.266529893153347e-05, 3.224072861485183e-05, 3.182316868333146e-05, 3.141559136565775e-05, 3.102008122368716e-05, 3.063575059059076e-05, 3.025915975740645e-05, 2.988517917401623e-05, 2.9509499654523097e-05, 2.9129620088497177e-05, 2.8744219889631495e-05, 2.8353810193948448e-05, 2.7960910301771946e-05, 2.7568750738282688e-05, 2.7179759854334407e-05, 2.6794919904205017e-05, 2.641454921104014e-05, 2.6039109798148274e-05, 2.5668530724942684e-05, 2.5302209905930795e-05, 2.493901047273539e-05, 2.4577659132773988e-05, 2.421729914203752e-05, 2.3857090127421543e-05, 2.3496349967899732e-05, 2.3135109586291946e-05, 2.277357089042198e-05, 2.2411830286728218e-05, 2.2050340703572147e-05, 2.1690200810553506e-05, 2.133268935722299e-05, 2.0978350221412256e-05, 2.062699059024453e-05, 2.0278070223866962e-05, 1.993121077248361e-05, 1.958603024831973e-05, 1.9242230337113142e-05, 1.889966915769037e-05, 1.8558370356913656e-05, 1.8218399418401532e-05, 1.7879900042316876e-05, 1.7542879504617304e-05, 1.720713044051081e-05, 1.687258918536827e-05, 1.6539270291104913e-05, 1.620719012862537e-05, 1.5876190445851535e-05, 1.554614027554635e-05, 1.5216879546642303e-05, 1.4888320038153324e-05, 1.4560389899997972e-05, 1.4233080037229229e-05, 1.3906370440963656e-05, 1.3580340237240307e-05, 1.3255130397737958e-05, 1.2930760021845344e-05, 1.2607169992406853e-05, 1.2284240256121848e-05, 1.1961989912379067e-05, 1.1640509910648689e-05, 1.1320000339765102e-05, 1.1000630365742836e-05, 1.0682480024115648e-05, 1.0365560228819959e-05, 1.0049780030385591e-05, 9.735003004607279e-06, 9.42104361456586e-06, 9.107679034059402e-06, 8.794701898295898e-06, 8.482023986289278e-06, 8.169692591764033e-06, 7.857846867409535e-06, 7.546601864305558e-06, 7.236017154355068e-06, 6.926108198967995e-06, 6.6168640842079185e-06, 6.308268893917557e-06, 6.000303073960822e-06, 5.6929170568764675e-06, 5.386055818235036e-06, 5.079677976027597e-06, 4.773752152686939e-06, 4.4682469706458505e-06, 4.163143785262946e-06, 3.858438958559418e-06, 3.554134082150995e-06, 3.2502330213901587e-06, 2.9467419153661467e-06, 2.6436630378157133e-06, 2.3409979803545866e-06, 2.0387510630826e-06, 1.7369250144838588e-06, 1.4355199482452008e-06, 1.1345330221956829e-06, 8.339599162354716e-07, 5.337947186490055e-07, 2.3403279669764743e-07, -6.532744833975812e-08, -3.642863077857328e-07, -6.628437745348492e-07, -9.610005236027064e-07, -1.2587570381583646e-06, -1.55611201080319e-06, -1.8530680563344504e-06, -2.14962096833915e-06, -2.445772906867205e-06, -2.7415210297476733e-06, -3.0368639727385016e-06, -3.3318019632133655e-06, -3.6263320453144843e-06, -3.920454219041858e-06, -4.214166892779758e-06, -4.507468929659808e-06, -4.800358965439955e-06, -5.092835181130795e-06, -5.3848962124902755e-06, -5.676539785781642e-06], '-time', *[0.0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.17500000000000002, 0.18, 0.185, 0.19, 0.195, 0.2, 0.20500000000000002, 0.21, 0.215, 0.22, 0.225, 0.23, 0.23500000000000001, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.28500000000000003, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.34500000000000003, 0.35000000000000003, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41000000000000003, 0.41500000000000004, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47000000000000003, 0.47500000000000003, 0.48, 0.485, 0.49, 0.495, 0.5, 0.505, 0.51, 0.515, 0.52, 0.525, 0.53, 0.535, 0.54, 0.545, 0.55, 0.555, 0.56, 0.5650000000000001, 0.5700000000000001, 0.5750000000000001, 0.58, 0.585, 0.59, 0.595, 0.6, 0.605, 0.61, 0.615, 0.62, 0.625, 0.63, 0.635, 0.64, 0.645, 0.65, 0.655, 0.66, 0.665, 0.67, 0.675, 0.68, 0.685, 0.6900000000000001, 0.6950000000000001, 0.7000000000000001, 0.705, 0.71, 0.715, 0.72, 0.725, 0.73, 0.735, 0.74, 0.745, 0.75, 0.755, 0.76, 0.765, 0.77, 0.775, 0.78, 0.785, 0.79, 0.795, 0.8, 0.805, 0.81, 0.8150000000000001, 0.8200000000000001, 0.8250000000000001, 0.8300000000000001, 0.835, 0.84, 0.845, 0.85, 0.855, 0.86, 0.865, 0.87, 0.875, 0.88, 0.885, 0.89, 0.895, 0.9, 0.905, 0.91, 0.915, 0.92, 0.925, 0.93, 0.935, 0.9400000000000001, 0.9450000000000001, 0.9500000000000001, 0.9550000000000001, 0.96, 0.965, 0.97, 0.975, 0.98, 0.985, 0.99, 0.995, 1.0, 1.0050000000000001, 1.01, 1.0150000000000001, 1.02, 1.025, 1.03, 1.035, 1.04, 1.045, 1.05, 1.055, 1.06, 1.065, 1.07, 1.075, 1.08, 1.085, 1.09, 1.095, 1.1, 1.105, 1.11, 1.115, 1.12, 1.125, 1.1300000000000001, 1.135, 1.1400000000000001, 1.145, 1.1500000000000001, 1.155, 1.16, 1.165, 1.17, 1.175, 1.18, 1.185, 1.19, 1.195, 1.2, 1.205, 1.21, 1.215, 1.22, 1.225, 1.23, 1.235, 1.24, 1.245, 1.25, 1.2550000000000001, 1.26, 1.2650000000000001, 1.27, 1.2750000000000001, 1.28, 1.285, 1.29, 1.295, 1.3, 1.305, 1.31, 1.315, 1.32, 1.325, 1.33, 1.335, 1.34, 1.345, 1.35, 1.355, 1.36, 1.365, 1.37, 1.375, 1.3800000000000001, 1.385, 1.3900000000000001, 1.395, 1.4000000000000001, 1.405, 1.41, 1.415, 1.42, 1.425, 1.43, 1.435, 1.44, 1.445, 1.45, 1.455, 1.46, 1.465, 1.47, 1.475, 1.48, 1.485, 1.49, 1.495, 1.5, 1.5050000000000001, 1.51, 1.5150000000000001, 1.52, 1.5250000000000001, 1.53, 1.5350000000000001, 1.54, 1.545, 1.55, 1.555, 1.56, 1.565, 1.57, 1.575, 1.58, 1.585, 1.59, 1.595, 1.6, 1.605, 1.61, 1.615, 1.62, 1.625, 1.6300000000000001, 1.635, 1.6400000000000001, 1.645, 1.6500000000000001, 1.655, 1.6600000000000001, 1.665, 1.67, 1.675, 1.68, 1.685, 1.69, 1.695, 1.7, 1.705, 1.71, 1.715, 1.72, 1.725, 1.73, 1.735, 1.74, 1.745, 1.75, 1.7550000000000001, 1.76, 1.7650000000000001, 1.77, 1.7750000000000001, 1.78, 1.7850000000000001, 1.79, 1.795, 1.8, 1.805, 1.81, 1.815, 1.82, 1.825, 1.83, 1.835, 1.84, 1.845, 1.85, 1.855, 1.86, 1.865, 1.87, 1.875, 1.8800000000000001, 1.885, 1.8900000000000001, 1.895, 1.9000000000000001, 1.905, 1.9100000000000001, 1.915, 1.92, 1.925, 1.93, 1.935, 1.94, 1.945, 1.95, 1.955, 1.96, 1.965, 1.97, 1.975, 1.98, 1.985, 1.99, 1.995, 2.0, 2.005, 2.0100000000000002, 2.015, 2.02, 2.025, 2.0300000000000002, 2.035, 2.04, 2.045, 2.05, 2.055, 2.06, 2.065, 2.07, 2.075, 2.08, 2.085, 2.09, 2.095, 2.1, 2.105, 2.11, 2.115, 2.12, 2.125, 2.13, 2.1350000000000002, 2.14, 2.145, 2.15, 2.1550000000000002, 2.16, 2.165, 2.17, 2.1750000000000003, 2.18, 2.185, 2.19, 2.195, 2.2, 2.205, 2.21, 2.215, 2.22, 2.225, 2.23, 2.235, 2.24, 2.245, 2.25, 2.255, 2.2600000000000002, 2.265, 2.27, 2.275, 2.2800000000000002, 2.285, 2.29, 2.295, 2.3000000000000003, 2.305, 2.31, 2.315, 2.32, 2.325, 2.33, 2.335, 2.34, 2.345, 2.35, 2.355, 2.36, 2.365, 2.37, 2.375, 2.38, 2.3850000000000002, 2.39, 2.395, 2.4, 2.4050000000000002, 2.41, 2.415, 2.42, 2.4250000000000003, 2.43, 2.435, 2.44, 2.445, 2.45, 2.455, 2.46, 2.465, 2.47, 2.475, 2.48, 2.485, 2.49, 2.495, 2.5, 2.505, 2.5100000000000002, 2.515, 2.52, 2.525, 2.5300000000000002, 2.535, 2.54, 2.545, 2.5500000000000003, 2.555, 2.56, 2.565, 2.57, 2.575, 2.58, 2.585, 2.59, 2.595, 2.6, 2.605, 2.61, 2.615, 2.62, 2.625, 2.63, 2.6350000000000002, 2.64, 2.645, 2.65, 2.6550000000000002, 2.66, 2.665, 2.67, 2.6750000000000003, 2.68, 2.685, 2.69, 2.695, 2.7, 2.705, 2.71, 2.715, 2.72, 2.725, 2.73, 2.735, 2.74, 2.745, 2.75, 2.755, 2.7600000000000002, 2.765, 2.77, 2.775, 2.7800000000000002, 2.785, 2.79, 2.795, 2.8000000000000003, 2.805, 2.81, 2.815, 2.82, 2.825, 2.83, 2.835, 2.84, 2.845, 2.85, 2.855, 2.86, 2.865, 2.87, 2.875, 2.88, 2.8850000000000002, 2.89, 2.895, 2.9, 2.9050000000000002, 2.91, 2.915, 2.92, 2.9250000000000003, 2.93, 2.935, 2.94, 2.945, 2.95, 2.955, 2.96, 2.965, 2.97, 2.975, 2.98, 2.985, 2.99, 2.995, 3.0, 3.005, 3.0100000000000002, 3.015, 3.02, 3.025, 3.0300000000000002, 3.035, 3.04, 3.045, 3.0500000000000003, 3.055, 3.06, 3.065, 3.0700000000000003, 3.075, 3.08, 3.085, 3.09, 3.095, 3.1, 3.105, 3.11, 3.115, 3.12, 3.125, 3.13, 3.1350000000000002, 3.14, 3.145, 3.15, 3.1550000000000002, 3.16, 3.165, 3.17, 3.1750000000000003, 3.18, 3.185, 3.19, 3.1950000000000003, 3.2, 3.205, 3.21, 3.215, 3.22, 3.225, 3.23, 3.235, 3.24, 3.245, 3.25, 3.255, 3.2600000000000002, 3.265, 3.27, 3.275, 3.2800000000000002, 3.285, 3.29, 3.295, 3.3000000000000003, 3.305, 3.31, 3.315, 3.3200000000000003, 3.325, 3.33, 3.335, 3.34, 3.345, 3.35, 3.355, 3.36, 3.365, 3.37, 3.375, 3.38, 3.3850000000000002, 3.39, 3.395, 3.4, 3.4050000000000002, 3.41, 3.415, 3.42, 3.4250000000000003, 3.43, 3.435, 3.44, 3.4450000000000003, 3.45, 3.455, 3.46, 3.465, 3.47, 3.475, 3.48, 3.485, 3.49, 3.495, 3.5, 3.505, 3.5100000000000002, 3.515, 3.52, 3.525, 3.5300000000000002, 3.535, 3.54, 3.545, 3.5500000000000003, 3.555, 3.56, 3.565, 3.5700000000000003, 3.575, 3.58, 3.585, 3.59, 3.595, 3.6, 3.605, 3.61, 3.615, 3.62, 3.625, 3.63, 3.6350000000000002, 3.64, 3.645, 3.65, 3.6550000000000002, 3.66, 3.665, 3.67, 3.6750000000000003, 3.68, 3.685, 3.69, 3.6950000000000003, 3.7, 3.705, 3.71, 3.715, 3.72, 3.725, 3.73, 3.735, 3.74, 3.745, 3.75, 3.755, 3.7600000000000002, 3.765, 3.77, 3.775, 3.7800000000000002, 3.785, 3.79, 3.795, 3.8000000000000003, 3.805, 3.81, 3.815, 3.8200000000000003, 3.825, 3.83, 3.835, 3.84, 3.845, 3.85, 3.855, 3.86, 3.865, 3.87, 3.875, 3.88, 3.8850000000000002, 3.89, 3.895, 3.9, 3.9050000000000002, 3.91, 3.915, 3.92, 3.9250000000000003, 3.93, 3.935, 3.94, 3.9450000000000003, 3.95, 3.955, 3.96, 3.9650000000000003, 3.97, 3.975, 3.98, 3.985, 3.99, 3.995, 4.0, 4.005, 4.01, 4.015, 4.0200000000000005, 4.025, 4.03, 4.035, 4.04, 4.045, 4.05, 4.055, 4.0600000000000005, 4.065, 4.07, 4.075, 4.08, 4.085, 4.09, 4.095, 4.1, 4.105, 4.11, 4.115, 4.12, 4.125, 4.13, 4.135, 4.14, 4.1450000000000005, 4.15, 4.155, 4.16, 4.165, 4.17, 4.175, 4.18, 4.1850000000000005, 4.19, 4.195, 4.2, 4.205, 4.21, 4.215, 4.22, 4.225, 4.23, 4.235, 4.24, 4.245, 4.25, 4.255, 4.26, 4.265, 4.2700000000000005, 4.275, 4.28, 4.285, 4.29, 4.295, 4.3, 4.305, 4.3100000000000005, 4.315, 4.32, 4.325, 4.33, 4.335, 4.34, 4.345, 4.3500000000000005, 4.355, 4.36, 4.365, 4.37, 4.375, 4.38, 4.385, 4.39, 4.3950000000000005, 4.4, 4.405, 4.41, 4.415, 4.42, 4.425, 4.43, 4.4350000000000005, 4.44, 4.445, 4.45, 4.455, 4.46, 4.465, 4.47, 4.4750000000000005, 4.48, 4.485, 4.49, 4.495, 4.5, 4.505, 4.51, 4.515, 4.5200000000000005, 4.525, 4.53, 4.535, 4.54, 4.545, 4.55, 4.555, 4.5600000000000005, 4.565, 4.57, 4.575, 4.58, 4.585, 4.59, 4.595, 4.6000000000000005, 4.605, 4.61, 4.615, 4.62, 4.625, 4.63, 4.635, 4.64, 4.6450000000000005, 4.65, 4.655, 4.66, 4.665, 4.67, 4.675, 4.68, 4.6850000000000005, 4.69, 4.695, 4.7, 4.705, 4.71, 4.715, 4.72, 4.7250000000000005, 4.73, 4.735, 4.74, 4.745, 4.75, 4.755, 4.76, 4.765, 4.7700000000000005, 4.775, 4.78, 4.785, 4.79, 4.795, 4.8, 4.805, 4.8100000000000005, 4.815, 4.82, 4.825, 4.83, 4.835, 4.84, 4.845, 4.8500000000000005, 4.855, 4.86, 4.865, 4.87, 4.875, 4.88, 4.885, 4.89, 4.8950000000000005, 4.9, 4.905, 4.91, 4.915, 4.92, 4.925, 4.93, 4.9350000000000005, 4.94, 4.945, 4.95, 4.955, 4.96, 4.965, 4.97, 4.9750000000000005, 4.98, 4.985, 4.99, 4.995, 5.0, 5.005, 5.01, 5.015, 5.0200000000000005, 5.025, 5.03, 5.035, 5.04, 5.045, 5.05, 5.055, 5.0600000000000005, 5.065, 5.07, 5.075, 5.08, 5.085, 5.09, 5.095, 5.1000000000000005, 5.105, 5.11, 5.115, 5.12, 5.125, 5.13, 5.135, 5.14, 5.1450000000000005, 5.15, 5.155, 5.16, 5.165, 5.17, 5.175, 5.18, 5.1850000000000005, 5.19, 5.195, 5.2, 5.205, 5.21, 5.215, 5.22, 5.2250000000000005, 5.23, 5.235, 5.24, 5.245, 5.25, 5.255, 5.26, 5.265, 5.2700000000000005, 5.275, 5.28, 5.285, 5.29, 5.295, 5.3, 5.305, 5.3100000000000005, 5.315, 5.32, 5.325, 5.33, 5.335, 5.34, 5.345, 5.3500000000000005, 5.355, 5.36, 5.365, 5.37, 5.375, 5.38, 5.385, 5.39, 5.3950000000000005, 5.4, 5.405, 5.41, 5.415, 5.42, 5.425, 5.43, 5.4350000000000005, 5.44, 5.445, 5.45, 5.455, 5.46, 5.465, 5.47, 5.4750000000000005, 5.48, 5.485, 5.49, 5.495, 5.5, 5.505, 5.51, 5.515, 5.5200000000000005, 5.525, 5.53, 5.535, 5.54, 5.545, 5.55, 5.555, 5.5600000000000005, 5.565, 5.57, 5.575, 5.58, 5.585, 5.59, 5.595, 5.6000000000000005, 5.605, 5.61, 5.615, 5.62, 5.625, 5.63, 5.635, 5.64, 5.6450000000000005, 5.65, 5.655, 5.66, 5.665, 5.67, 5.675, 5.68, 5.6850000000000005, 5.69, 5.695, 5.7, 5.705, 5.71, 5.715, 5.72, 5.7250000000000005, 5.73, 5.735, 5.74, 5.745, 5.75, 5.755, 5.76, 5.765, 5.7700000000000005, 5.775, 5.78, 5.785, 5.79, 5.795, 5.8, 5.805, 5.8100000000000005, 5.815, 5.82, 5.825, 5.83, 5.835, 5.84, 5.845, 5.8500000000000005, 5.855, 5.86, 5.865, 5.87, 5.875, 5.88, 5.885, 5.89, 5.8950000000000005, 5.9, 5.905, 5.91, 5.915, 5.92, 5.925, 5.93, 5.9350000000000005, 5.94, 5.945, 5.95, 5.955, 5.96, 5.965, 5.97, 5.9750000000000005, 5.98, 5.985, 5.99, 5.995, 6.0, 6.005, 6.01, 6.015000000000001, 6.0200000000000005, 6.025, 6.03, 6.035, 6.04, 6.045, 6.05, 6.055, 6.0600000000000005, 6.065, 6.07, 6.075, 6.08, 6.085, 6.09, 6.095, 6.1000000000000005, 6.105, 6.11, 6.115, 6.12, 6.125, 6.13, 6.135, 6.140000000000001, 6.1450000000000005, 6.15, 6.155, 6.16, 6.165, 6.17, 6.175, 6.18, 6.1850000000000005, 6.19, 6.195, 6.2, 6.205, 6.21, 6.215, 6.22, 6.2250000000000005, 6.23, 6.235, 6.24, 6.245, 6.25, 6.255, 6.26, 6.265000000000001, 6.2700000000000005, 6.275, 6.28, 6.285, 6.29, 6.295, 6.3, 6.305, 6.3100000000000005, 6.315, 6.32, 6.325, 6.33, 6.335, 6.34, 6.345, 6.3500000000000005, 6.355, 6.36, 6.365, 6.37, 6.375, 6.38, 6.385, 6.390000000000001, 6.3950000000000005, 6.4, 6.405, 6.41, 6.415, 6.42, 6.425, 6.43, 6.4350000000000005, 6.44, 6.445, 6.45, 6.455, 6.46, 6.465, 6.47, 6.4750000000000005, 6.48, 6.485, 6.49, 6.495, 6.5, 6.505, 6.51, 6.515000000000001, 6.5200000000000005, 6.525, 6.53, 6.535, 6.54, 6.545, 6.55, 6.555, 6.5600000000000005, 6.565, 6.57, 6.575, 6.58, 6.585, 6.59, 6.595, 6.6000000000000005, 6.605, 6.61, 6.615, 6.62, 6.625, 6.63, 6.635, 6.640000000000001, 6.6450000000000005, 6.65, 6.655, 6.66, 6.665, 6.67, 6.675, 6.68, 6.6850000000000005, 6.69, 6.695, 6.7, 6.705, 6.71, 6.715, 6.72, 6.7250000000000005, 6.73, 6.735, 6.74, 6.745, 6.75, 6.755, 6.76, 6.765000000000001, 6.7700000000000005, 6.775, 6.78, 6.785, 6.79, 6.795, 6.8, 6.805, 6.8100000000000005, 6.815, 6.82, 6.825, 6.83, 6.835, 6.84, 6.845, 6.8500000000000005, 6.855, 6.86, 6.865, 6.87, 6.875, 6.88, 6.885, 6.890000000000001, 6.8950000000000005, 6.9, 6.905, 6.91, 6.915, 6.92, 6.925, 6.93, 6.9350000000000005, 6.94, 6.945, 6.95, 6.955, 6.96, 6.965, 6.97, 6.9750000000000005, 6.98, 6.985, 6.99, 6.995, 7.0, 7.005, 7.01, 7.015000000000001, 7.0200000000000005, 7.025, 7.03, 7.035, 7.04, 7.045, 7.05, 7.055, 7.0600000000000005, 7.065, 7.07, 7.075, 7.08, 7.085, 7.09, 7.095, 7.1000000000000005, 7.105, 7.11, 7.115, 7.12, 7.125, 7.13, 7.135, 7.140000000000001, 7.1450000000000005, 7.15, 7.155, 7.16, 7.165, 7.17, 7.175, 7.18, 7.1850000000000005, 7.19, 7.195, 7.2, 7.205, 7.21, 7.215, 7.22, 7.2250000000000005, 7.23, 7.235, 7.24, 7.245, 7.25, 7.255, 7.26, 7.265000000000001, 7.2700000000000005, 7.275, 7.28, 7.285, 7.29, 7.295, 7.3, 7.305, 7.3100000000000005, 7.315, 7.32, 7.325, 7.33, 7.335, 7.34, 7.345, 7.3500000000000005, 7.355, 7.36, 7.365, 7.37, 7.375, 7.38, 7.385, 7.390000000000001, 7.3950000000000005, 7.4, 7.405, 7.41, 7.415, 7.42, 7.425, 7.43, 7.4350000000000005, 7.44, 7.445, 7.45, 7.455, 7.46, 7.465, 7.47, 7.4750000000000005, 7.48, 7.485, 7.49, 7.495, 7.5, 7.505, 7.51, 7.515000000000001, 7.5200000000000005, 7.525, 7.53, 7.535, 7.54, 7.545, 7.55, 7.555, 7.5600000000000005, 7.565, 7.57, 7.575, 7.58, 7.585, 7.59, 7.595, 7.6000000000000005, 7.605, 7.61, 7.615, 7.62, 7.625, 7.63, 7.635, 7.640000000000001, 7.6450000000000005, 7.65, 7.655, 7.66, 7.665, 7.67, 7.675, 7.68, 7.6850000000000005, 7.69, 7.695, 7.7, 7.705, 7.71, 7.715, 7.72, 7.7250000000000005, 7.73, 7.735, 7.74, 7.745, 7.75, 7.755, 7.76, 7.765000000000001, 7.7700000000000005, 7.775, 7.78, 7.785, 7.79, 7.795, 7.8, 7.805000000000001, 7.8100000000000005, 7.815, 7.82, 7.825, 7.83, 7.835, 7.84, 7.845, 7.8500000000000005, 7.855, 7.86, 7.865, 7.87, 7.875, 7.88, 7.885, 7.890000000000001, 7.8950000000000005, 7.9, 7.905, 7.91, 7.915, 7.92, 7.925, 7.930000000000001, 7.9350000000000005, 7.94, 7.945, 7.95, 7.955, 7.96, 7.965, 7.97, 7.9750000000000005, 7.98, 7.985, 7.99, 7.995, 8.0, 8.005, 8.01, 8.015, 8.02, 8.025, 8.03, 8.035, 8.040000000000001, 8.045, 8.05, 8.055, 8.06, 8.065, 8.07, 8.075, 8.08, 8.085, 8.09, 8.095, 8.1, 8.105, 8.11, 8.115, 8.120000000000001, 8.125, 8.13, 8.135, 8.14, 8.145, 8.15, 8.155, 8.16, 8.165000000000001, 8.17, 8.175, 8.18, 8.185, 8.19, 8.195, 8.2, 8.205, 8.21, 8.215, 8.22, 8.225, 8.23, 8.235, 8.24, 8.245000000000001, 8.25, 8.255, 8.26, 8.265, 8.27, 8.275, 8.28, 8.285, 8.290000000000001, 8.295, 8.3, 8.305, 8.31, 8.315, 8.32, 8.325, 8.33, 8.335, 8.34, 8.345, 8.35, 8.355, 8.36, 8.365, 8.370000000000001, 8.375, 8.38, 8.385, 8.39, 8.395, 8.4, 8.405, 8.41, 8.415000000000001, 8.42, 8.425, 8.43, 8.435, 8.44, 8.445, 8.45, 8.455, 8.46, 8.465, 8.47, 8.475, 8.48, 8.485, 8.49, 8.495000000000001, 8.5, 8.505, 8.51, 8.515, 8.52, 8.525, 8.53, 8.535, 8.540000000000001, 8.545, 8.55, 8.555, 8.56, 8.565, 8.57, 8.575000000000001, 8.58, 8.585, 8.59, 8.595, 8.6, 8.605, 8.61, 8.615, 8.620000000000001, 8.625, 8.63, 8.635, 8.64, 8.645, 8.65, 8.655, 8.66, 8.665000000000001, 8.67, 8.675, 8.68, 8.685, 8.69, 8.695, 8.700000000000001, 8.705, 8.71, 8.715, 8.72, 8.725, 8.73, 8.735, 8.74, 8.745000000000001, 8.75, 8.755, 8.76, 8.765, 8.77, 8.775, 8.78, 8.785, 8.790000000000001, 8.795, 8.8, 8.805, 8.81, 8.815, 8.82, 8.825000000000001, 8.83, 8.835, 8.84, 8.845, 8.85, 8.855, 8.86, 8.865, 8.870000000000001, 8.875, 8.88, 8.885, 8.89, 8.895, 8.9, 8.905, 8.91, 8.915000000000001, 8.92, 8.925, 8.93, 8.935, 8.94, 8.945, 8.950000000000001, 8.955, 8.96, 8.965, 8.97, 8.975, 8.98, 8.985, 8.99, 8.995000000000001, 9.0, 9.005, 9.01, 9.015, 9.02, 9.025, 9.03, 9.035, 9.040000000000001, 9.045, 9.05, 9.055, 9.06, 9.065, 9.07, 9.075000000000001, 9.08, 9.085, 9.09, 9.095, 9.1, 9.105, 9.11, 9.115, 9.120000000000001, 9.125, 9.13, 9.135, 9.14, 9.145, 9.15, 9.155, 9.16, 9.165000000000001, 9.17, 9.175, 9.18, 9.185, 9.19, 9.195, 9.200000000000001, 9.205, 9.21, 9.215, 9.22, 9.225, 9.23, 9.235, 9.24, 9.245000000000001, 9.25, 9.255, 9.26, 9.265, 9.27, 9.275, 9.28, 9.285, 9.290000000000001, 9.295, 9.3, 9.305, 9.31, 9.315, 9.32, 9.325000000000001, 9.33, 9.335, 9.34, 9.345, 9.35, 9.355, 9.36, 9.365, 9.370000000000001, 9.375, 9.38, 9.385, 9.39, 9.395, 9.4, 9.405, 9.41, 9.415000000000001, 9.42, 9.425, 9.43, 9.435, 9.44, 9.445, 9.450000000000001, 9.455, 9.46, 9.465, 9.47, 9.475, 9.48, 9.485, 9.49, 9.495000000000001, 9.5, 9.505, 9.51, 9.515, 9.52, 9.525, 9.53, 9.535, 9.540000000000001, 9.545, 9.55, 9.555, 9.56, 9.565, 9.57, 9.575000000000001, 9.58, 9.585, 9.59, 9.595, 9.6, 9.605, 9.61, 9.615, 9.620000000000001, 9.625, 9.63, 9.635, 9.64, 9.645, 9.65, 9.655, 9.66, 9.665000000000001, 9.67, 9.675, 9.68, 9.685, 9.69, 9.695, 9.700000000000001, 9.705, 9.71, 9.715, 9.72, 9.725, 9.73, 9.735, 9.74, 9.745000000000001, 9.75, 9.755, 9.76, 9.765, 9.77, 9.775, 9.78, 9.785, 9.790000000000001, 9.795, 9.8, 9.805, 9.81, 9.815, 9.82, 9.825000000000001, 9.83, 9.835, 9.84, 9.845, 9.85, 9.855, 9.86, 9.865, 9.870000000000001, 9.875, 9.88, 9.885, 9.89, 9.895, 9.9, 9.905, 9.91, 9.915000000000001, 9.92, 9.925, 9.93, 9.935, 9.94, 9.945, 9.950000000000001, 9.955, 9.96, 9.965, 9.97, 9.975, 9.98, 9.985, 9.99, 9.995000000000001, 10.0, 10.005, 10.01, 10.015, 10.02, 10.025, 10.03, 10.035, 10.040000000000001, 10.045, 10.05, 10.055, 10.06, 10.065, 10.07, 10.075000000000001, 10.08, 10.085, 10.09, 10.095, 10.1, 10.105, 10.11, 10.115, 10.120000000000001, 10.125, 10.13, 10.135, 10.14, 10.145, 10.15, 10.155, 10.16, 10.165000000000001, 10.17, 10.175, 10.18, 10.185, 10.19, 10.195, 10.200000000000001, 10.205, 10.21, 10.215, 10.22, 10.225, 10.23, 10.235, 10.24, 10.245000000000001, 10.25, 10.255, 10.26, 10.265, 10.27, 10.275, 10.28, 10.285, 10.290000000000001, 10.295, 10.3, 10.305, 10.31, 10.315, 10.32, 10.325000000000001, 10.33, 10.335, 10.34, 10.345, 10.35, 10.355, 10.36, 10.365, 10.370000000000001, 10.375, 10.38, 10.385, 10.39, 10.395, 10.4, 10.405, 10.41, 10.415000000000001, 10.42, 10.425, 10.43, 10.435, 10.44, 10.445, 10.450000000000001, 10.455, 10.46, 10.465, 10.47, 10.475, 10.48, 10.485, 10.49, 10.495000000000001, 10.5, 10.505, 10.51, 10.515, 10.52, 10.525, 10.53, 10.535, 10.540000000000001, 10.545, 10.55, 10.555, 10.56, 10.565, 10.57, 10.575000000000001, 10.58, 10.585, 10.59, 10.595, 10.6, 10.605, 10.61, 10.615, 10.620000000000001, 10.625, 10.63, 10.635, 10.64, 10.645, 10.65, 10.655, 10.66, 10.665000000000001, 10.67, 10.675, 10.68, 10.685, 10.69, 10.695, 10.700000000000001, 10.705, 10.71, 10.715, 10.72, 10.725, 10.73, 10.735, 10.74, 10.745000000000001, 10.75, 10.755, 10.76, 10.765, 10.77, 10.775, 10.78, 10.785, 10.790000000000001, 10.795, 10.8, 10.805, 10.81, 10.815, 10.82, 10.825000000000001, 10.83, 10.835, 10.84, 10.845, 10.85, 10.855, 10.86, 10.865, 10.870000000000001, 10.875, 10.88, 10.885, 10.89, 10.895, 10.9, 10.905, 10.91, 10.915000000000001, 10.92, 10.925, 10.93, 10.935, 10.94, 10.945, 10.950000000000001, 10.955, 10.96, 10.965, 10.97, 10.975, 10.98, 10.985, 10.99, 10.995000000000001, 11.0, 11.005, 11.01, 11.015, 11.02, 11.025, 11.03, 11.035, 11.040000000000001, 11.045, 11.05, 11.055, 11.06, 11.065, 11.07, 11.075000000000001, 11.08, 11.085, 11.09, 11.095, 11.1, 11.105, 11.11, 11.115, 11.120000000000001, 11.125, 11.13, 11.135, 11.14, 11.145, 11.15, 11.155, 11.16, 11.165000000000001, 11.17, 11.175, 11.18, 11.185, 11.19, 11.195, 11.200000000000001, 11.205, 11.21, 11.215, 11.22, 11.225, 11.23, 11.235, 11.24, 11.245000000000001, 11.25, 11.255, 11.26, 11.265, 11.27, 11.275, 11.28, 11.285, 11.290000000000001, 11.295, 11.3, 11.305, 11.31, 11.315, 11.32, 11.325000000000001, 11.33, 11.335, 11.34, 11.345, 11.35, 11.355, 11.36, 11.365, 11.370000000000001, 11.375, 11.38, 11.385, 11.39, 11.395, 11.4, 11.405, 11.41, 11.415000000000001, 11.42, 11.425, 11.43, 11.435, 11.44, 11.445, 11.450000000000001, 11.455, 11.46, 11.465, 11.47, 11.475, 11.48, 11.485, 11.49, 11.495000000000001, 11.5, 11.505, 11.51, 11.515, 11.52, 11.525, 11.53, 11.535, 11.540000000000001, 11.545, 11.55, 11.555, 11.56, 11.565, 11.57, 11.575000000000001, 11.58, 11.585, 11.59, 11.595, 11.6, 11.605, 11.61, 11.615, 11.620000000000001, 11.625, 11.63, 11.635, 11.64, 11.645, 11.65, 11.655, 11.66, 11.665000000000001, 11.67, 11.675, 11.68, 11.685, 11.69, 11.695, 11.700000000000001, 11.705, 11.71, 11.715, 11.72, 11.725, 11.73, 11.735, 11.74, 11.745000000000001, 11.75, 11.755, 11.76, 11.765, 11.77, 11.775, 11.78, 11.785, 11.790000000000001, 11.795, 11.8, 11.805, 11.81, 11.815, 11.82, 11.825000000000001, 11.83, 11.835, 11.84, 11.845, 11.85, 11.855, 11.86, 11.865, 11.870000000000001, 11.875, 11.88, 11.885, 11.89, 11.895, 11.9, 11.905, 11.91, 11.915000000000001, 11.92, 11.925, 11.93, 11.935, 11.94, 11.945, 11.950000000000001, 11.955, 11.96, 11.965, 11.97, 11.975, 11.98, 11.985, 11.99, 11.995000000000001, 12.0, 12.005, 12.01, 12.015, 12.02, 12.025, 12.030000000000001, 12.035, 12.040000000000001, 12.045, 12.05, 12.055, 12.06, 12.065, 12.07, 12.075000000000001, 12.08, 12.085, 12.09, 12.095, 12.1, 12.105, 12.11, 12.115, 12.120000000000001, 12.125, 12.13, 12.135, 12.14, 12.145, 12.15, 12.155000000000001, 12.16, 12.165000000000001, 12.17, 12.175, 12.18, 12.185, 12.19, 12.195, 12.200000000000001, 12.205, 12.21, 12.215, 12.22, 12.225, 12.23, 12.235, 12.24, 12.245000000000001, 12.25, 12.255, 12.26, 12.265, 12.27, 12.275, 12.280000000000001, 12.285, 12.290000000000001, 12.295, 12.3, 12.305, 12.31, 12.315, 12.32, 12.325000000000001, 12.33, 12.335, 12.34, 12.345, 12.35, 12.355, 12.36, 12.365, 12.370000000000001, 12.375, 12.38, 12.385, 12.39, 12.395, 12.4, 12.405000000000001, 12.41, 12.415000000000001, 12.42, 12.425, 12.43, 12.435, 12.44, 12.445, 12.450000000000001, 12.455, 12.46, 12.465, 12.47, 12.475, 12.48, 12.485, 12.49, 12.495000000000001, 12.5, 12.505, 12.51, 12.515, 12.52, 12.525, 12.530000000000001, 12.535, 12.540000000000001, 12.545, 12.55, 12.555, 12.56, 12.565, 12.57, 12.575000000000001, 12.58, 12.585, 12.59, 12.595, 12.6, 12.605, 12.61, 12.615, 12.620000000000001, 12.625, 12.63, 12.635, 12.64, 12.645, 12.65, 12.655000000000001, 12.66, 12.665000000000001, 12.67, 12.675, 12.68, 12.685, 12.69, 12.695, 12.700000000000001, 12.705, 12.71, 12.715, 12.72, 12.725, 12.73, 12.735, 12.74, 12.745000000000001, 12.75, 12.755, 12.76, 12.765, 12.77, 12.775, 12.780000000000001, 12.785, 12.790000000000001, 12.795, 12.8, 12.805, 12.81, 12.815, 12.82, 12.825000000000001, 12.83, 12.835, 12.84, 12.845, 12.85, 12.855, 12.86, 12.865, 12.870000000000001, 12.875, 12.88, 12.885, 12.89, 12.895, 12.9, 12.905000000000001, 12.91, 12.915000000000001, 12.92, 12.925, 12.93, 12.935, 12.94, 12.945, 12.950000000000001, 12.955, 12.96, 12.965, 12.97, 12.975, 12.98, 12.985, 12.99, 12.995000000000001, 13.0, 13.005, 13.01, 13.015, 13.02, 13.025, 13.030000000000001, 13.035, 13.040000000000001, 13.045, 13.05, 13.055, 13.06, 13.065, 13.07, 13.075000000000001, 13.08, 13.085, 13.09, 13.095, 13.1, 13.105, 13.11, 13.115, 13.120000000000001, 13.125, 13.13, 13.135, 13.14, 13.145, 13.15, 13.155000000000001, 13.16, 13.165000000000001, 13.17, 13.175, 13.18, 13.185, 13.19, 13.195, 13.200000000000001, 13.205, 13.21, 13.215, 13.22, 13.225, 13.23, 13.235, 13.24, 13.245000000000001, 13.25, 13.255, 13.26, 13.265, 13.27, 13.275, 13.280000000000001, 13.285, 13.290000000000001, 13.295, 13.3, 13.305, 13.31, 13.315, 13.32, 13.325000000000001, 13.33, 13.335, 13.34, 13.345, 13.35, 13.355, 13.36, 13.365, 13.370000000000001, 13.375, 13.38, 13.385, 13.39, 13.395, 13.4, 13.405000000000001, 13.41, 13.415000000000001, 13.42, 13.425, 13.43, 13.435, 13.44, 13.445, 13.450000000000001, 13.455, 13.46, 13.465, 13.47, 13.475, 13.48, 13.485, 13.49, 13.495000000000001, 13.5, 13.505, 13.51, 13.515, 13.52, 13.525, 13.530000000000001, 13.535, 13.540000000000001, 13.545, 13.55, 13.555, 13.56, 13.565, 13.57, 13.575000000000001, 13.58, 13.585, 13.59, 13.595, 13.6, 13.605, 13.61, 13.615, 13.620000000000001, 13.625, 13.63, 13.635, 13.64, 13.645, 13.65, 13.655000000000001, 13.66, 13.665000000000001, 13.67, 13.675, 13.68, 13.685, 13.69, 13.695, 13.700000000000001, 13.705, 13.71, 13.715, 13.72, 13.725, 13.73, 13.735, 13.74, 13.745000000000001, 13.75, 13.755, 13.76, 13.765, 13.77, 13.775, 13.780000000000001, 13.785, 13.790000000000001, 13.795, 13.8, 13.805, 13.81, 13.815, 13.82, 13.825000000000001, 13.83, 13.835, 13.84, 13.845, 13.85, 13.855, 13.86, 13.865, 13.870000000000001, 13.875, 13.88, 13.885, 13.89, 13.895, 13.9, 13.905000000000001, 13.91, 13.915000000000001, 13.92, 13.925, 13.93, 13.935, 13.94, 13.945, 13.950000000000001, 13.955, 13.96, 13.965, 13.97, 13.975, 13.98, 13.985, 13.99, 13.995000000000001, 14.0, 14.005, 14.01, 14.015, 14.02, 14.025, 14.030000000000001, 14.035, 14.040000000000001, 14.045, 14.05, 14.055, 14.06, 14.065, 14.07, 14.075000000000001, 14.08, 14.085, 14.09, 14.095, 14.1, 14.105, 14.11, 14.115, 14.120000000000001, 14.125, 14.13, 14.135, 14.14, 14.145, 14.15, 14.155000000000001, 14.16, 14.165000000000001, 14.17, 14.175, 14.18, 14.185, 14.19, 14.195, 14.200000000000001, 14.205, 14.21, 14.215, 14.22, 14.225, 14.23, 14.235, 14.24, 14.245000000000001, 14.25, 14.255, 14.26, 14.265, 14.27, 14.275, 14.280000000000001, 14.285, 14.290000000000001, 14.295, 14.3, 14.305, 14.31, 14.315, 14.32, 14.325000000000001, 14.33, 14.335, 14.34, 14.345, 14.35, 14.355, 14.36, 14.365, 14.370000000000001, 14.375, 14.38, 14.385, 14.39, 14.395, 14.4, 14.405000000000001, 14.41, 14.415000000000001, 14.42, 14.425, 14.43, 14.435, 14.44, 14.445, 14.450000000000001, 14.455, 14.46, 14.465, 14.47, 14.475, 14.48, 14.485, 14.49, 14.495000000000001, 14.5, 14.505, 14.51, 14.515, 14.52, 14.525, 14.530000000000001, 14.535, 14.540000000000001, 14.545, 14.55, 14.555, 14.56, 14.565, 14.57, 14.575000000000001, 14.58, 14.585, 14.59, 14.595, 14.6, 14.605, 14.61, 14.615, 14.620000000000001, 14.625, 14.63, 14.635, 14.64, 14.645, 14.65, 14.655000000000001, 14.66, 14.665000000000001, 14.67, 14.675, 14.68, 14.685, 14.69, 14.695, 14.700000000000001, 14.705, 14.71, 14.715, 14.72, 14.725, 14.73, 14.735, 14.74, 14.745000000000001, 14.75, 14.755, 14.76, 14.765, 14.77, 14.775, 14.780000000000001, 14.785, 14.790000000000001, 14.795, 14.8, 14.805, 14.81, 14.815, 14.82, 14.825000000000001, 14.83, 14.835, 14.84, 14.845, 14.85, 14.855, 14.86, 14.865, 14.870000000000001, 14.875, 14.88, 14.885, 14.89, 14.895, 14.9, 14.905000000000001, 14.91, 14.915000000000001, 14.92, 14.925, 14.93, 14.935, 14.94, 14.945, 14.950000000000001, 14.955, 14.96, 14.965, 14.97, 14.975, 14.98, 14.985, 14.99, 14.995000000000001, 15.0, 15.005, 15.01, 15.015, 15.02, 15.025, 15.030000000000001, 15.035, 15.040000000000001, 15.045, 15.05, 15.055, 15.06, 15.065, 15.07, 15.075000000000001, 15.08, 15.085, 15.09, 15.095, 15.1, 15.105, 15.11, 15.115, 15.120000000000001, 15.125, 15.13, 15.135, 15.14, 15.145, 15.15, 15.155000000000001, 15.16, 15.165000000000001, 15.17, 15.175, 15.18, 15.185, 15.19, 15.195, 15.200000000000001, 15.205, 15.21, 15.215, 15.22, 15.225, 15.23, 15.235, 15.24, 15.245000000000001, 15.25, 15.255, 15.26, 15.265, 15.27, 15.275, 15.280000000000001, 15.285, 15.290000000000001, 15.295, 15.3, 15.305, 15.31, 15.315, 15.32, 15.325000000000001, 15.33, 15.335, 15.34, 15.345, 15.35, 15.355, 15.36, 15.365, 15.370000000000001, 15.375, 15.38, 15.385, 15.39, 15.395, 15.4, 15.405000000000001, 15.41, 15.415000000000001, 15.42, 15.425, 15.43, 15.435, 15.44, 15.445, 15.450000000000001, 15.455, 15.46, 15.465, 15.47, 15.475, 15.48, 15.485000000000001, 15.49, 15.495000000000001, 15.5, 15.505, 15.51, 15.515, 15.52, 15.525, 15.530000000000001, 15.535, 15.540000000000001, 15.545, 15.55, 15.555, 15.56, 15.565, 15.57, 15.575000000000001, 15.58, 15.585, 15.59, 15.595, 15.6, 15.605, 15.610000000000001, 15.615, 15.620000000000001, 15.625, 15.63, 15.635, 15.64, 15.645, 15.65, 15.655000000000001, 15.66, 15.665000000000001, 15.67, 15.675, 15.68, 15.685, 15.69, 15.695, 15.700000000000001, 15.705, 15.71, 15.715, 15.72, 15.725, 15.73, 15.735000000000001, 15.74, 15.745000000000001, 15.75, 15.755, 15.76, 15.765, 15.77, 15.775, 15.780000000000001, 15.785, 15.790000000000001, 15.795, 15.8, 15.805, 15.81, 15.815, 15.82, 15.825000000000001, 15.83, 15.835, 15.84, 15.845, 15.85, 15.855, 15.860000000000001, 15.865, 15.870000000000001, 15.875, 15.88, 15.885, 15.89, 15.895, 15.9, 15.905000000000001, 15.91, 15.915000000000001, 15.92, 15.925, 15.93, 15.935, 15.94, 15.945, 15.950000000000001, 15.955, 15.96, 15.965, 15.97, 15.975, 15.98, 15.985000000000001, 15.99, 15.995000000000001, 16.0, 16.005, 16.01, 16.015, 16.02, 16.025, 16.03, 16.035, 16.04, 16.045, 16.05, 16.055, 16.06, 16.065, 16.07, 16.075, 16.080000000000002, 16.085, 16.09, 16.095, 16.1, 16.105, 16.11, 16.115000000000002, 16.12, 16.125, 16.13, 16.135, 16.14, 16.145, 16.15, 16.155, 16.16, 16.165, 16.17, 16.175, 16.18, 16.185, 16.19, 16.195, 16.2, 16.205000000000002, 16.21, 16.215, 16.22, 16.225, 16.23, 16.235, 16.240000000000002, 16.245, 16.25, 16.255, 16.26, 16.265, 16.27, 16.275, 16.28, 16.285, 16.29, 16.295, 16.3, 16.305, 16.31, 16.315, 16.32, 16.325, 16.330000000000002, 16.335, 16.34, 16.345, 16.35, 16.355, 16.36, 16.365000000000002, 16.37, 16.375, 16.38, 16.385, 16.39, 16.395, 16.4, 16.405, 16.41, 16.415, 16.42, 16.425, 16.43, 16.435, 16.44, 16.445, 16.45, 16.455000000000002, 16.46, 16.465, 16.47, 16.475, 16.48, 16.485, 16.490000000000002, 16.495, 16.5, 16.505, 16.51, 16.515, 16.52, 16.525, 16.53, 16.535, 16.54, 16.545, 16.55, 16.555, 16.56, 16.565, 16.57, 16.575, 16.580000000000002, 16.585, 16.59, 16.595, 16.6, 16.605, 16.61, 16.615000000000002, 16.62, 16.625, 16.63, 16.635, 16.64, 16.645, 16.65, 16.655, 16.66, 16.665, 16.67, 16.675, 16.68, 16.685, 16.69, 16.695, 16.7, 16.705000000000002, 16.71, 16.715, 16.72, 16.725, 16.73, 16.735, 16.740000000000002, 16.745, 16.75, 16.755, 16.76, 16.765, 16.77, 16.775, 16.78, 16.785, 16.79, 16.795, 16.8, 16.805, 16.81, 16.815, 16.82, 16.825, 16.830000000000002, 16.835, 16.84, 16.845, 16.85, 16.855, 16.86, 16.865000000000002, 16.87, 16.875, 16.88, 16.885, 16.89, 16.895, 16.9, 16.905, 16.91, 16.915, 16.92, 16.925, 16.93, 16.935, 16.94, 16.945, 16.95, 16.955000000000002, 16.96, 16.965, 16.97, 16.975, 16.98, 16.985, 16.990000000000002, 16.995, 17.0, 17.005, 17.01, 17.015, 17.02, 17.025, 17.03, 17.035, 17.04, 17.045, 17.05, 17.055, 17.06, 17.065, 17.07, 17.075, 17.080000000000002, 17.085, 17.09, 17.095, 17.1, 17.105, 17.11, 17.115000000000002, 17.12, 17.125, 17.13, 17.135, 17.14, 17.145, 17.150000000000002, 17.155, 17.16, 17.165, 17.17, 17.175, 17.18, 17.185, 17.19, 17.195, 17.2, 17.205000000000002, 17.21, 17.215, 17.22, 17.225, 17.23, 17.235, 17.240000000000002, 17.245, 17.25, 17.255, 17.26, 17.265, 17.27, 17.275000000000002, 17.28, 17.285, 17.29, 17.295, 17.3, 17.305, 17.31, 17.315, 17.32, 17.325, 17.330000000000002, 17.335, 17.34, 17.345, 17.35, 17.355, 17.36, 17.365000000000002, 17.37, 17.375, 17.38, 17.385, 17.39, 17.395, 17.400000000000002, 17.405, 17.41, 17.415, 17.42, 17.425, 17.43, 17.435, 17.44, 17.445, 17.45, 17.455000000000002, 17.46, 17.465, 17.47, 17.475, 17.48, 17.485, 17.490000000000002, 17.495, 17.5, 17.505, 17.51, 17.515, 17.52, 17.525000000000002, 17.53, 17.535, 17.54, 17.545, 17.55, 17.555, 17.56, 17.565, 17.57, 17.575, 17.580000000000002, 17.585, 17.59, 17.595, 17.6, 17.605, 17.61, 17.615000000000002, 17.62, 17.625, 17.63, 17.635, 17.64, 17.645, 17.650000000000002, 17.655, 17.66, 17.665, 17.67, 17.675, 17.68, 17.685, 17.69, 17.695, 17.7, 17.705000000000002, 17.71, 17.715, 17.72, 17.725, 17.73, 17.735, 17.740000000000002, 17.745, 17.75, 17.755, 17.76, 17.765, 17.77, 17.775000000000002, 17.78, 17.785, 17.79, 17.795, 17.8, 17.805, 17.81, 17.815, 17.82, 17.825, 17.830000000000002, 17.835, 17.84, 17.845, 17.85, 17.855, 17.86, 17.865000000000002, 17.87, 17.875, 17.88, 17.885, 17.89, 17.895, 17.900000000000002, 17.905, 17.91, 17.915, 17.92, 17.925, 17.93, 17.935, 17.94, 17.945, 17.95, 17.955000000000002, 17.96, 17.965, 17.97, 17.975, 17.98, 17.985, 17.990000000000002, 17.995, 18.0, 18.005, 18.01, 18.015, 18.02, 18.025000000000002, 18.03, 18.035, 18.04, 18.045, 18.05, 18.055, 18.06, 18.065, 18.07, 18.075, 18.080000000000002, 18.085, 18.09, 18.095, 18.1, 18.105, 18.11, 18.115000000000002, 18.12, 18.125, 18.13, 18.135, 18.14, 18.145, 18.150000000000002, 18.155, 18.16, 18.165, 18.17, 18.175, 18.18, 18.185, 18.19, 18.195, 18.2, 18.205000000000002, 18.21, 18.215, 18.22, 18.225, 18.23, 18.235, 18.240000000000002, 18.245, 18.25, 18.255, 18.26, 18.265, 18.27, 18.275000000000002, 18.28, 18.285, 18.29, 18.295, 18.3, 18.305, 18.31, 18.315, 18.32, 18.325, 18.330000000000002, 18.335, 18.34, 18.345, 18.35, 18.355, 18.36, 18.365000000000002, 18.37, 18.375, 18.38, 18.385, 18.39, 18.395, 18.400000000000002, 18.405, 18.41, 18.415, 18.42, 18.425, 18.43, 18.435, 18.44, 18.445, 18.45, 18.455000000000002, 18.46, 18.465, 18.47, 18.475, 18.48, 18.485, 18.490000000000002, 18.495, 18.5, 18.505, 18.51, 18.515, 18.52, 18.525000000000002, 18.53, 18.535, 18.54, 18.545, 18.55, 18.555, 18.56, 18.565, 18.57, 18.575, 18.580000000000002, 18.585, 18.59, 18.595, 18.6, 18.605, 18.61, 18.615000000000002, 18.62, 18.625, 18.63, 18.635, 18.64, 18.645, 18.650000000000002, 18.655, 18.66, 18.665, 18.67, 18.675, 18.68, 18.685, 18.69, 18.695, 18.7, 18.705000000000002, 18.71, 18.715, 18.72, 18.725, 18.73, 18.735, 18.740000000000002, 18.745, 18.75, 18.755, 18.76, 18.765, 18.77, 18.775000000000002, 18.78, 18.785, 18.79, 18.795, 18.8, 18.805, 18.81, 18.815, 18.82, 18.825, 18.830000000000002, 18.835, 18.84, 18.845, 18.85, 18.855, 18.86, 18.865000000000002, 18.87, 18.875, 18.88, 18.885, 18.89, 18.895, 18.900000000000002, 18.905, 18.91, 18.915, 18.92, 18.925, 18.93, 18.935, 18.94, 18.945, 18.95, 18.955000000000002, 18.96, 18.965, 18.97, 18.975, 18.98, 18.985, 18.990000000000002, 18.995, 19.0, 19.005, 19.01, 19.015, 19.02, 19.025000000000002, 19.03, 19.035, 19.04, 19.045, 19.05, 19.055, 19.06, 19.065, 19.07, 19.075, 19.080000000000002, 19.085, 19.09, 19.095, 19.1, 19.105, 19.11, 19.115000000000002, 19.12, 19.125, 19.13, 19.135, 19.14, 19.145, 19.150000000000002, 19.155, 19.16, 19.165, 19.17, 19.175, 19.18, 19.185, 19.19, 19.195, 19.2, 19.205000000000002, 19.21, 19.215, 19.22, 19.225, 19.23, 19.235, 19.240000000000002, 19.245, 19.25, 19.255, 19.26, 19.265, 19.27, 19.275000000000002, 19.28, 19.285, 19.29, 19.295, 19.3, 19.305, 19.31, 19.315, 19.32, 19.325, 19.330000000000002, 19.335, 19.34, 19.345, 19.35, 19.355, 19.36, 19.365000000000002, 19.37, 19.375, 19.38, 19.385, 19.39, 19.395, 19.400000000000002, 19.405, 19.41, 19.415, 19.42, 19.425, 19.43, 19.435, 19.44, 19.445, 19.45, 19.455000000000002, 19.46, 19.465, 19.47, 19.475, 19.48, 19.485, 19.490000000000002, 19.495, 19.5, 19.505, 19.51, 19.515, 19.52, 19.525000000000002, 19.53, 19.535, 19.54, 19.545, 19.55, 19.555, 19.56, 19.565, 19.57, 19.575, 19.580000000000002, 19.585, 19.59, 19.595, 19.6, 19.605, 19.61, 19.615000000000002, 19.62, 19.625, 19.63, 19.635, 19.64, 19.645, 19.650000000000002, 19.655, 19.66, 19.665, 19.67, 19.675, 19.68, 19.685, 19.69, 19.695, 19.7, 19.705000000000002, 19.71, 19.715, 19.72, 19.725, 19.73, 19.735, 19.740000000000002, 19.745, 19.75, 19.755, 19.76, 19.765, 19.77, 19.775000000000002, 19.78, 19.785, 19.79, 19.795, 19.8, 19.805, 19.81, 19.815, 19.82, 19.825, 19.830000000000002, 19.835, 19.84, 19.845, 19.85, 19.855, 19.86, 19.865000000000002, 19.87, 19.875, 19.88, 19.885, 19.89, 19.895, 19.900000000000002, 19.905, 19.91, 19.915, 19.92, 19.925, 19.93, 19.935, 19.94, 19.945, 19.95, 19.955000000000002, 19.96, 19.965, 19.97, 19.975, 19.98, 19.985, 19.990000000000002, 19.995, 20.0, 20.005, 20.01, 20.015, 20.02, 20.025000000000002, 20.03, 20.035, 20.04, 20.045, 20.05, 20.055, 20.06, 20.065, 20.07, 20.075, 20.080000000000002, 20.085, 20.09, 20.095, 20.1, 20.105, 20.11, 20.115000000000002, 20.12, 20.125, 20.13, 20.135, 20.14, 20.145, 20.150000000000002, 20.155, 20.16, 20.165, 20.17, 20.175, 20.18, 20.185, 20.19, 20.195, 20.2, 20.205000000000002, 20.21, 20.215, 20.22, 20.225, 20.23, 20.235, 20.240000000000002, 20.245, 20.25, 20.255, 20.26, 20.265, 20.27, 20.275000000000002, 20.28, 20.285, 20.29, 20.295, 20.3, 20.305, 20.31, 20.315, 20.32, 20.325, 20.330000000000002, 20.335, 20.34, 20.345, 20.35, 20.355, 20.36, 20.365000000000002, 20.37, 20.375, 20.38, 20.385, 20.39, 20.395, 20.400000000000002, 20.405, 20.41, 20.415, 20.42, 20.425, 20.43, 20.435, 20.44, 20.445, 20.45, 20.455000000000002, 20.46, 20.465, 20.47, 20.475, 20.48, 20.485, 20.490000000000002, 20.495, 20.5, 20.505, 20.51, 20.515, 20.52, 20.525000000000002, 20.53, 20.535, 20.54, 20.545, 20.55, 20.555, 20.56, 20.565, 20.57, 20.575, 20.580000000000002, 20.585, 20.59, 20.595, 20.6, 20.605, 20.61, 20.615000000000002, 20.62, 20.625, 20.63, 20.635, 20.64, 20.645, 20.650000000000002, 20.655, 20.66, 20.665, 20.67, 20.675, 20.68, 20.685, 20.69, 20.695, 20.7, 20.705000000000002, 20.71, 20.715, 20.72, 20.725, 20.73, 20.735, 20.740000000000002, 20.745, 20.75, 20.755, 20.76, 20.765, 20.77, 20.775000000000002, 20.78, 20.785, 20.79, 20.795, 20.8, 20.805, 20.81, 20.815, 20.82, 20.825, 20.830000000000002, 20.835, 20.84, 20.845, 20.85, 20.855, 20.86, 20.865000000000002, 20.87, 20.875, 20.88, 20.885, 20.89, 20.895, 20.900000000000002, 20.905, 20.91, 20.915, 20.92, 20.925, 20.93, 20.935, 20.94, 20.945, 20.95, 20.955000000000002, 20.96, 20.965, 20.97, 20.975, 20.98, 20.985, 20.990000000000002, 20.995, 21.0, 21.005, 21.01, 21.015, 21.02, 21.025000000000002, 21.03, 21.035, 21.04, 21.045, 21.05, 21.055, 21.06, 21.065, 21.07, 21.075, 21.080000000000002, 21.085, 21.09, 21.095, 21.1, 21.105, 21.11, 21.115000000000002, 21.12, 21.125, 21.13, 21.135, 21.14, 21.145, 21.150000000000002, 21.155, 21.16, 21.165, 21.17, 21.175, 21.18, 21.185, 21.19, 21.195, 21.2, 21.205000000000002, 21.21, 21.215, 21.22, 21.225, 21.23, 21.235, 21.240000000000002, 21.245, 21.25, 21.255, 21.26, 21.265, 21.27, 21.275000000000002, 21.28, 21.285, 21.29, 21.295, 21.3, 21.305, 21.31, 21.315, 21.32, 21.325, 21.330000000000002, 21.335, 21.34, 21.345, 21.35, 21.355, 21.36, 21.365000000000002, 21.37, 21.375, 21.38, 21.385, 21.39, 21.395, 21.400000000000002, 21.405, 21.41, 21.415, 21.42, 21.425, 21.43, 21.435, 21.44, 21.445, 21.45, 21.455000000000002, 21.46, 21.465, 21.47, 21.475, 21.48, 21.485, 21.490000000000002, 21.495, 21.5, 21.505, 21.51, 21.515, 21.52, 21.525000000000002, 21.53, 21.535, 21.54, 21.545, 21.55, 21.555, 21.56, 21.565, 21.57, 21.575, 21.580000000000002, 21.585, 21.59, 21.595, 21.6, 21.605, 21.61, 21.615000000000002, 21.62, 21.625, 21.63, 21.635, 21.64, 21.645, 21.650000000000002, 21.655, 21.66, 21.665, 21.67, 21.675, 21.68, 21.685, 21.69, 21.695, 21.7, 21.705000000000002, 21.71, 21.715, 21.72, 21.725, 21.73, 21.735, 21.740000000000002, 21.745, 21.75, 21.755, 21.76, 21.765, 21.77, 21.775000000000002, 21.78, 21.785, 21.79, 21.795, 21.8, 21.805, 21.81, 21.815, 21.82, 21.825, 21.830000000000002, 21.835, 21.84, 21.845, 21.85, 21.855, 21.86, 21.865000000000002, 21.87, 21.875, 21.88, 21.885, 21.89, 21.895, 21.900000000000002, 21.905, 21.91, 21.915, 21.92, 21.925, 21.93, 21.935, 21.94, 21.945, 21.95, 21.955000000000002, 21.96, 21.965, 21.97, 21.975, 21.98, 21.985, 21.990000000000002, 21.995, 22.0, 22.005, 22.01, 22.015, 22.02, 22.025000000000002, 22.03, 22.035, 22.04, 22.045, 22.05, 22.055, 22.06, 22.065, 22.07, 22.075, 22.080000000000002, 22.085, 22.09, 22.095, 22.1, 22.105, 22.11, 22.115000000000002, 22.12, 22.125, 22.13, 22.135, 22.14, 22.145, 22.150000000000002, 22.155, 22.16, 22.165, 22.17, 22.175, 22.18, 22.185, 22.19, 22.195, 22.2, 22.205000000000002, 22.21, 22.215, 22.22, 22.225, 22.23, 22.235, 22.240000000000002, 22.245, 22.25, 22.255, 22.26, 22.265, 22.27, 22.275000000000002, 22.28, 22.285, 22.29, 22.295, 22.3, 22.305, 22.31, 22.315, 22.32, 22.325, 22.330000000000002, 22.335, 22.34, 22.345, 22.35, 22.355, 22.36, 22.365000000000002, 22.37, 22.375, 22.38, 22.385, 22.39, 22.395, 22.400000000000002, 22.405, 22.41, 22.415, 22.42, 22.425, 22.43, 22.435, 22.44, 22.445, 22.45, 22.455000000000002, 22.46, 22.465, 22.47, 22.475, 22.48, 22.485, 22.490000000000002, 22.495, 22.5, 22.505, 22.51, 22.515, 22.52, 22.525000000000002, 22.53, 22.535, 22.54, 22.545, 22.55, 22.555, 22.56, 22.565, 22.57, 22.575, 22.580000000000002, 22.585, 22.59, 22.595, 22.6, 22.605, 22.61, 22.615000000000002, 22.62, 22.625, 22.63, 22.635, 22.64, 22.645, 22.650000000000002, 22.655, 22.66, 22.665, 22.67, 22.675, 22.68, 22.685, 22.69, 22.695, 22.7, 22.705000000000002, 22.71, 22.715, 22.72, 22.725, 22.73, 22.735, 22.740000000000002, 22.745, 22.75, 22.755, 22.76, 22.765, 22.77, 22.775000000000002, 22.78, 22.785, 22.79, 22.795, 22.8, 22.805, 22.81, 22.815, 22.82, 22.825, 22.830000000000002, 22.835, 22.84, 22.845, 22.85, 22.855, 22.86, 22.865000000000002, 22.87, 22.875, 22.88, 22.885, 22.89, 22.895, 22.900000000000002, 22.905, 22.91, 22.915, 22.92, 22.925, 22.93, 22.935, 22.94, 22.945, 22.95, 22.955000000000002, 22.96, 22.965, 22.97, 22.975, 22.98, 22.985, 22.990000000000002, 22.995, 23.0, 23.005, 23.01, 23.015, 23.02, 23.025000000000002, 23.03, 23.035, 23.04, 23.045, 23.05, 23.055, 23.06, 23.065, 23.07, 23.075, 23.080000000000002, 23.085, 23.09, 23.095, 23.1, 23.105, 23.11, 23.115000000000002, 23.12, 23.125, 23.13, 23.135, 23.14, 23.145, 23.150000000000002, 23.155, 23.16, 23.165, 23.17, 23.175, 23.18, 23.185, 23.19, 23.195, 23.2, 23.205000000000002, 23.21, 23.215, 23.22, 23.225, 23.23, 23.235, 23.240000000000002, 23.245, 23.25, 23.255, 23.26, 23.265, 23.27, 23.275000000000002, 23.28, 23.285, 23.29, 23.295, 23.3, 23.305, 23.31, 23.315, 23.32, 23.325, 23.330000000000002, 23.335, 23.34, 23.345, 23.35, 23.355, 23.36, 23.365000000000002, 23.37, 23.375, 23.38, 23.385, 23.39, 23.395, 23.400000000000002, 23.405, 23.41, 23.415, 23.42, 23.425, 23.43, 23.435, 23.44, 23.445, 23.45, 23.455000000000002, 23.46, 23.465, 23.47, 23.475, 23.48, 23.485, 23.490000000000002, 23.495, 23.5, 23.505, 23.51, 23.515, 23.52, 23.525000000000002, 23.53, 23.535, 23.54, 23.545, 23.55, 23.555, 23.56, 23.565, 23.57, 23.575, 23.580000000000002, 23.585, 23.59, 23.595, 23.6, 23.605, 23.61, 23.615000000000002, 23.62, 23.625, 23.63, 23.635, 23.64, 23.645, 23.650000000000002, 23.655, 23.66, 23.665, 23.67, 23.675, 23.68, 23.685, 23.69, 23.695, 23.7, 23.705000000000002, 23.71, 23.715, 23.72, 23.725, 23.73, 23.735, 23.740000000000002, 23.745, 23.75, 23.755, 23.76, 23.765, 23.77, 23.775000000000002, 23.78, 23.785, 23.79, 23.795, 23.8, 23.805, 23.81, 23.815, 23.82, 23.825, 23.830000000000002, 23.835, 23.84, 23.845, 23.85, 23.855, 23.86, 23.865000000000002, 23.87, 23.875, 23.88, 23.885, 23.89, 23.895, 23.900000000000002, 23.905, 23.91, 23.915, 23.92, 23.925, 23.93, 23.935000000000002, 23.94, 23.945, 23.95, 23.955000000000002, 23.96, 23.965, 23.97, 23.975, 23.98, 23.985, 23.990000000000002, 23.995, 24.0, 24.005, 24.01, 24.015, 24.02, 24.025000000000002, 24.03, 24.035, 24.04, 24.045, 24.05, 24.055, 24.060000000000002, 24.065, 24.07, 24.075, 24.080000000000002, 24.085, 24.09, 24.095, 24.1, 24.105, 24.11, 24.115000000000002, 24.12, 24.125, 24.13, 24.135, 24.14, 24.145, 24.150000000000002, 24.155, 24.16, 24.165, 24.17, 24.175, 24.18, 24.185000000000002, 24.19, 24.195, 24.2, 24.205000000000002, 24.21, 24.215, 24.22, 24.225, 24.23, 24.235, 24.240000000000002, 24.245, 24.25, 24.255, 24.26, 24.265, 24.27, 24.275000000000002, 24.28, 24.285, 24.29, 24.295, 24.3, 24.305, 24.310000000000002, 24.315, 24.32, 24.325, 24.330000000000002, 24.335, 24.34, 24.345, 24.35, 24.355, 24.36, 24.365000000000002, 24.37, 24.375, 24.38, 24.385, 24.39, 24.395, 24.400000000000002, 24.405, 24.41, 24.415, 24.42, 24.425, 24.43, 24.435000000000002, 24.44, 24.445, 24.45, 24.455000000000002, 24.46, 24.465, 24.47, 24.475, 24.48, 24.485, 24.490000000000002, 24.495, 24.5, 24.505, 24.51, 24.515, 24.52, 24.525000000000002, 24.53, 24.535, 24.54, 24.545, 24.55, 24.555, 24.560000000000002, 24.565, 24.57, 24.575, 24.580000000000002, 24.585, 24.59, 24.595, 24.6, 24.605, 24.61, 24.615000000000002, 24.62, 24.625, 24.63, 24.635, 24.64, 24.645, 24.650000000000002, 24.655, 24.66, 24.665, 24.67, 24.675, 24.68, 24.685000000000002, 24.69, 24.695, 24.7, 24.705000000000002, 24.71, 24.715, 24.72, 24.725, 24.73, 24.735, 24.740000000000002, 24.745, 24.75, 24.755, 24.76, 24.765, 24.77, 24.775000000000002, 24.78, 24.785, 24.79, 24.795, 24.8, 24.805, 24.810000000000002, 24.815, 24.82, 24.825, 24.830000000000002, 24.835, 24.84, 24.845, 24.85, 24.855, 24.86, 24.865000000000002, 24.87, 24.875, 24.88, 24.885, 24.89, 24.895, 24.900000000000002, 24.905, 24.91, 24.915, 24.92, 24.925, 24.93, 24.935000000000002, 24.94, 24.945, 24.95, 24.955000000000002, 24.96, 24.965, 24.97, 24.975, 24.98, 24.985, 24.990000000000002, 24.995, 25.0, 25.005, 25.01, 25.015, 25.02, 25.025000000000002, 25.03, 25.035, 25.04, 25.045, 25.05, 25.055, 25.060000000000002, 25.065, 25.07, 25.075, 25.080000000000002, 25.085, 25.09, 25.095, 25.1, 25.105, 25.11, 25.115000000000002, 25.12, 25.125, 25.13, 25.135, 25.14, 25.145, 25.150000000000002, 25.155, 25.16, 25.165, 25.17, 25.175, 25.18, 25.185000000000002, 25.19, 25.195, 25.2, 25.205000000000002, 25.21, 25.215, 25.22, 25.225, 25.23, 25.235, 25.240000000000002, 25.245, 25.25, 25.255, 25.26, 25.265, 25.27, 25.275000000000002, 25.28, 25.285, 25.29, 25.295, 25.3, 25.305, 25.310000000000002, 25.315, 25.32, 25.325, 25.330000000000002, 25.335, 25.34, 25.345, 25.35, 25.355, 25.36, 25.365000000000002, 25.37, 25.375, 25.38, 25.385, 25.39, 25.395, 25.400000000000002, 25.405, 25.41, 25.415, 25.42, 25.425, 25.43, 25.435000000000002, 25.44, 25.445, 25.45, 25.455000000000002, 25.46, 25.465, 25.47, 25.475, 25.48, 25.485, 25.490000000000002, 25.495, 25.5, 25.505, 25.51, 25.515, 25.52, 25.525000000000002, 25.53, 25.535, 25.54, 25.545, 25.55, 25.555, 25.560000000000002, 25.565, 25.57, 25.575, 25.580000000000002, 25.585, 25.59, 25.595, 25.6, 25.605, 25.61, 25.615000000000002, 25.62, 25.625, 25.63, 25.635, 25.64, 25.645, 25.650000000000002, 25.655, 25.66, 25.665, 25.67, 25.675, 25.68, 25.685000000000002, 25.69, 25.695, 25.7, 25.705000000000002, 25.71, 25.715, 25.72, 25.725, 25.73, 25.735, 25.740000000000002, 25.745, 25.75, 25.755, 25.76, 25.765, 25.77, 25.775000000000002, 25.78, 25.785, 25.79, 25.795, 25.8, 25.805, 25.810000000000002, 25.815, 25.82, 25.825, 25.830000000000002, 25.835, 25.84, 25.845, 25.85, 25.855, 25.86, 25.865000000000002, 25.87, 25.875, 25.88, 25.885, 25.89, 25.895, 25.900000000000002, 25.905, 25.91, 25.915, 25.92, 25.925, 25.93, 25.935000000000002, 25.94, 25.945, 25.95, 25.955000000000002, 25.96, 25.965, 25.97, 25.975, 25.98, 25.985, 25.990000000000002, 25.995, 26.0, 26.005, 26.01, 26.015, 26.02, 26.025000000000002, 26.03, 26.035, 26.04, 26.045, 26.05, 26.055, 26.060000000000002, 26.065, 26.07, 26.075, 26.080000000000002, 26.085, 26.09, 26.095, 26.1, 26.105, 26.11, 26.115000000000002, 26.12, 26.125, 26.13, 26.135, 26.14, 26.145, 26.150000000000002, 26.155, 26.16, 26.165, 26.17, 26.175, 26.18, 26.185000000000002, 26.19, 26.195, 26.2, 26.205000000000002, 26.21, 26.215, 26.22, 26.225, 26.23, 26.235, 26.240000000000002, 26.245, 26.25, 26.255, 26.26, 26.265, 26.27, 26.275000000000002, 26.28, 26.285, 26.29, 26.295, 26.3, 26.305, 26.310000000000002, 26.315, 26.32, 26.325, 26.330000000000002, 26.335, 26.34, 26.345, 26.35, 26.355, 26.36, 26.365000000000002, 26.37, 26.375, 26.38, 26.385, 26.39, 26.395, 26.400000000000002, 26.405, 26.41, 26.415, 26.42, 26.425, 26.43, 26.435000000000002, 26.44, 26.445, 26.45, 26.455000000000002, 26.46, 26.465, 26.47, 26.475, 26.48, 26.485, 26.490000000000002, 26.495, 26.5, 26.505, 26.51, 26.515, 26.52, 26.525000000000002, 26.53, 26.535, 26.54, 26.545, 26.55, 26.555, 26.560000000000002, 26.565, 26.57, 26.575, 26.580000000000002, 26.585, 26.59, 26.595, 26.6, 26.605, 26.61, 26.615000000000002, 26.62, 26.625, 26.63, 26.635, 26.64, 26.645, 26.650000000000002, 26.655, 26.66, 26.665, 26.67, 26.675, 26.68, 26.685000000000002, 26.69, 26.695, 26.7, 26.705000000000002, 26.71, 26.715, 26.72, 26.725, 26.73, 26.735, 26.740000000000002, 26.745, 26.75, 26.755, 26.76, 26.765, 26.77, 26.775000000000002, 26.78, 26.785, 26.79, 26.795, 26.8, 26.805, 26.810000000000002, 26.815, 26.82, 26.825, 26.830000000000002, 26.835, 26.84, 26.845, 26.85, 26.855, 26.86, 26.865000000000002, 26.87, 26.875, 26.88, 26.885, 26.89, 26.895, 26.900000000000002, 26.905, 26.91, 26.915, 26.92, 26.925, 26.93, 26.935000000000002, 26.94, 26.945, 26.95, 26.955000000000002, 26.96, 26.965, 26.97, 26.975, 26.98, 26.985, 26.990000000000002, 26.995, 27.0, 27.005, 27.01, 27.015, 27.02, 27.025000000000002, 27.03, 27.035, 27.04, 27.045, 27.05, 27.055, 27.060000000000002, 27.065, 27.07, 27.075, 27.080000000000002, 27.085, 27.09, 27.095, 27.1, 27.105, 27.11, 27.115000000000002, 27.12, 27.125, 27.13, 27.135, 27.14, 27.145, 27.150000000000002, 27.155, 27.16, 27.165, 27.17, 27.175, 27.18, 27.185000000000002, 27.19, 27.195, 27.2, 27.205000000000002, 27.21, 27.215, 27.22, 27.225, 27.23, 27.235, 27.240000000000002, 27.245, 27.25, 27.255, 27.26, 27.265, 27.27, 27.275000000000002, 27.28, 27.285, 27.29, 27.295, 27.3, 27.305, 27.310000000000002, 27.315, 27.32, 27.325, 27.330000000000002, 27.335, 27.34, 27.345, 27.35, 27.355, 27.36, 27.365000000000002, 27.37, 27.375, 27.38, 27.385, 27.39, 27.395, 27.400000000000002, 27.405, 27.41, 27.415, 27.42, 27.425, 27.43, 27.435000000000002, 27.44, 27.445, 27.45, 27.455000000000002, 27.46, 27.465, 27.47, 27.475, 27.48, 27.485, 27.490000000000002, 27.495, 27.5, 27.505, 27.51, 27.515, 27.52, 27.525000000000002, 27.53, 27.535, 27.54, 27.545, 27.55, 27.555, 27.560000000000002, 27.565, 27.57, 27.575, 27.580000000000002, 27.585, 27.59, 27.595, 27.6, 27.605, 27.61, 27.615000000000002, 27.62, 27.625, 27.63, 27.635, 27.64, 27.645, 27.650000000000002, 27.655, 27.66, 27.665, 27.67, 27.675, 27.68, 27.685000000000002, 27.69, 27.695, 27.7, 27.705000000000002, 27.71, 27.715, 27.72, 27.725, 27.73, 27.735, 27.740000000000002, 27.745, 27.75, 27.755, 27.76, 27.765, 27.77, 27.775000000000002, 27.78, 27.785, 27.79, 27.795, 27.8, 27.805, 27.810000000000002, 27.815, 27.82, 27.825, 27.830000000000002, 27.835, 27.84, 27.845, 27.85, 27.855, 27.86, 27.865000000000002, 27.87, 27.875, 27.88, 27.885, 27.89, 27.895, 27.900000000000002, 27.905, 27.91, 27.915, 27.92, 27.925, 27.93, 27.935000000000002, 27.94, 27.945, 27.95, 27.955000000000002, 27.96, 27.965, 27.97, 27.975, 27.98, 27.985, 27.990000000000002, 27.995, 28.0, 28.005, 28.01, 28.015, 28.02, 28.025000000000002, 28.03, 28.035, 28.04, 28.045, 28.05, 28.055, 28.060000000000002, 28.065, 28.07, 28.075, 28.080000000000002, 28.085, 28.09, 28.095, 28.1, 28.105, 28.11, 28.115000000000002, 28.12, 28.125, 28.13, 28.135, 28.14, 28.145, 28.150000000000002, 28.155, 28.16, 28.165, 28.17, 28.175, 28.18, 28.185000000000002, 28.19, 28.195, 28.2, 28.205000000000002, 28.21, 28.215, 28.22, 28.225, 28.23, 28.235, 28.240000000000002, 28.245, 28.25, 28.255, 28.26, 28.265, 28.27, 28.275000000000002, 28.28, 28.285, 28.29, 28.295, 28.3, 28.305, 28.310000000000002, 28.315, 28.32, 28.325, 28.330000000000002, 28.335, 28.34, 28.345, 28.35, 28.355, 28.36, 28.365000000000002, 28.37, 28.375, 28.38, 28.385, 28.39, 28.395, 28.400000000000002, 28.405, 28.41, 28.415, 28.42, 28.425, 28.43, 28.435000000000002, 28.44, 28.445, 28.45, 28.455000000000002, 28.46, 28.465, 28.47, 28.475, 28.48, 28.485, 28.490000000000002, 28.495, 28.5, 28.505, 28.51, 28.515, 28.52, 28.525000000000002, 28.53, 28.535, 28.54, 28.545, 28.55, 28.555, 28.560000000000002, 28.565, 28.57, 28.575, 28.580000000000002, 28.585, 28.59, 28.595, 28.6, 28.605, 28.61, 28.615000000000002, 28.62, 28.625, 28.63, 28.635, 28.64, 28.645, 28.650000000000002, 28.655, 28.66, 28.665, 28.67, 28.675, 28.68, 28.685000000000002, 28.69, 28.695, 28.7, 28.705000000000002, 28.71, 28.715, 28.72, 28.725, 28.73, 28.735, 28.740000000000002, 28.745, 28.75, 28.755, 28.76, 28.765, 28.77, 28.775000000000002, 28.78, 28.785, 28.79, 28.795, 28.8, 28.805, 28.810000000000002, 28.815, 28.82, 28.825, 28.830000000000002, 28.835, 28.84, 28.845, 28.85, 28.855, 28.86, 28.865000000000002, 28.87, 28.875, 28.88, 28.885, 28.89, 28.895, 28.900000000000002, 28.905, 28.91, 28.915, 28.92, 28.925, 28.93, 28.935000000000002, 28.94, 28.945, 28.95, 28.955000000000002, 28.96, 28.965, 28.97, 28.975, 28.98, 28.985, 28.990000000000002, 28.995, 29.0, 29.005, 29.01, 29.015, 29.02, 29.025000000000002, 29.03, 29.035, 29.04, 29.045, 29.05, 29.055, 29.060000000000002, 29.065, 29.07, 29.075, 29.080000000000002, 29.085, 29.09, 29.095, 29.1, 29.105, 29.11, 29.115000000000002, 29.12, 29.125, 29.13, 29.135, 29.14, 29.145, 29.150000000000002, 29.155, 29.16, 29.165, 29.17, 29.175, 29.18, 29.185000000000002, 29.19, 29.195, 29.2, 29.205000000000002, 29.21, 29.215, 29.22, 29.225, 29.23, 29.235, 29.240000000000002, 29.245, 29.25, 29.255, 29.26, 29.265, 29.27, 29.275000000000002, 29.28, 29.285, 29.29, 29.295, 29.3, 29.305, 29.310000000000002, 29.315, 29.32, 29.325, 29.330000000000002, 29.335, 29.34, 29.345, 29.35, 29.355, 29.36, 29.365000000000002, 29.37, 29.375, 29.38, 29.385, 29.39, 29.395, 29.400000000000002, 29.405, 29.41, 29.415, 29.42, 29.425, 29.43, 29.435000000000002, 29.44, 29.445, 29.45, 29.455000000000002, 29.46, 29.465, 29.47, 29.475, 29.48, 29.485, 29.490000000000002, 29.495, 29.5, 29.505, 29.51, 29.515, 29.52, 29.525000000000002, 29.53, 29.535, 29.54, 29.545, 29.55, 29.555, 29.560000000000002, 29.565, 29.57, 29.575, 29.580000000000002, 29.585, 29.59, 29.595, 29.6, 29.605, 29.61, 29.615000000000002, 29.62, 29.625, 29.63, 29.635, 29.64, 29.645, 29.650000000000002, 29.655, 29.66, 29.665, 29.67, 29.675, 29.68, 29.685000000000002, 29.69, 29.695, 29.7, 29.705000000000002, 29.71, 29.715, 29.72, 29.725, 29.73, 29.735, 29.740000000000002, 29.745, 29.75, 29.755, 29.76, 29.765, 29.77, 29.775000000000002, 29.78, 29.785, 29.79, 29.795, 29.8, 29.805, 29.810000000000002, 29.815, 29.82, 29.825, 29.830000000000002, 29.835, 29.84, 29.845, 29.85, 29.855, 29.86, 29.865000000000002, 29.87, 29.875, 29.88, 29.885, 29.89, 29.895, 29.900000000000002, 29.905, 29.91, 29.915, 29.92, 29.925, 29.93, 29.935000000000002, 29.94, 29.945, 29.95, 29.955000000000002, 29.96, 29.965, 29.97, 29.975, 29.98, 29.985, 29.990000000000002, 29.995, 30.0, 30.005, 30.01, 30.015, 30.02, 30.025000000000002, 30.03, 30.035, 30.04, 30.045, 30.05, 30.055, 30.060000000000002, 30.065, 30.07, 30.075, 30.080000000000002, 30.085, 30.09, 30.095, 30.1, 30.105, 30.11, 30.115000000000002, 30.12, 30.125, 30.13, 30.135, 30.14, 30.145, 30.150000000000002, 30.155, 30.16, 30.165, 30.17, 30.175, 30.18, 30.185000000000002, 30.19, 30.195, 30.2, 30.205000000000002, 30.21, 30.215, 30.22, 30.225, 30.23, 30.235, 30.240000000000002, 30.245, 30.25, 30.255, 30.26, 30.265, 30.27, 30.275000000000002, 30.28, 30.285, 30.29, 30.295, 30.3, 30.305, 30.310000000000002, 30.315, 30.32, 30.325, 30.330000000000002, 30.335, 30.34, 30.345, 30.35, 30.355, 30.36, 30.365000000000002, 30.37, 30.375, 30.38, 30.385, 30.39, 30.395, 30.400000000000002, 30.405, 30.41, 30.415, 30.42, 30.425, 30.43, 30.435000000000002, 30.44, 30.445, 30.45, 30.455000000000002, 30.46, 30.465, 30.47, 30.475, 30.48, 30.485, 30.490000000000002, 30.495, 30.5, 30.505, 30.51, 30.515, 30.52, 30.525000000000002, 30.53, 30.535, 30.54, 30.545, 30.55, 30.555, 30.560000000000002, 30.565, 30.57, 30.575, 30.580000000000002, 30.585, 30.59, 30.595, 30.6, 30.605, 30.61, 30.615000000000002, 30.62, 30.625, 30.63, 30.635, 30.64, 30.645, 30.650000000000002, 30.655, 30.66, 30.665, 30.67, 30.675, 30.68, 30.685000000000002, 30.69, 30.695, 30.7, 30.705000000000002, 30.71, 30.715, 30.72, 30.725, 30.73, 30.735, 30.740000000000002, 30.745, 30.75, 30.755, 30.76, 30.765, 30.77, 30.775000000000002, 30.78, 30.785, 30.79, 30.795, 30.8, 30.805, 30.810000000000002, 30.815, 30.82, 30.825, 30.830000000000002, 30.835, 30.84, 30.845000000000002, 30.85, 30.855, 30.86, 30.865000000000002, 30.87, 30.875, 30.88, 30.885, 30.89, 30.895, 30.900000000000002, 30.905, 30.91, 30.915, 30.92, 30.925, 30.93, 30.935000000000002, 30.94, 30.945, 30.95, 30.955000000000002, 30.96, 30.965, 30.970000000000002, 30.975, 30.98, 30.985, 30.990000000000002, 30.995, 31.0, 31.005, 31.01, 31.015, 31.02, 31.025000000000002, 31.03, 31.035, 31.04, 31.045, 31.05, 31.055, 31.060000000000002, 31.065, 31.07, 31.075, 31.080000000000002, 31.085, 31.09, 31.095000000000002, 31.1, 31.105, 31.11, 31.115000000000002, 31.12, 31.125, 31.13, 31.135, 31.14, 31.145, 31.150000000000002, 31.155, 31.16, 31.165, 31.17, 31.175, 31.18, 31.185000000000002, 31.19, 31.195, 31.2, 31.205000000000002, 31.21, 31.215, 31.220000000000002, 31.225, 31.23, 31.235, 31.240000000000002, 31.245, 31.25, 31.255, 31.26, 31.265, 31.27, 31.275000000000002, 31.28, 31.285, 31.29, 31.295, 31.3, 31.305, 31.310000000000002, 31.315, 31.32, 31.325, 31.330000000000002, 31.335, 31.34, 31.345000000000002, 31.35, 31.355, 31.36, 31.365000000000002, 31.37, 31.375, 31.38, 31.385, 31.39, 31.395, 31.400000000000002, 31.405, 31.41, 31.415, 31.42, 31.425, 31.43, 31.435000000000002, 31.44, 31.445, 31.45, 31.455000000000002, 31.46, 31.465, 31.470000000000002, 31.475, 31.48, 31.485, 31.490000000000002, 31.495, 31.5, 31.505, 31.51, 31.515, 31.52, 31.525000000000002, 31.53, 31.535, 31.54, 31.545, 31.55, 31.555, 31.560000000000002, 31.565, 31.57, 31.575, 31.580000000000002, 31.585, 31.59, 31.595000000000002, 31.6, 31.605, 31.61, 31.615000000000002, 31.62, 31.625, 31.63, 31.635, 31.64, 31.645, 31.650000000000002, 31.655, 31.66, 31.665, 31.67, 31.675, 31.68, 31.685000000000002, 31.69, 31.695, 31.7, 31.705000000000002, 31.71, 31.715, 31.720000000000002, 31.725, 31.73, 31.735, 31.740000000000002, 31.745, 31.75, 31.755, 31.76, 31.765, 31.77, 31.775000000000002, 31.78, 31.785, 31.79, 31.795, 31.8, 31.805, 31.810000000000002, 31.815, 31.82, 31.825, 31.830000000000002, 31.835, 31.84, 31.845000000000002, 31.85, 31.855, 31.86, 31.865000000000002, 31.87, 31.875, 31.88, 31.885, 31.89, 31.895, 31.900000000000002, 31.905, 31.91, 31.915, 31.92, 31.925, 31.93, 31.935000000000002, 31.94, 31.945, 31.95, 31.955000000000002, 31.96, 31.965, 31.970000000000002, 31.975, 31.98, 31.985, 31.990000000000002, 31.995, 32.0, 32.005, 32.01, 32.015, 32.02, 32.025, 32.03, 32.035000000000004, 32.04, 32.045, 32.05, 32.055, 32.06, 32.065, 32.07, 32.075, 32.08, 32.085, 32.09, 32.095, 32.1, 32.105000000000004, 32.11, 32.115, 32.12, 32.125, 32.13, 32.135, 32.14, 32.145, 32.15, 32.155, 32.160000000000004, 32.165, 32.17, 32.175, 32.18, 32.185, 32.19, 32.195, 32.2, 32.205, 32.21, 32.215, 32.22, 32.225, 32.230000000000004, 32.235, 32.24, 32.245, 32.25, 32.255, 32.26, 32.265, 32.27, 32.275, 32.28, 32.285000000000004, 32.29, 32.295, 32.3, 32.305, 32.31, 32.315, 32.32, 32.325, 32.33, 32.335, 32.34, 32.345, 32.35, 32.355000000000004, 32.36, 32.365, 32.37, 32.375, 32.38, 32.385, 32.39, 32.395, 32.4, 32.405, 32.410000000000004, 32.415, 32.42, 32.425, 32.43, 32.435, 32.44, 32.445, 32.45, 32.455, 32.46, 32.465, 32.47, 32.475, 32.480000000000004, 32.485, 32.49, 32.495, 32.5, 32.505, 32.51, 32.515, 32.52, 32.525, 32.53, 32.535000000000004, 32.54, 32.545, 32.55, 32.555, 32.56, 32.565, 32.57, 32.575, 32.58, 32.585, 32.59, 32.595, 32.6, 32.605000000000004, 32.61, 32.615, 32.62, 32.625, 32.63, 32.635, 32.64, 32.645, 32.65, 32.655, 32.660000000000004, 32.665, 32.67, 32.675, 32.68, 32.685, 32.69, 32.695, 32.7, 32.705, 32.71, 32.715, 32.72, 32.725, 32.730000000000004, 32.735, 32.74, 32.745, 32.75, 32.755, 32.76, 32.765, 32.77, 32.775, 32.78, 32.785000000000004, 32.79, 32.795, 32.8, 32.805, 32.81, 32.815, 32.82, 32.825, 32.83, 32.835, 32.84, 32.845, 32.85, 32.855000000000004, 32.86, 32.865, 32.87, 32.875, 32.88, 32.885, 32.89, 32.895, 32.9, 32.905, 32.910000000000004, 32.915, 32.92, 32.925, 32.93, 32.935, 32.94, 32.945, 32.95, 32.955, 32.96, 32.965, 32.97, 32.975, 32.980000000000004, 32.985, 32.99, 32.995, 33.0, 33.005, 33.01, 33.015, 33.02, 33.025, 33.03, 33.035000000000004, 33.04, 33.045, 33.05, 33.055, 33.06, 33.065, 33.07, 33.075, 33.08, 33.085, 33.09, 33.095, 33.1, 33.105000000000004, 33.11, 33.115, 33.12, 33.125, 33.13, 33.135, 33.14, 33.145, 33.15, 33.155, 33.160000000000004, 33.165, 33.17, 33.175, 33.18, 33.185, 33.19, 33.195, 33.2, 33.205, 33.21, 33.215, 33.22, 33.225, 33.230000000000004, 33.235, 33.24, 33.245, 33.25, 33.255, 33.26, 33.265, 33.27, 33.275, 33.28, 33.285000000000004, 33.29, 33.295, 33.3, 33.305, 33.31, 33.315, 33.32, 33.325, 33.33, 33.335, 33.34, 33.345, 33.35, 33.355000000000004, 33.36, 33.365, 33.37, 33.375, 33.38, 33.385, 33.39, 33.395, 33.4, 33.405, 33.410000000000004, 33.415, 33.42, 33.425, 33.43, 33.435, 33.44, 33.445, 33.45, 33.455, 33.46, 33.465, 33.47, 33.475, 33.480000000000004, 33.485, 33.49, 33.495, 33.5, 33.505, 33.51, 33.515, 33.52, 33.525, 33.53, 33.535000000000004, 33.54, 33.545, 33.55, 33.555, 33.56, 33.565, 33.57, 33.575, 33.58, 33.585, 33.59, 33.595, 33.6, 33.605000000000004, 33.61, 33.615, 33.62, 33.625, 33.63, 33.635, 33.64, 33.645, 33.65, 33.655, 33.660000000000004, 33.665, 33.67, 33.675, 33.68, 33.685, 33.69, 33.695, 33.7, 33.705, 33.71, 33.715, 33.72, 33.725, 33.730000000000004, 33.735, 33.74, 33.745, 33.75, 33.755, 33.76, 33.765, 33.77, 33.775, 33.78, 33.785000000000004, 33.79, 33.795, 33.8, 33.805, 33.81, 33.815, 33.82, 33.825, 33.83, 33.835, 33.84, 33.845, 33.85, 33.855000000000004, 33.86, 33.865, 33.87, 33.875, 33.88, 33.885, 33.89, 33.895, 33.9, 33.905, 33.910000000000004, 33.915, 33.92, 33.925, 33.93, 33.935, 33.94, 33.945, 33.95, 33.955, 33.96, 33.965, 33.97, 33.975, 33.980000000000004, 33.985, 33.99, 33.995, 34.0, 34.005, 34.01, 34.015, 34.02, 34.025, 34.03, 34.035000000000004, 34.04, 34.045, 34.05, 34.055, 34.06, 34.065, 34.07, 34.075, 34.08, 34.085, 34.09, 34.095, 34.1, 34.105000000000004, 34.11, 34.115, 34.12, 34.125, 34.13, 34.135, 34.14, 34.145, 34.15, 34.155, 34.160000000000004, 34.165, 34.17, 34.175000000000004, 34.18, 34.185, 34.19, 34.195, 34.2, 34.205, 34.21, 34.215, 34.22, 34.225, 34.230000000000004, 34.235, 34.24, 34.245, 34.25, 34.255, 34.26, 34.265, 34.27, 34.275, 34.28, 34.285000000000004, 34.29, 34.295, 34.300000000000004, 34.305, 34.31, 34.315, 34.32, 34.325, 34.33, 34.335, 34.34, 34.345, 34.35, 34.355000000000004, 34.36, 34.365, 34.37, 34.375, 34.38, 34.385, 34.39, 34.395, 34.4, 34.405, 34.410000000000004, 34.415, 34.42, 34.425000000000004, 34.43, 34.435, 34.44, 34.445, 34.45, 34.455, 34.46, 34.465, 34.47, 34.475, 34.480000000000004, 34.485, 34.49, 34.495, 34.5, 34.505, 34.51, 34.515, 34.52, 34.525, 34.53, 34.535000000000004, 34.54, 34.545, 34.550000000000004, 34.555, 34.56, 34.565, 34.57, 34.575, 34.58, 34.585, 34.59, 34.595, 34.6, 34.605000000000004, 34.61, 34.615, 34.62, 34.625, 34.63, 34.635, 34.64, 34.645, 34.65, 34.655, 34.660000000000004, 34.665, 34.67, 34.675000000000004, 34.68, 34.685, 34.69, 34.695, 34.7, 34.705, 34.71, 34.715, 34.72, 34.725, 34.730000000000004, 34.735, 34.74, 34.745, 34.75, 34.755, 34.76, 34.765, 34.77, 34.775, 34.78, 34.785000000000004, 34.79, 34.795, 34.800000000000004, 34.805, 34.81, 34.815, 34.82, 34.825, 34.83, 34.835, 34.84, 34.845, 34.85, 34.855000000000004, 34.86, 34.865, 34.87, 34.875, 34.88, 34.885, 34.89, 34.895, 34.9, 34.905, 34.910000000000004, 34.915, 34.92, 34.925000000000004, 34.93, 34.935, 34.94, 34.945, 34.95, 34.955, 34.96, 34.965, 34.97, 34.975, 34.980000000000004, 34.985, 34.99, 34.995, 35.0, 35.005, 35.01, 35.015, 35.02, 35.025, 35.03, 35.035000000000004, 35.04, 35.045, 35.050000000000004, 35.055, 35.06, 35.065, 35.07, 35.075, 35.08, 35.085, 35.09, 35.095, 35.1, 35.105000000000004, 35.11, 35.115, 35.12, 35.125, 35.13, 35.135, 35.14, 35.145, 35.15, 35.155, 35.160000000000004, 35.165, 35.17, 35.175000000000004, 35.18, 35.185, 35.19, 35.195, 35.2, 35.205, 35.21, 35.215, 35.22, 35.225, 35.230000000000004, 35.235, 35.24, 35.245, 35.25, 35.255, 35.26, 35.265, 35.27, 35.275, 35.28, 35.285000000000004, 35.29, 35.295, 35.300000000000004, 35.305, 35.31, 35.315, 35.32, 35.325, 35.33, 35.335, 35.34, 35.345, 35.35, 35.355000000000004, 35.36, 35.365, 35.37, 35.375, 35.38, 35.385, 35.39, 35.395, 35.4, 35.405, 35.410000000000004, 35.415, 35.42, 35.425000000000004, 35.43, 35.435, 35.44, 35.445, 35.45, 35.455, 35.46, 35.465, 35.47, 35.475, 35.480000000000004, 35.485, 35.49, 35.495, 35.5, 35.505, 35.51, 35.515, 35.52, 35.525, 35.53, 35.535000000000004, 35.54, 35.545, 35.550000000000004, 35.555, 35.56, 35.565, 35.57, 35.575, 35.58, 35.585, 35.59, 35.595, 35.6, 35.605000000000004, 35.61, 35.615, 35.62, 35.625, 35.63, 35.635, 35.64, 35.645, 35.65, 35.655, 35.660000000000004, 35.665, 35.67, 35.675000000000004, 35.68, 35.685, 35.69, 35.695, 35.7, 35.705, 35.71, 35.715, 35.72, 35.725, 35.730000000000004, 35.735, 35.74, 35.745, 35.75, 35.755, 35.76, 35.765, 35.77, 35.775, 35.78, 35.785000000000004, 35.79, 35.795, 35.800000000000004, 35.805, 35.81, 35.815, 35.82, 35.825, 35.83, 35.835, 35.84, 35.845, 35.85, 35.855000000000004, 35.86, 35.865, 35.87, 35.875, 35.88, 35.885, 35.89, 35.895, 35.9, 35.905, 35.910000000000004, 35.915, 35.92, 35.925000000000004, 35.93, 35.935, 35.94, 35.945, 35.95, 35.955, 35.96, 35.965, 35.97, 35.975, 35.980000000000004, 35.985, 35.99, 35.995, 36.0, 36.005, 36.01, 36.015, 36.02, 36.025, 36.03, 36.035000000000004, 36.04, 36.045, 36.050000000000004, 36.055, 36.06, 36.065, 36.07, 36.075, 36.08, 36.085, 36.09, 36.095, 36.1, 36.105000000000004, 36.11, 36.115, 36.12, 36.125, 36.13, 36.135, 36.14, 36.145, 36.15, 36.155, 36.160000000000004, 36.165, 36.17, 36.175000000000004, 36.18, 36.185, 36.19, 36.195, 36.2, 36.205, 36.21, 36.215, 36.22, 36.225, 36.230000000000004, 36.235, 36.24, 36.245, 36.25, 36.255, 36.26, 36.265, 36.27, 36.275, 36.28, 36.285000000000004, 36.29, 36.295, 36.300000000000004, 36.305, 36.31, 36.315, 36.32, 36.325, 36.33, 36.335, 36.34, 36.345, 36.35, 36.355000000000004, 36.36, 36.365, 36.37, 36.375, 36.38, 36.385, 36.39, 36.395, 36.4, 36.405, 36.410000000000004, 36.415, 36.42, 36.425000000000004, 36.43, 36.435, 36.44, 36.445, 36.45, 36.455, 36.46, 36.465, 36.47, 36.475, 36.480000000000004, 36.485, 36.49, 36.495, 36.5, 36.505, 36.51, 36.515, 36.52, 36.525, 36.53, 36.535000000000004, 36.54, 36.545, 36.550000000000004, 36.555, 36.56, 36.565, 36.57, 36.575, 36.58, 36.585, 36.59, 36.595, 36.6, 36.605000000000004, 36.61, 36.615, 36.62, 36.625, 36.63, 36.635, 36.64, 36.645, 36.65, 36.655, 36.660000000000004, 36.665, 36.67, 36.675000000000004, 36.68, 36.685, 36.69, 36.695, 36.7, 36.705, 36.71, 36.715, 36.72, 36.725, 36.730000000000004, 36.735, 36.74, 36.745, 36.75, 36.755, 36.76, 36.765, 36.77, 36.775, 36.78, 36.785000000000004, 36.79, 36.795, 36.800000000000004, 36.805, 36.81, 36.815, 36.82, 36.825, 36.83, 36.835, 36.84, 36.845, 36.85, 36.855000000000004, 36.86, 36.865, 36.87, 36.875, 36.88, 36.885, 36.89, 36.895, 36.9, 36.905, 36.910000000000004, 36.915, 36.92, 36.925000000000004, 36.93, 36.935, 36.94, 36.945, 36.95, 36.955, 36.96, 36.965, 36.97, 36.975, 36.980000000000004, 36.985, 36.99, 36.995, 37.0, 37.005, 37.01, 37.015, 37.02, 37.025, 37.03, 37.035000000000004, 37.04, 37.045, 37.050000000000004, 37.055, 37.06, 37.065, 37.07, 37.075, 37.08, 37.085, 37.09, 37.095, 37.1, 37.105000000000004, 37.11, 37.115, 37.12, 37.125, 37.13, 37.135, 37.14, 37.145, 37.15, 37.155, 37.160000000000004, 37.165, 37.17, 37.175000000000004, 37.18, 37.185, 37.19, 37.195, 37.2, 37.205, 37.21, 37.215, 37.22, 37.225, 37.230000000000004, 37.235, 37.24, 37.245, 37.25, 37.255, 37.26, 37.265, 37.27, 37.275, 37.28, 37.285000000000004, 37.29, 37.295, 37.300000000000004, 37.305, 37.31, 37.315, 37.32, 37.325, 37.33, 37.335, 37.34, 37.345, 37.35, 37.355000000000004, 37.36, 37.365, 37.37, 37.375, 37.38, 37.385, 37.39, 37.395, 37.4, 37.405, 37.410000000000004, 37.415, 37.42, 37.425000000000004, 37.43, 37.435, 37.44, 37.445, 37.45, 37.455, 37.46, 37.465, 37.47, 37.475, 37.480000000000004, 37.485, 37.49, 37.495, 37.5, 37.505, 37.51, 37.515, 37.52, 37.525, 37.53, 37.535000000000004, 37.54, 37.545, 37.550000000000004, 37.555, 37.56, 37.565, 37.57, 37.575, 37.58, 37.585, 37.59, 37.595, 37.6, 37.605000000000004, 37.61, 37.615, 37.62, 37.625, 37.63, 37.635, 37.64, 37.645, 37.65, 37.655, 37.660000000000004, 37.665, 37.67, 37.675000000000004, 37.68, 37.685, 37.69, 37.695, 37.7, 37.705, 37.71, 37.715, 37.72, 37.725, 37.730000000000004, 37.735, 37.74, 37.745, 37.75, 37.755, 37.76, 37.765, 37.77, 37.775, 37.78, 37.785000000000004, 37.79, 37.795, 37.800000000000004, 37.805, 37.81, 37.815, 37.82, 37.825, 37.83, 37.835, 37.84, 37.845, 37.85, 37.855000000000004, 37.86, 37.865, 37.87, 37.875, 37.88, 37.885, 37.89, 37.895, 37.9, 37.905, 37.910000000000004, 37.915, 37.92, 37.925000000000004, 37.93, 37.935, 37.94, 37.945, 37.95, 37.955, 37.96, 37.965, 37.97, 37.975, 37.980000000000004, 37.985, 37.99, 37.995, 38.0, 38.005, 38.01, 38.015, 38.02, 38.025, 38.03, 38.035000000000004, 38.04, 38.045, 38.050000000000004, 38.055, 38.06, 38.065, 38.07, 38.075, 38.08, 38.085, 38.09, 38.095, 38.1, 38.105000000000004, 38.11, 38.115, 38.12, 38.125, 38.13, 38.135, 38.14, 38.145, 38.15, 38.155, 38.160000000000004, 38.165, 38.17, 38.175000000000004, 38.18, 38.185, 38.19, 38.195, 38.2, 38.205, 38.21, 38.215, 38.22, 38.225, 38.230000000000004, 38.235, 38.24, 38.245, 38.25, 38.255, 38.26, 38.265, 38.27, 38.275, 38.28, 38.285000000000004, 38.29, 38.295, 38.300000000000004, 38.305, 38.31, 38.315, 38.32, 38.325, 38.33, 38.335, 38.34, 38.345, 38.35, 38.355000000000004, 38.36, 38.365, 38.37, 38.375, 38.38, 38.385, 38.39, 38.395, 38.4, 38.405, 38.410000000000004, 38.415, 38.42, 38.425000000000004, 38.43, 38.435, 38.44, 38.445, 38.45, 38.455, 38.46, 38.465, 38.47, 38.475, 38.480000000000004, 38.485, 38.49, 38.495, 38.5, 38.505, 38.51, 38.515, 38.52, 38.525, 38.53, 38.535000000000004, 38.54, 38.545, 38.550000000000004, 38.555, 38.56, 38.565, 38.57, 38.575, 38.58, 38.585, 38.59, 38.595, 38.6, 38.605000000000004, 38.61, 38.615, 38.62, 38.625, 38.63, 38.635, 38.64, 38.645, 38.65, 38.655, 38.660000000000004, 38.665, 38.67, 38.675000000000004, 38.68, 38.685, 38.69, 38.695, 38.7, 38.705, 38.71, 38.715, 38.72, 38.725, 38.730000000000004, 38.735, 38.74, 38.745, 38.75, 38.755, 38.76, 38.765, 38.77, 38.775, 38.78, 38.785000000000004, 38.79, 38.795, 38.800000000000004, 38.805, 38.81, 38.815, 38.82, 38.825, 38.83, 38.835, 38.84, 38.845, 38.85, 38.855000000000004, 38.86, 38.865, 38.87, 38.875, 38.88, 38.885, 38.89, 38.895, 38.9, 38.905, 38.910000000000004, 38.915, 38.92, 38.925000000000004, 38.93, 38.935, 38.94, 38.945, 38.95, 38.955, 38.96, 38.965, 38.97, 38.975, 38.980000000000004, 38.985, 38.99, 38.995, 39.0, 39.005, 39.01, 39.015, 39.02, 39.025, 39.03, 39.035000000000004, 39.04, 39.045, 39.050000000000004, 39.055, 39.06, 39.065, 39.07, 39.075, 39.08, 39.085, 39.09, 39.095, 39.1, 39.105000000000004, 39.11, 39.115, 39.12, 39.125, 39.13, 39.135, 39.14, 39.145, 39.15, 39.155, 39.160000000000004, 39.165, 39.17, 39.175000000000004, 39.18, 39.185, 39.19, 39.195, 39.2, 39.205, 39.21, 39.215, 39.22, 39.225, 39.230000000000004, 39.235, 39.24, 39.245, 39.25, 39.255, 39.26, 39.265, 39.27, 39.275, 39.28, 39.285000000000004, 39.29, 39.295, 39.300000000000004, 39.305, 39.31, 39.315, 39.32, 39.325, 39.33, 39.335, 39.34, 39.345, 39.35, 39.355000000000004, 39.36, 39.365, 39.37, 39.375, 39.38, 39.385, 39.39, 39.395, 39.4, 39.405, 39.410000000000004, 39.415, 39.42, 39.425000000000004, 39.43, 39.435, 39.44, 39.445, 39.45, 39.455, 39.46, 39.465, 39.47, 39.475, 39.480000000000004, 39.485, 39.49, 39.495, 39.5, 39.505, 39.51, 39.515, 39.52, 39.525, 39.53, 39.535000000000004, 39.54, 39.545, 39.550000000000004, 39.555, 39.56, 39.565, 39.57, 39.575, 39.58, 39.585, 39.59, 39.595, 39.6, 39.605000000000004, 39.61, 39.615, 39.62, 39.625, 39.63, 39.635, 39.64, 39.645, 39.65, 39.655, 39.660000000000004, 39.665, 39.67, 39.675000000000004, 39.68, 39.685, 39.69, 39.695, 39.7, 39.705, 39.71, 39.715, 39.72, 39.725, 39.730000000000004, 39.735, 39.74, 39.745, 39.75, 39.755, 39.76, 39.765, 39.77, 39.775, 39.78, 39.785000000000004, 39.79, 39.795, 39.800000000000004, 39.805, 39.81, 39.815, 39.82, 39.825, 39.83, 39.835, 39.84, 39.845, 39.85, 39.855000000000004, 39.86, 39.865, 39.87, 39.875, 39.88, 39.885, 39.89, 39.895, 39.9, 39.905, 39.910000000000004, 39.915, 39.92, 39.925000000000004, 39.93, 39.935, 39.94, 39.945, 39.95, 39.955, 39.96, 39.965, 39.97, 39.975, 39.980000000000004, 39.985, 39.99, 39.995, 40.0, 40.005, 40.01, 40.015, 40.02, 40.025, 40.03, 40.035000000000004, 40.04, 40.045, 40.050000000000004, 40.055, 40.06, 40.065, 40.07, 40.075, 40.08, 40.085, 40.09, 40.095, 40.1, 40.105000000000004, 40.11, 40.115, 40.12, 40.125, 40.13, 40.135, 40.14, 40.145, 40.15, 40.155, 40.160000000000004, 40.165, 40.17, 40.175000000000004, 40.18, 40.185, 40.19, 40.195, 40.2, 40.205, 40.21, 40.215, 40.22, 40.225, 40.230000000000004, 40.235, 40.24, 40.245, 40.25, 40.255, 40.26, 40.265, 40.27, 40.275, 40.28, 40.285000000000004, 40.29, 40.295, 40.300000000000004, 40.305, 40.31, 40.315, 40.32, 40.325, 40.33, 40.335, 40.34, 40.345, 40.35, 40.355000000000004, 40.36, 40.365, 40.37, 40.375, 40.38, 40.385, 40.39, 40.395, 40.4, 40.405, 40.410000000000004, 40.415, 40.42, 40.425000000000004, 40.43, 40.435, 40.44, 40.445, 40.45, 40.455, 40.46, 40.465, 40.47, 40.475, 40.480000000000004, 40.485, 40.49, 40.495, 40.5, 40.505, 40.51, 40.515, 40.52, 40.525, 40.53, 40.535000000000004, 40.54, 40.545, 40.550000000000004, 40.555, 40.56, 40.565, 40.57, 40.575, 40.58, 40.585, 40.59, 40.595, 40.6, 40.605000000000004, 40.61, 40.615, 40.62, 40.625, 40.63, 40.635, 40.64, 40.645, 40.65, 40.655, 40.660000000000004, 40.665, 40.67, 40.675000000000004, 40.68, 40.685, 40.69, 40.695, 40.7, 40.705, 40.71, 40.715, 40.72, 40.725, 40.730000000000004, 40.735, 40.74, 40.745, 40.75, 40.755, 40.76, 40.765, 40.77, 40.775, 40.78, 40.785000000000004, 40.79, 40.795, 40.800000000000004, 40.805, 40.81, 40.815, 40.82, 40.825, 40.83, 40.835, 40.84, 40.845, 40.85, 40.855000000000004, 40.86, 40.865, 40.87, 40.875, 40.88, 40.885, 40.89, 40.895, 40.9, 40.905, 40.910000000000004, 40.915, 40.92, 40.925000000000004, 40.93, 40.935, 40.94, 40.945, 40.95, 40.955, 40.96, 40.965, 40.97, 40.975, 40.980000000000004, 40.985, 40.99, 40.995, 41.0, 41.005, 41.01, 41.015, 41.02, 41.025, 41.03, 41.035000000000004, 41.04, 41.045, 41.050000000000004, 41.055, 41.06, 41.065, 41.07, 41.075, 41.08, 41.085, 41.09, 41.095, 41.1, 41.105000000000004, 41.11, 41.115, 41.12, 41.125, 41.13, 41.135, 41.14, 41.145, 41.15, 41.155, 41.160000000000004, 41.165, 41.17, 41.175000000000004, 41.18, 41.185, 41.19, 41.195, 41.2, 41.205, 41.21, 41.215, 41.22, 41.225, 41.230000000000004, 41.235, 41.24, 41.245, 41.25, 41.255, 41.26, 41.265, 41.27, 41.275, 41.28, 41.285000000000004, 41.29, 41.295, 41.300000000000004, 41.305, 41.31, 41.315, 41.32, 41.325, 41.33, 41.335, 41.34, 41.345, 41.35, 41.355000000000004, 41.36, 41.365, 41.37, 41.375, 41.38, 41.385, 41.39, 41.395, 41.4, 41.405, 41.410000000000004, 41.415, 41.42, 41.425000000000004, 41.43, 41.435, 41.44, 41.445, 41.45, 41.455, 41.46, 41.465, 41.47, 41.475, 41.480000000000004, 41.485, 41.49, 41.495, 41.5, 41.505, 41.51, 41.515, 41.52, 41.525, 41.53, 41.535000000000004, 41.54, 41.545, 41.550000000000004, 41.555, 41.56, 41.565, 41.57, 41.575, 41.58, 41.585, 41.59, 41.595, 41.6, 41.605000000000004, 41.61, 41.615, 41.62, 41.625, 41.63, 41.635, 41.64, 41.645, 41.65, 41.655, 41.660000000000004, 41.665, 41.67, 41.675000000000004, 41.68, 41.685, 41.69, 41.695, 41.7, 41.705, 41.71, 41.715, 41.72, 41.725, 41.730000000000004, 41.735, 41.74, 41.745, 41.75, 41.755, 41.76, 41.765, 41.77, 41.775, 41.78, 41.785000000000004, 41.79, 41.795, 41.800000000000004, 41.805, 41.81, 41.815, 41.82, 41.825, 41.83, 41.835, 41.84, 41.845, 41.85, 41.855000000000004, 41.86, 41.865, 41.87, 41.875, 41.88, 41.885, 41.89, 41.895, 41.9, 41.905, 41.910000000000004, 41.915, 41.92, 41.925000000000004, 41.93, 41.935, 41.94, 41.945, 41.95, 41.955, 41.96, 41.965, 41.97, 41.975, 41.980000000000004, 41.985, 41.99, 41.995, 42.0, 42.005, 42.01, 42.015, 42.02, 42.025, 42.03, 42.035000000000004, 42.04, 42.045, 42.050000000000004, 42.055, 42.06, 42.065, 42.07, 42.075, 42.08, 42.085, 42.09, 42.095, 42.1, 42.105000000000004, 42.11, 42.115, 42.12, 42.125, 42.13, 42.135, 42.14, 42.145, 42.15, 42.155, 42.160000000000004, 42.165, 42.17, 42.175000000000004, 42.18, 42.185, 42.19, 42.195, 42.2, 42.205, 42.21, 42.215, 42.22, 42.225, 42.230000000000004, 42.235, 42.24, 42.245, 42.25, 42.255, 42.26, 42.265, 42.27, 42.275, 42.28, 42.285000000000004, 42.29, 42.295, 42.300000000000004, 42.305, 42.31, 42.315, 42.32, 42.325, 42.33, 42.335, 42.34, 42.345, 42.35, 42.355000000000004, 42.36, 42.365, 42.37, 42.375, 42.38, 42.385, 42.39, 42.395, 42.4, 42.405, 42.410000000000004, 42.415, 42.42, 42.425000000000004, 42.43, 42.435, 42.44, 42.445, 42.45, 42.455, 42.46, 42.465, 42.47, 42.475, 42.480000000000004, 42.485, 42.49, 42.495, 42.5, 42.505, 42.51, 42.515, 42.52, 42.525, 42.53, 42.535000000000004, 42.54, 42.545, 42.550000000000004, 42.555, 42.56, 42.565, 42.57, 42.575, 42.58, 42.585, 42.59, 42.595, 42.6, 42.605000000000004, 42.61, 42.615, 42.62, 42.625, 42.63, 42.635, 42.64, 42.645, 42.65, 42.655, 42.660000000000004, 42.665, 42.67, 42.675000000000004, 42.68, 42.685, 42.69, 42.695, 42.7, 42.705, 42.71, 42.715, 42.72, 42.725, 42.730000000000004, 42.735, 42.74, 42.745, 42.75, 42.755, 42.76, 42.765, 42.77, 42.775, 42.78, 42.785000000000004, 42.79, 42.795, 42.800000000000004, 42.805, 42.81, 42.815, 42.82, 42.825, 42.83, 42.835, 42.84, 42.845, 42.85, 42.855000000000004, 42.86, 42.865, 42.87, 42.875, 42.88, 42.885, 42.89, 42.895, 42.9, 42.905, 42.910000000000004, 42.915, 42.92, 42.925000000000004, 42.93, 42.935, 42.94, 42.945, 42.95, 42.955, 42.96, 42.965, 42.97, 42.975, 42.980000000000004, 42.985, 42.99, 42.995, 43.0, 43.005, 43.01, 43.015, 43.02, 43.025, 43.03, 43.035000000000004, 43.04, 43.045, 43.050000000000004, 43.055, 43.06, 43.065, 43.07, 43.075, 43.08, 43.085, 43.09, 43.095, 43.1, 43.105000000000004, 43.11, 43.115, 43.12, 43.125, 43.13, 43.135, 43.14, 43.145, 43.15, 43.155, 43.160000000000004, 43.165, 43.17, 43.175000000000004, 43.18, 43.185, 43.19, 43.195, 43.2, 43.205, 43.21, 43.215, 43.22, 43.225, 43.230000000000004, 43.235, 43.24, 43.245, 43.25, 43.255, 43.26, 43.265, 43.27, 43.275, 43.28, 43.285000000000004, 43.29, 43.295, 43.300000000000004, 43.305, 43.31, 43.315, 43.32, 43.325, 43.33, 43.335, 43.34, 43.345, 43.35, 43.355000000000004, 43.36, 43.365, 43.37, 43.375, 43.38, 43.385, 43.39, 43.395, 43.4, 43.405, 43.410000000000004, 43.415, 43.42, 43.425000000000004, 43.43, 43.435, 43.44, 43.445, 43.45, 43.455, 43.46, 43.465, 43.47, 43.475, 43.480000000000004, 43.485, 43.49, 43.495, 43.5, 43.505, 43.51, 43.515, 43.52, 43.525, 43.53, 43.535000000000004, 43.54, 43.545, 43.550000000000004, 43.555, 43.56, 43.565, 43.57, 43.575, 43.58, 43.585, 43.59, 43.595, 43.6, 43.605000000000004, 43.61, 43.615, 43.62, 43.625, 43.63, 43.635, 43.64, 43.645, 43.65, 43.655, 43.660000000000004, 43.665, 43.67, 43.675000000000004, 43.68, 43.685, 43.69, 43.695, 43.7, 43.705, 43.71, 43.715, 43.72, 43.725, 43.730000000000004, 43.735, 43.74, 43.745, 43.75, 43.755, 43.76, 43.765, 43.77, 43.775, 43.78, 43.785000000000004, 43.79, 43.795, 43.800000000000004, 43.805, 43.81, 43.815, 43.82, 43.825, 43.83, 43.835, 43.84, 43.845, 43.85, 43.855000000000004, 43.86, 43.865, 43.87, 43.875, 43.88, 43.885, 43.89, 43.895, 43.9, 43.905, 43.910000000000004, 43.915, 43.92, 43.925000000000004, 43.93, 43.935, 43.94, 43.945, 43.95, 43.955, 43.96, 43.965, 43.97, 43.975, 43.980000000000004, 43.985, 43.99, 43.995, 44.0, 44.005, 44.01, 44.015, 44.02, 44.025, 44.03, 44.035000000000004, 44.04, 44.045, 44.050000000000004, 44.055, 44.06, 44.065, 44.07, 44.075, 44.08, 44.085, 44.09, 44.095, 44.1, 44.105000000000004, 44.11, 44.115, 44.12, 44.125, 44.13, 44.135, 44.14, 44.145, 44.15, 44.155, 44.160000000000004, 44.165, 44.17, 44.175000000000004, 44.18, 44.185, 44.19, 44.195, 44.2, 44.205, 44.21, 44.215, 44.22, 44.225, 44.230000000000004, 44.235, 44.24, 44.245, 44.25, 44.255, 44.26, 44.265, 44.27, 44.275, 44.28, 44.285000000000004, 44.29, 44.295, 44.300000000000004, 44.305, 44.31, 44.315, 44.32, 44.325, 44.33, 44.335, 44.34, 44.345, 44.35, 44.355000000000004, 44.36, 44.365, 44.37, 44.375, 44.38, 44.385, 44.39, 44.395, 44.4, 44.405, 44.410000000000004, 44.415, 44.42, 44.425000000000004, 44.43, 44.435, 44.44, 44.445, 44.45, 44.455, 44.46, 44.465, 44.47, 44.475, 44.480000000000004, 44.485, 44.49, 44.495, 44.5, 44.505, 44.51, 44.515, 44.52, 44.525, 44.53, 44.535000000000004, 44.54, 44.545, 44.550000000000004, 44.555, 44.56, 44.565, 44.57, 44.575, 44.58, 44.585, 44.59, 44.595, 44.6, 44.605000000000004, 44.61, 44.615, 44.62, 44.625, 44.63, 44.635, 44.64, 44.645, 44.65, 44.655, 44.660000000000004, 44.665, 44.67, 44.675000000000004, 44.68, 44.685, 44.69, 44.695, 44.7, 44.705, 44.71, 44.715, 44.72, 44.725, 44.730000000000004, 44.735, 44.74, 44.745, 44.75, 44.755, 44.76, 44.765, 44.77, 44.775, 44.78, 44.785000000000004, 44.79, 44.795, 44.800000000000004, 44.805, 44.81, 44.815, 44.82, 44.825, 44.83, 44.835, 44.84, 44.845, 44.85, 44.855000000000004, 44.86, 44.865, 44.87, 44.875, 44.88, 44.885, 44.89, 44.895, 44.9, 44.905, 44.910000000000004, 44.915, 44.92, 44.925000000000004, 44.93, 44.935, 44.94, 44.945, 44.95, 44.955, 44.96, 44.965, 44.97, 44.975, 44.980000000000004, 44.985, 44.99, 44.995, 45.0, 45.005, 45.01, 45.015, 45.02, 45.025, 45.03, 45.035000000000004, 45.04, 45.045, 45.050000000000004, 45.055, 45.06, 45.065, 45.07, 45.075, 45.08, 45.085, 45.09, 45.095, 45.1, 45.105000000000004, 45.11, 45.115, 45.12, 45.125, 45.13, 45.135, 45.14, 45.145, 45.15, 45.155, 45.160000000000004, 45.165, 45.17, 45.175000000000004, 45.18, 45.185, 45.19, 45.195, 45.2, 45.205, 45.21, 45.215, 45.22, 45.225, 45.230000000000004, 45.235, 45.24, 45.245, 45.25, 45.255, 45.26, 45.265, 45.27, 45.275, 45.28, 45.285000000000004, 45.29, 45.295, 45.300000000000004, 45.305, 45.31, 45.315, 45.32, 45.325, 45.33, 45.335, 45.34, 45.345, 45.35, 45.355000000000004, 45.36, 45.365, 45.37, 45.375, 45.38, 45.385, 45.39, 45.395, 45.4, 45.405, 45.410000000000004, 45.415, 45.42, 45.425000000000004, 45.43, 45.435, 45.44, 45.445, 45.45, 45.455, 45.46, 45.465, 45.47, 45.475, 45.480000000000004, 45.485, 45.49, 45.495, 45.5, 45.505, 45.51, 45.515, 45.52, 45.525, 45.53, 45.535000000000004, 45.54, 45.545, 45.550000000000004, 45.555, 45.56, 45.565, 45.57, 45.575, 45.58, 45.585, 45.59, 45.595, 45.6, 45.605000000000004, 45.61, 45.615, 45.62, 45.625, 45.63, 45.635, 45.64, 45.645, 45.65, 45.655, 45.660000000000004, 45.665, 45.67, 45.675000000000004, 45.68, 45.685, 45.69, 45.695, 45.7, 45.705, 45.71, 45.715, 45.72, 45.725, 45.730000000000004, 45.735, 45.74, 45.745, 45.75, 45.755, 45.76, 45.765, 45.77, 45.775, 45.78, 45.785000000000004, 45.79, 45.795, 45.800000000000004, 45.805, 45.81, 45.815, 45.82, 45.825, 45.83, 45.835, 45.84, 45.845, 45.85, 45.855000000000004, 45.86, 45.865, 45.87, 45.875, 45.88, 45.885, 45.89, 45.895, 45.9, 45.905, 45.910000000000004, 45.915, 45.92, 45.925000000000004, 45.93, 45.935, 45.94, 45.945, 45.95, 45.955, 45.96, 45.965, 45.97, 45.975, 45.980000000000004, 45.985, 45.99, 45.995, 46.0, 46.005, 46.01, 46.015, 46.02, 46.025, 46.03, 46.035000000000004, 46.04, 46.045, 46.050000000000004, 46.055, 46.06, 46.065, 46.07, 46.075, 46.08, 46.085, 46.09, 46.095, 46.1, 46.105000000000004, 46.11, 46.115, 46.12, 46.125, 46.13, 46.135, 46.14, 46.145, 46.15, 46.155, 46.160000000000004, 46.165, 46.17, 46.175000000000004, 46.18, 46.185, 46.19, 46.195, 46.2, 46.205, 46.21, 46.215, 46.22, 46.225, 46.230000000000004, 46.235, 46.24, 46.245, 46.25, 46.255, 46.26, 46.265, 46.27, 46.275, 46.28, 46.285000000000004, 46.29, 46.295, 46.300000000000004, 46.305, 46.31, 46.315, 46.32, 46.325, 46.33, 46.335, 46.34, 46.345, 46.35, 46.355000000000004, 46.36, 46.365, 46.37, 46.375, 46.38, 46.385, 46.39, 46.395, 46.4, 46.405, 46.410000000000004, 46.415, 46.42, 46.425000000000004, 46.43, 46.435, 46.44, 46.445, 46.45, 46.455, 46.46, 46.465, 46.47, 46.475, 46.480000000000004, 46.485, 46.49, 46.495, 46.5, 46.505, 46.51, 46.515, 46.52, 46.525, 46.53, 46.535000000000004, 46.54, 46.545, 46.550000000000004, 46.555, 46.56, 46.565, 46.57, 46.575, 46.58, 46.585, 46.59, 46.595, 46.6, 46.605000000000004, 46.61, 46.615, 46.62, 46.625, 46.63, 46.635, 46.64, 46.645, 46.65, 46.655, 46.660000000000004, 46.665, 46.67, 46.675000000000004, 46.68, 46.685, 46.69, 46.695, 46.7, 46.705, 46.71, 46.715, 46.72, 46.725, 46.730000000000004, 46.735, 46.74, 46.745, 46.75, 46.755, 46.76, 46.765, 46.77, 46.775, 46.78, 46.785000000000004, 46.79, 46.795, 46.800000000000004, 46.805, 46.81, 46.815, 46.82, 46.825, 46.83, 46.835, 46.84, 46.845, 46.85, 46.855000000000004, 46.86, 46.865, 46.87, 46.875, 46.88, 46.885, 46.89, 46.895, 46.9, 46.905, 46.910000000000004, 46.915, 46.92, 46.925000000000004, 46.93, 46.935, 46.94, 46.945, 46.95, 46.955, 46.96, 46.965, 46.97, 46.975, 46.980000000000004, 46.985, 46.99, 46.995, 47.0, 47.005, 47.01, 47.015, 47.02, 47.025, 47.03, 47.035000000000004, 47.04, 47.045, 47.050000000000004, 47.055, 47.06, 47.065, 47.07, 47.075, 47.08, 47.085, 47.09, 47.095, 47.1, 47.105000000000004, 47.11, 47.115, 47.12, 47.125, 47.13, 47.135, 47.14, 47.145, 47.15, 47.155, 47.160000000000004, 47.165, 47.17, 47.175000000000004, 47.18, 47.185, 47.19, 47.195, 47.2, 47.205, 47.21, 47.215, 47.22, 47.225, 47.230000000000004, 47.235, 47.24, 47.245, 47.25, 47.255, 47.26, 47.265, 47.27, 47.275, 47.28, 47.285000000000004, 47.29, 47.295, 47.300000000000004, 47.305, 47.31, 47.315, 47.32, 47.325, 47.33, 47.335, 47.34, 47.345, 47.35, 47.355000000000004, 47.36, 47.365, 47.37, 47.375, 47.38, 47.385, 47.39, 47.395, 47.4, 47.405, 47.410000000000004, 47.415, 47.42, 47.425000000000004, 47.43, 47.435, 47.44, 47.445, 47.45, 47.455, 47.46, 47.465, 47.47, 47.475, 47.480000000000004, 47.485, 47.49, 47.495, 47.5, 47.505, 47.51, 47.515, 47.52, 47.525, 47.53, 47.535000000000004, 47.54, 47.545, 47.550000000000004, 47.555, 47.56, 47.565, 47.57, 47.575, 47.58, 47.585, 47.59, 47.595, 47.6, 47.605000000000004, 47.61, 47.615, 47.62, 47.625, 47.63, 47.635, 47.64, 47.645, 47.65, 47.655, 47.660000000000004, 47.665, 47.67, 47.675000000000004, 47.68, 47.685, 47.69, 47.695, 47.7, 47.705, 47.71, 47.715, 47.72, 47.725, 47.730000000000004, 47.735, 47.74, 47.745, 47.75, 47.755, 47.76, 47.765, 47.77, 47.775, 47.78, 47.785000000000004, 47.79, 47.795, 47.800000000000004, 47.805, 47.81, 47.815, 47.82, 47.825, 47.83, 47.835, 47.84, 47.845, 47.85, 47.855000000000004, 47.86, 47.865, 47.870000000000005, 47.875, 47.88, 47.885, 47.89, 47.895, 47.9, 47.905, 47.910000000000004, 47.915, 47.92, 47.925000000000004, 47.93, 47.935, 47.94, 47.945, 47.95, 47.955, 47.96, 47.965, 47.97, 47.975, 47.980000000000004, 47.985, 47.99, 47.995000000000005, 48.0, 48.005, 48.01, 48.015, 48.02, 48.025, 48.03, 48.035000000000004, 48.04, 48.045, 48.050000000000004, 48.055, 48.06, 48.065, 48.07, 48.075, 48.08, 48.085, 48.09, 48.095, 48.1, 48.105000000000004, 48.11, 48.115, 48.120000000000005, 48.125, 48.13, 48.135, 48.14, 48.145, 48.15, 48.155, 48.160000000000004, 48.165, 48.17, 48.175000000000004, 48.18, 48.185, 48.19, 48.195, 48.2, 48.205, 48.21, 48.215, 48.22, 48.225, 48.230000000000004, 48.235, 48.24, 48.245000000000005, 48.25, 48.255, 48.26, 48.265, 48.27, 48.275, 48.28, 48.285000000000004, 48.29, 48.295, 48.300000000000004, 48.305, 48.31, 48.315, 48.32, 48.325, 48.33, 48.335, 48.34, 48.345, 48.35, 48.355000000000004, 48.36, 48.365, 48.370000000000005, 48.375, 48.38, 48.385, 48.39, 48.395, 48.4, 48.405, 48.410000000000004, 48.415, 48.42, 48.425000000000004, 48.43, 48.435, 48.44, 48.445, 48.45, 48.455, 48.46, 48.465, 48.47, 48.475, 48.480000000000004, 48.485, 48.49, 48.495000000000005, 48.5, 48.505, 48.51, 48.515, 48.52, 48.525, 48.53, 48.535000000000004, 48.54, 48.545, 48.550000000000004, 48.555, 48.56, 48.565, 48.57, 48.575, 48.58, 48.585, 48.59, 48.595, 48.6, 48.605000000000004, 48.61, 48.615, 48.620000000000005, 48.625, 48.63, 48.635, 48.64, 48.645, 48.65, 48.655, 48.660000000000004, 48.665, 48.67, 48.675000000000004, 48.68, 48.685, 48.69, 48.695, 48.7, 48.705, 48.71, 48.715, 48.72, 48.725, 48.730000000000004, 48.735, 48.74, 48.745000000000005, 48.75, 48.755, 48.76, 48.765, 48.77, 48.775, 48.78, 48.785000000000004, 48.79, 48.795, 48.800000000000004, 48.805, 48.81, 48.815, 48.82, 48.825, 48.83, 48.835, 48.84, 48.845, 48.85, 48.855000000000004, 48.86, 48.865, 48.870000000000005, 48.875, 48.88, 48.885, 48.89, 48.895, 48.9, 48.905, 48.910000000000004, 48.915, 48.92, 48.925000000000004, 48.93, 48.935, 48.94, 48.945, 48.95, 48.955, 48.96, 48.965, 48.97, 48.975, 48.980000000000004, 48.985, 48.99, 48.995000000000005, 49.0, 49.005, 49.01, 49.015, 49.02, 49.025, 49.03, 49.035000000000004, 49.04, 49.045, 49.050000000000004, 49.055, 49.06, 49.065, 49.07, 49.075, 49.08, 49.085, 49.09, 49.095, 49.1, 49.105000000000004, 49.11, 49.115, 49.120000000000005, 49.125, 49.13, 49.135, 49.14, 49.145, 49.15, 49.155, 49.160000000000004, 49.165, 49.17, 49.175000000000004, 49.18, 49.185, 49.19, 49.195, 49.2, 49.205, 49.21, 49.215, 49.22, 49.225, 49.230000000000004, 49.235, 49.24, 49.245000000000005, 49.25, 49.255, 49.26, 49.265, 49.27, 49.275, 49.28, 49.285000000000004, 49.29, 49.295, 49.300000000000004, 49.305, 49.31, 49.315, 49.32, 49.325, 49.33, 49.335, 49.34, 49.345, 49.35, 49.355000000000004, 49.36, 49.365, 49.370000000000005, 49.375, 49.38, 49.385, 49.39, 49.395, 49.4, 49.405, 49.410000000000004, 49.415, 49.42, 49.425000000000004, 49.43, 49.435, 49.44, 49.445, 49.45, 49.455, 49.46, 49.465, 49.47, 49.475, 49.480000000000004, 49.485, 49.49, 49.495000000000005, 49.5, 49.505, 49.51, 49.515, 49.52, 49.525, 49.53, 49.535000000000004, 49.54, 49.545, 49.550000000000004, 49.555, 49.56, 49.565, 49.57, 49.575, 49.58, 49.585, 49.59, 49.595, 49.6, 49.605000000000004, 49.61, 49.615, 49.620000000000005, 49.625, 49.63, 49.635, 49.64, 49.645, 49.65, 49.655, 49.660000000000004, 49.665, 49.67, 49.675000000000004, 49.68, 49.685, 49.69, 49.695, 49.7, 49.705, 49.71, 49.715, 49.72, 49.725, 49.730000000000004, 49.735, 49.74, 49.745000000000005, 49.75, 49.755, 49.76, 49.765, 49.77, 49.775, 49.78, 49.785000000000004, 49.79, 49.795, 49.800000000000004, 49.805, 49.81, 49.815, 49.82, 49.825, 49.83, 49.835, 49.84, 49.845, 49.85, 49.855000000000004, 49.86, 49.865, 49.870000000000005, 49.875, 49.88, 49.885, 49.89, 49.895, 49.9, 49.905, 49.910000000000004, 49.915, 49.92, 49.925000000000004, 49.93, 49.935, 49.94, 49.945, 49.95, 49.955, 49.96, 49.965, 49.97, 49.975, 49.980000000000004, 49.985, 49.99, 49.995000000000005, 50.0, 50.005, 50.01, 50.015, 50.02, 50.025, 50.03, 50.035000000000004, 50.04, 50.045, 50.050000000000004, 50.055, 50.06, 50.065, 50.07, 50.075, 50.08, 50.085, 50.09, 50.095, 50.1, 50.105000000000004, 50.11, 50.115, 50.120000000000005, 50.125, 50.13, 50.135, 50.14, 50.145, 50.15, 50.155, 50.160000000000004, 50.165, 50.17, 50.175000000000004, 50.18, 50.185, 50.19, 50.195, 50.2, 50.205, 50.21, 50.215, 50.22, 50.225, 50.230000000000004, 50.235, 50.24, 50.245000000000005, 50.25, 50.255, 50.26, 50.265, 50.27, 50.275, 50.28, 50.285000000000004, 50.29, 50.295, 50.300000000000004, 50.305, 50.31, 50.315, 50.32, 50.325, 50.33, 50.335, 50.34, 50.345, 50.35, 50.355000000000004, 50.36, 50.365, 50.370000000000005, 50.375, 50.38, 50.385, 50.39, 50.395, 50.4, 50.405, 50.410000000000004, 50.415, 50.42, 50.425000000000004, 50.43, 50.435, 50.44, 50.445, 50.45, 50.455, 50.46, 50.465, 50.47, 50.475, 50.480000000000004, 50.485, 50.49, 50.495000000000005, 50.5, 50.505, 50.51, 50.515, 50.52, 50.525, 50.53, 50.535000000000004, 50.54, 50.545, 50.550000000000004, 50.555, 50.56, 50.565, 50.57, 50.575, 50.58, 50.585, 50.59, 50.595, 50.6, 50.605000000000004, 50.61, 50.615, 50.620000000000005, 50.625, 50.63, 50.635, 50.64, 50.645, 50.65, 50.655, 50.660000000000004, 50.665, 50.67, 50.675000000000004, 50.68, 50.685, 50.69, 50.695, 50.7, 50.705, 50.71, 50.715, 50.72, 50.725, 50.730000000000004, 50.735, 50.74, 50.745000000000005, 50.75, 50.755, 50.76, 50.765, 50.77, 50.775, 50.78, 50.785000000000004, 50.79, 50.795, 50.800000000000004, 50.805, 50.81, 50.815, 50.82, 50.825, 50.83, 50.835, 50.84, 50.845, 50.85, 50.855000000000004, 50.86, 50.865, 50.870000000000005, 50.875, 50.88, 50.885, 50.89, 50.895, 50.9, 50.905, 50.910000000000004, 50.915, 50.92, 50.925000000000004, 50.93, 50.935, 50.94, 50.945, 50.95, 50.955, 50.96, 50.965, 50.97, 50.975, 50.980000000000004, 50.985, 50.99, 50.995000000000005, 51.0, 51.005, 51.01, 51.015, 51.02, 51.025, 51.03, 51.035000000000004, 51.04, 51.045, 51.050000000000004, 51.055, 51.06, 51.065, 51.07, 51.075, 51.08, 51.085, 51.09, 51.095, 51.1, 51.105000000000004, 51.11, 51.115, 51.120000000000005, 51.125, 51.13, 51.135, 51.14, 51.145, 51.15, 51.155, 51.160000000000004, 51.165, 51.17, 51.175000000000004, 51.18, 51.185, 51.19, 51.195, 51.2, 51.205, 51.21, 51.215, 51.22, 51.225, 51.230000000000004, 51.235, 51.24, 51.245000000000005, 51.25, 51.255, 51.26, 51.265, 51.27, 51.275, 51.28, 51.285000000000004, 51.29, 51.295, 51.300000000000004, 51.305, 51.31, 51.315, 51.32, 51.325, 51.33, 51.335, 51.34, 51.345, 51.35, 51.355000000000004, 51.36, 51.365, 51.370000000000005, 51.375, 51.38, 51.385, 51.39, 51.395, 51.4, 51.405, 51.410000000000004, 51.415, 51.42, 51.425000000000004, 51.43, 51.435, 51.44, 51.445, 51.45, 51.455, 51.46, 51.465, 51.47, 51.475, 51.480000000000004, 51.485, 51.49, 51.495000000000005, 51.5, 51.505, 51.51, 51.515, 51.52, 51.525, 51.53, 51.535000000000004, 51.54, 51.545, 51.550000000000004, 51.555, 51.56, 51.565, 51.57, 51.575, 51.58, 51.585, 51.59, 51.595, 51.6, 51.605000000000004, 51.61, 51.615, 51.620000000000005, 51.625, 51.63, 51.635, 51.64, 51.645, 51.65, 51.655, 51.660000000000004, 51.665, 51.67, 51.675000000000004, 51.68, 51.685, 51.69, 51.695, 51.7, 51.705, 51.71, 51.715, 51.72, 51.725, 51.730000000000004, 51.735, 51.74, 51.745000000000005, 51.75, 51.755, 51.76, 51.765, 51.77, 51.775, 51.78, 51.785000000000004, 51.79, 51.795, 51.800000000000004, 51.805, 51.81, 51.815, 51.82, 51.825, 51.83, 51.835, 51.84, 51.845, 51.85, 51.855000000000004, 51.86, 51.865, 51.870000000000005, 51.875, 51.88, 51.885, 51.89, 51.895, 51.9, 51.905, 51.910000000000004, 51.915, 51.92, 51.925000000000004, 51.93, 51.935, 51.94, 51.945, 51.95, 51.955, 51.96, 51.965, 51.97, 51.975, 51.980000000000004, 51.985, 51.99, 51.995000000000005, 52.0, 52.005, 52.01, 52.015, 52.02, 52.025, 52.03, 52.035000000000004, 52.04, 52.045, 52.050000000000004, 52.055, 52.06, 52.065, 52.07, 52.075, 52.08, 52.085, 52.09, 52.095, 52.1, 52.105000000000004, 52.11, 52.115, 52.120000000000005, 52.125, 52.13, 52.135, 52.14, 52.145, 52.15, 52.155, 52.160000000000004, 52.165, 52.17, 52.175000000000004, 52.18, 52.185, 52.19, 52.195, 52.2, 52.205, 52.21, 52.215, 52.22, 52.225, 52.230000000000004, 52.235, 52.24, 52.245000000000005, 52.25, 52.255, 52.26, 52.265, 52.27, 52.275, 52.28, 52.285000000000004, 52.29, 52.295, 52.300000000000004, 52.305, 52.31, 52.315, 52.32, 52.325, 52.33, 52.335, 52.34, 52.345, 52.35, 52.355000000000004, 52.36, 52.365, 52.370000000000005, 52.375, 52.38, 52.385, 52.39, 52.395, 52.4, 52.405, 52.410000000000004, 52.415, 52.42, 52.425000000000004, 52.43, 52.435, 52.44, 52.445, 52.45, 52.455, 52.46, 52.465, 52.47, 52.475, 52.480000000000004, 52.485, 52.49, 52.495000000000005, 52.5, 52.505, 52.51, 52.515, 52.52, 52.525, 52.53, 52.535000000000004, 52.54, 52.545, 52.550000000000004, 52.555, 52.56, 52.565, 52.57, 52.575, 52.58, 52.585, 52.59, 52.595, 52.6, 52.605000000000004, 52.61, 52.615, 52.620000000000005, 52.625, 52.63, 52.635, 52.64, 52.645, 52.65, 52.655, 52.660000000000004, 52.665, 52.67, 52.675000000000004, 52.68, 52.685, 52.69, 52.695, 52.7, 52.705, 52.71, 52.715, 52.72, 52.725, 52.730000000000004, 52.735, 52.74, 52.745000000000005, 52.75, 52.755, 52.76, 52.765, 52.77, 52.775, 52.78, 52.785000000000004, 52.79, 52.795, 52.800000000000004, 52.805, 52.81, 52.815, 52.82, 52.825, 52.83, 52.835, 52.84, 52.845, 52.85, 52.855000000000004, 52.86, 52.865, 52.870000000000005, 52.875, 52.88, 52.885, 52.89, 52.895, 52.9, 52.905, 52.910000000000004, 52.915, 52.92, 52.925000000000004, 52.93, 52.935, 52.94, 52.945, 52.95, 52.955, 52.96, 52.965, 52.97, 52.975, 52.980000000000004, 52.985, 52.99, 52.995000000000005, 53.0, 53.005, 53.01, 53.015, 53.02, 53.025, 53.03, 53.035000000000004, 53.04, 53.045, 53.050000000000004, 53.055, 53.06, 53.065, 53.07, 53.075, 53.08, 53.085, 53.09, 53.095, 53.1, 53.105000000000004, 53.11, 53.115, 53.120000000000005, 53.125, 53.13, 53.135, 53.14, 53.145, 53.15, 53.155, 53.160000000000004, 53.165, 53.17, 53.175000000000004, 53.18, 53.185, 53.19, 53.195, 53.2, 53.205, 53.21, 53.215, 53.22, 53.225, 53.230000000000004, 53.235, 53.24, 53.245000000000005, 53.25, 53.255, 53.26, 53.265, 53.27, 53.275, 53.28, 53.285000000000004, 53.29, 53.295, 53.300000000000004, 53.305, 53.31, 53.315, 53.32, 53.325, 53.33, 53.335, 53.34, 53.345, 53.35, 53.355000000000004, 53.36, 53.365, 53.370000000000005, 53.375, 53.38, 53.385, 53.39, 53.395, 53.4, 53.405, 53.410000000000004, 53.415, 53.42, 53.425000000000004, 53.43, 53.435, 53.44, 53.445, 53.45, 53.455, 53.46, 53.465, 53.47, 53.475, 53.480000000000004, 53.485, 53.49, 53.495000000000005, 53.5, 53.505, 53.51, 53.515, 53.52, 53.525, 53.53, 53.535000000000004, 53.54, 53.545, 53.550000000000004, 53.555, 53.56, 53.565, 53.57, 53.575, 53.58, 53.585, 53.59, 53.595, 53.6, 53.605000000000004, 53.61, 53.615, 53.620000000000005, 53.625, 53.63, 53.635, 53.64, 53.645, 53.65, 53.655, 53.660000000000004, 53.665, 53.67, 53.675000000000004, 53.68, 53.685, 53.69, 53.695, 53.7, 53.705, 53.71, 53.715, 53.72, 53.725, 53.730000000000004, 53.735, 53.74, 53.745000000000005, 53.75, 53.755, 53.76, 53.765, 53.77, 53.775, 53.78, 53.785000000000004, 53.79, 53.795, 53.800000000000004, 53.805, 53.81, 53.815, 53.82, 53.825, 53.83, 53.835, 53.84, 53.845, 53.85, 53.855000000000004, 53.86, 53.865, 53.870000000000005, 53.875, 53.88, 53.885, 53.89, 53.895, 53.9, 53.905, 53.910000000000004, 53.915, 53.92, 53.925000000000004, 53.93, 53.935, 53.94, 53.945, 53.95, 53.955, 53.96, 53.965, 53.97, 53.975, 53.980000000000004, 53.985, 53.99, 53.995000000000005, 54.0, 54.005, 54.01, 54.015, 54.02, 54.025, 54.03, 54.035000000000004, 54.04, 54.045, 54.050000000000004, 54.055, 54.06, 54.065, 54.07, 54.075, 54.08, 54.085, 54.09, 54.095, 54.1, 54.105000000000004, 54.11, 54.115, 54.120000000000005, 54.125, 54.13, 54.135, 54.14, 54.145, 54.15, 54.155, 54.160000000000004, 54.165, 54.17, 54.175000000000004, 54.18, 54.185, 54.19, 54.195, 54.2, 54.205, 54.21, 54.215, 54.22, 54.225, 54.230000000000004, 54.235, 54.24, 54.245000000000005, 54.25, 54.255, 54.26, 54.265, 54.27, 54.275, 54.28, 54.285000000000004, 54.29, 54.295, 54.300000000000004, 54.305, 54.31, 54.315, 54.32, 54.325, 54.33, 54.335, 54.34, 54.345, 54.35, 54.355000000000004, 54.36, 54.365, 54.370000000000005, 54.375, 54.38, 54.385, 54.39, 54.395, 54.4, 54.405, 54.410000000000004, 54.415, 54.42, 54.425000000000004, 54.43, 54.435, 54.44, 54.445, 54.45, 54.455, 54.46, 54.465, 54.47, 54.475, 54.480000000000004, 54.485, 54.49, 54.495000000000005, 54.5, 54.505, 54.51, 54.515, 54.52, 54.525, 54.53, 54.535000000000004, 54.54, 54.545, 54.550000000000004, 54.555, 54.56, 54.565, 54.57, 54.575, 54.58, 54.585, 54.59, 54.595, 54.6, 54.605000000000004, 54.61, 54.615, 54.620000000000005, 54.625, 54.63, 54.635, 54.64, 54.645, 54.65, 54.655, 54.660000000000004, 54.665, 54.67, 54.675000000000004, 54.68, 54.685, 54.69, 54.695, 54.7, 54.705, 54.71, 54.715, 54.72, 54.725, 54.730000000000004, 54.735, 54.74, 54.745000000000005, 54.75, 54.755, 54.76, 54.765, 54.77, 54.775, 54.78, 54.785000000000004, 54.79, 54.795, 54.800000000000004, 54.805, 54.81, 54.815, 54.82, 54.825, 54.83, 54.835, 54.84, 54.845, 54.85, 54.855000000000004, 54.86, 54.865, 54.870000000000005, 54.875, 54.88, 54.885, 54.89, 54.895, 54.9, 54.905, 54.910000000000004, 54.915, 54.92, 54.925000000000004, 54.93, 54.935, 54.94, 54.945, 54.95, 54.955, 54.96, 54.965, 54.97, 54.975, 54.980000000000004, 54.985, 54.99, 54.995000000000005, 55.0, 55.005, 55.01, 55.015, 55.02, 55.025, 55.03, 55.035000000000004, 55.04, 55.045, 55.050000000000004, 55.055, 55.06, 55.065, 55.07, 55.075, 55.08, 55.085, 55.09, 55.095, 55.1, 55.105000000000004, 55.11, 55.115, 55.120000000000005, 55.125, 55.13, 55.135, 55.14, 55.145, 55.15, 55.155, 55.160000000000004, 55.165, 55.17, 55.175000000000004, 55.18, 55.185, 55.19, 55.195, 55.2, 55.205, 55.21, 55.215, 55.22, 55.225, 55.230000000000004, 55.235, 55.24, 55.245000000000005, 55.25, 55.255, 55.26, 55.265, 55.27, 55.275, 55.28, 55.285000000000004, 55.29, 55.295, 55.300000000000004, 55.305, 55.31, 55.315, 55.32, 55.325, 55.33, 55.335, 55.34, 55.345, 55.35, 55.355000000000004, 55.36, 55.365, 55.370000000000005, 55.375, 55.38, 55.385, 55.39, 55.395, 55.4, 55.405, 55.410000000000004, 55.415, 55.42, 55.425000000000004, 55.43, 55.435, 55.44, 55.445, 55.45, 55.455, 55.46, 55.465, 55.47, 55.475, 55.480000000000004, 55.485, 55.49, 55.495000000000005, 55.5, 55.505, 55.51, 55.515, 55.52, 55.525, 55.53, 55.535000000000004, 55.54, 55.545, 55.550000000000004, 55.555, 55.56, 55.565, 55.57, 55.575, 55.58, 55.585, 55.59, 55.595, 55.6, 55.605000000000004, 55.61, 55.615, 55.620000000000005, 55.625, 55.63, 55.635, 55.64, 55.645, 55.65, 55.655, 55.660000000000004, 55.665, 55.67, 55.675000000000004, 55.68, 55.685, 55.69, 55.695, 55.7, 55.705, 55.71, 55.715, 55.72, 55.725, 55.730000000000004, 55.735, 55.74, 55.745000000000005, 55.75, 55.755, 55.76, 55.765, 55.77, 55.775, 55.78, 55.785000000000004, 55.79, 55.795, 55.800000000000004, 55.805, 55.81, 55.815, 55.82, 55.825, 55.83, 55.835, 55.84, 55.845, 55.85, 55.855000000000004, 55.86, 55.865, 55.870000000000005, 55.875, 55.88, 55.885, 55.89, 55.895, 55.9, 55.905, 55.910000000000004, 55.915, 55.92, 55.925000000000004, 55.93, 55.935, 55.94, 55.945, 55.95, 55.955, 55.96, 55.965, 55.97, 55.975, 55.980000000000004, 55.985, 55.99, 55.995000000000005, 56.0, 56.005, 56.01, 56.015, 56.02, 56.025, 56.03, 56.035000000000004, 56.04, 56.045, 56.050000000000004, 56.055, 56.06, 56.065, 56.07, 56.075, 56.08, 56.085, 56.09, 56.095, 56.1, 56.105000000000004, 56.11, 56.115, 56.120000000000005, 56.125, 56.13, 56.135, 56.14, 56.145, 56.15, 56.155, 56.160000000000004, 56.165, 56.17, 56.175000000000004, 56.18, 56.185, 56.19, 56.195, 56.2, 56.205, 56.21, 56.215, 56.22, 56.225, 56.230000000000004, 56.235, 56.24, 56.245000000000005, 56.25, 56.255, 56.26, 56.265, 56.27, 56.275, 56.28, 56.285000000000004, 56.29, 56.295, 56.300000000000004, 56.305, 56.31, 56.315, 56.32, 56.325, 56.33, 56.335, 56.34, 56.345, 56.35, 56.355000000000004, 56.36, 56.365, 56.370000000000005, 56.375, 56.38, 56.385, 56.39, 56.395, 56.4, 56.405, 56.410000000000004, 56.415, 56.42, 56.425000000000004, 56.43, 56.435, 56.44, 56.445, 56.45, 56.455, 56.46, 56.465, 56.47, 56.475, 56.480000000000004, 56.485, 56.49, 56.495000000000005, 56.5, 56.505, 56.51, 56.515, 56.52, 56.525, 56.53, 56.535000000000004, 56.54, 56.545, 56.550000000000004, 56.555, 56.56, 56.565, 56.57, 56.575, 56.58, 56.585, 56.59, 56.595, 56.6, 56.605000000000004, 56.61, 56.615, 56.620000000000005, 56.625, 56.63, 56.635, 56.64, 56.645, 56.65, 56.655, 56.660000000000004, 56.665, 56.67, 56.675000000000004, 56.68, 56.685, 56.69, 56.695, 56.7, 56.705, 56.71, 56.715, 56.72, 56.725, 56.730000000000004, 56.735, 56.74, 56.745000000000005, 56.75, 56.755, 56.76, 56.765, 56.77, 56.775, 56.78, 56.785000000000004, 56.79, 56.795, 56.800000000000004, 56.805, 56.81, 56.815, 56.82, 56.825, 56.83, 56.835, 56.84, 56.845, 56.85, 56.855000000000004, 56.86, 56.865, 56.870000000000005, 56.875, 56.88, 56.885, 56.89, 56.895, 56.9, 56.905, 56.910000000000004, 56.915, 56.92, 56.925000000000004, 56.93, 56.935, 56.94, 56.945, 56.95, 56.955, 56.96, 56.965, 56.97, 56.975, 56.980000000000004, 56.985, 56.99, 56.995000000000005, 57.0, 57.005, 57.01, 57.015, 57.02, 57.025, 57.03, 57.035000000000004, 57.04, 57.045, 57.050000000000004, 57.055, 57.06, 57.065, 57.07, 57.075, 57.08, 57.085, 57.09, 57.095, 57.1, 57.105000000000004, 57.11, 57.115, 57.120000000000005, 57.125, 57.13, 57.135, 57.14, 57.145, 57.15, 57.155, 57.160000000000004, 57.165, 57.17, 57.175000000000004, 57.18, 57.185, 57.19, 57.195, 57.2, 57.205, 57.21, 57.215, 57.22, 57.225, 57.230000000000004, 57.235, 57.24, 57.245000000000005, 57.25, 57.255, 57.26, 57.265, 57.27, 57.275, 57.28, 57.285000000000004, 57.29, 57.295, 57.300000000000004, 57.305, 57.31, 57.315, 57.32, 57.325, 57.33, 57.335, 57.34, 57.345, 57.35, 57.355000000000004, 57.36, 57.365, 57.370000000000005, 57.375, 57.38, 57.385, 57.39, 57.395, 57.4, 57.405, 57.410000000000004, 57.415, 57.42, 57.425000000000004, 57.43, 57.435, 57.44, 57.445, 57.45, 57.455, 57.46, 57.465, 57.47, 57.475, 57.480000000000004, 57.485, 57.49, 57.495000000000005, 57.5, 57.505, 57.51, 57.515, 57.52, 57.525, 57.53, 57.535000000000004, 57.54, 57.545, 57.550000000000004, 57.555, 57.56, 57.565, 57.57, 57.575, 57.58, 57.585, 57.59, 57.595, 57.6, 57.605000000000004, 57.61, 57.615, 57.620000000000005, 57.625, 57.63, 57.635, 57.64, 57.645, 57.65, 57.655, 57.660000000000004, 57.665, 57.67, 57.675000000000004, 57.68, 57.685, 57.69, 57.695, 57.7, 57.705, 57.71, 57.715, 57.72, 57.725, 57.730000000000004, 57.735, 57.74, 57.745000000000005, 57.75, 57.755, 57.76, 57.765, 57.77, 57.775, 57.78, 57.785000000000004, 57.79, 57.795, 57.800000000000004, 57.805, 57.81, 57.815, 57.82, 57.825, 57.83, 57.835, 57.84, 57.845, 57.85, 57.855000000000004, 57.86, 57.865, 57.870000000000005, 57.875, 57.88, 57.885, 57.89, 57.895, 57.9, 57.905, 57.910000000000004, 57.915, 57.92, 57.925000000000004, 57.93, 57.935, 57.94, 57.945, 57.95, 57.955, 57.96, 57.965, 57.97, 57.975, 57.980000000000004, 57.985, 57.99, 57.995000000000005, 58.0, 58.005, 58.01, 58.015, 58.02, 58.025, 58.03, 58.035000000000004, 58.04, 58.045, 58.050000000000004, 58.055, 58.06, 58.065, 58.07, 58.075, 58.08, 58.085, 58.09, 58.095, 58.1, 58.105000000000004, 58.11, 58.115, 58.120000000000005, 58.125, 58.13, 58.135, 58.14, 58.145, 58.15, 58.155, 58.160000000000004, 58.165, 58.17, 58.175000000000004, 58.18, 58.185, 58.19, 58.195, 58.2, 58.205, 58.21, 58.215, 58.22, 58.225, 58.230000000000004, 58.235, 58.24, 58.245000000000005, 58.25, 58.255, 58.26, 58.265, 58.27, 58.275, 58.28, 58.285000000000004, 58.29, 58.295, 58.300000000000004, 58.305, 58.31, 58.315, 58.32, 58.325, 58.33, 58.335, 58.34, 58.345, 58.35, 58.355000000000004, 58.36, 58.365, 58.370000000000005, 58.375, 58.38, 58.385, 58.39, 58.395, 58.4, 58.405, 58.410000000000004, 58.415, 58.42, 58.425000000000004, 58.43, 58.435, 58.44, 58.445, 58.45, 58.455, 58.46, 58.465, 58.47, 58.475, 58.480000000000004, 58.485, 58.49, 58.495000000000005, 58.5, 58.505, 58.51, 58.515, 58.52, 58.525, 58.53, 58.535000000000004, 58.54, 58.545, 58.550000000000004, 58.555, 58.56, 58.565, 58.57, 58.575, 58.58, 58.585, 58.59, 58.595, 58.6, 58.605000000000004, 58.61, 58.615, 58.620000000000005, 58.625, 58.63, 58.635, 58.64, 58.645, 58.65, 58.655, 58.660000000000004, 58.665, 58.67, 58.675000000000004, 58.68, 58.685, 58.69, 58.695, 58.7, 58.705, 58.71, 58.715, 58.72, 58.725, 58.730000000000004, 58.735, 58.74, 58.745000000000005, 58.75, 58.755, 58.76, 58.765, 58.77, 58.775, 58.78, 58.785000000000004, 58.79, 58.795, 58.800000000000004, 58.805, 58.81, 58.815, 58.82, 58.825, 58.83, 58.835, 58.84, 58.845, 58.85, 58.855000000000004, 58.86, 58.865, 58.870000000000005, 58.875, 58.88, 58.885, 58.89, 58.895, 58.9, 58.905, 58.910000000000004, 58.915, 58.92, 58.925000000000004, 58.93, 58.935, 58.94, 58.945, 58.95, 58.955, 58.96, 58.965, 58.97, 58.975, 58.980000000000004, 58.985, 58.99, 58.995000000000005, 59.0, 59.005, 59.01, 59.015, 59.02, 59.025, 59.03, 59.035000000000004, 59.04, 59.045, 59.050000000000004, 59.055, 59.06, 59.065, 59.07, 59.075, 59.08, 59.085, 59.09, 59.095, 59.1, 59.105000000000004, 59.11, 59.115, 59.120000000000005, 59.125, 59.13, 59.135, 59.14, 59.145, 59.15, 59.155, 59.160000000000004, 59.165, 59.17, 59.175000000000004, 59.18, 59.185, 59.19, 59.195, 59.2, 59.205, 59.21, 59.215, 59.22, 59.225, 59.230000000000004, 59.235, 59.24, 59.245000000000005, 59.25, 59.255, 59.26, 59.265, 59.27, 59.275, 59.28, 59.285000000000004, 59.29, 59.295, 59.300000000000004, 59.305, 59.31, 59.315, 59.32, 59.325, 59.33, 59.335, 59.34, 59.345, 59.35, 59.355000000000004, 59.36, 59.365, 59.370000000000005, 59.375, 59.38, 59.385, 59.39, 59.395, 59.4, 59.405, 59.410000000000004, 59.415, 59.42, 59.425000000000004, 59.43, 59.435, 59.44, 59.445, 59.45, 59.455, 59.46, 59.465, 59.47, 59.475, 59.480000000000004, 59.485, 59.49, 59.495000000000005, 59.5, 59.505, 59.51, 59.515, 59.52, 59.525, 59.53, 59.535000000000004, 59.54, 59.545, 59.550000000000004, 59.555, 59.56, 59.565, 59.57, 59.575, 59.58, 59.585, 59.59, 59.595, 59.6, 59.605000000000004, 59.61, 59.615, 59.620000000000005, 59.625, 59.63, 59.635, 59.64, 59.645, 59.65, 59.655, 59.660000000000004, 59.665, 59.67, 59.675000000000004, 59.68, 59.685, 59.69, 59.695, 59.7, 59.705, 59.71, 59.715, 59.72, 59.725, 59.730000000000004, 59.735, 59.74, 59.745000000000005, 59.75, 59.755, 59.76, 59.765, 59.77, 59.775, 59.78, 59.785000000000004, 59.79, 59.795, 59.800000000000004, 59.805, 59.81, 59.815, 59.82, 59.825, 59.83, 59.835, 59.84, 59.845, 59.85, 59.855000000000004, 59.86, 59.865, 59.870000000000005, 59.875, 59.88, 59.885, 59.89, 59.895, 59.9, 59.905, 59.910000000000004, 59.915, 59.92, 59.925000000000004, 59.93, 59.935, 59.94, 59.945, 59.95, 59.955, 59.96, 59.965, 59.97, 59.975, 59.980000000000004, 59.985, 59.99, 59.995000000000005, 60.0, 60.005, 60.01, 60.015, 60.02, 60.025, 60.03, 60.035000000000004, 60.04, 60.045, 60.050000000000004, 60.055, 60.06, 60.065, 60.07, 60.075, 60.08, 60.085, 60.09, 60.095, 60.1, 60.105000000000004, 60.11, 60.115, 60.120000000000005, 60.125, 60.13, 60.135, 60.14, 60.145, 60.15, 60.155, 60.160000000000004, 60.165, 60.17, 60.175000000000004, 60.18, 60.185, 60.19, 60.195, 60.2, 60.205, 60.21, 60.215, 60.22, 60.225, 60.230000000000004, 60.235, 60.24, 60.245000000000005, 60.25, 60.255, 60.26, 60.265, 60.27, 60.275, 60.28, 60.285000000000004, 60.29, 60.295, 60.300000000000004, 60.305, 60.31, 60.315, 60.32, 60.325, 60.33, 60.335, 60.34, 60.345, 60.35, 60.355000000000004, 60.36, 60.365, 60.370000000000005, 60.375, 60.38, 60.385, 60.39, 60.395, 60.4, 60.405, 60.410000000000004, 60.415, 60.42, 60.425000000000004, 60.43, 60.435, 60.44, 60.445, 60.45, 60.455, 60.46, 60.465, 60.47, 60.475, 60.480000000000004, 60.485, 60.49, 60.495000000000005, 60.5, 60.505, 60.51, 60.515, 60.52, 60.525, 60.53, 60.535000000000004, 60.54, 60.545, 60.550000000000004, 60.555, 60.56, 60.565, 60.57, 60.575, 60.58, 60.585, 60.59, 60.595, 60.6, 60.605000000000004, 60.61, 60.615, 60.620000000000005, 60.625, 60.63, 60.635, 60.64, 60.645, 60.65, 60.655, 60.660000000000004, 60.665, 60.67, 60.675000000000004, 60.68, 60.685, 60.69, 60.695, 60.7, 60.705, 60.71, 60.715, 60.72, 60.725, 60.730000000000004, 60.735, 60.74, 60.745000000000005, 60.75, 60.755, 60.76, 60.765, 60.77, 60.775, 60.78, 60.785000000000004, 60.79, 60.795, 60.800000000000004, 60.805, 60.81, 60.815, 60.82, 60.825, 60.83, 60.835, 60.84, 60.845, 60.85, 60.855000000000004, 60.86, 60.865, 60.870000000000005, 60.875, 60.88, 60.885, 60.89, 60.895, 60.9, 60.905, 60.910000000000004, 60.915, 60.92, 60.925000000000004, 60.93, 60.935, 60.94, 60.945, 60.95, 60.955, 60.96, 60.965, 60.97, 60.975, 60.980000000000004, 60.985, 60.99, 60.995000000000005, 61.0, 61.005, 61.01, 61.015, 61.02, 61.025, 61.03, 61.035000000000004, 61.04, 61.045, 61.050000000000004, 61.055, 61.06, 61.065, 61.07, 61.075, 61.08, 61.085, 61.09, 61.095, 61.1, 61.105000000000004, 61.11, 61.115, 61.120000000000005, 61.125, 61.13, 61.135, 61.14, 61.145, 61.15, 61.155, 61.160000000000004, 61.165, 61.17, 61.175000000000004, 61.18, 61.185, 61.19, 61.195, 61.2, 61.205, 61.21, 61.215, 61.22, 61.225, 61.230000000000004, 61.235, 61.24, 61.245000000000005, 61.25, 61.255, 61.26, 61.265, 61.27, 61.275, 61.28, 61.285000000000004, 61.29, 61.295, 61.300000000000004, 61.305, 61.31, 61.315, 61.32, 61.325, 61.33, 61.335, 61.34, 61.345, 61.35, 61.355000000000004, 61.36, 61.365, 61.370000000000005, 61.375, 61.38, 61.385, 61.39, 61.395, 61.4, 61.405, 61.410000000000004, 61.415, 61.42, 61.425000000000004, 61.43, 61.435, 61.44, 61.445, 61.45, 61.455, 61.46, 61.465, 61.47, 61.475, 61.480000000000004, 61.485, 61.49, 61.495000000000005, 61.5, 61.505, 61.51, 61.515, 61.52, 61.525, 61.53, 61.535000000000004, 61.54, 61.545, 61.550000000000004, 61.555, 61.56, 61.565000000000005, 61.57, 61.575, 61.58, 61.585, 61.59, 61.595, 61.6, 61.605000000000004, 61.61, 61.615, 61.620000000000005, 61.625, 61.63, 61.635, 61.64, 61.645, 61.65, 61.655, 61.660000000000004, 61.665, 61.67, 61.675000000000004, 61.68, 61.685, 61.690000000000005, 61.695, 61.7, 61.705, 61.71, 61.715, 61.72, 61.725, 61.730000000000004, 61.735, 61.74, 61.745000000000005, 61.75, 61.755, 61.76, 61.765, 61.77, 61.775, 61.78, 61.785000000000004, 61.79, 61.795, 61.800000000000004, 61.805, 61.81, 61.815000000000005, 61.82, 61.825, 61.83, 61.835, 61.84, 61.845, 61.85, 61.855000000000004, 61.86, 61.865, 61.870000000000005, 61.875, 61.88, 61.885, 61.89, 61.895, 61.9, 61.905, 61.910000000000004, 61.915, 61.92, 61.925000000000004, 61.93, 61.935, 61.940000000000005, 61.945, 61.95, 61.955, 61.96, 61.965, 61.97, 61.975, 61.980000000000004, 61.985, 61.99, 61.995000000000005, 62.0, 62.005, 62.01, 62.015, 62.02, 62.025, 62.03, 62.035000000000004, 62.04, 62.045, 62.050000000000004, 62.055, 62.06, 62.065000000000005, 62.07, 62.075, 62.08, 62.085, 62.09, 62.095, 62.1, 62.105000000000004, 62.11, 62.115, 62.120000000000005, 62.125, 62.13, 62.135, 62.14, 62.145, 62.15, 62.155, 62.160000000000004, 62.165, 62.17, 62.175000000000004, 62.18, 62.185, 62.190000000000005, 62.195, 62.2, 62.205, 62.21, 62.215, 62.22, 62.225, 62.230000000000004, 62.235, 62.24, 62.245000000000005, 62.25, 62.255, 62.26, 62.265, 62.27, 62.275, 62.28, 62.285000000000004, 62.29, 62.295, 62.300000000000004, 62.305, 62.31, 62.315000000000005, 62.32, 62.325, 62.33, 62.335, 62.34, 62.345, 62.35, 62.355000000000004, 62.36, 62.365, 62.370000000000005, 62.375, 62.38, 62.385, 62.39, 62.395, 62.4, 62.405, 62.410000000000004, 62.415, 62.42, 62.425000000000004, 62.43, 62.435, 62.440000000000005, 62.445, 62.45, 62.455, 62.46, 62.465, 62.47, 62.475, 62.480000000000004, 62.485, 62.49, 62.495000000000005, 62.5, 62.505, 62.51, 62.515, 62.52, 62.525, 62.53, 62.535000000000004, 62.54, 62.545, 62.550000000000004, 62.555, 62.56, 62.565000000000005, 62.57, 62.575, 62.58, 62.585, 62.59, 62.595, 62.6, 62.605000000000004, 62.61, 62.615, 62.620000000000005, 62.625, 62.63, 62.635, 62.64, 62.645, 62.65, 62.655, 62.660000000000004, 62.665, 62.67, 62.675000000000004, 62.68, 62.685, 62.690000000000005, 62.695, 62.7, 62.705, 62.71, 62.715, 62.72, 62.725, 62.730000000000004, 62.735, 62.74, 62.745000000000005, 62.75, 62.755, 62.76, 62.765, 62.77, 62.775, 62.78, 62.785000000000004, 62.79, 62.795, 62.800000000000004, 62.805, 62.81, 62.815000000000005, 62.82, 62.825, 62.83, 62.835, 62.84, 62.845, 62.85, 62.855000000000004, 62.86, 62.865, 62.870000000000005, 62.875, 62.88, 62.885, 62.89, 62.895, 62.9, 62.905, 62.910000000000004, 62.915, 62.92, 62.925000000000004, 62.93, 62.935, 62.940000000000005, 62.945, 62.95, 62.955, 62.96, 62.965, 62.97, 62.975, 62.980000000000004, 62.985, 62.99, 62.995000000000005, 63.0, 63.005, 63.01, 63.015, 63.02, 63.025, 63.03, 63.035000000000004, 63.04, 63.045, 63.050000000000004, 63.055, 63.06, 63.065000000000005, 63.07, 63.075, 63.08, 63.085, 63.09, 63.095, 63.1, 63.105000000000004, 63.11, 63.115, 63.120000000000005, 63.125, 63.13, 63.135, 63.14, 63.145, 63.15, 63.155, 63.160000000000004, 63.165, 63.17, 63.175000000000004, 63.18, 63.185, 63.190000000000005, 63.195, 63.2, 63.205, 63.21, 63.215, 63.22, 63.225, 63.230000000000004, 63.235, 63.24, 63.245000000000005, 63.25, 63.255, 63.26, 63.265, 63.27, 63.275, 63.28, 63.285000000000004, 63.29, 63.295, 63.300000000000004, 63.305, 63.31, 63.315000000000005, 63.32, 63.325, 63.33, 63.335, 63.34, 63.345, 63.35, 63.355000000000004, 63.36, 63.365, 63.370000000000005, 63.375, 63.38, 63.385, 63.39, 63.395, 63.4, 63.405, 63.410000000000004, 63.415, 63.42, 63.425000000000004, 63.43, 63.435, 63.440000000000005, 63.445, 63.45, 63.455, 63.46, 63.465, 63.47, 63.475, 63.480000000000004, 63.485, 63.49, 63.495000000000005, 63.5, 63.505, 63.51, 63.515, 63.52, 63.525, 63.53, 63.535000000000004, 63.54, 63.545, 63.550000000000004, 63.555, 63.56, 63.565000000000005, 63.57, 63.575, 63.58, 63.585, 63.59, 63.595, 63.6, 63.605000000000004, 63.61, 63.615, 63.620000000000005, 63.625, 63.63, 63.635, 63.64, 63.645, 63.65, 63.655, 63.660000000000004, 63.665, 63.67, 63.675000000000004, 63.68, 63.685, 63.690000000000005, 63.695, 63.7, 63.705, 63.71, 63.715, 63.72, 63.725, 63.730000000000004, 63.735, 63.74, 63.745000000000005, 63.75, 63.755, 63.76, 63.765, 63.77, 63.775, 63.78, 63.785000000000004, 63.79, 63.795, 63.800000000000004, 63.805, 63.81, 63.815000000000005, 63.82, 63.825, 63.83, 63.835, 63.84, 63.845, 63.85, 63.855000000000004, 63.86, 63.865, 63.870000000000005, 63.875, 63.88, 63.885, 63.89, 63.895, 63.9, 63.905, 63.910000000000004, 63.915, 63.92, 63.925000000000004, 63.93, 63.935, 63.940000000000005, 63.945, 63.95, 63.955, 63.96, 63.965, 63.97, 63.975, 63.980000000000004, 63.985, 63.99, 63.995000000000005, 64.0, 64.005, 64.01, 64.015, 64.02, 64.025, 64.03, 64.035, 64.04, 64.045, 64.05, 64.055, 64.06, 64.065, 64.07000000000001, 64.075, 64.08, 64.08500000000001, 64.09, 64.095, 64.1, 64.105, 64.11, 64.115, 64.12, 64.125, 64.13, 64.135, 64.14, 64.145, 64.15, 64.155, 64.16, 64.165, 64.17, 64.175, 64.18, 64.185, 64.19, 64.19500000000001, 64.2, 64.205, 64.21000000000001, 64.215, 64.22, 64.225, 64.23, 64.235, 64.24, 64.245, 64.25, 64.255, 64.26, 64.265, 64.27, 64.275, 64.28, 64.285, 64.29, 64.295, 64.3, 64.305, 64.31, 64.315, 64.32000000000001, 64.325, 64.33, 64.33500000000001, 64.34, 64.345, 64.35, 64.355, 64.36, 64.365, 64.37, 64.375, 64.38, 64.385, 64.39, 64.395, 64.4, 64.405, 64.41, 64.415, 64.42, 64.425, 64.43, 64.435, 64.44, 64.44500000000001, 64.45, 64.455, 64.46000000000001, 64.465, 64.47, 64.475, 64.48, 64.485, 64.49, 64.495, 64.5, 64.505, 64.51, 64.515, 64.52, 64.525, 64.53, 64.535, 64.54, 64.545, 64.55, 64.555, 64.56, 64.565, 64.57000000000001, 64.575, 64.58, 64.58500000000001, 64.59, 64.595, 64.6, 64.605, 64.61, 64.615, 64.62, 64.625, 64.63, 64.635, 64.64, 64.645, 64.65, 64.655, 64.66, 64.665, 64.67, 64.675, 64.68, 64.685, 64.69, 64.69500000000001, 64.7, 64.705, 64.71000000000001, 64.715, 64.72, 64.725, 64.73, 64.735, 64.74, 64.745, 64.75, 64.755, 64.76, 64.765, 64.77, 64.775, 64.78, 64.785, 64.79, 64.795, 64.8, 64.805, 64.81, 64.815, 64.82000000000001, 64.825, 64.83, 64.83500000000001, 64.84, 64.845, 64.85, 64.855, 64.86, 64.865, 64.87, 64.875, 64.88, 64.885, 64.89, 64.895, 64.9, 64.905, 64.91, 64.915, 64.92, 64.925, 64.93, 64.935, 64.94, 64.94500000000001, 64.95, 64.955, 64.96000000000001, 64.965, 64.97, 64.975, 64.98, 64.985, 64.99, 64.995, 65.0, 65.005, 65.01, 65.015, 65.02, 65.025, 65.03, 65.035, 65.04, 65.045, 65.05, 65.055, 65.06, 65.065, 65.07000000000001, 65.075, 65.08, 65.08500000000001, 65.09, 65.095, 65.1, 65.105, 65.11, 65.115, 65.12, 65.125, 65.13, 65.135, 65.14, 65.145, 65.15, 65.155, 65.16, 65.165, 65.17, 65.175, 65.18, 65.185, 65.19, 65.19500000000001, 65.2, 65.205, 65.21000000000001, 65.215, 65.22, 65.225, 65.23, 65.235, 65.24, 65.245, 65.25, 65.255, 65.26, 65.265, 65.27, 65.275, 65.28, 65.285, 65.29, 65.295, 65.3, 65.305, 65.31, 65.315, 65.32000000000001, 65.325, 65.33, 65.33500000000001, 65.34, 65.345, 65.35, 65.355, 65.36, 65.365, 65.37, 65.375, 65.38, 65.385, 65.39, 65.395, 65.4, 65.405, 65.41, 65.415, 65.42, 65.425, 65.43, 65.435, 65.44, 65.44500000000001, 65.45, 65.455, 65.46000000000001, 65.465, 65.47, 65.475, 65.48, 65.485, 65.49, 65.495, 65.5, 65.505, 65.51, 65.515, 65.52, 65.525, 65.53, 65.535, 65.54, 65.545, 65.55, 65.555, 65.56, 65.565, 65.57000000000001, 65.575, 65.58, 65.58500000000001, 65.59, 65.595, 65.6, 65.605, 65.61, 65.615, 65.62, 65.625, 65.63, 65.635, 65.64, 65.645, 65.65, 65.655, 65.66, 65.665, 65.67, 65.675, 65.68, 65.685, 65.69, 65.69500000000001, 65.7, 65.705, 65.71000000000001, 65.715, 65.72, 65.725, 65.73, 65.735, 65.74, 65.745, 65.75, 65.755, 65.76, 65.765, 65.77, 65.775, 65.78, 65.785, 65.79, 65.795, 65.8, 65.805, 65.81, 65.815, 65.82000000000001, 65.825, 65.83, 65.83500000000001, 65.84, 65.845, 65.85, 65.855, 65.86, 65.865, 65.87, 65.875, 65.88, 65.885, 65.89, 65.895, 65.9, 65.905, 65.91, 65.915, 65.92, 65.925, 65.93, 65.935, 65.94, 65.94500000000001, 65.95, 65.955, 65.96000000000001, 65.965, 65.97, 65.975, 65.98, 65.985, 65.99, 65.995, 66.0, 66.005, 66.01, 66.015, 66.02, 66.025, 66.03, 66.035, 66.04, 66.045, 66.05, 66.055, 66.06, 66.065, 66.07000000000001, 66.075, 66.08, 66.08500000000001, 66.09, 66.095, 66.1, 66.105, 66.11, 66.115, 66.12, 66.125, 66.13, 66.135, 66.14, 66.145, 66.15, 66.155, 66.16, 66.165, 66.17, 66.175, 66.18, 66.185, 66.19, 66.19500000000001, 66.2, 66.205, 66.21000000000001, 66.215, 66.22, 66.225, 66.23, 66.235, 66.24, 66.245, 66.25, 66.255, 66.26, 66.265, 66.27, 66.275, 66.28, 66.285, 66.29, 66.295, 66.3, 66.305, 66.31, 66.315, 66.32000000000001, 66.325, 66.33, 66.33500000000001, 66.34, 66.345, 66.35, 66.355, 66.36, 66.365, 66.37, 66.375, 66.38, 66.385, 66.39, 66.395, 66.4, 66.405, 66.41, 66.415, 66.42, 66.425, 66.43, 66.435, 66.44, 66.44500000000001, 66.45, 66.455, 66.46000000000001, 66.465, 66.47, 66.475, 66.48, 66.485, 66.49, 66.495, 66.5, 66.505, 66.51, 66.515, 66.52, 66.525, 66.53, 66.535, 66.54, 66.545, 66.55, 66.555, 66.56, 66.565, 66.57000000000001, 66.575, 66.58, 66.58500000000001, 66.59, 66.595, 66.6, 66.605, 66.61, 66.615, 66.62, 66.625, 66.63, 66.635, 66.64, 66.645, 66.65, 66.655, 66.66, 66.665, 66.67, 66.675, 66.68, 66.685, 66.69, 66.69500000000001, 66.7, 66.705, 66.71000000000001, 66.715, 66.72, 66.725, 66.73, 66.735, 66.74, 66.745, 66.75, 66.755, 66.76, 66.765, 66.77, 66.775, 66.78, 66.785, 66.79, 66.795, 66.8, 66.805, 66.81, 66.815, 66.82000000000001, 66.825, 66.83, 66.83500000000001, 66.84, 66.845, 66.85, 66.855, 66.86, 66.865, 66.87, 66.875, 66.88, 66.885, 66.89, 66.895, 66.9, 66.905, 66.91, 66.915, 66.92, 66.925, 66.93, 66.935, 66.94, 66.94500000000001, 66.95, 66.955, 66.96000000000001, 66.965, 66.97, 66.975, 66.98, 66.985, 66.99, 66.995, 67.0, 67.005, 67.01, 67.015, 67.02, 67.025, 67.03, 67.035, 67.04, 67.045, 67.05, 67.055, 67.06, 67.065, 67.07000000000001, 67.075, 67.08, 67.08500000000001, 67.09, 67.095, 67.1, 67.105, 67.11, 67.115, 67.12, 67.125, 67.13, 67.135, 67.14, 67.145, 67.15, 67.155, 67.16, 67.165, 67.17, 67.175, 67.18, 67.185, 67.19, 67.19500000000001, 67.2, 67.205, 67.21000000000001, 67.215, 67.22, 67.225, 67.23, 67.235, 67.24, 67.245, 67.25, 67.255, 67.26, 67.265, 67.27, 67.275, 67.28, 67.285, 67.29, 67.295, 67.3, 67.305, 67.31, 67.315, 67.32000000000001, 67.325, 67.33, 67.33500000000001, 67.34, 67.345, 67.35, 67.355, 67.36, 67.365, 67.37, 67.375, 67.38, 67.385, 67.39, 67.395, 67.4, 67.405, 67.41, 67.415, 67.42, 67.425, 67.43, 67.435, 67.44, 67.44500000000001, 67.45, 67.455, 67.46000000000001, 67.465, 67.47, 67.475, 67.48, 67.485, 67.49, 67.495, 67.5, 67.505, 67.51, 67.515, 67.52, 67.525, 67.53, 67.535, 67.54, 67.545, 67.55, 67.555, 67.56, 67.565, 67.57000000000001, 67.575, 67.58, 67.58500000000001, 67.59, 67.595, 67.6, 67.605, 67.61, 67.615, 67.62, 67.625, 67.63, 67.635, 67.64, 67.645, 67.65, 67.655, 67.66, 67.665, 67.67, 67.675, 67.68, 67.685, 67.69, 67.69500000000001, 67.7, 67.705, 67.71000000000001, 67.715, 67.72, 67.725, 67.73, 67.735, 67.74, 67.745, 67.75, 67.755, 67.76, 67.765, 67.77, 67.775, 67.78, 67.785, 67.79, 67.795, 67.8, 67.805, 67.81, 67.815, 67.82000000000001, 67.825, 67.83, 67.83500000000001, 67.84, 67.845, 67.85, 67.855, 67.86, 67.865, 67.87, 67.875, 67.88, 67.885, 67.89, 67.895, 67.9, 67.905, 67.91, 67.915, 67.92, 67.925, 67.93, 67.935, 67.94, 67.94500000000001, 67.95, 67.955, 67.96000000000001, 67.965, 67.97, 67.975, 67.98, 67.985, 67.99, 67.995, 68.0, 68.005, 68.01, 68.015, 68.02, 68.025, 68.03, 68.035, 68.04, 68.045, 68.05, 68.055, 68.06, 68.065, 68.07000000000001, 68.075, 68.08, 68.08500000000001, 68.09, 68.095, 68.1, 68.105, 68.11, 68.115, 68.12, 68.125, 68.13, 68.135, 68.14, 68.145, 68.15, 68.155, 68.16, 68.165, 68.17, 68.175, 68.18, 68.185, 68.19, 68.19500000000001, 68.2, 68.205, 68.21000000000001, 68.215, 68.22, 68.225, 68.23, 68.235, 68.24, 68.245, 68.25, 68.255, 68.26, 68.265, 68.27, 68.275, 68.28, 68.285, 68.29, 68.295, 68.3, 68.305, 68.31, 68.315, 68.32000000000001, 68.325, 68.33, 68.33500000000001, 68.34, 68.345, 68.35000000000001, 68.355, 68.36, 68.365, 68.37, 68.375, 68.38, 68.385, 68.39, 68.395, 68.4, 68.405, 68.41, 68.415, 68.42, 68.425, 68.43, 68.435, 68.44, 68.44500000000001, 68.45, 68.455, 68.46000000000001, 68.465, 68.47, 68.47500000000001, 68.48, 68.485, 68.49, 68.495, 68.5, 68.505, 68.51, 68.515, 68.52, 68.525, 68.53, 68.535, 68.54, 68.545, 68.55, 68.555, 68.56, 68.565, 68.57000000000001, 68.575, 68.58, 68.58500000000001, 68.59, 68.595, 68.60000000000001, 68.605, 68.61, 68.615, 68.62, 68.625, 68.63, 68.635, 68.64, 68.645, 68.65, 68.655, 68.66, 68.665, 68.67, 68.675, 68.68, 68.685, 68.69, 68.69500000000001, 68.7, 68.705, 68.71000000000001, 68.715, 68.72, 68.72500000000001, 68.73, 68.735, 68.74, 68.745, 68.75, 68.755, 68.76, 68.765, 68.77, 68.775, 68.78, 68.785, 68.79, 68.795, 68.8, 68.805, 68.81, 68.815, 68.82000000000001, 68.825, 68.83, 68.83500000000001, 68.84, 68.845, 68.85000000000001, 68.855, 68.86, 68.865, 68.87, 68.875, 68.88, 68.885, 68.89, 68.895, 68.9, 68.905, 68.91, 68.915, 68.92, 68.925, 68.93, 68.935, 68.94, 68.94500000000001, 68.95, 68.955, 68.96000000000001, 68.965, 68.97, 68.97500000000001, 68.98, 68.985, 68.99, 68.995, 69.0, 69.005, 69.01, 69.015, 69.02, 69.025, 69.03, 69.035, 69.04, 69.045, 69.05, 69.055, 69.06, 69.065, 69.07000000000001, 69.075, 69.08, 69.08500000000001, 69.09, 69.095, 69.10000000000001, 69.105, 69.11, 69.115, 69.12, 69.125, 69.13, 69.135, 69.14, 69.145, 69.15, 69.155, 69.16, 69.165, 69.17, 69.175, 69.18, 69.185, 69.19, 69.19500000000001, 69.2, 69.205, 69.21000000000001, 69.215, 69.22, 69.22500000000001, 69.23, 69.235, 69.24, 69.245, 69.25, 69.255, 69.26, 69.265, 69.27, 69.275, 69.28, 69.285, 69.29, 69.295, 69.3, 69.305, 69.31, 69.315, 69.32000000000001, 69.325, 69.33, 69.33500000000001, 69.34, 69.345, 69.35000000000001, 69.355, 69.36, 69.365, 69.37, 69.375, 69.38, 69.385, 69.39, 69.395, 69.4, 69.405, 69.41, 69.415, 69.42, 69.425, 69.43, 69.435, 69.44, 69.44500000000001, 69.45, 69.455, 69.46000000000001, 69.465, 69.47, 69.47500000000001, 69.48, 69.485, 69.49, 69.495, 69.5, 69.505, 69.51, 69.515, 69.52, 69.525, 69.53, 69.535, 69.54, 69.545, 69.55, 69.555, 69.56, 69.565, 69.57000000000001, 69.575, 69.58, 69.58500000000001, 69.59, 69.595, 69.60000000000001, 69.605, 69.61, 69.615, 69.62, 69.625, 69.63, 69.635, 69.64, 69.645, 69.65, 69.655, 69.66, 69.665, 69.67, 69.675, 69.68, 69.685, 69.69, 69.69500000000001, 69.7, 69.705, 69.71000000000001, 69.715, 69.72, 69.72500000000001, 69.73, 69.735, 69.74, 69.745, 69.75, 69.755, 69.76, 69.765, 69.77, 69.775, 69.78, 69.785, 69.79, 69.795, 69.8, 69.805, 69.81, 69.815, 69.82000000000001, 69.825, 69.83, 69.83500000000001, 69.84, 69.845, 69.85000000000001, 69.855, 69.86, 69.865, 69.87, 69.875, 69.88, 69.885, 69.89, 69.895, 69.9, 69.905, 69.91, 69.915, 69.92, 69.925, 69.93, 69.935, 69.94, 69.94500000000001, 69.95, 69.955, 69.96000000000001, 69.965, 69.97, 69.97500000000001, 69.98, 69.985, 69.99, 69.995, 70.0, 70.005, 70.01, 70.015, 70.02, 70.025, 70.03, 70.035, 70.04, 70.045, 70.05, 70.055, 70.06, 70.065, 70.07000000000001, 70.075, 70.08, 70.08500000000001, 70.09, 70.095, 70.10000000000001, 70.105, 70.11, 70.115, 70.12, 70.125, 70.13, 70.135, 70.14, 70.145, 70.15, 70.155, 70.16, 70.165, 70.17, 70.175, 70.18, 70.185, 70.19, 70.19500000000001, 70.2, 70.205, 70.21000000000001, 70.215, 70.22, 70.22500000000001, 70.23, 70.235, 70.24, 70.245, 70.25, 70.255, 70.26, 70.265, 70.27, 70.275, 70.28, 70.285, 70.29, 70.295, 70.3, 70.305, 70.31, 70.315, 70.32000000000001, 70.325, 70.33, 70.33500000000001, 70.34, 70.345, 70.35000000000001, 70.355, 70.36, 70.365, 70.37, 70.375, 70.38, 70.385, 70.39, 70.395, 70.4, 70.405, 70.41, 70.415, 70.42, 70.425, 70.43, 70.435, 70.44, 70.44500000000001, 70.45, 70.455, 70.46000000000001, 70.465, 70.47, 70.47500000000001, 70.48, 70.485, 70.49, 70.495, 70.5, 70.505, 70.51, 70.515, 70.52, 70.525, 70.53, 70.535, 70.54, 70.545, 70.55, 70.555, 70.56, 70.565, 70.57000000000001, 70.575, 70.58, 70.58500000000001, 70.59, 70.595, 70.60000000000001, 70.605, 70.61, 70.615, 70.62, 70.625, 70.63, 70.635, 70.64, 70.645, 70.65, 70.655, 70.66, 70.665, 70.67, 70.675, 70.68, 70.685, 70.69, 70.69500000000001, 70.7, 70.705, 70.71000000000001, 70.715, 70.72, 70.72500000000001, 70.73, 70.735, 70.74, 70.745, 70.75, 70.755, 70.76, 70.765, 70.77, 70.775, 70.78, 70.785, 70.79, 70.795, 70.8, 70.805, 70.81, 70.815, 70.82000000000001, 70.825, 70.83, 70.83500000000001, 70.84, 70.845, 70.85000000000001, 70.855, 70.86, 70.865, 70.87, 70.875, 70.88, 70.885, 70.89, 70.895, 70.9, 70.905, 70.91, 70.915, 70.92, 70.925, 70.93, 70.935, 70.94, 70.94500000000001, 70.95, 70.955, 70.96000000000001, 70.965, 70.97, 70.97500000000001, 70.98, 70.985, 70.99, 70.995, 71.0, 71.005, 71.01, 71.015, 71.02, 71.025, 71.03, 71.035, 71.04, 71.045, 71.05, 71.055, 71.06, 71.065, 71.07000000000001, 71.075, 71.08, 71.08500000000001, 71.09, 71.095, 71.10000000000001, 71.105, 71.11, 71.115, 71.12, 71.125, 71.13, 71.135, 71.14, 71.145, 71.15, 71.155, 71.16, 71.165, 71.17, 71.175, 71.18, 71.185, 71.19, 71.19500000000001, 71.2, 71.205, 71.21000000000001, 71.215, 71.22, 71.22500000000001, 71.23, 71.235, 71.24, 71.245, 71.25, 71.255, 71.26, 71.265, 71.27, 71.275, 71.28, 71.285, 71.29, 71.295, 71.3, 71.305, 71.31, 71.315, 71.32000000000001, 71.325, 71.33, 71.33500000000001, 71.34, 71.345, 71.35000000000001, 71.355, 71.36, 71.365, 71.37, 71.375, 71.38, 71.385, 71.39, 71.395, 71.4, 71.405, 71.41, 71.415, 71.42, 71.425, 71.43, 71.435, 71.44, 71.44500000000001, 71.45, 71.455, 71.46000000000001, 71.465, 71.47, 71.47500000000001, 71.48, 71.485, 71.49, 71.495, 71.5, 71.505, 71.51, 71.515, 71.52, 71.525, 71.53, 71.535, 71.54, 71.545, 71.55, 71.555, 71.56, 71.565, 71.57000000000001, 71.575, 71.58, 71.58500000000001, 71.59, 71.595, 71.60000000000001, 71.605, 71.61, 71.615, 71.62, 71.625, 71.63, 71.635, 71.64, 71.645, 71.65, 71.655, 71.66, 71.665, 71.67, 71.675, 71.68, 71.685, 71.69, 71.69500000000001, 71.7, 71.705, 71.71000000000001, 71.715, 71.72, 71.72500000000001, 71.73, 71.735, 71.74, 71.745, 71.75, 71.755, 71.76, 71.765, 71.77, 71.775, 71.78, 71.785, 71.79, 71.795, 71.8, 71.805, 71.81, 71.815, 71.82000000000001, 71.825, 71.83, 71.83500000000001, 71.84, 71.845, 71.85000000000001, 71.855, 71.86, 71.865, 71.87, 71.875, 71.88, 71.885, 71.89, 71.895, 71.9, 71.905, 71.91, 71.915, 71.92, 71.925, 71.93, 71.935, 71.94, 71.94500000000001, 71.95, 71.955, 71.96000000000001, 71.965, 71.97, 71.97500000000001, 71.98, 71.985, 71.99, 71.995, 72.0, 72.005, 72.01, 72.015, 72.02, 72.025, 72.03, 72.035, 72.04, 72.045, 72.05, 72.055, 72.06, 72.065, 72.07000000000001, 72.075, 72.08, 72.08500000000001, 72.09, 72.095, 72.10000000000001, 72.105, 72.11, 72.115, 72.12, 72.125, 72.13, 72.135, 72.14, 72.145, 72.15, 72.155, 72.16, 72.165, 72.17, 72.175, 72.18, 72.185, 72.19, 72.19500000000001, 72.2, 72.205, 72.21000000000001, 72.215, 72.22, 72.22500000000001, 72.23, 72.235, 72.24, 72.245, 72.25, 72.255, 72.26, 72.265, 72.27, 72.275, 72.28, 72.285, 72.29, 72.295, 72.3, 72.305, 72.31, 72.315, 72.32000000000001, 72.325, 72.33, 72.33500000000001, 72.34, 72.345, 72.35000000000001, 72.355, 72.36, 72.365, 72.37, 72.375, 72.38, 72.385, 72.39, 72.395, 72.4, 72.405, 72.41, 72.415, 72.42, 72.425, 72.43, 72.435, 72.44, 72.44500000000001, 72.45, 72.455, 72.46000000000001, 72.465, 72.47, 72.47500000000001, 72.48, 72.485, 72.49, 72.495, 72.5, 72.505, 72.51, 72.515, 72.52, 72.525, 72.53, 72.535, 72.54, 72.545, 72.55, 72.555, 72.56, 72.565, 72.57000000000001, 72.575, 72.58, 72.58500000000001, 72.59, 72.595, 72.60000000000001, 72.605, 72.61, 72.615, 72.62, 72.625, 72.63, 72.635, 72.64, 72.645, 72.65, 72.655, 72.66, 72.665, 72.67, 72.675, 72.68, 72.685, 72.69, 72.69500000000001, 72.7, 72.705, 72.71000000000001, 72.715, 72.72, 72.72500000000001, 72.73, 72.735, 72.74, 72.745, 72.75, 72.755, 72.76, 72.765, 72.77, 72.775, 72.78, 72.785, 72.79, 72.795, 72.8, 72.805, 72.81, 72.815, 72.82000000000001, 72.825, 72.83, 72.83500000000001, 72.84, 72.845, 72.85000000000001, 72.855, 72.86, 72.865, 72.87, 72.875, 72.88, 72.885, 72.89, 72.895, 72.9, 72.905, 72.91, 72.915, 72.92, 72.925, 72.93, 72.935, 72.94, 72.94500000000001, 72.95, 72.955, 72.96000000000001, 72.965, 72.97, 72.97500000000001, 72.98, 72.985, 72.99, 72.995, 73.0, 73.005, 73.01, 73.015, 73.02, 73.025, 73.03, 73.035, 73.04, 73.045, 73.05, 73.055, 73.06, 73.065, 73.07000000000001, 73.075, 73.08, 73.08500000000001, 73.09, 73.095, 73.10000000000001, 73.105, 73.11, 73.115, 73.12, 73.125, 73.13, 73.135, 73.14, 73.145, 73.15, 73.155, 73.16, 73.165, 73.17, 73.175, 73.18, 73.185, 73.19, 73.19500000000001, 73.2, 73.205, 73.21000000000001, 73.215, 73.22, 73.22500000000001, 73.23, 73.235, 73.24, 73.245, 73.25, 73.255, 73.26, 73.265, 73.27, 73.275, 73.28, 73.285, 73.29, 73.295, 73.3, 73.305, 73.31, 73.315, 73.32000000000001, 73.325, 73.33, 73.33500000000001, 73.34, 73.345, 73.35000000000001, 73.355, 73.36, 73.365, 73.37, 73.375, 73.38, 73.385, 73.39, 73.395, 73.4, 73.405, 73.41, 73.415, 73.42, 73.425, 73.43, 73.435, 73.44, 73.44500000000001, 73.45, 73.455, 73.46000000000001, 73.465, 73.47, 73.47500000000001, 73.48, 73.485, 73.49, 73.495, 73.5, 73.505, 73.51, 73.515, 73.52, 73.525, 73.53, 73.535, 73.54, 73.545, 73.55, 73.555, 73.56, 73.565, 73.57000000000001, 73.575, 73.58, 73.58500000000001, 73.59, 73.595, 73.60000000000001, 73.605, 73.61, 73.615, 73.62, 73.625, 73.63, 73.635, 73.64, 73.645, 73.65, 73.655, 73.66, 73.665, 73.67, 73.675, 73.68, 73.685, 73.69, 73.69500000000001, 73.7, 73.705, 73.71000000000001, 73.715, 73.72, 73.72500000000001, 73.73, 73.735, 73.74, 73.745, 73.75, 73.755, 73.76, 73.765, 73.77, 73.775, 73.78, 73.785, 73.79, 73.795, 73.8, 73.805, 73.81, 73.815, 73.82000000000001, 73.825, 73.83, 73.83500000000001, 73.84, 73.845, 73.85000000000001, 73.855, 73.86, 73.865, 73.87, 73.875, 73.88, 73.885, 73.89, 73.895, 73.9, 73.905, 73.91, 73.915, 73.92, 73.925, 73.93, 73.935, 73.94, 73.94500000000001, 73.95, 73.955, 73.96000000000001, 73.965, 73.97, 73.97500000000001, 73.98, 73.985, 73.99, 73.995, 74.0, 74.005, 74.01, 74.015, 74.02, 74.025, 74.03, 74.035, 74.04, 74.045, 74.05, 74.055, 74.06, 74.065, 74.07000000000001, 74.075, 74.08, 74.08500000000001, 74.09, 74.095, 74.10000000000001, 74.105, 74.11, 74.115, 74.12, 74.125, 74.13, 74.135, 74.14, 74.145, 74.15, 74.155, 74.16, 74.165, 74.17, 74.175, 74.18, 74.185, 74.19, 74.19500000000001, 74.2, 74.205, 74.21000000000001, 74.215, 74.22, 74.22500000000001, 74.23, 74.235, 74.24, 74.245, 74.25, 74.255, 74.26, 74.265, 74.27, 74.275, 74.28, 74.285, 74.29, 74.295, 74.3, 74.305, 74.31, 74.315, 74.32000000000001, 74.325, 74.33, 74.33500000000001, 74.34, 74.345, 74.35000000000001, 74.355, 74.36, 74.365, 74.37, 74.375, 74.38, 74.385, 74.39, 74.395, 74.4, 74.405, 74.41, 74.415, 74.42, 74.425, 74.43, 74.435, 74.44, 74.44500000000001, 74.45, 74.455, 74.46000000000001, 74.465, 74.47, 74.47500000000001, 74.48, 74.485, 74.49, 74.495, 74.5, 74.505, 74.51, 74.515, 74.52, 74.525, 74.53, 74.535, 74.54, 74.545, 74.55, 74.555, 74.56, 74.565, 74.57000000000001, 74.575, 74.58, 74.58500000000001, 74.59, 74.595, 74.60000000000001, 74.605, 74.61, 74.615, 74.62, 74.625, 74.63, 74.635, 74.64, 74.645, 74.65, 74.655, 74.66, 74.665, 74.67, 74.675, 74.68, 74.685, 74.69, 74.69500000000001, 74.7, 74.705, 74.71000000000001, 74.715, 74.72, 74.72500000000001, 74.73, 74.735, 74.74, 74.745, 74.75, 74.755, 74.76, 74.765, 74.77, 74.775, 74.78, 74.785, 74.79, 74.795, 74.8, 74.805, 74.81, 74.815, 74.82000000000001, 74.825, 74.83, 74.83500000000001, 74.84, 74.845, 74.85000000000001, 74.855, 74.86, 74.865, 74.87, 74.875, 74.88, 74.885, 74.89, 74.895, 74.9, 74.905, 74.91, 74.915, 74.92, 74.925, 74.93, 74.935, 74.94, 74.94500000000001, 74.95, 74.955, 74.96000000000001, 74.965, 74.97, 74.97500000000001, 74.98, 74.985, 74.99, 74.995, 75.0, 75.005, 75.01, 75.015, 75.02, 75.025, 75.03, 75.035, 75.04, 75.045, 75.05, 75.055, 75.06, 75.065, 75.07000000000001, 75.075, 75.08, 75.08500000000001, 75.09, 75.095, 75.10000000000001, 75.105, 75.11, 75.115, 75.12, 75.125, 75.13, 75.135, 75.14, 75.145, 75.15, 75.155, 75.16, 75.165, 75.17, 75.175, 75.18, 75.185, 75.19, 75.19500000000001, 75.2, 75.205, 75.21000000000001, 75.215, 75.22, 75.22500000000001, 75.23, 75.235, 75.24, 75.245, 75.25, 75.255, 75.26, 75.265, 75.27, 75.275, 75.28, 75.285, 75.29, 75.295, 75.3, 75.305, 75.31, 75.315, 75.32000000000001, 75.325, 75.33, 75.33500000000001, 75.34, 75.345, 75.35000000000001, 75.355, 75.36, 75.365, 75.37, 75.375, 75.38, 75.385, 75.39, 75.395, 75.4, 75.405, 75.41, 75.415, 75.42, 75.425, 75.43, 75.435, 75.44, 75.44500000000001, 75.45, 75.455, 75.46000000000001, 75.465, 75.47, 75.47500000000001, 75.48, 75.485, 75.49, 75.495, 75.5, 75.505, 75.51, 75.515, 75.52, 75.525, 75.53, 75.535, 75.54, 75.545, 75.55, 75.555, 75.56, 75.565, 75.57000000000001, 75.575, 75.58, 75.58500000000001, 75.59, 75.595, 75.60000000000001, 75.605, 75.61, 75.615, 75.62, 75.625, 75.63, 75.635, 75.64, 75.645, 75.65, 75.655, 75.66, 75.665, 75.67, 75.675, 75.68, 75.685, 75.69, 75.69500000000001, 75.7, 75.705, 75.71000000000001, 75.715, 75.72, 75.72500000000001, 75.73, 75.735, 75.74, 75.745, 75.75, 75.755, 75.76, 75.765, 75.77, 75.775, 75.78, 75.785, 75.79, 75.795, 75.8, 75.805, 75.81, 75.815, 75.82000000000001, 75.825, 75.83, 75.83500000000001, 75.84, 75.845, 75.85000000000001, 75.855, 75.86, 75.865, 75.87, 75.875, 75.88, 75.885, 75.89, 75.895, 75.9, 75.905, 75.91, 75.915, 75.92, 75.925, 75.93, 75.935, 75.94, 75.94500000000001, 75.95, 75.955, 75.96000000000001, 75.965, 75.97, 75.97500000000001, 75.98, 75.985, 75.99, 75.995, 76.0, 76.005, 76.01, 76.015, 76.02, 76.025, 76.03, 76.035, 76.04, 76.045, 76.05, 76.055, 76.06, 76.065, 76.07000000000001, 76.075, 76.08, 76.08500000000001, 76.09, 76.095, 76.10000000000001, 76.105, 76.11, 76.115, 76.12, 76.125, 76.13, 76.135, 76.14, 76.145, 76.15, 76.155, 76.16, 76.165, 76.17, 76.175, 76.18, 76.185, 76.19, 76.19500000000001, 76.2, 76.205, 76.21000000000001, 76.215, 76.22, 76.22500000000001, 76.23, 76.235, 76.24, 76.245, 76.25, 76.255, 76.26, 76.265, 76.27, 76.275, 76.28, 76.285, 76.29, 76.295, 76.3, 76.305, 76.31, 76.315, 76.32000000000001, 76.325, 76.33, 76.33500000000001, 76.34, 76.345, 76.35000000000001, 76.355, 76.36, 76.365, 76.37, 76.375, 76.38, 76.385, 76.39, 76.395, 76.4, 76.405, 76.41, 76.415, 76.42, 76.425, 76.43, 76.435, 76.44, 76.44500000000001, 76.45, 76.455, 76.46000000000001, 76.465, 76.47, 76.47500000000001, 76.48, 76.485, 76.49, 76.495, 76.5, 76.505, 76.51, 76.515, 76.52, 76.525, 76.53, 76.535, 76.54, 76.545, 76.55, 76.555, 76.56, 76.565, 76.57000000000001, 76.575, 76.58, 76.58500000000001, 76.59, 76.595, 76.60000000000001, 76.605, 76.61, 76.615, 76.62, 76.625, 76.63, 76.635, 76.64, 76.645, 76.65, 76.655, 76.66, 76.665, 76.67, 76.675, 76.68, 76.685, 76.69, 76.69500000000001, 76.7, 76.705, 76.71000000000001, 76.715, 76.72, 76.72500000000001, 76.73, 76.735, 76.74, 76.745, 76.75, 76.755, 76.76, 76.765, 76.77, 76.775, 76.78, 76.785, 76.79, 76.795, 76.8, 76.805, 76.81, 76.815, 76.82000000000001, 76.825, 76.83, 76.83500000000001, 76.84, 76.845, 76.85000000000001, 76.855, 76.86, 76.865, 76.87, 76.875, 76.88, 76.885, 76.89, 76.895, 76.9, 76.905, 76.91, 76.915, 76.92, 76.925, 76.93, 76.935, 76.94, 76.94500000000001, 76.95, 76.955, 76.96000000000001, 76.965, 76.97, 76.97500000000001, 76.98, 76.985, 76.99, 76.995, 77.0, 77.005, 77.01, 77.015, 77.02, 77.025, 77.03, 77.035, 77.04, 77.045, 77.05, 77.055, 77.06, 77.065, 77.07000000000001, 77.075, 77.08, 77.08500000000001, 77.09, 77.095, 77.10000000000001, 77.105, 77.11, 77.115, 77.12, 77.125, 77.13, 77.135, 77.14, 77.145, 77.15, 77.155, 77.16, 77.165, 77.17, 77.175, 77.18, 77.185, 77.19, 77.19500000000001, 77.2, 77.205, 77.21000000000001, 77.215, 77.22, 77.22500000000001, 77.23, 77.235, 77.24, 77.245, 77.25, 77.255, 77.26, 77.265, 77.27, 77.275, 77.28, 77.285, 77.29, 77.295, 77.3, 77.305, 77.31, 77.315, 77.32000000000001, 77.325, 77.33, 77.33500000000001, 77.34, 77.345, 77.35000000000001, 77.355, 77.36, 77.365, 77.37, 77.375, 77.38, 77.385, 77.39, 77.395, 77.4, 77.405, 77.41, 77.415, 77.42, 77.425, 77.43, 77.435, 77.44, 77.44500000000001, 77.45, 77.455, 77.46000000000001, 77.465, 77.47, 77.47500000000001, 77.48, 77.485, 77.49, 77.495, 77.5, 77.505, 77.51, 77.515, 77.52, 77.525, 77.53, 77.535, 77.54, 77.545, 77.55, 77.555, 77.56, 77.565, 77.57000000000001, 77.575, 77.58, 77.58500000000001, 77.59, 77.595, 77.60000000000001, 77.605, 77.61, 77.615, 77.62, 77.625, 77.63, 77.635, 77.64, 77.645, 77.65, 77.655, 77.66, 77.665, 77.67, 77.675, 77.68, 77.685, 77.69, 77.69500000000001, 77.7, 77.705, 77.71000000000001, 77.715, 77.72, 77.72500000000001, 77.73, 77.735, 77.74, 77.745, 77.75, 77.755, 77.76, 77.765, 77.77, 77.775, 77.78, 77.785, 77.79, 77.795, 77.8, 77.805, 77.81, 77.815, 77.82000000000001, 77.825, 77.83, 77.83500000000001, 77.84, 77.845, 77.85000000000001, 77.855, 77.86, 77.865, 77.87, 77.875, 77.88, 77.885, 77.89, 77.895, 77.9, 77.905, 77.91, 77.915, 77.92, 77.925, 77.93, 77.935, 77.94, 77.94500000000001, 77.95, 77.955, 77.96000000000001, 77.965, 77.97, 77.97500000000001, 77.98, 77.985, 77.99, 77.995, 78.0, 78.005, 78.01, 78.015, 78.02, 78.025, 78.03, 78.035, 78.04, 78.045, 78.05, 78.055, 78.06, 78.065, 78.07000000000001, 78.075, 78.08, 78.08500000000001, 78.09, 78.095, 78.10000000000001, 78.105, 78.11, 78.115, 78.12, 78.125, 78.13, 78.135, 78.14, 78.145, 78.15, 78.155, 78.16, 78.165, 78.17, 78.175, 78.18, 78.185, 78.19, 78.19500000000001, 78.2, 78.205, 78.21000000000001, 78.215, 78.22, 78.22500000000001, 78.23, 78.235, 78.24, 78.245, 78.25, 78.255, 78.26, 78.265, 78.27, 78.275, 78.28, 78.285, 78.29, 78.295, 78.3, 78.305, 78.31, 78.315, 78.32000000000001, 78.325, 78.33, 78.33500000000001, 78.34, 78.345, 78.35000000000001, 78.355, 78.36, 78.365, 78.37, 78.375, 78.38, 78.385, 78.39, 78.395, 78.4, 78.405, 78.41, 78.415, 78.42, 78.425, 78.43, 78.435, 78.44, 78.44500000000001, 78.45, 78.455, 78.46000000000001, 78.465, 78.47, 78.47500000000001, 78.48, 78.485, 78.49, 78.495, 78.5, 78.505, 78.51, 78.515, 78.52, 78.525, 78.53, 78.535, 78.54, 78.545, 78.55, 78.555, 78.56, 78.565, 78.57000000000001, 78.575, 78.58, 78.58500000000001, 78.59, 78.595, 78.60000000000001, 78.605, 78.61, 78.615, 78.62, 78.625, 78.63, 78.635, 78.64, 78.645, 78.65, 78.655, 78.66, 78.665, 78.67, 78.675, 78.68, 78.685, 78.69, 78.69500000000001, 78.7, 78.705, 78.71000000000001, 78.715, 78.72, 78.72500000000001, 78.73, 78.735, 78.74, 78.745, 78.75, 78.755, 78.76, 78.765, 78.77, 78.775, 78.78, 78.785, 78.79, 78.795, 78.8, 78.805, 78.81, 78.815, 78.82000000000001, 78.825, 78.83, 78.83500000000001, 78.84, 78.845, 78.85000000000001, 78.855, 78.86, 78.865, 78.87, 78.875, 78.88, 78.885, 78.89, 78.895, 78.9, 78.905, 78.91, 78.915, 78.92, 78.925, 78.93, 78.935, 78.94, 78.94500000000001, 78.95, 78.955, 78.96000000000001, 78.965, 78.97, 78.97500000000001, 78.98, 78.985, 78.99, 78.995, 79.0, 79.005, 79.01, 79.015, 79.02, 79.025, 79.03, 79.035, 79.04, 79.045, 79.05, 79.055, 79.06, 79.065, 79.07000000000001, 79.075, 79.08, 79.08500000000001, 79.09, 79.095, 79.10000000000001, 79.105, 79.11, 79.115, 79.12, 79.125, 79.13, 79.135, 79.14, 79.145, 79.15, 79.155, 79.16, 79.165, 79.17, 79.175, 79.18, 79.185, 79.19, 79.19500000000001, 79.2, 79.205, 79.21000000000001, 79.215, 79.22, 79.22500000000001, 79.23, 79.235, 79.24, 79.245, 79.25, 79.255, 79.26, 79.265, 79.27, 79.275, 79.28, 79.285, 79.29, 79.295, 79.3, 79.305, 79.31, 79.315, 79.32000000000001, 79.325, 79.33, 79.33500000000001, 79.34, 79.345, 79.35000000000001, 79.355, 79.36, 79.365, 79.37, 79.375, 79.38, 79.385, 79.39, 79.395, 79.4, 79.405, 79.41, 79.415, 79.42, 79.425, 79.43, 79.435, 79.44, 79.44500000000001, 79.45, 79.455, 79.46000000000001, 79.465, 79.47, 79.47500000000001, 79.48, 79.485, 79.49, 79.495, 79.5, 79.505, 79.51, 79.515, 79.52, 79.525, 79.53, 79.535, 79.54, 79.545, 79.55, 79.555, 79.56, 79.565, 79.57000000000001, 79.575, 79.58, 79.58500000000001, 79.59, 79.595, 79.60000000000001, 79.605, 79.61, 79.615, 79.62, 79.625, 79.63, 79.635, 79.64, 79.645, 79.65, 79.655, 79.66, 79.665, 79.67, 79.675, 79.68, 79.685, 79.69, 79.69500000000001, 79.7, 79.705, 79.71000000000001, 79.715, 79.72, 79.72500000000001, 79.73, 79.735, 79.74, 79.745, 79.75, 79.755, 79.76, 79.765, 79.77, 79.775, 79.78, 79.785, 79.79, 79.795, 79.8, 79.805, 79.81, 79.815, 79.82000000000001, 79.825, 79.83, 79.83500000000001, 79.84, 79.845, 79.85000000000001, 79.855, 79.86, 79.865, 79.87, 79.875, 79.88, 79.885, 79.89, 79.895, 79.9, 79.905, 79.91, 79.915, 79.92, 79.925, 79.93, 79.935, 79.94, 79.94500000000001, 79.95, 79.955, 79.96000000000001, 79.965, 79.97, 79.97500000000001, 79.98, 79.985, 79.99, 79.995, 80.0, 80.005, 80.01, 80.015, 80.02, 80.025, 80.03, 80.035, 80.04, 80.045, 80.05, 80.055, 80.06, 80.065, 80.07000000000001, 80.075, 80.08, 80.08500000000001, 80.09, 80.095, 80.10000000000001, 80.105, 80.11, 80.115, 80.12, 80.125, 80.13, 80.135, 80.14, 80.145, 80.15, 80.155, 80.16, 80.165, 80.17, 80.175, 80.18, 80.185, 80.19, 80.19500000000001, 80.2, 80.205, 80.21000000000001, 80.215, 80.22, 80.22500000000001, 80.23, 80.235, 80.24, 80.245, 80.25, 80.255, 80.26, 80.265, 80.27, 80.275, 80.28, 80.285, 80.29, 80.295, 80.3, 80.305, 80.31, 80.315, 80.32000000000001, 80.325, 80.33, 80.33500000000001, 80.34, 80.345, 80.35000000000001, 80.355, 80.36, 80.365, 80.37, 80.375, 80.38, 80.385, 80.39, 80.395, 80.4, 80.405, 80.41, 80.415, 80.42, 80.425, 80.43, 80.435, 80.44, 80.44500000000001, 80.45, 80.455, 80.46000000000001, 80.465, 80.47, 80.47500000000001, 80.48, 80.485, 80.49, 80.495, 80.5, 80.505, 80.51, 80.515, 80.52, 80.525, 80.53, 80.535, 80.54, 80.545, 80.55, 80.555, 80.56, 80.565, 80.57000000000001, 80.575, 80.58, 80.58500000000001, 80.59, 80.595, 80.60000000000001, 80.605, 80.61, 80.615, 80.62, 80.625, 80.63, 80.635, 80.64, 80.645, 80.65, 80.655, 80.66, 80.665, 80.67, 80.675, 80.68, 80.685, 80.69, 80.69500000000001, 80.7, 80.705, 80.71000000000001, 80.715, 80.72, 80.72500000000001, 80.73, 80.735, 80.74, 80.745, 80.75, 80.755, 80.76, 80.765, 80.77, 80.775, 80.78, 80.785, 80.79, 80.795, 80.8, 80.805, 80.81, 80.815, 80.82000000000001, 80.825, 80.83, 80.83500000000001, 80.84, 80.845, 80.85000000000001, 80.855, 80.86, 80.865, 80.87, 80.875, 80.88, 80.885, 80.89, 80.895, 80.9, 80.905, 80.91, 80.915, 80.92, 80.925, 80.93, 80.935, 80.94, 80.94500000000001, 80.95, 80.955, 80.96000000000001, 80.965, 80.97, 80.97500000000001, 80.98, 80.985, 80.99, 80.995, 81.0, 81.005, 81.01, 81.015, 81.02, 81.025, 81.03, 81.035, 81.04, 81.045, 81.05, 81.055, 81.06, 81.065, 81.07000000000001, 81.075, 81.08, 81.08500000000001, 81.09, 81.095, 81.10000000000001, 81.105, 81.11, 81.115, 81.12, 81.125, 81.13, 81.135, 81.14, 81.145, 81.15, 81.155, 81.16, 81.165, 81.17, 81.175, 81.18, 81.185, 81.19, 81.19500000000001, 81.2, 81.205, 81.21000000000001, 81.215, 81.22, 81.22500000000001, 81.23, 81.235, 81.24, 81.245, 81.25, 81.255, 81.26, 81.265, 81.27, 81.275, 81.28, 81.285, 81.29, 81.295, 81.3, 81.305, 81.31, 81.315, 81.32000000000001, 81.325, 81.33, 81.33500000000001, 81.34, 81.345, 81.35000000000001, 81.355, 81.36, 81.365, 81.37, 81.375, 81.38, 81.385, 81.39, 81.395, 81.4, 81.405, 81.41, 81.415, 81.42, 81.425, 81.43, 81.435, 81.44, 81.44500000000001, 81.45, 81.455, 81.46000000000001, 81.465, 81.47, 81.47500000000001, 81.48, 81.485, 81.49, 81.495, 81.5, 81.505, 81.51, 81.515, 81.52, 81.525, 81.53, 81.535, 81.54, 81.545, 81.55, 81.555, 81.56, 81.565, 81.57000000000001, 81.575, 81.58, 81.58500000000001, 81.59, 81.595, 81.60000000000001, 81.605, 81.61, 81.615, 81.62, 81.625, 81.63, 81.635, 81.64, 81.645, 81.65, 81.655, 81.66, 81.665, 81.67, 81.675, 81.68, 81.685, 81.69, 81.69500000000001, 81.7, 81.705, 81.71000000000001, 81.715, 81.72, 81.72500000000001, 81.73, 81.735, 81.74, 81.745, 81.75, 81.755, 81.76, 81.765, 81.77, 81.775, 81.78, 81.785, 81.79, 81.795, 81.8, 81.805, 81.81, 81.815, 81.82000000000001, 81.825, 81.83, 81.83500000000001, 81.84, 81.845, 81.85000000000001, 81.855, 81.86, 81.865, 81.87, 81.875, 81.88, 81.885, 81.89, 81.895, 81.9, 81.905, 81.91, 81.915, 81.92, 81.925, 81.93, 81.935, 81.94, 81.94500000000001, 81.95, 81.955, 81.96000000000001, 81.965, 81.97, 81.97500000000001, 81.98, 81.985, 81.99, 81.995, 82.0, 82.005, 82.01, 82.015, 82.02, 82.025, 82.03, 82.035, 82.04, 82.045, 82.05, 82.055, 82.06, 82.065, 82.07000000000001, 82.075, 82.08, 82.08500000000001, 82.09, 82.095, 82.10000000000001, 82.105, 82.11, 82.115, 82.12, 82.125, 82.13, 82.135, 82.14, 82.145, 82.15, 82.155, 82.16, 82.165, 82.17, 82.175, 82.18, 82.185, 82.19, 82.19500000000001, 82.2, 82.205, 82.21000000000001, 82.215, 82.22, 82.22500000000001, 82.23, 82.235, 82.24, 82.245, 82.25, 82.255, 82.26, 82.265, 82.27, 82.275, 82.28, 82.285, 82.29, 82.295, 82.3, 82.305, 82.31, 82.315, 82.32000000000001, 82.325, 82.33, 82.33500000000001, 82.34, 82.345, 82.35000000000001, 82.355, 82.36, 82.365, 82.37, 82.375, 82.38, 82.385, 82.39, 82.395, 82.4, 82.405, 82.41, 82.415, 82.42, 82.425, 82.43, 82.435, 82.44, 82.44500000000001, 82.45, 82.455, 82.46000000000001, 82.465, 82.47, 82.47500000000001, 82.48, 82.485, 82.49, 82.495, 82.5, 82.505, 82.51, 82.515, 82.52, 82.525, 82.53, 82.535, 82.54, 82.545, 82.55, 82.555, 82.56, 82.565, 82.57000000000001, 82.575, 82.58, 82.58500000000001, 82.59, 82.595, 82.60000000000001, 82.605, 82.61, 82.615, 82.62, 82.625, 82.63, 82.635, 82.64, 82.645, 82.65, 82.655, 82.66, 82.665, 82.67, 82.675, 82.68, 82.685, 82.69, 82.69500000000001, 82.7, 82.705, 82.71000000000001, 82.715, 82.72, 82.72500000000001, 82.73, 82.735, 82.74, 82.745, 82.75, 82.755, 82.76, 82.765, 82.77, 82.775, 82.78, 82.785, 82.79, 82.795, 82.8, 82.805, 82.81, 82.815, 82.82000000000001, 82.825, 82.83, 82.83500000000001, 82.84, 82.845, 82.85000000000001, 82.855, 82.86, 82.865, 82.87, 82.875, 82.88, 82.885, 82.89, 82.895, 82.9, 82.905, 82.91, 82.915, 82.92, 82.925, 82.93, 82.935, 82.94, 82.94500000000001, 82.95, 82.955, 82.96000000000001, 82.965, 82.97, 82.97500000000001, 82.98, 82.985, 82.99, 82.995, 83.0, 83.005, 83.01, 83.015, 83.02, 83.025, 83.03, 83.035, 83.04, 83.045, 83.05, 83.055, 83.06, 83.065, 83.07000000000001, 83.075, 83.08, 83.08500000000001, 83.09, 83.095, 83.10000000000001, 83.105, 83.11, 83.115, 83.12, 83.125, 83.13, 83.135, 83.14, 83.145, 83.15, 83.155, 83.16, 83.165, 83.17, 83.175, 83.18, 83.185, 83.19, 83.19500000000001, 83.2, 83.205, 83.21000000000001, 83.215, 83.22, 83.22500000000001, 83.23, 83.235, 83.24, 83.245, 83.25, 83.255, 83.26, 83.265, 83.27, 83.275, 83.28, 83.285, 83.29, 83.295, 83.3, 83.305, 83.31, 83.315, 83.32000000000001, 83.325, 83.33, 83.33500000000001, 83.34, 83.345, 83.35000000000001, 83.355, 83.36, 83.365, 83.37, 83.375, 83.38, 83.385, 83.39, 83.395, 83.4, 83.405, 83.41, 83.415, 83.42, 83.425, 83.43, 83.435, 83.44, 83.44500000000001, 83.45, 83.455, 83.46000000000001, 83.465, 83.47, 83.47500000000001, 83.48, 83.485, 83.49, 83.495, 83.5, 83.505, 83.51, 83.515, 83.52, 83.525, 83.53, 83.535, 83.54, 83.545, 83.55, 83.555, 83.56, 83.565, 83.57000000000001, 83.575, 83.58, 83.58500000000001, 83.59, 83.595, 83.60000000000001, 83.605, 83.61, 83.615, 83.62, 83.625, 83.63, 83.635, 83.64, 83.645, 83.65, 83.655, 83.66, 83.665, 83.67, 83.675, 83.68, 83.685, 83.69, 83.69500000000001, 83.7, 83.705, 83.71000000000001, 83.715, 83.72, 83.72500000000001, 83.73, 83.735, 83.74, 83.745, 83.75, 83.755, 83.76, 83.765, 83.77, 83.775, 83.78, 83.785, 83.79, 83.795, 83.8, 83.805, 83.81, 83.815, 83.82000000000001, 83.825, 83.83, 83.83500000000001, 83.84, 83.845, 83.85000000000001, 83.855, 83.86, 83.865, 83.87, 83.875, 83.88, 83.885, 83.89, 83.895, 83.9, 83.905, 83.91, 83.915, 83.92, 83.925, 83.93, 83.935, 83.94, 83.94500000000001, 83.95, 83.955, 83.96000000000001, 83.965, 83.97, 83.97500000000001, 83.98, 83.985, 83.99, 83.995, 84.0, 84.005, 84.01, 84.015, 84.02, 84.025, 84.03, 84.035, 84.04, 84.045, 84.05, 84.055, 84.06, 84.065, 84.07000000000001, 84.075, 84.08, 84.08500000000001, 84.09, 84.095, 84.10000000000001, 84.105, 84.11, 84.115, 84.12, 84.125, 84.13, 84.135, 84.14, 84.145, 84.15, 84.155, 84.16, 84.165, 84.17, 84.175, 84.18, 84.185, 84.19, 84.19500000000001, 84.2, 84.205, 84.21000000000001, 84.215, 84.22, 84.22500000000001, 84.23, 84.235, 84.24, 84.245, 84.25, 84.255, 84.26, 84.265, 84.27, 84.275, 84.28, 84.285, 84.29, 84.295, 84.3, 84.305, 84.31, 84.315, 84.32000000000001, 84.325, 84.33, 84.33500000000001, 84.34, 84.345, 84.35000000000001, 84.355, 84.36, 84.365, 84.37, 84.375, 84.38, 84.385, 84.39, 84.395, 84.4, 84.405, 84.41, 84.415, 84.42, 84.425, 84.43, 84.435, 84.44, 84.44500000000001, 84.45, 84.455, 84.46000000000001, 84.465, 84.47, 84.47500000000001, 84.48, 84.485, 84.49, 84.495, 84.5, 84.505, 84.51, 84.515, 84.52, 84.525, 84.53, 84.535, 84.54, 84.545, 84.55, 84.555, 84.56, 84.565, 84.57000000000001, 84.575, 84.58, 84.58500000000001, 84.59, 84.595, 84.60000000000001, 84.605, 84.61, 84.615, 84.62, 84.625, 84.63, 84.635, 84.64, 84.645, 84.65, 84.655, 84.66, 84.665, 84.67, 84.675, 84.68, 84.685, 84.69, 84.69500000000001, 84.7, 84.705, 84.71000000000001, 84.715, 84.72, 84.72500000000001, 84.73, 84.735, 84.74, 84.745, 84.75, 84.755, 84.76, 84.765, 84.77, 84.775, 84.78, 84.785, 84.79, 84.795, 84.8, 84.805, 84.81, 84.815, 84.82000000000001, 84.825, 84.83, 84.83500000000001, 84.84, 84.845, 84.85000000000001, 84.855, 84.86, 84.865, 84.87, 84.875, 84.88, 84.885, 84.89, 84.895, 84.9, 84.905, 84.91, 84.915, 84.92, 84.925, 84.93, 84.935, 84.94, 84.94500000000001, 84.95, 84.955, 84.96000000000001, 84.965, 84.97, 84.97500000000001, 84.98, 84.985, 84.99, 84.995, 85.0, 85.005, 85.01, 85.015, 85.02, 85.025, 85.03, 85.035, 85.04, 85.045, 85.05, 85.055, 85.06, 85.065, 85.07000000000001, 85.075, 85.08, 85.08500000000001, 85.09, 85.095, 85.10000000000001, 85.105, 85.11, 85.115, 85.12, 85.125, 85.13, 85.135, 85.14, 85.145, 85.15, 85.155, 85.16, 85.165, 85.17, 85.175, 85.18, 85.185, 85.19, 85.19500000000001, 85.2, 85.205, 85.21000000000001, 85.215, 85.22, 85.22500000000001, 85.23, 85.235, 85.24, 85.245, 85.25, 85.255, 85.26, 85.265, 85.27, 85.275, 85.28, 85.285, 85.29, 85.295, 85.3, 85.305, 85.31, 85.315, 85.32000000000001, 85.325, 85.33, 85.33500000000001, 85.34, 85.345, 85.35000000000001, 85.355, 85.36, 85.365, 85.37, 85.375, 85.38, 85.385, 85.39, 85.395, 85.4, 85.405, 85.41, 85.415, 85.42, 85.425, 85.43, 85.435, 85.44, 85.44500000000001, 85.45, 85.455, 85.46000000000001, 85.465, 85.47, 85.47500000000001, 85.48, 85.485, 85.49, 85.495, 85.5, 85.505, 85.51, 85.515, 85.52, 85.525, 85.53, 85.535, 85.54, 85.545, 85.55, 85.555, 85.56, 85.565, 85.57000000000001, 85.575, 85.58, 85.58500000000001, 85.59, 85.595, 85.60000000000001, 85.605, 85.61, 85.615, 85.62, 85.625, 85.63, 85.635, 85.64, 85.645, 85.65, 85.655, 85.66, 85.665, 85.67, 85.675, 85.68, 85.685, 85.69, 85.69500000000001, 85.7, 85.705, 85.71000000000001, 85.715, 85.72, 85.72500000000001, 85.73, 85.735, 85.74, 85.745, 85.75, 85.755, 85.76, 85.765, 85.77, 85.775, 85.78, 85.785, 85.79, 85.795, 85.8, 85.805, 85.81, 85.815, 85.82000000000001, 85.825, 85.83, 85.83500000000001, 85.84, 85.845, 85.85000000000001, 85.855, 85.86, 85.865, 85.87, 85.875, 85.88, 85.885, 85.89, 85.895, 85.9, 85.905, 85.91, 85.915, 85.92, 85.925, 85.93, 85.935, 85.94, 85.94500000000001, 85.95, 85.955, 85.96000000000001, 85.965, 85.97, 85.97500000000001, 85.98, 85.985, 85.99, 85.995, 86.0, 86.005, 86.01, 86.015, 86.02, 86.025, 86.03, 86.035, 86.04, 86.045, 86.05, 86.055, 86.06, 86.065, 86.07000000000001, 86.075, 86.08, 86.08500000000001, 86.09, 86.095, 86.10000000000001, 86.105, 86.11, 86.115, 86.12, 86.125, 86.13, 86.135, 86.14, 86.145, 86.15, 86.155, 86.16, 86.165, 86.17, 86.175, 86.18, 86.185, 86.19, 86.19500000000001, 86.2, 86.205, 86.21000000000001, 86.215, 86.22, 86.22500000000001, 86.23, 86.235, 86.24, 86.245, 86.25, 86.255, 86.26, 86.265, 86.27, 86.275, 86.28, 86.285, 86.29, 86.295, 86.3, 86.305, 86.31, 86.315, 86.32000000000001, 86.325, 86.33, 86.33500000000001, 86.34, 86.345, 86.35000000000001, 86.355, 86.36, 86.365, 86.37, 86.375, 86.38, 86.385, 86.39, 86.395, 86.4, 86.405, 86.41, 86.415, 86.42, 86.425, 86.43, 86.435, 86.44, 86.44500000000001, 86.45, 86.455, 86.46000000000001, 86.465, 86.47, 86.47500000000001, 86.48, 86.485, 86.49, 86.495, 86.5, 86.505, 86.51, 86.515, 86.52, 86.525, 86.53, 86.535, 86.54, 86.545, 86.55, 86.555, 86.56, 86.565, 86.57000000000001, 86.575, 86.58, 86.58500000000001, 86.59, 86.595, 86.60000000000001, 86.605, 86.61, 86.615, 86.62, 86.625, 86.63, 86.635, 86.64, 86.645, 86.65, 86.655, 86.66, 86.665, 86.67, 86.675, 86.68, 86.685, 86.69, 86.69500000000001, 86.7, 86.705, 86.71000000000001, 86.715, 86.72, 86.72500000000001, 86.73, 86.735, 86.74, 86.745, 86.75, 86.755, 86.76, 86.765, 86.77, 86.775, 86.78, 86.785, 86.79, 86.795, 86.8, 86.805, 86.81, 86.815, 86.82000000000001, 86.825, 86.83, 86.83500000000001, 86.84, 86.845, 86.85000000000001, 86.855, 86.86, 86.865, 86.87, 86.875, 86.88, 86.885, 86.89, 86.895, 86.9, 86.905, 86.91, 86.915, 86.92, 86.925, 86.93, 86.935, 86.94, 86.94500000000001, 86.95, 86.955, 86.96000000000001, 86.965, 86.97, 86.97500000000001, 86.98, 86.985, 86.99, 86.995, 87.0, 87.005, 87.01, 87.015, 87.02, 87.025, 87.03, 87.035, 87.04, 87.045, 87.05, 87.055, 87.06, 87.065, 87.07000000000001, 87.075, 87.08, 87.08500000000001, 87.09, 87.095, 87.10000000000001, 87.105, 87.11, 87.115, 87.12, 87.125, 87.13, 87.135, 87.14, 87.145, 87.15, 87.155, 87.16, 87.165, 87.17, 87.175, 87.18, 87.185, 87.19, 87.19500000000001, 87.2, 87.205, 87.21000000000001, 87.215, 87.22, 87.22500000000001, 87.23, 87.235, 87.24, 87.245, 87.25, 87.255, 87.26, 87.265, 87.27, 87.275, 87.28, 87.285, 87.29, 87.295, 87.3, 87.305, 87.31, 87.315, 87.32000000000001, 87.325, 87.33, 87.33500000000001, 87.34, 87.345, 87.35000000000001, 87.355, 87.36, 87.365, 87.37, 87.375, 87.38, 87.385, 87.39, 87.395, 87.4, 87.405, 87.41, 87.415, 87.42, 87.425, 87.43, 87.435, 87.44, 87.44500000000001, 87.45, 87.455, 87.46000000000001, 87.465, 87.47, 87.47500000000001, 87.48, 87.485, 87.49, 87.495, 87.5, 87.505, 87.51, 87.515, 87.52, 87.525, 87.53, 87.535, 87.54, 87.545, 87.55, 87.555, 87.56, 87.565, 87.57000000000001, 87.575, 87.58, 87.58500000000001, 87.59, 87.595, 87.60000000000001, 87.605, 87.61, 87.615, 87.62, 87.625, 87.63, 87.635, 87.64, 87.645, 87.65, 87.655, 87.66, 87.665, 87.67, 87.675, 87.68, 87.685, 87.69, 87.69500000000001, 87.7, 87.705, 87.71000000000001, 87.715, 87.72, 87.72500000000001, 87.73, 87.735, 87.74, 87.745, 87.75, 87.755, 87.76, 87.765, 87.77, 87.775, 87.78, 87.785, 87.79, 87.795, 87.8, 87.805, 87.81, 87.815, 87.82000000000001, 87.825, 87.83, 87.83500000000001, 87.84, 87.845, 87.85000000000001, 87.855, 87.86, 87.865, 87.87, 87.875, 87.88, 87.885, 87.89, 87.895, 87.9, 87.905, 87.91, 87.915, 87.92, 87.925, 87.93, 87.935, 87.94, 87.94500000000001, 87.95, 87.955, 87.96000000000001, 87.965, 87.97, 87.97500000000001, 87.98, 87.985, 87.99, 87.995, 88.0, 88.005, 88.01, 88.015, 88.02, 88.025, 88.03, 88.035, 88.04, 88.045, 88.05, 88.055, 88.06, 88.065, 88.07000000000001, 88.075, 88.08, 88.08500000000001, 88.09, 88.095, 88.10000000000001, 88.105, 88.11, 88.115, 88.12, 88.125, 88.13, 88.135, 88.14, 88.145, 88.15, 88.155, 88.16, 88.165, 88.17, 88.175, 88.18, 88.185, 88.19, 88.19500000000001, 88.2, 88.205, 88.21000000000001, 88.215, 88.22, 88.22500000000001, 88.23, 88.235, 88.24, 88.245, 88.25, 88.255, 88.26, 88.265, 88.27, 88.275, 88.28, 88.285, 88.29, 88.295, 88.3, 88.305, 88.31, 88.315, 88.32000000000001, 88.325, 88.33, 88.33500000000001, 88.34, 88.345, 88.35000000000001, 88.355, 88.36, 88.365, 88.37, 88.375, 88.38, 88.385, 88.39, 88.395, 88.4, 88.405, 88.41, 88.415, 88.42, 88.425, 88.43, 88.435, 88.44, 88.44500000000001, 88.45, 88.455, 88.46000000000001, 88.465, 88.47, 88.47500000000001, 88.48, 88.485, 88.49, 88.495, 88.5, 88.505, 88.51, 88.515, 88.52, 88.525, 88.53, 88.535, 88.54, 88.545, 88.55, 88.555, 88.56, 88.565, 88.57000000000001, 88.575, 88.58, 88.58500000000001, 88.59, 88.595, 88.60000000000001, 88.605, 88.61, 88.615, 88.62, 88.625, 88.63, 88.635, 88.64, 88.645, 88.65, 88.655, 88.66, 88.665, 88.67, 88.675, 88.68, 88.685, 88.69, 88.69500000000001, 88.7, 88.705, 88.71000000000001, 88.715, 88.72, 88.72500000000001, 88.73, 88.735, 88.74, 88.745, 88.75, 88.755, 88.76, 88.765, 88.77, 88.775, 88.78, 88.785, 88.79, 88.795, 88.8, 88.805, 88.81, 88.815, 88.82000000000001, 88.825, 88.83, 88.83500000000001, 88.84, 88.845, 88.85000000000001, 88.855, 88.86, 88.865, 88.87, 88.875, 88.88, 88.885, 88.89, 88.895, 88.9, 88.905, 88.91, 88.915, 88.92, 88.925, 88.93, 88.935, 88.94, 88.94500000000001, 88.95, 88.955, 88.96000000000001, 88.965, 88.97, 88.97500000000001, 88.98, 88.985, 88.99, 88.995, 89.0, 89.005, 89.01, 89.015, 89.02, 89.025, 89.03, 89.035, 89.04, 89.045, 89.05, 89.055, 89.06, 89.065, 89.07000000000001, 89.075, 89.08, 89.08500000000001, 89.09, 89.095, 89.10000000000001, 89.105, 89.11, 89.115, 89.12, 89.125, 89.13, 89.135, 89.14, 89.145, 89.15, 89.155, 89.16, 89.165, 89.17, 89.175, 89.18, 89.185, 89.19, 89.19500000000001, 89.2, 89.205, 89.21000000000001, 89.215, 89.22, 89.22500000000001, 89.23, 89.235, 89.24, 89.245, 89.25, 89.255, 89.26, 89.265, 89.27, 89.275, 89.28, 89.285, 89.29, 89.295, 89.3, 89.305, 89.31, 89.315, 89.32000000000001, 89.325, 89.33, 89.33500000000001, 89.34, 89.345, 89.35000000000001, 89.355, 89.36, 89.365, 89.37, 89.375, 89.38, 89.385, 89.39, 89.395, 89.4, 89.405, 89.41, 89.415, 89.42, 89.425, 89.43, 89.435, 89.44, 89.44500000000001, 89.45, 89.455, 89.46000000000001, 89.465, 89.47, 89.47500000000001, 89.48, 89.485, 89.49, 89.495, 89.5, 89.505, 89.51, 89.515, 89.52, 89.525, 89.53, 89.535, 89.54, 89.545, 89.55, 89.555, 89.56, 89.565, 89.57000000000001, 89.575, 89.58, 89.58500000000001, 89.59, 89.595, 89.60000000000001, 89.605, 89.61, 89.615, 89.62, 89.625, 89.63, 89.635, 89.64, 89.645, 89.65, 89.655, 89.66, 89.665, 89.67, 89.675, 89.68, 89.685, 89.69, 89.69500000000001, 89.7, 89.705, 89.71000000000001, 89.715, 89.72, 89.72500000000001, 89.73, 89.735, 89.74, 89.745, 89.75, 89.755, 89.76, 89.765, 89.77, 89.775, 89.78, 89.785, 89.79, 89.795, 89.8, 89.805, 89.81, 89.815, 89.82000000000001, 89.825, 89.83, 89.83500000000001, 89.84, 89.845, 89.85000000000001, 89.855, 89.86, 89.865, 89.87, 89.875, 89.88, 89.885, 89.89, 89.895, 89.9, 89.905, 89.91, 89.915, 89.92, 89.925, 89.93, 89.935, 89.94, 89.94500000000001, 89.95, 89.955, 89.96000000000001, 89.965, 89.97, 89.97500000000001, 89.98, 89.985, 89.99, 89.995])
ops.groundMotion(1139, 'Plain', *['-accel', 1141], '-fact', 9806.65)
ops.imposedMotion(4, 1, 1139)
ops.imposedMotion(4, 2, 1139)
ops.imposedMotion(4, 3, 1139)
ops.constraints(*['Transformation'])
ops.integrator(*['Newmark', 0.5, 0.25])
ops.numberer(*['RCM'])
ops.system(*['BandSPD'])
ops.test(*['NormDispIncr', 9, 10, 0, 2])
ops.algorithm(*['Newton', False, False, False])
ops.analysis('Transient')
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.wipe()
ops.node(4, *(0.0, 0.0, 0.0))
ops.mass(4, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(9, *(0.0, 0.0, 1000.0))
ops.mass(9, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(9, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(11, *(0.0, 0.0, 2000.0))
ops.mass(11, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(11, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(13, *(0.0, 0.0, 3000.0))
ops.mass(13, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(13, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(15, *(0.0, 0.0, 4000.0))
ops.mass(15, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(15, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(17, *(0.0, 0.0, 5000.0))
ops.mass(17, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(17, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(19, *(0.0, 0.0, 6000.0))
ops.mass(19, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(19, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(21, *(0.0, 0.0, 7000.0))
ops.mass(21, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(21, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(23, *(0.0, 0.0, 8000.0))
ops.mass(23, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(23, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(25, *(0.0, 0.0, 9000.0))
ops.mass(25, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(25, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(6, *(0.0, 0.0, 10000.0))
ops.mass(6, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(4, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(64, *(0.0, 0.0, -2000.0))
ops.mass(64, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(64, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(66, *(0.0, 0.0, -4000.0))
ops.mass(66, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(66, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(68, *(0.0, 0.0, -6000.0))
ops.mass(68, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(68, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(70, *(0.0, 0.0, -8000.0))
ops.mass(70, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(70, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(72, *(0.0, 0.0, -10000.0))
ops.mass(72, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(72, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(74, *(0.0, 0.0, -12000.0))
ops.mass(74, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(74, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(76, *(0.0, 0.0, -14000.0))
ops.mass(76, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(76, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(78, *(0.0, 0.0, -16000.0))
ops.mass(78, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(78, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(80, *(0.0, 0.0, -18000.0))
ops.mass(80, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.mass(80, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.node(62, *(0.0, 0.0, -20000.0))
ops.mass(62, 7539822.368615503, 7539822.368615503, 7539822.368615503)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.node(135, *(-1001.0, 2999.0, -22001.0))
ops.node(134, *(-3001.0, 2999.0, -22001.0))
ops.node(132, *(-3001.0, 999.0, -22001.0))
ops.node(133, *(-1001.0, 999.0, -22001.0))
ops.node(142, *(-1001.0, 2999.0, -20001.0))
ops.node(140, *(-3001.0, 2999.0, -20001.0))
ops.node(136, *(-3001.0, 999.0, -20001.0))
ops.node(138, *(-1001.0, 999.0, -20001.0))
ops.node(150, *(-1001.0, 2999.0, -18001.0))
ops.node(148, *(-3001.0, 2999.0, -18001.0))
ops.node(144, *(-3001.0, 999.0, -18001.0))
ops.node(146, *(-1001.0, 999.0, -18001.0))
ops.node(158, *(-1001.0, 2999.0, -16001.0))
ops.node(156, *(-3001.0, 2999.0, -16001.0))
ops.node(152, *(-3001.0, 999.0, -16001.0))
ops.node(154, *(-1001.0, 999.0, -16001.0))
ops.node(166, *(-1001.0, 2999.0, -14001.0))
ops.node(164, *(-3001.0, 2999.0, -14001.0))
ops.node(160, *(-3001.0, 999.0, -14001.0))
ops.node(162, *(-1001.0, 999.0, -14001.0))
ops.node(174, *(-1001.0, 2999.0, -12001.0))
ops.node(172, *(-3001.0, 2999.0, -12001.0))
ops.node(168, *(-3001.0, 999.0, -12001.0))
ops.node(170, *(-1001.0, 999.0, -12001.0))
ops.node(182, *(-1001.0, 2999.0, -10001.0))
ops.node(180, *(-3001.0, 2999.0, -10001.0))
ops.node(176, *(-3001.0, 999.0, -10001.0))
ops.node(178, *(-1001.0, 999.0, -10001.0))
ops.node(190, *(-1001.0, 2999.0, -8001.0))
ops.node(188, *(-3001.0, 2999.0, -8001.0))
ops.node(184, *(-3001.0, 999.0, -8001.0))
ops.node(186, *(-1001.0, 999.0, -8001.0))
ops.node(198, *(-1001.0, 2999.0, -6001.0))
ops.node(196, *(-3001.0, 2999.0, -6001.0))
ops.node(192, *(-3001.0, 999.0, -6001.0))
ops.node(194, *(-1001.0, 999.0, -6001.0))
ops.node(206, *(-1001.0, 2999.0, -4001.0))
ops.node(204, *(-3001.0, 2999.0, -4001.0))
ops.node(200, *(-3001.0, 999.0, -4001.0))
ops.node(202, *(-1001.0, 999.0, -4001.0))
ops.node(214, *(-1001.0, 2999.0, -2001.0))
ops.node(212, *(-3001.0, 2999.0, -2001.0))
ops.node(208, *(-3001.0, 999.0, -2001.0))
ops.node(210, *(-1001.0, 999.0, -2001.0))
ops.node(219, *(-1001.0, 2999.0, -1.0))
ops.node(218, *(-3001.0, 2999.0, -1.0))
ops.node(216, *(-3001.0, 999.0, -1.0))
ops.node(217, *(-1001.0, 999.0, -1.0))
ops.node(245, *(-1001.0, -1.0, -22001.0))
ops.node(243, *(-3001.0, -1.0, -22001.0))
ops.node(241, *(-3001.0, -1001.0, -22001.0))
ops.node(242, *(-1001.0, -1001.0, -22001.0))
ops.node(253, *(-1001.0, -1.0, -20001.0))
ops.node(251, *(-3001.0, -1.0, -20001.0))
ops.node(247, *(-3001.0, -1001.0, -20001.0))
ops.node(249, *(-1001.0, -1001.0, -20001.0))
ops.node(261, *(-1001.0, -1.0, -18001.0))
ops.node(259, *(-3001.0, -1.0, -18001.0))
ops.node(255, *(-3001.0, -1001.0, -18001.0))
ops.node(257, *(-1001.0, -1001.0, -18001.0))
ops.node(269, *(-1001.0, -1.0, -16001.0))
ops.node(267, *(-3001.0, -1.0, -16001.0))
ops.node(263, *(-3001.0, -1001.0, -16001.0))
ops.node(265, *(-1001.0, -1001.0, -16001.0))
ops.node(277, *(-1001.0, -1.0, -14001.0))
ops.node(275, *(-3001.0, -1.0, -14001.0))
ops.node(271, *(-3001.0, -1001.0, -14001.0))
ops.node(273, *(-1001.0, -1001.0, -14001.0))
ops.node(285, *(-1001.0, -1.0, -12001.0))
ops.node(283, *(-3001.0, -1.0, -12001.0))
ops.node(279, *(-3001.0, -1001.0, -12001.0))
ops.node(281, *(-1001.0, -1001.0, -12001.0))
ops.node(293, *(-1001.0, -1.0, -10001.0))
ops.node(291, *(-3001.0, -1.0, -10001.0))
ops.node(287, *(-3001.0, -1001.0, -10001.0))
ops.node(289, *(-1001.0, -1001.0, -10001.0))
ops.node(301, *(-1001.0, -1.0, -8001.0))
ops.node(299, *(-3001.0, -1.0, -8001.0))
ops.node(295, *(-3001.0, -1001.0, -8001.0))
ops.node(297, *(-1001.0, -1001.0, -8001.0))
ops.node(309, *(-1001.0, -1.0, -6001.0))
ops.node(307, *(-3001.0, -1.0, -6001.0))
ops.node(303, *(-3001.0, -1001.0, -6001.0))
ops.node(305, *(-1001.0, -1001.0, -6001.0))
ops.node(317, *(-1001.0, -1.0, -4001.0))
ops.node(315, *(-3001.0, -1.0, -4001.0))
ops.node(311, *(-3001.0, -1001.0, -4001.0))
ops.node(313, *(-1001.0, -1001.0, -4001.0))
ops.node(325, *(-1001.0, -1.0, -2001.0))
ops.node(323, *(-3001.0, -1.0, -2001.0))
ops.node(319, *(-3001.0, -1001.0, -2001.0))
ops.node(321, *(-1001.0, -1001.0, -2001.0))
ops.node(331, *(-1001.0, -1.0, -1.0))
ops.node(329, *(-3001.0, -1.0, -1.0))
ops.node(327, *(-3001.0, -1001.0, -1.0))
ops.node(328, *(-1001.0, -1001.0, -1.0))
ops.node(364, *(-3001.0, -3001.0, -22001.0))
ops.node(365, *(-1001.0, -3001.0, -22001.0))
ops.node(366, *(-3001.0, -3001.0, -20001.0))
ops.node(368, *(-1001.0, -3001.0, -20001.0))
ops.node(370, *(-3001.0, -3001.0, -18001.0))
ops.node(372, *(-1001.0, -3001.0, -18001.0))
ops.node(374, *(-3001.0, -3001.0, -16001.0))
ops.node(376, *(-1001.0, -3001.0, -16001.0))
ops.node(378, *(-3001.0, -3001.0, -14001.0))
ops.node(380, *(-1001.0, -3001.0, -14001.0))
ops.node(382, *(-3001.0, -3001.0, -12001.0))
ops.node(384, *(-1001.0, -3001.0, -12001.0))
ops.node(386, *(-3001.0, -3001.0, -10001.0))
ops.node(388, *(-1001.0, -3001.0, -10001.0))
ops.node(390, *(-3001.0, -3001.0, -8001.0))
ops.node(392, *(-1001.0, -3001.0, -8001.0))
ops.node(394, *(-3001.0, -3001.0, -6001.0))
ops.node(396, *(-1001.0, -3001.0, -6001.0))
ops.node(398, *(-3001.0, -3001.0, -4001.0))
ops.node(400, *(-1001.0, -3001.0, -4001.0))
ops.node(402, *(-3001.0, -3001.0, -2001.0))
ops.node(404, *(-1001.0, -3001.0, -2001.0))
ops.node(406, *(-3001.0, -3001.0, -1.0))
ops.node(407, *(-1001.0, -3001.0, -1.0))
ops.node(431, *(-1.0, -1001.0, -22001.0))
ops.node(428, *(-1.0, -3001.0, -22001.0))
ops.node(438, *(-1.0, -1001.0, -20001.0))
ops.node(434, *(-1.0, -3001.0, -20001.0))
ops.node(446, *(-1.0, -1001.0, -18001.0))
ops.node(442, *(-1.0, -3001.0, -18001.0))
ops.node(454, *(-1.0, -1001.0, -16001.0))
ops.node(450, *(-1.0, -3001.0, -16001.0))
ops.node(462, *(-1.0, -1001.0, -14001.0))
ops.node(458, *(-1.0, -3001.0, -14001.0))
ops.node(470, *(-1.0, -1001.0, -12001.0))
ops.node(466, *(-1.0, -3001.0, -12001.0))
ops.node(478, *(-1.0, -1001.0, -10001.0))
ops.node(474, *(-1.0, -3001.0, -10001.0))
ops.node(486, *(-1.0, -1001.0, -8001.0))
ops.node(482, *(-1.0, -3001.0, -8001.0))
ops.node(494, *(-1.0, -1001.0, -6001.0))
ops.node(490, *(-1.0, -3001.0, -6001.0))
ops.node(502, *(-1.0, -1001.0, -4001.0))
ops.node(498, *(-1.0, -3001.0, -4001.0))
ops.node(510, *(-1.0, -1001.0, -2001.0))
ops.node(506, *(-1.0, -3001.0, -2001.0))
ops.node(517, *(-1.0, -1001.0, -1.0))
ops.node(514, *(-1.0, -3001.0, -1.0))
ops.node(433, *(999.0, -1001.0, -22001.0))
ops.node(430, *(999.0, -3001.0, -22001.0))
ops.node(440, *(999.0, -1001.0, -20001.0))
ops.node(436, *(999.0, -3001.0, -20001.0))
ops.node(448, *(999.0, -1001.0, -18001.0))
ops.node(444, *(999.0, -3001.0, -18001.0))
ops.node(456, *(999.0, -1001.0, -16001.0))
ops.node(452, *(999.0, -3001.0, -16001.0))
ops.node(464, *(999.0, -1001.0, -14001.0))
ops.node(460, *(999.0, -3001.0, -14001.0))
ops.node(472, *(999.0, -1001.0, -12001.0))
ops.node(468, *(999.0, -3001.0, -12001.0))
ops.node(480, *(999.0, -1001.0, -10001.0))
ops.node(476, *(999.0, -3001.0, -10001.0))
ops.node(488, *(999.0, -1001.0, -8001.0))
ops.node(484, *(999.0, -3001.0, -8001.0))
ops.node(496, *(999.0, -1001.0, -6001.0))
ops.node(492, *(999.0, -3001.0, -6001.0))
ops.node(504, *(999.0, -1001.0, -4001.0))
ops.node(500, *(999.0, -3001.0, -4001.0))
ops.node(512, *(999.0, -1001.0, -2001.0))
ops.node(508, *(999.0, -3001.0, -2001.0))
ops.node(519, *(999.0, -1001.0, -1.0))
ops.node(516, *(999.0, -3001.0, -1.0))
ops.node(552, *(2999.0, -1001.0, -22001.0))
ops.node(551, *(2999.0, -3001.0, -22001.0))
ops.node(555, *(2999.0, -1001.0, -20001.0))
ops.node(553, *(2999.0, -3001.0, -20001.0))
ops.node(559, *(2999.0, -1001.0, -18001.0))
ops.node(557, *(2999.0, -3001.0, -18001.0))
ops.node(563, *(2999.0, -1001.0, -16001.0))
ops.node(561, *(2999.0, -3001.0, -16001.0))
ops.node(567, *(2999.0, -1001.0, -14001.0))
ops.node(565, *(2999.0, -3001.0, -14001.0))
ops.node(571, *(2999.0, -1001.0, -12001.0))
ops.node(569, *(2999.0, -3001.0, -12001.0))
ops.node(575, *(2999.0, -1001.0, -10001.0))
ops.node(573, *(2999.0, -3001.0, -10001.0))
ops.node(579, *(2999.0, -1001.0, -8001.0))
ops.node(577, *(2999.0, -3001.0, -8001.0))
ops.node(583, *(2999.0, -1001.0, -6001.0))
ops.node(581, *(2999.0, -3001.0, -6001.0))
ops.node(587, *(2999.0, -1001.0, -4001.0))
ops.node(585, *(2999.0, -3001.0, -4001.0))
ops.node(591, *(2999.0, -1001.0, -2001.0))
ops.node(589, *(2999.0, -3001.0, -2001.0))
ops.node(594, *(2999.0, -1001.0, -1.0))
ops.node(593, *(2999.0, -3001.0, -1.0))
ops.node(617, *(2999.0, -1.0, -22001.0))
ops.node(615, *(999.0, -1.0, -22001.0))
ops.node(623, *(2999.0, -1.0, -20001.0))
ops.node(621, *(999.0, -1.0, -20001.0))
ops.node(631, *(2999.0, -1.0, -18001.0))
ops.node(629, *(999.0, -1.0, -18001.0))
ops.node(639, *(2999.0, -1.0, -16001.0))
ops.node(637, *(999.0, -1.0, -16001.0))
ops.node(647, *(2999.0, -1.0, -14001.0))
ops.node(645, *(999.0, -1.0, -14001.0))
ops.node(655, *(2999.0, -1.0, -12001.0))
ops.node(653, *(999.0, -1.0, -12001.0))
ops.node(663, *(2999.0, -1.0, -10001.0))
ops.node(661, *(999.0, -1.0, -10001.0))
ops.node(671, *(2999.0, -1.0, -8001.0))
ops.node(669, *(999.0, -1.0, -8001.0))
ops.node(679, *(2999.0, -1.0, -6001.0))
ops.node(677, *(999.0, -1.0, -6001.0))
ops.node(687, *(2999.0, -1.0, -4001.0))
ops.node(685, *(999.0, -1.0, -4001.0))
ops.node(695, *(2999.0, -1.0, -2001.0))
ops.node(693, *(999.0, -1.0, -2001.0))
ops.node(703, *(2999.0, -1.0, -1.0))
ops.node(701, *(999.0, -1.0, -1.0))
ops.node(620, *(2999.0, 999.0, -22001.0))
ops.node(619, *(999.0, 999.0, -22001.0))
ops.node(627, *(2999.0, 999.0, -20001.0))
ops.node(625, *(999.0, 999.0, -20001.0))
ops.node(635, *(2999.0, 999.0, -18001.0))
ops.node(633, *(999.0, 999.0, -18001.0))
ops.node(643, *(2999.0, 999.0, -16001.0))
ops.node(641, *(999.0, 999.0, -16001.0))
ops.node(651, *(2999.0, 999.0, -14001.0))
ops.node(649, *(999.0, 999.0, -14001.0))
ops.node(659, *(2999.0, 999.0, -12001.0))
ops.node(657, *(999.0, 999.0, -12001.0))
ops.node(667, *(2999.0, 999.0, -10001.0))
ops.node(665, *(999.0, 999.0, -10001.0))
ops.node(675, *(2999.0, 999.0, -8001.0))
ops.node(673, *(999.0, 999.0, -8001.0))
ops.node(683, *(2999.0, 999.0, -6001.0))
ops.node(681, *(999.0, 999.0, -6001.0))
ops.node(691, *(2999.0, 999.0, -4001.0))
ops.node(689, *(999.0, 999.0, -4001.0))
ops.node(699, *(2999.0, 999.0, -2001.0))
ops.node(697, *(999.0, 999.0, -2001.0))
ops.node(706, *(2999.0, 999.0, -1.0))
ops.node(705, *(999.0, 999.0, -1.0))
ops.node(739, *(2999.0, 2999.0, -22001.0))
ops.node(738, *(999.0, 2999.0, -22001.0))
ops.node(742, *(2999.0, 2999.0, -20001.0))
ops.node(740, *(999.0, 2999.0, -20001.0))
ops.node(746, *(2999.0, 2999.0, -18001.0))
ops.node(744, *(999.0, 2999.0, -18001.0))
ops.node(750, *(2999.0, 2999.0, -16001.0))
ops.node(748, *(999.0, 2999.0, -16001.0))
ops.node(754, *(2999.0, 2999.0, -14001.0))
ops.node(752, *(999.0, 2999.0, -14001.0))
ops.node(758, *(2999.0, 2999.0, -12001.0))
ops.node(756, *(999.0, 2999.0, -12001.0))
ops.node(762, *(2999.0, 2999.0, -10001.0))
ops.node(760, *(999.0, 2999.0, -10001.0))
ops.node(766, *(2999.0, 2999.0, -8001.0))
ops.node(764, *(999.0, 2999.0, -8001.0))
ops.node(770, *(2999.0, 2999.0, -6001.0))
ops.node(768, *(999.0, 2999.0, -6001.0))
ops.node(774, *(2999.0, 2999.0, -4001.0))
ops.node(772, *(999.0, 2999.0, -4001.0))
ops.node(778, *(2999.0, 2999.0, -2001.0))
ops.node(776, *(999.0, 2999.0, -2001.0))
ops.node(781, *(2999.0, 2999.0, -1.0))
ops.node(780, *(999.0, 2999.0, -1.0))
ops.node(796, *(-1.0, 2999.0, -22001.0))
ops.node(794, *(-1.0, 999.0, -22001.0))
ops.node(800, *(-1.0, 2999.0, -20001.0))
ops.node(798, *(-1.0, 999.0, -20001.0))
ops.node(804, *(-1.0, 2999.0, -18001.0))
ops.node(802, *(-1.0, 999.0, -18001.0))
ops.node(808, *(-1.0, 2999.0, -16001.0))
ops.node(806, *(-1.0, 999.0, -16001.0))
ops.node(812, *(-1.0, 2999.0, -14001.0))
ops.node(810, *(-1.0, 999.0, -14001.0))
ops.node(816, *(-1.0, 2999.0, -12001.0))
ops.node(814, *(-1.0, 999.0, -12001.0))
ops.node(820, *(-1.0, 2999.0, -10001.0))
ops.node(818, *(-1.0, 999.0, -10001.0))
ops.node(824, *(-1.0, 2999.0, -8001.0))
ops.node(822, *(-1.0, 999.0, -8001.0))
ops.node(828, *(-1.0, 2999.0, -6001.0))
ops.node(826, *(-1.0, 999.0, -6001.0))
ops.node(832, *(-1.0, 2999.0, -4001.0))
ops.node(830, *(-1.0, 999.0, -4001.0))
ops.node(836, *(-1.0, 2999.0, -2001.0))
ops.node(834, *(-1.0, 999.0, -2001.0))
ops.node(840, *(-1.0, 2999.0, -1.0))
ops.node(838, *(-1.0, 999.0, -1.0))
ops.node(865, *(-1.0, -1.0, -22001.0))
ops.node(867, *(-1.0, -1.0, -20001.0))
ops.node(869, *(-1.0, -1.0, -18001.0))
ops.node(871, *(-1.0, -1.0, -16001.0))
ops.node(873, *(-1.0, -1.0, -14001.0))
ops.node(875, *(-1.0, -1.0, -12001.0))
ops.node(877, *(-1.0, -1.0, -10001.0))
ops.node(879, *(-1.0, -1.0, -8001.0))
ops.node(881, *(-1.0, -1.0, -6001.0))
ops.node(883, *(-1.0, -1.0, -4001.0))
ops.node(885, *(-1.0, -1.0, -2001.0))
ops.node(887, *(-1.0, -1.0, -1.0))
ops.fix(62, *[1, 1, 1, 1, 1, 1])
ops.uniaxialMaterial("PySimple1", 1098, 2, 225720000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1099, 2, 163568282.34532753, 166.66666666666666, c=0.0)
ops.fix(132, *[1, 1, 1, 1, 1, 1])
ops.fix(134, *[1, 1, 1, 1, 1, 1])
ops.fix(133, *[1, 1, 1, 1, 1, 1])
ops.fix(135, *[1, 1, 1, 1, 1, 1])
ops.fix(241, *[1, 1, 1, 1, 1, 1])
ops.fix(243, *[1, 1, 1, 1, 1, 1])
ops.fix(242, *[1, 1, 1, 1, 1, 1])
ops.fix(245, *[1, 1, 1, 1, 1, 1])
ops.fix(364, *[1, 1, 1, 1, 1, 1])
ops.fix(365, *[1, 1, 1, 1, 1, 1])
ops.fix(428, *[1, 1, 1, 1, 1, 1])
ops.fix(431, *[1, 1, 1, 1, 1, 1])
ops.fix(430, *[1, 1, 1, 1, 1, 1])
ops.fix(433, *[1, 1, 1, 1, 1, 1])
ops.fix(551, *[1, 1, 1, 1, 1, 1])
ops.fix(552, *[1, 1, 1, 1, 1, 1])
ops.fix(615, *[1, 1, 1, 1, 1, 1])
ops.fix(619, *[1, 1, 1, 1, 1, 1])
ops.fix(617, *[1, 1, 1, 1, 1, 1])
ops.fix(620, *[1, 1, 1, 1, 1, 1])
ops.fix(738, *[1, 1, 1, 1, 1, 1])
ops.fix(739, *[1, 1, 1, 1, 1, 1])
ops.fix(794, *[1, 1, 1, 1, 1, 1])
ops.fix(796, *[1, 1, 1, 1, 1, 1])
ops.fix(865, *[1, 1, 1, 1, 1, 1])
ops.equalDOF(140, 366, *[1, 2, 3])
ops.equalDOF(140, 742, *[1, 2, 3])
ops.equalDOF(366, 553, *[1, 2, 3])
ops.equalDOF(148, 370, *[1, 2, 3])
ops.equalDOF(148, 746, *[1, 2, 3])
ops.equalDOF(370, 557, *[1, 2, 3])
ops.equalDOF(156, 374, *[1, 2, 3])
ops.equalDOF(156, 750, *[1, 2, 3])
ops.equalDOF(374, 561, *[1, 2, 3])
ops.equalDOF(164, 378, *[1, 2, 3])
ops.equalDOF(164, 754, *[1, 2, 3])
ops.equalDOF(378, 565, *[1, 2, 3])
ops.equalDOF(172, 382, *[1, 2, 3])
ops.equalDOF(172, 758, *[1, 2, 3])
ops.equalDOF(382, 569, *[1, 2, 3])
ops.equalDOF(180, 386, *[1, 2, 3])
ops.equalDOF(180, 762, *[1, 2, 3])
ops.equalDOF(386, 573, *[1, 2, 3])
ops.equalDOF(188, 390, *[1, 2, 3])
ops.equalDOF(188, 766, *[1, 2, 3])
ops.equalDOF(390, 577, *[1, 2, 3])
ops.equalDOF(196, 394, *[1, 2, 3])
ops.equalDOF(196, 770, *[1, 2, 3])
ops.equalDOF(394, 581, *[1, 2, 3])
ops.equalDOF(204, 398, *[1, 2, 3])
ops.equalDOF(204, 774, *[1, 2, 3])
ops.equalDOF(398, 585, *[1, 2, 3])
ops.equalDOF(212, 402, *[1, 2, 3])
ops.equalDOF(212, 778, *[1, 2, 3])
ops.equalDOF(402, 589, *[1, 2, 3])
ops.equalDOF(218, 406, *[1, 2, 3])
ops.equalDOF(218, 781, *[1, 2, 3])
ops.equalDOF(406, 593, *[1, 2, 3])
ops.equalDOF(142, 368, *[1, 2, 3])
ops.equalDOF(150, 372, *[1, 2, 3])
ops.equalDOF(158, 376, *[1, 2, 3])
ops.equalDOF(166, 380, *[1, 2, 3])
ops.equalDOF(174, 384, *[1, 2, 3])
ops.equalDOF(182, 388, *[1, 2, 3])
ops.equalDOF(190, 392, *[1, 2, 3])
ops.equalDOF(198, 396, *[1, 2, 3])
ops.equalDOF(206, 400, *[1, 2, 3])
ops.equalDOF(214, 404, *[1, 2, 3])
ops.equalDOF(219, 407, *[1, 2, 3])
ops.equalDOF(800, 434, *[1, 2, 3])
ops.equalDOF(804, 442, *[1, 2, 3])
ops.equalDOF(808, 450, *[1, 2, 3])
ops.equalDOF(812, 458, *[1, 2, 3])
ops.equalDOF(816, 466, *[1, 2, 3])
ops.equalDOF(820, 474, *[1, 2, 3])
ops.equalDOF(824, 482, *[1, 2, 3])
ops.equalDOF(828, 490, *[1, 2, 3])
ops.equalDOF(832, 498, *[1, 2, 3])
ops.equalDOF(836, 506, *[1, 2, 3])
ops.equalDOF(840, 514, *[1, 2, 3])
ops.equalDOF(740, 436, *[1, 2, 3])
ops.equalDOF(744, 444, *[1, 2, 3])
ops.equalDOF(748, 452, *[1, 2, 3])
ops.equalDOF(752, 460, *[1, 2, 3])
ops.equalDOF(756, 468, *[1, 2, 3])
ops.equalDOF(760, 476, *[1, 2, 3])
ops.equalDOF(764, 484, *[1, 2, 3])
ops.equalDOF(768, 492, *[1, 2, 3])
ops.equalDOF(772, 500, *[1, 2, 3])
ops.equalDOF(776, 508, *[1, 2, 3])
ops.equalDOF(780, 516, *[1, 2, 3])
ops.equalDOF(742, 553, *[1, 2, 3])
ops.equalDOF(746, 557, *[1, 2, 3])
ops.equalDOF(750, 561, *[1, 2, 3])
ops.equalDOF(754, 565, *[1, 2, 3])
ops.equalDOF(758, 569, *[1, 2, 3])
ops.equalDOF(762, 573, *[1, 2, 3])
ops.equalDOF(766, 577, *[1, 2, 3])
ops.equalDOF(770, 581, *[1, 2, 3])
ops.equalDOF(774, 585, *[1, 2, 3])
ops.equalDOF(778, 589, *[1, 2, 3])
ops.equalDOF(781, 593, *[1, 2, 3])
ops.equalDOF(136, 627, *[1, 2, 3])
ops.equalDOF(144, 635, *[1, 2, 3])
ops.equalDOF(152, 643, *[1, 2, 3])
ops.equalDOF(160, 651, *[1, 2, 3])
ops.equalDOF(168, 659, *[1, 2, 3])
ops.equalDOF(176, 667, *[1, 2, 3])
ops.equalDOF(184, 675, *[1, 2, 3])
ops.equalDOF(192, 683, *[1, 2, 3])
ops.equalDOF(200, 691, *[1, 2, 3])
ops.equalDOF(208, 699, *[1, 2, 3])
ops.equalDOF(216, 706, *[1, 2, 3])
ops.equalDOF(247, 555, *[1, 2, 3])
ops.equalDOF(255, 559, *[1, 2, 3])
ops.equalDOF(263, 563, *[1, 2, 3])
ops.equalDOF(271, 567, *[1, 2, 3])
ops.equalDOF(279, 571, *[1, 2, 3])
ops.equalDOF(287, 575, *[1, 2, 3])
ops.equalDOF(295, 579, *[1, 2, 3])
ops.equalDOF(303, 583, *[1, 2, 3])
ops.equalDOF(311, 587, *[1, 2, 3])
ops.equalDOF(319, 591, *[1, 2, 3])
ops.equalDOF(327, 594, *[1, 2, 3])
ops.equalDOF(251, 623, *[1, 2, 3])
ops.equalDOF(259, 631, *[1, 2, 3])
ops.equalDOF(267, 639, *[1, 2, 3])
ops.equalDOF(275, 647, *[1, 2, 3])
ops.equalDOF(283, 655, *[1, 2, 3])
ops.equalDOF(291, 663, *[1, 2, 3])
ops.equalDOF(299, 671, *[1, 2, 3])
ops.equalDOF(307, 679, *[1, 2, 3])
ops.equalDOF(315, 687, *[1, 2, 3])
ops.equalDOF(323, 695, *[1, 2, 3])
ops.equalDOF(329, 703, *[1, 2, 3])
ops.equalDOF(62, 867, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1102, 2, 203148000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1103, 2, 147211454.11079478, 166.66666666666666, c=0.0)
ops.equalDOF(80, 869, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1106, 2, 180576000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1107, 2, 130854625.87626201, 166.66666666666666, c=0.0)
ops.equalDOF(78, 871, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1110, 2, 158004000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1111, 2, 114497797.64172927, 166.66666666666666, c=0.0)
ops.equalDOF(76, 873, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1114, 2, 135432000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1115, 2, 98140969.40719652, 166.66666666666666, c=0.0)
ops.equalDOF(74, 875, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1118, 2, 112860000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1119, 2, 81784141.17266376, 166.66666666666666, c=0.0)
ops.equalDOF(72, 877, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1122, 2, 90288000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1123, 2, 65427312.938131005, 166.66666666666666, c=0.0)
ops.equalDOF(70, 879, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1126, 2, 67716000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1127, 2, 49070484.70359826, 166.66666666666666, c=0.0)
ops.equalDOF(68, 881, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1130, 2, 45144000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1131, 2, 32713656.469065502, 166.66666666666666, c=0.0)
ops.equalDOF(66, 883, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1134, 2, 22572000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1135, 2, 16356828.234532751, 166.66666666666666, c=0.0)
ops.equalDOF(64, 885, *[1, 2, 3])
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.section("Fiber", 30, '-GJ', 9.572040116406401e+24)
ops.uniaxialMaterial("Steel02", 29, 370000000000.0, 200000000000000.0, 0.01, 15, 0.925, 0.15)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.uniaxialMaterial("Concrete02", 28, 31600000000.0, 0.0019446153846153847, 6320000000.0, 0.004, 0.1, -4740000000.0, -2370000000000.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.geomTransf("Linear", 32, *[-1.0, 0.0, 0.0])
ops.element("elasticBeamColumn", 33, 4, 9, 30, 32)
ops.section("Fiber", 34, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 36, 9, 11, 34, 32)
ops.section("Fiber", 37, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 39, 11, 13, 37, 32)
ops.section("Fiber", 40, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 42, 13, 15, 40, 32)
ops.section("Fiber", 43, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 45, 15, 17, 43, 32)
ops.section("Fiber", 46, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 48, 17, 19, 46, 32)
ops.section("Fiber", 49, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 51, 19, 21, 49, 32)
ops.section("Fiber", 52, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 54, 21, 23, 52, 32)
ops.section("Fiber", 55, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 57, 23, 25, 55, 32)
ops.section("Fiber", 58, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 60, 25, 6, 58, 32)
ops.section("Fiber", 83, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 85, 4, 64, 83, 32)
ops.section("Fiber", 86, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 88, 64, 66, 86, 32)
ops.section("Fiber", 89, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 91, 66, 68, 89, 32)
ops.section("Fiber", 92, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 94, 68, 70, 92, 32)
ops.section("Fiber", 95, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 97, 70, 72, 95, 32)
ops.section("Fiber", 98, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 100, 72, 74, 98, 32)
ops.section("Fiber", 101, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 103, 74, 76, 101, 32)
ops.section("Fiber", 104, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 106, 76, 78, 104, 32)
ops.section("Fiber", 107, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 109, 78, 80, 107, 32)
ops.section("Fiber", 110, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 112, 80, 62, 110, 32)
ops.element('zeroLength', 1101, 62, 62, '-mat', *[1098, 1098, 1099], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1105, 80, 80, '-mat', *[1102, 1102, 1103], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1109, 78, 78, '-mat', *[1106, 1106, 1107], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1113, 76, 76, '-mat', *[1110, 1110, 1111], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1117, 74, 74, '-mat', *[1114, 1114, 1115], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1121, 72, 72, '-mat', *[1118, 1118, 1119], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1125, 70, 70, '-mat', *[1122, 1122, 1123], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1129, 68, 68, '-mat', *[1126, 1126, 1127], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1133, 66, 66, '-mat', *[1130, 1130, 1131], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1137, 64, 64, '-mat', *[1134, 1134, 1135], '-dir', *[1, 2, 3])
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.nDMaterial("PressureDependMultiYield", 220, 3, 0.019, 75000000000.0, 200000000000.0, 33, 0.1, 80000000.0, 0.5, 27, 0.07, *[0.4, 2], *[10000000.0, 0.01, 1])
ops.element("stdBrick", 221, *[135, 134, 132, 133, 142, 140, 136, 138], 220)
ops.element("stdBrick", 222, *[142, 140, 136, 138, 150, 148, 144, 146], 220)
ops.element("stdBrick", 223, *[150, 148, 144, 146, 158, 156, 152, 154], 220)
ops.element("stdBrick", 224, *[158, 156, 152, 154, 166, 164, 160, 162], 220)
ops.element("stdBrick", 225, *[166, 164, 160, 162, 174, 172, 168, 170], 220)
ops.element("stdBrick", 226, *[174, 172, 168, 170, 182, 180, 176, 178], 220)
ops.element("stdBrick", 227, *[182, 180, 176, 178, 190, 188, 184, 186], 220)
ops.element("stdBrick", 228, *[190, 188, 184, 186, 198, 196, 192, 194], 220)
ops.element("stdBrick", 229, *[198, 196, 192, 194, 206, 204, 200, 202], 220)
ops.element("stdBrick", 230, *[206, 204, 200, 202, 214, 212, 208, 210], 220)
ops.element("stdBrick", 231, *[214, 212, 208, 210, 219, 218, 216, 217], 220)
ops.element("stdBrick", 333, *[245, 243, 241, 242, 253, 251, 247, 249], 220)
ops.element("stdBrick", 334, *[253, 251, 247, 249, 261, 259, 255, 257], 220)
ops.element("stdBrick", 335, *[261, 259, 255, 257, 269, 267, 263, 265], 220)
ops.element("stdBrick", 336, *[269, 267, 263, 265, 277, 275, 271, 273], 220)
ops.element("stdBrick", 337, *[277, 275, 271, 273, 285, 283, 279, 281], 220)
ops.element("stdBrick", 338, *[285, 283, 279, 281, 293, 291, 287, 289], 220)
ops.element("stdBrick", 339, *[293, 291, 287, 289, 301, 299, 295, 297], 220)
ops.element("stdBrick", 340, *[301, 299, 295, 297, 309, 307, 303, 305], 220)
ops.element("stdBrick", 341, *[309, 307, 303, 305, 317, 315, 311, 313], 220)
ops.element("stdBrick", 342, *[317, 315, 311, 313, 325, 323, 319, 321], 220)
ops.element("stdBrick", 343, *[325, 323, 319, 321, 331, 329, 327, 328], 220)
ops.element("stdBrick", 344, *[133, 132, 243, 245, 138, 136, 251, 253], 220)
ops.element("stdBrick", 345, *[138, 136, 251, 253, 146, 144, 259, 261], 220)
ops.element("stdBrick", 346, *[146, 144, 259, 261, 154, 152, 267, 269], 220)
ops.element("stdBrick", 347, *[154, 152, 267, 269, 162, 160, 275, 277], 220)
ops.element("stdBrick", 348, *[162, 160, 275, 277, 170, 168, 283, 285], 220)
ops.element("stdBrick", 349, *[170, 168, 283, 285, 178, 176, 291, 293], 220)
ops.element("stdBrick", 350, *[178, 176, 291, 293, 186, 184, 299, 301], 220)
ops.element("stdBrick", 351, *[186, 184, 299, 301, 194, 192, 307, 309], 220)
ops.element("stdBrick", 352, *[194, 192, 307, 309, 202, 200, 315, 317], 220)
ops.element("stdBrick", 353, *[202, 200, 315, 317, 210, 208, 323, 325], 220)
ops.element("stdBrick", 354, *[210, 208, 323, 325, 217, 216, 329, 331], 220)
ops.element("stdBrick", 408, *[242, 241, 364, 365, 249, 247, 366, 368], 220)
ops.element("stdBrick", 409, *[249, 247, 366, 368, 257, 255, 370, 372], 220)
ops.element("stdBrick", 410, *[257, 255, 370, 372, 265, 263, 374, 376], 220)
ops.element("stdBrick", 411, *[265, 263, 374, 376, 273, 271, 378, 380], 220)
ops.element("stdBrick", 412, *[273, 271, 378, 380, 281, 279, 382, 384], 220)
ops.element("stdBrick", 413, *[281, 279, 382, 384, 289, 287, 386, 388], 220)
ops.element("stdBrick", 414, *[289, 287, 386, 388, 297, 295, 390, 392], 220)
ops.element("stdBrick", 415, *[297, 295, 390, 392, 305, 303, 394, 396], 220)
ops.element("stdBrick", 416, *[305, 303, 394, 396, 313, 311, 398, 400], 220)
ops.element("stdBrick", 417, *[313, 311, 398, 400, 321, 319, 402, 404], 220)
ops.element("stdBrick", 418, *[321, 319, 402, 404, 328, 327, 406, 407], 220)
ops.element("stdBrick", 520, *[431, 242, 365, 428, 438, 249, 368, 434], 220)
ops.element("stdBrick", 521, *[438, 249, 368, 434, 446, 257, 372, 442], 220)
ops.element("stdBrick", 522, *[446, 257, 372, 442, 454, 265, 376, 450], 220)
ops.element("stdBrick", 523, *[454, 265, 376, 450, 462, 273, 380, 458], 220)
ops.element("stdBrick", 524, *[462, 273, 380, 458, 470, 281, 384, 466], 220)
ops.element("stdBrick", 525, *[470, 281, 384, 466, 478, 289, 388, 474], 220)
ops.element("stdBrick", 526, *[478, 289, 388, 474, 486, 297, 392, 482], 220)
ops.element("stdBrick", 527, *[486, 297, 392, 482, 494, 305, 396, 490], 220)
ops.element("stdBrick", 528, *[494, 305, 396, 490, 502, 313, 400, 498], 220)
ops.element("stdBrick", 529, *[502, 313, 400, 498, 510, 321, 404, 506], 220)
ops.element("stdBrick", 530, *[510, 321, 404, 506, 517, 328, 407, 514], 220)
ops.element("stdBrick", 531, *[433, 431, 428, 430, 440, 438, 434, 436], 220)
ops.element("stdBrick", 532, *[440, 438, 434, 436, 448, 446, 442, 444], 220)
ops.element("stdBrick", 533, *[448, 446, 442, 444, 456, 454, 450, 452], 220)
ops.element("stdBrick", 534, *[456, 454, 450, 452, 464, 462, 458, 460], 220)
ops.element("stdBrick", 535, *[464, 462, 458, 460, 472, 470, 466, 468], 220)
ops.element("stdBrick", 536, *[472, 470, 466, 468, 480, 478, 474, 476], 220)
ops.element("stdBrick", 537, *[480, 478, 474, 476, 488, 486, 482, 484], 220)
ops.element("stdBrick", 538, *[488, 486, 482, 484, 496, 494, 490, 492], 220)
ops.element("stdBrick", 539, *[496, 494, 490, 492, 504, 502, 498, 500], 220)
ops.element("stdBrick", 540, *[504, 502, 498, 500, 512, 510, 506, 508], 220)
ops.element("stdBrick", 541, *[512, 510, 506, 508, 519, 517, 514, 516], 220)
ops.element("stdBrick", 595, *[552, 433, 430, 551, 555, 440, 436, 553], 220)
ops.element("stdBrick", 596, *[555, 440, 436, 553, 559, 448, 444, 557], 220)
ops.element("stdBrick", 597, *[559, 448, 444, 557, 563, 456, 452, 561], 220)
ops.element("stdBrick", 598, *[563, 456, 452, 561, 567, 464, 460, 565], 220)
ops.element("stdBrick", 599, *[567, 464, 460, 565, 571, 472, 468, 569], 220)
ops.element("stdBrick", 600, *[571, 472, 468, 569, 575, 480, 476, 573], 220)
ops.element("stdBrick", 601, *[575, 480, 476, 573, 579, 488, 484, 577], 220)
ops.element("stdBrick", 602, *[579, 488, 484, 577, 583, 496, 492, 581], 220)
ops.element("stdBrick", 603, *[583, 496, 492, 581, 587, 504, 500, 585], 220)
ops.element("stdBrick", 604, *[587, 504, 500, 585, 591, 512, 508, 589], 220)
ops.element("stdBrick", 605, *[591, 512, 508, 589, 594, 519, 516, 593], 220)
ops.element("stdBrick", 707, *[617, 615, 433, 552, 623, 621, 440, 555], 220)
ops.element("stdBrick", 708, *[623, 621, 440, 555, 631, 629, 448, 559], 220)
ops.element("stdBrick", 709, *[631, 629, 448, 559, 639, 637, 456, 563], 220)
ops.element("stdBrick", 710, *[639, 637, 456, 563, 647, 645, 464, 567], 220)
ops.element("stdBrick", 711, *[647, 645, 464, 567, 655, 653, 472, 571], 220)
ops.element("stdBrick", 712, *[655, 653, 472, 571, 663, 661, 480, 575], 220)
ops.element("stdBrick", 713, *[663, 661, 480, 575, 671, 669, 488, 579], 220)
ops.element("stdBrick", 714, *[671, 669, 488, 579, 679, 677, 496, 583], 220)
ops.element("stdBrick", 715, *[679, 677, 496, 583, 687, 685, 504, 587], 220)
ops.element("stdBrick", 716, *[687, 685, 504, 587, 695, 693, 512, 591], 220)
ops.element("stdBrick", 717, *[695, 693, 512, 591, 703, 701, 519, 594], 220)
ops.element("stdBrick", 718, *[620, 619, 615, 617, 627, 625, 621, 623], 220)
ops.element("stdBrick", 719, *[627, 625, 621, 623, 635, 633, 629, 631], 220)
ops.element("stdBrick", 720, *[635, 633, 629, 631, 643, 641, 637, 639], 220)
ops.element("stdBrick", 721, *[643, 641, 637, 639, 651, 649, 645, 647], 220)
ops.element("stdBrick", 722, *[651, 649, 645, 647, 659, 657, 653, 655], 220)
ops.element("stdBrick", 723, *[659, 657, 653, 655, 667, 665, 661, 663], 220)
ops.element("stdBrick", 724, *[667, 665, 661, 663, 675, 673, 669, 671], 220)
ops.element("stdBrick", 725, *[675, 673, 669, 671, 683, 681, 677, 679], 220)
ops.element("stdBrick", 726, *[683, 681, 677, 679, 691, 689, 685, 687], 220)
ops.element("stdBrick", 727, *[691, 689, 685, 687, 699, 697, 693, 695], 220)
ops.element("stdBrick", 728, *[699, 697, 693, 695, 706, 705, 701, 703], 220)
ops.element("stdBrick", 782, *[739, 738, 619, 620, 742, 740, 625, 627], 220)
ops.element("stdBrick", 783, *[742, 740, 625, 627, 746, 744, 633, 635], 220)
ops.element("stdBrick", 784, *[746, 744, 633, 635, 750, 748, 641, 643], 220)
ops.element("stdBrick", 785, *[750, 748, 641, 643, 754, 752, 649, 651], 220)
ops.element("stdBrick", 786, *[754, 752, 649, 651, 758, 756, 657, 659], 220)
ops.element("stdBrick", 787, *[758, 756, 657, 659, 762, 760, 665, 667], 220)
ops.element("stdBrick", 788, *[762, 760, 665, 667, 766, 764, 673, 675], 220)
ops.element("stdBrick", 789, *[766, 764, 673, 675, 770, 768, 681, 683], 220)
ops.element("stdBrick", 790, *[770, 768, 681, 683, 774, 772, 689, 691], 220)
ops.element("stdBrick", 791, *[774, 772, 689, 691, 778, 776, 697, 699], 220)
ops.element("stdBrick", 792, *[778, 776, 697, 699, 781, 780, 705, 706], 220)
ops.element("stdBrick", 842, *[796, 135, 133, 794, 800, 142, 138, 798], 220)
ops.element("stdBrick", 843, *[800, 142, 138, 798, 804, 150, 146, 802], 220)
ops.element("stdBrick", 844, *[804, 150, 146, 802, 808, 158, 154, 806], 220)
ops.element("stdBrick", 845, *[808, 158, 154, 806, 812, 166, 162, 810], 220)
ops.element("stdBrick", 846, *[812, 166, 162, 810, 816, 174, 170, 814], 220)
ops.element("stdBrick", 847, *[816, 174, 170, 814, 820, 182, 178, 818], 220)
ops.element("stdBrick", 848, *[820, 182, 178, 818, 824, 190, 186, 822], 220)
ops.element("stdBrick", 849, *[824, 190, 186, 822, 828, 198, 194, 826], 220)
ops.element("stdBrick", 850, *[828, 198, 194, 826, 832, 206, 202, 830], 220)
ops.element("stdBrick", 851, *[832, 206, 202, 830, 836, 214, 210, 834], 220)
ops.element("stdBrick", 852, *[836, 214, 210, 834, 840, 219, 217, 838], 220)
ops.element("stdBrick", 853, *[738, 796, 794, 619, 740, 800, 798, 625], 220)
ops.element("stdBrick", 854, *[740, 800, 798, 625, 744, 804, 802, 633], 220)
ops.element("stdBrick", 855, *[744, 804, 802, 633, 748, 808, 806, 641], 220)
ops.element("stdBrick", 856, *[748, 808, 806, 641, 752, 812, 810, 649], 220)
ops.element("stdBrick", 857, *[752, 812, 810, 649, 756, 816, 814, 657], 220)
ops.element("stdBrick", 858, *[756, 816, 814, 657, 760, 820, 818, 665], 220)
ops.element("stdBrick", 859, *[760, 820, 818, 665, 764, 824, 822, 673], 220)
ops.element("stdBrick", 860, *[764, 824, 822, 673, 768, 828, 826, 681], 220)
ops.element("stdBrick", 861, *[768, 828, 826, 681, 772, 832, 830, 689], 220)
ops.element("stdBrick", 862, *[772, 832, 830, 689, 776, 836, 834, 697], 220)
ops.element("stdBrick", 863, *[776, 836, 834, 697, 780, 840, 838, 705], 220)
ops.element("stdBrick", 889, *[865, 245, 242, 431, 867, 253, 249, 438], 220)
ops.element("stdBrick", 890, *[867, 253, 249, 438, 869, 261, 257, 446], 220)
ops.element("stdBrick", 891, *[869, 261, 257, 446, 871, 269, 265, 454], 220)
ops.element("stdBrick", 892, *[871, 269, 265, 454, 873, 277, 273, 462], 220)
ops.element("stdBrick", 893, *[873, 277, 273, 462, 875, 285, 281, 470], 220)
ops.element("stdBrick", 894, *[875, 285, 281, 470, 877, 293, 289, 478], 220)
ops.element("stdBrick", 895, *[877, 293, 289, 478, 879, 301, 297, 486], 220)
ops.element("stdBrick", 896, *[879, 301, 297, 486, 881, 309, 305, 494], 220)
ops.element("stdBrick", 897, *[881, 309, 305, 494, 883, 317, 313, 502], 220)
ops.element("stdBrick", 898, *[883, 317, 313, 502, 885, 325, 321, 510], 220)
ops.element("stdBrick", 899, *[885, 325, 321, 510, 887, 331, 328, 517], 220)
ops.element("stdBrick", 900, *[794, 133, 245, 865, 798, 138, 253, 867], 220)
ops.element("stdBrick", 901, *[798, 138, 253, 867, 802, 146, 261, 869], 220)
ops.element("stdBrick", 902, *[802, 146, 261, 869, 806, 154, 269, 871], 220)
ops.element("stdBrick", 903, *[806, 154, 269, 871, 810, 162, 277, 873], 220)
ops.element("stdBrick", 904, *[810, 162, 277, 873, 814, 170, 285, 875], 220)
ops.element("stdBrick", 905, *[814, 170, 285, 875, 818, 178, 293, 877], 220)
ops.element("stdBrick", 906, *[818, 178, 293, 877, 822, 186, 301, 879], 220)
ops.element("stdBrick", 907, *[822, 186, 301, 879, 826, 194, 309, 881], 220)
ops.element("stdBrick", 908, *[826, 194, 309, 881, 830, 202, 317, 883], 220)
ops.element("stdBrick", 909, *[830, 202, 317, 883, 834, 210, 325, 885], 220)
ops.element("stdBrick", 910, *[834, 210, 325, 885, 838, 217, 331, 887], 220)
ops.element("stdBrick", 911, *[615, 865, 431, 433, 621, 867, 438, 440], 220)
ops.element("stdBrick", 912, *[621, 867, 438, 440, 629, 869, 446, 448], 220)
ops.element("stdBrick", 913, *[629, 869, 446, 448, 637, 871, 454, 456], 220)
ops.element("stdBrick", 914, *[637, 871, 454, 456, 645, 873, 462, 464], 220)
ops.element("stdBrick", 915, *[645, 873, 462, 464, 653, 875, 470, 472], 220)
ops.element("stdBrick", 916, *[653, 875, 470, 472, 661, 877, 478, 480], 220)
ops.element("stdBrick", 917, *[661, 877, 478, 480, 669, 879, 486, 488], 220)
ops.element("stdBrick", 918, *[669, 879, 486, 488, 677, 881, 494, 496], 220)
ops.element("stdBrick", 919, *[677, 881, 494, 496, 685, 883, 502, 504], 220)
ops.element("stdBrick", 920, *[685, 883, 502, 504, 693, 885, 510, 512], 220)
ops.element("stdBrick", 921, *[693, 885, 510, 512, 701, 887, 517, 519], 220)
ops.element("stdBrick", 922, *[619, 794, 865, 615, 625, 798, 867, 621], 220)
ops.element("stdBrick", 923, *[625, 798, 867, 621, 633, 802, 869, 629], 220)
ops.element("stdBrick", 924, *[633, 802, 869, 629, 641, 806, 871, 637], 220)
ops.element("stdBrick", 925, *[641, 806, 871, 637, 649, 810, 873, 645], 220)
ops.element("stdBrick", 926, *[649, 810, 873, 645, 657, 814, 875, 653], 220)
ops.element("stdBrick", 927, *[657, 814, 875, 653, 665, 818, 877, 661], 220)
ops.element("stdBrick", 928, *[665, 818, 877, 661, 673, 822, 879, 669], 220)
ops.element("stdBrick", 929, *[673, 822, 879, 669, 681, 826, 881, 677], 220)
ops.element("stdBrick", 930, *[681, 826, 881, 677, 689, 830, 883, 685], 220)
ops.element("stdBrick", 931, *[689, 830, 883, 685, 697, 834, 885, 693], 220)
ops.element("stdBrick", 932, *[697, 834, 885, 693, 705, 838, 887, 701], 220)
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.wipeAnalysis()
ops.loadConst('-time', 0.0)
ops.timeSeries('Linear', 1)
ops.pattern('Plain', 2, 1)
ops.eleLoad('-ele', *[33], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[36], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[39], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[42], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[45], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[48], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[51], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[54], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[57], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[60], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[85], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[88], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[91], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[94], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[97], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[100], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[103], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[106], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[109], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.eleLoad('-ele', *[112], '-type', '-beamUniform', 0.0, -73940399.03118323, 0.0)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.load(132, *[0, 0, -186326350000.0])
ops.load(136, *[0, 0, -186326350000.0])
ops.load(144, *[0, 0, -186326350000.0])
ops.load(152, *[0, 0, -186326350000.0])
ops.load(160, *[0, 0, -186326350000.0])
ops.load(168, *[0, 0, -186326350000.0])
ops.load(176, *[0, 0, -186326350000.0])
ops.load(184, *[0, 0, -186326350000.0])
ops.load(192, *[0, 0, -186326350000.0])
ops.load(200, *[0, 0, -186326350000.0])
ops.load(208, *[0, 0, -186326350000.0])
ops.load(216, *[0, 0, -186326350000.0])
ops.load(134, *[0, 0, -186326350000.0])
ops.load(140, *[0, 0, -186326350000.0])
ops.load(148, *[0, 0, -186326350000.0])
ops.load(156, *[0, 0, -186326350000.0])
ops.load(164, *[0, 0, -186326350000.0])
ops.load(172, *[0, 0, -186326350000.0])
ops.load(180, *[0, 0, -186326350000.0])
ops.load(188, *[0, 0, -186326350000.0])
ops.load(196, *[0, 0, -186326350000.0])
ops.load(204, *[0, 0, -186326350000.0])
ops.load(212, *[0, 0, -186326350000.0])
ops.load(218, *[0, 0, -186326350000.0])
ops.load(133, *[0, 0, -186326350000.0])
ops.load(138, *[0, 0, -186326350000.0])
ops.load(146, *[0, 0, -186326350000.0])
ops.load(154, *[0, 0, -186326350000.0])
ops.load(162, *[0, 0, -186326350000.0])
ops.load(170, *[0, 0, -186326350000.0])
ops.load(178, *[0, 0, -186326350000.0])
ops.load(186, *[0, 0, -186326350000.0])
ops.load(194, *[0, 0, -186326350000.0])
ops.load(202, *[0, 0, -186326350000.0])
ops.load(210, *[0, 0, -186326350000.0])
ops.load(217, *[0, 0, -186326350000.0])
ops.load(135, *[0, 0, -186326350000.0])
ops.load(142, *[0, 0, -186326350000.0])
ops.load(150, *[0, 0, -186326350000.0])
ops.load(158, *[0, 0, -186326350000.0])
ops.load(166, *[0, 0, -186326350000.0])
ops.load(174, *[0, 0, -186326350000.0])
ops.load(182, *[0, 0, -186326350000.0])
ops.load(190, *[0, 0, -186326350000.0])
ops.load(198, *[0, 0, -186326350000.0])
ops.load(206, *[0, 0, -186326350000.0])
ops.load(214, *[0, 0, -186326350000.0])
ops.load(219, *[0, 0, -186326350000.0])
ops.load(241, *[0, 0, -93163175000.0])
ops.load(247, *[0, 0, -93163175000.0])
ops.load(255, *[0, 0, -93163175000.0])
ops.load(263, *[0, 0, -93163175000.0])
ops.load(271, *[0, 0, -93163175000.0])
ops.load(279, *[0, 0, -93163175000.0])
ops.load(287, *[0, 0, -93163175000.0])
ops.load(295, *[0, 0, -93163175000.0])
ops.load(303, *[0, 0, -93163175000.0])
ops.load(311, *[0, 0, -93163175000.0])
ops.load(319, *[0, 0, -93163175000.0])
ops.load(327, *[0, 0, -93163175000.0])
ops.load(243, *[0, 0, -93163175000.0])
ops.load(251, *[0, 0, -93163175000.0])
ops.load(259, *[0, 0, -93163175000.0])
ops.load(267, *[0, 0, -93163175000.0])
ops.load(275, *[0, 0, -93163175000.0])
ops.load(283, *[0, 0, -93163175000.0])
ops.load(291, *[0, 0, -93163175000.0])
ops.load(299, *[0, 0, -93163175000.0])
ops.load(307, *[0, 0, -93163175000.0])
ops.load(315, *[0, 0, -93163175000.0])
ops.load(323, *[0, 0, -93163175000.0])
ops.load(329, *[0, 0, -93163175000.0])
ops.load(132, *[0, 0, -93163175000.0])
ops.load(136, *[0, 0, -93163175000.0])
ops.load(144, *[0, 0, -93163175000.0])
ops.load(152, *[0, 0, -93163175000.0])
ops.load(160, *[0, 0, -93163175000.0])
ops.load(168, *[0, 0, -93163175000.0])
ops.load(176, *[0, 0, -93163175000.0])
ops.load(184, *[0, 0, -93163175000.0])
ops.load(192, *[0, 0, -93163175000.0])
ops.load(200, *[0, 0, -93163175000.0])
ops.load(208, *[0, 0, -93163175000.0])
ops.load(216, *[0, 0, -93163175000.0])
ops.load(242, *[0, 0, -93163175000.0])
ops.load(249, *[0, 0, -93163175000.0])
ops.load(257, *[0, 0, -93163175000.0])
ops.load(265, *[0, 0, -93163175000.0])
ops.load(273, *[0, 0, -93163175000.0])
ops.load(281, *[0, 0, -93163175000.0])
ops.load(289, *[0, 0, -93163175000.0])
ops.load(297, *[0, 0, -93163175000.0])
ops.load(305, *[0, 0, -93163175000.0])
ops.load(313, *[0, 0, -93163175000.0])
ops.load(321, *[0, 0, -93163175000.0])
ops.load(328, *[0, 0, -93163175000.0])
ops.load(245, *[0, 0, -93163175000.0])
ops.load(253, *[0, 0, -93163175000.0])
ops.load(261, *[0, 0, -93163175000.0])
ops.load(269, *[0, 0, -93163175000.0])
ops.load(277, *[0, 0, -93163175000.0])
ops.load(285, *[0, 0, -93163175000.0])
ops.load(293, *[0, 0, -93163175000.0])
ops.load(301, *[0, 0, -93163175000.0])
ops.load(309, *[0, 0, -93163175000.0])
ops.load(317, *[0, 0, -93163175000.0])
ops.load(325, *[0, 0, -93163175000.0])
ops.load(331, *[0, 0, -93163175000.0])
ops.load(133, *[0, 0, -93163175000.0])
ops.load(138, *[0, 0, -93163175000.0])
ops.load(146, *[0, 0, -93163175000.0])
ops.load(154, *[0, 0, -93163175000.0])
ops.load(162, *[0, 0, -93163175000.0])
ops.load(170, *[0, 0, -93163175000.0])
ops.load(178, *[0, 0, -93163175000.0])
ops.load(186, *[0, 0, -93163175000.0])
ops.load(194, *[0, 0, -93163175000.0])
ops.load(202, *[0, 0, -93163175000.0])
ops.load(210, *[0, 0, -93163175000.0])
ops.load(217, *[0, 0, -93163175000.0])
ops.load(364, *[0, 0, -186326350000.0])
ops.load(366, *[0, 0, -186326350000.0])
ops.load(370, *[0, 0, -186326350000.0])
ops.load(374, *[0, 0, -186326350000.0])
ops.load(378, *[0, 0, -186326350000.0])
ops.load(382, *[0, 0, -186326350000.0])
ops.load(386, *[0, 0, -186326350000.0])
ops.load(390, *[0, 0, -186326350000.0])
ops.load(394, *[0, 0, -186326350000.0])
ops.load(398, *[0, 0, -186326350000.0])
ops.load(402, *[0, 0, -186326350000.0])
ops.load(406, *[0, 0, -186326350000.0])
ops.load(241, *[0, 0, -186326350000.0])
ops.load(247, *[0, 0, -186326350000.0])
ops.load(255, *[0, 0, -186326350000.0])
ops.load(263, *[0, 0, -186326350000.0])
ops.load(271, *[0, 0, -186326350000.0])
ops.load(279, *[0, 0, -186326350000.0])
ops.load(287, *[0, 0, -186326350000.0])
ops.load(295, *[0, 0, -186326350000.0])
ops.load(303, *[0, 0, -186326350000.0])
ops.load(311, *[0, 0, -186326350000.0])
ops.load(319, *[0, 0, -186326350000.0])
ops.load(327, *[0, 0, -186326350000.0])
ops.load(365, *[0, 0, -186326350000.0])
ops.load(368, *[0, 0, -186326350000.0])
ops.load(372, *[0, 0, -186326350000.0])
ops.load(376, *[0, 0, -186326350000.0])
ops.load(380, *[0, 0, -186326350000.0])
ops.load(384, *[0, 0, -186326350000.0])
ops.load(388, *[0, 0, -186326350000.0])
ops.load(392, *[0, 0, -186326350000.0])
ops.load(396, *[0, 0, -186326350000.0])
ops.load(400, *[0, 0, -186326350000.0])
ops.load(404, *[0, 0, -186326350000.0])
ops.load(407, *[0, 0, -186326350000.0])
ops.load(242, *[0, 0, -186326350000.0])
ops.load(249, *[0, 0, -186326350000.0])
ops.load(257, *[0, 0, -186326350000.0])
ops.load(265, *[0, 0, -186326350000.0])
ops.load(273, *[0, 0, -186326350000.0])
ops.load(281, *[0, 0, -186326350000.0])
ops.load(289, *[0, 0, -186326350000.0])
ops.load(297, *[0, 0, -186326350000.0])
ops.load(305, *[0, 0, -186326350000.0])
ops.load(313, *[0, 0, -186326350000.0])
ops.load(321, *[0, 0, -186326350000.0])
ops.load(328, *[0, 0, -186326350000.0])
ops.load(365, *[0, 0, -93163175000.0])
ops.load(368, *[0, 0, -93163175000.0])
ops.load(372, *[0, 0, -93163175000.0])
ops.load(376, *[0, 0, -93163175000.0])
ops.load(380, *[0, 0, -93163175000.0])
ops.load(384, *[0, 0, -93163175000.0])
ops.load(388, *[0, 0, -93163175000.0])
ops.load(392, *[0, 0, -93163175000.0])
ops.load(396, *[0, 0, -93163175000.0])
ops.load(400, *[0, 0, -93163175000.0])
ops.load(404, *[0, 0, -93163175000.0])
ops.load(407, *[0, 0, -93163175000.0])
ops.load(242, *[0, 0, -93163175000.0])
ops.load(249, *[0, 0, -93163175000.0])
ops.load(257, *[0, 0, -93163175000.0])
ops.load(265, *[0, 0, -93163175000.0])
ops.load(273, *[0, 0, -93163175000.0])
ops.load(281, *[0, 0, -93163175000.0])
ops.load(289, *[0, 0, -93163175000.0])
ops.load(297, *[0, 0, -93163175000.0])
ops.load(305, *[0, 0, -93163175000.0])
ops.load(313, *[0, 0, -93163175000.0])
ops.load(321, *[0, 0, -93163175000.0])
ops.load(328, *[0, 0, -93163175000.0])
ops.load(428, *[0, 0, -93163175000.0])
ops.load(434, *[0, 0, -93163175000.0])
ops.load(442, *[0, 0, -93163175000.0])
ops.load(450, *[0, 0, -93163175000.0])
ops.load(458, *[0, 0, -93163175000.0])
ops.load(466, *[0, 0, -93163175000.0])
ops.load(474, *[0, 0, -93163175000.0])
ops.load(482, *[0, 0, -93163175000.0])
ops.load(490, *[0, 0, -93163175000.0])
ops.load(498, *[0, 0, -93163175000.0])
ops.load(506, *[0, 0, -93163175000.0])
ops.load(514, *[0, 0, -93163175000.0])
ops.load(431, *[0, 0, -93163175000.0])
ops.load(438, *[0, 0, -93163175000.0])
ops.load(446, *[0, 0, -93163175000.0])
ops.load(454, *[0, 0, -93163175000.0])
ops.load(462, *[0, 0, -93163175000.0])
ops.load(470, *[0, 0, -93163175000.0])
ops.load(478, *[0, 0, -93163175000.0])
ops.load(486, *[0, 0, -93163175000.0])
ops.load(494, *[0, 0, -93163175000.0])
ops.load(502, *[0, 0, -93163175000.0])
ops.load(510, *[0, 0, -93163175000.0])
ops.load(517, *[0, 0, -93163175000.0])
ops.load(430, *[0, 0, -93163175000.0])
ops.load(436, *[0, 0, -93163175000.0])
ops.load(444, *[0, 0, -93163175000.0])
ops.load(452, *[0, 0, -93163175000.0])
ops.load(460, *[0, 0, -93163175000.0])
ops.load(468, *[0, 0, -93163175000.0])
ops.load(476, *[0, 0, -93163175000.0])
ops.load(484, *[0, 0, -93163175000.0])
ops.load(492, *[0, 0, -93163175000.0])
ops.load(500, *[0, 0, -93163175000.0])
ops.load(508, *[0, 0, -93163175000.0])
ops.load(516, *[0, 0, -93163175000.0])
ops.load(433, *[0, 0, -93163175000.0])
ops.load(440, *[0, 0, -93163175000.0])
ops.load(448, *[0, 0, -93163175000.0])
ops.load(456, *[0, 0, -93163175000.0])
ops.load(464, *[0, 0, -93163175000.0])
ops.load(472, *[0, 0, -93163175000.0])
ops.load(480, *[0, 0, -93163175000.0])
ops.load(488, *[0, 0, -93163175000.0])
ops.load(496, *[0, 0, -93163175000.0])
ops.load(504, *[0, 0, -93163175000.0])
ops.load(512, *[0, 0, -93163175000.0])
ops.load(519, *[0, 0, -93163175000.0])
ops.load(430, *[0, 0, -186326350000.0])
ops.load(436, *[0, 0, -186326350000.0])
ops.load(444, *[0, 0, -186326350000.0])
ops.load(452, *[0, 0, -186326350000.0])
ops.load(460, *[0, 0, -186326350000.0])
ops.load(468, *[0, 0, -186326350000.0])
ops.load(476, *[0, 0, -186326350000.0])
ops.load(484, *[0, 0, -186326350000.0])
ops.load(492, *[0, 0, -186326350000.0])
ops.load(500, *[0, 0, -186326350000.0])
ops.load(508, *[0, 0, -186326350000.0])
ops.load(516, *[0, 0, -186326350000.0])
ops.load(433, *[0, 0, -186326350000.0])
ops.load(440, *[0, 0, -186326350000.0])
ops.load(448, *[0, 0, -186326350000.0])
ops.load(456, *[0, 0, -186326350000.0])
ops.load(464, *[0, 0, -186326350000.0])
ops.load(472, *[0, 0, -186326350000.0])
ops.load(480, *[0, 0, -186326350000.0])
ops.load(488, *[0, 0, -186326350000.0])
ops.load(496, *[0, 0, -186326350000.0])
ops.load(504, *[0, 0, -186326350000.0])
ops.load(512, *[0, 0, -186326350000.0])
ops.load(519, *[0, 0, -186326350000.0])
ops.load(551, *[0, 0, -186326350000.0])
ops.load(553, *[0, 0, -186326350000.0])
ops.load(557, *[0, 0, -186326350000.0])
ops.load(561, *[0, 0, -186326350000.0])
ops.load(565, *[0, 0, -186326350000.0])
ops.load(569, *[0, 0, -186326350000.0])
ops.load(573, *[0, 0, -186326350000.0])
ops.load(577, *[0, 0, -186326350000.0])
ops.load(581, *[0, 0, -186326350000.0])
ops.load(585, *[0, 0, -186326350000.0])
ops.load(589, *[0, 0, -186326350000.0])
ops.load(593, *[0, 0, -186326350000.0])
ops.load(552, *[0, 0, -186326350000.0])
ops.load(555, *[0, 0, -186326350000.0])
ops.load(559, *[0, 0, -186326350000.0])
ops.load(563, *[0, 0, -186326350000.0])
ops.load(567, *[0, 0, -186326350000.0])
ops.load(571, *[0, 0, -186326350000.0])
ops.load(575, *[0, 0, -186326350000.0])
ops.load(579, *[0, 0, -186326350000.0])
ops.load(583, *[0, 0, -186326350000.0])
ops.load(587, *[0, 0, -186326350000.0])
ops.load(591, *[0, 0, -186326350000.0])
ops.load(594, *[0, 0, -186326350000.0])
ops.load(433, *[0, 0, -93163175000.0])
ops.load(440, *[0, 0, -93163175000.0])
ops.load(448, *[0, 0, -93163175000.0])
ops.load(456, *[0, 0, -93163175000.0])
ops.load(464, *[0, 0, -93163175000.0])
ops.load(472, *[0, 0, -93163175000.0])
ops.load(480, *[0, 0, -93163175000.0])
ops.load(488, *[0, 0, -93163175000.0])
ops.load(496, *[0, 0, -93163175000.0])
ops.load(504, *[0, 0, -93163175000.0])
ops.load(512, *[0, 0, -93163175000.0])
ops.load(519, *[0, 0, -93163175000.0])
ops.load(615, *[0, 0, -93163175000.0])
ops.load(621, *[0, 0, -93163175000.0])
ops.load(629, *[0, 0, -93163175000.0])
ops.load(637, *[0, 0, -93163175000.0])
ops.load(645, *[0, 0, -93163175000.0])
ops.load(653, *[0, 0, -93163175000.0])
ops.load(661, *[0, 0, -93163175000.0])
ops.load(669, *[0, 0, -93163175000.0])
ops.load(677, *[0, 0, -93163175000.0])
ops.load(685, *[0, 0, -93163175000.0])
ops.load(693, *[0, 0, -93163175000.0])
ops.load(701, *[0, 0, -93163175000.0])
ops.load(619, *[0, 0, -93163175000.0])
ops.load(625, *[0, 0, -93163175000.0])
ops.load(633, *[0, 0, -93163175000.0])
ops.load(641, *[0, 0, -93163175000.0])
ops.load(649, *[0, 0, -93163175000.0])
ops.load(657, *[0, 0, -93163175000.0])
ops.load(665, *[0, 0, -93163175000.0])
ops.load(673, *[0, 0, -93163175000.0])
ops.load(681, *[0, 0, -93163175000.0])
ops.load(689, *[0, 0, -93163175000.0])
ops.load(697, *[0, 0, -93163175000.0])
ops.load(705, *[0, 0, -93163175000.0])
ops.load(552, *[0, 0, -93163175000.0])
ops.load(555, *[0, 0, -93163175000.0])
ops.load(559, *[0, 0, -93163175000.0])
ops.load(563, *[0, 0, -93163175000.0])
ops.load(567, *[0, 0, -93163175000.0])
ops.load(571, *[0, 0, -93163175000.0])
ops.load(575, *[0, 0, -93163175000.0])
ops.load(579, *[0, 0, -93163175000.0])
ops.load(583, *[0, 0, -93163175000.0])
ops.load(587, *[0, 0, -93163175000.0])
ops.load(591, *[0, 0, -93163175000.0])
ops.load(594, *[0, 0, -93163175000.0])
ops.load(617, *[0, 0, -93163175000.0])
ops.load(623, *[0, 0, -93163175000.0])
ops.load(631, *[0, 0, -93163175000.0])
ops.load(639, *[0, 0, -93163175000.0])
ops.load(647, *[0, 0, -93163175000.0])
ops.load(655, *[0, 0, -93163175000.0])
ops.load(663, *[0, 0, -93163175000.0])
ops.load(671, *[0, 0, -93163175000.0])
ops.load(679, *[0, 0, -93163175000.0])
ops.load(687, *[0, 0, -93163175000.0])
ops.load(695, *[0, 0, -93163175000.0])
ops.load(703, *[0, 0, -93163175000.0])
ops.load(620, *[0, 0, -93163175000.0])
ops.load(627, *[0, 0, -93163175000.0])
ops.load(635, *[0, 0, -93163175000.0])
ops.load(643, *[0, 0, -93163175000.0])
ops.load(651, *[0, 0, -93163175000.0])
ops.load(659, *[0, 0, -93163175000.0])
ops.load(667, *[0, 0, -93163175000.0])
ops.load(675, *[0, 0, -93163175000.0])
ops.load(683, *[0, 0, -93163175000.0])
ops.load(691, *[0, 0, -93163175000.0])
ops.load(699, *[0, 0, -93163175000.0])
ops.load(706, *[0, 0, -93163175000.0])
ops.load(619, *[0, 0, -186326350000.0])
ops.load(625, *[0, 0, -186326350000.0])
ops.load(633, *[0, 0, -186326350000.0])
ops.load(641, *[0, 0, -186326350000.0])
ops.load(649, *[0, 0, -186326350000.0])
ops.load(657, *[0, 0, -186326350000.0])
ops.load(665, *[0, 0, -186326350000.0])
ops.load(673, *[0, 0, -186326350000.0])
ops.load(681, *[0, 0, -186326350000.0])
ops.load(689, *[0, 0, -186326350000.0])
ops.load(697, *[0, 0, -186326350000.0])
ops.load(705, *[0, 0, -186326350000.0])
ops.load(738, *[0, 0, -186326350000.0])
ops.load(740, *[0, 0, -186326350000.0])
ops.load(744, *[0, 0, -186326350000.0])
ops.load(748, *[0, 0, -186326350000.0])
ops.load(752, *[0, 0, -186326350000.0])
ops.load(756, *[0, 0, -186326350000.0])
ops.load(760, *[0, 0, -186326350000.0])
ops.load(764, *[0, 0, -186326350000.0])
ops.load(768, *[0, 0, -186326350000.0])
ops.load(772, *[0, 0, -186326350000.0])
ops.load(776, *[0, 0, -186326350000.0])
ops.load(780, *[0, 0, -186326350000.0])
ops.load(620, *[0, 0, -186326350000.0])
ops.load(627, *[0, 0, -186326350000.0])
ops.load(635, *[0, 0, -186326350000.0])
ops.load(643, *[0, 0, -186326350000.0])
ops.load(651, *[0, 0, -186326350000.0])
ops.load(659, *[0, 0, -186326350000.0])
ops.load(667, *[0, 0, -186326350000.0])
ops.load(675, *[0, 0, -186326350000.0])
ops.load(683, *[0, 0, -186326350000.0])
ops.load(691, *[0, 0, -186326350000.0])
ops.load(699, *[0, 0, -186326350000.0])
ops.load(706, *[0, 0, -186326350000.0])
ops.load(739, *[0, 0, -186326350000.0])
ops.load(742, *[0, 0, -186326350000.0])
ops.load(746, *[0, 0, -186326350000.0])
ops.load(750, *[0, 0, -186326350000.0])
ops.load(754, *[0, 0, -186326350000.0])
ops.load(758, *[0, 0, -186326350000.0])
ops.load(762, *[0, 0, -186326350000.0])
ops.load(766, *[0, 0, -186326350000.0])
ops.load(770, *[0, 0, -186326350000.0])
ops.load(774, *[0, 0, -186326350000.0])
ops.load(778, *[0, 0, -186326350000.0])
ops.load(781, *[0, 0, -186326350000.0])
ops.load(133, *[0, 0, -93163175000.0])
ops.load(138, *[0, 0, -93163175000.0])
ops.load(146, *[0, 0, -93163175000.0])
ops.load(154, *[0, 0, -93163175000.0])
ops.load(162, *[0, 0, -93163175000.0])
ops.load(170, *[0, 0, -93163175000.0])
ops.load(178, *[0, 0, -93163175000.0])
ops.load(186, *[0, 0, -93163175000.0])
ops.load(194, *[0, 0, -93163175000.0])
ops.load(202, *[0, 0, -93163175000.0])
ops.load(210, *[0, 0, -93163175000.0])
ops.load(217, *[0, 0, -93163175000.0])
ops.load(135, *[0, 0, -93163175000.0])
ops.load(142, *[0, 0, -93163175000.0])
ops.load(150, *[0, 0, -93163175000.0])
ops.load(158, *[0, 0, -93163175000.0])
ops.load(166, *[0, 0, -93163175000.0])
ops.load(174, *[0, 0, -93163175000.0])
ops.load(182, *[0, 0, -93163175000.0])
ops.load(190, *[0, 0, -93163175000.0])
ops.load(198, *[0, 0, -93163175000.0])
ops.load(206, *[0, 0, -93163175000.0])
ops.load(214, *[0, 0, -93163175000.0])
ops.load(219, *[0, 0, -93163175000.0])
ops.load(794, *[0, 0, -93163175000.0])
ops.load(798, *[0, 0, -93163175000.0])
ops.load(802, *[0, 0, -93163175000.0])
ops.load(806, *[0, 0, -93163175000.0])
ops.load(810, *[0, 0, -93163175000.0])
ops.load(814, *[0, 0, -93163175000.0])
ops.load(818, *[0, 0, -93163175000.0])
ops.load(822, *[0, 0, -93163175000.0])
ops.load(826, *[0, 0, -93163175000.0])
ops.load(830, *[0, 0, -93163175000.0])
ops.load(834, *[0, 0, -93163175000.0])
ops.load(838, *[0, 0, -93163175000.0])
ops.load(796, *[0, 0, -93163175000.0])
ops.load(800, *[0, 0, -93163175000.0])
ops.load(804, *[0, 0, -93163175000.0])
ops.load(808, *[0, 0, -93163175000.0])
ops.load(812, *[0, 0, -93163175000.0])
ops.load(816, *[0, 0, -93163175000.0])
ops.load(820, *[0, 0, -93163175000.0])
ops.load(824, *[0, 0, -93163175000.0])
ops.load(828, *[0, 0, -93163175000.0])
ops.load(832, *[0, 0, -93163175000.0])
ops.load(836, *[0, 0, -93163175000.0])
ops.load(840, *[0, 0, -93163175000.0])
ops.load(619, *[0, 0, -93163175000.0])
ops.load(625, *[0, 0, -93163175000.0])
ops.load(633, *[0, 0, -93163175000.0])
ops.load(641, *[0, 0, -93163175000.0])
ops.load(649, *[0, 0, -93163175000.0])
ops.load(657, *[0, 0, -93163175000.0])
ops.load(665, *[0, 0, -93163175000.0])
ops.load(673, *[0, 0, -93163175000.0])
ops.load(681, *[0, 0, -93163175000.0])
ops.load(689, *[0, 0, -93163175000.0])
ops.load(697, *[0, 0, -93163175000.0])
ops.load(705, *[0, 0, -93163175000.0])
ops.load(738, *[0, 0, -93163175000.0])
ops.load(740, *[0, 0, -93163175000.0])
ops.load(744, *[0, 0, -93163175000.0])
ops.load(748, *[0, 0, -93163175000.0])
ops.load(752, *[0, 0, -93163175000.0])
ops.load(756, *[0, 0, -93163175000.0])
ops.load(760, *[0, 0, -93163175000.0])
ops.load(764, *[0, 0, -93163175000.0])
ops.load(768, *[0, 0, -93163175000.0])
ops.load(772, *[0, 0, -93163175000.0])
ops.load(776, *[0, 0, -93163175000.0])
ops.load(780, *[0, 0, -93163175000.0])
ops.load(242, *[0, 0, -46581587500.0])
ops.load(249, *[0, 0, -46581587500.0])
ops.load(257, *[0, 0, -46581587500.0])
ops.load(265, *[0, 0, -46581587500.0])
ops.load(273, *[0, 0, -46581587500.0])
ops.load(281, *[0, 0, -46581587500.0])
ops.load(289, *[0, 0, -46581587500.0])
ops.load(297, *[0, 0, -46581587500.0])
ops.load(305, *[0, 0, -46581587500.0])
ops.load(313, *[0, 0, -46581587500.0])
ops.load(321, *[0, 0, -46581587500.0])
ops.load(328, *[0, 0, -46581587500.0])
ops.load(245, *[0, 0, -46581587500.0])
ops.load(253, *[0, 0, -46581587500.0])
ops.load(261, *[0, 0, -46581587500.0])
ops.load(269, *[0, 0, -46581587500.0])
ops.load(277, *[0, 0, -46581587500.0])
ops.load(285, *[0, 0, -46581587500.0])
ops.load(293, *[0, 0, -46581587500.0])
ops.load(301, *[0, 0, -46581587500.0])
ops.load(309, *[0, 0, -46581587500.0])
ops.load(317, *[0, 0, -46581587500.0])
ops.load(325, *[0, 0, -46581587500.0])
ops.load(331, *[0, 0, -46581587500.0])
ops.load(133, *[0, 0, -46581587500.0])
ops.load(138, *[0, 0, -46581587500.0])
ops.load(146, *[0, 0, -46581587500.0])
ops.load(154, *[0, 0, -46581587500.0])
ops.load(162, *[0, 0, -46581587500.0])
ops.load(170, *[0, 0, -46581587500.0])
ops.load(178, *[0, 0, -46581587500.0])
ops.load(186, *[0, 0, -46581587500.0])
ops.load(194, *[0, 0, -46581587500.0])
ops.load(202, *[0, 0, -46581587500.0])
ops.load(210, *[0, 0, -46581587500.0])
ops.load(217, *[0, 0, -46581587500.0])
ops.load(431, *[0, 0, -46581587500.0])
ops.load(438, *[0, 0, -46581587500.0])
ops.load(446, *[0, 0, -46581587500.0])
ops.load(454, *[0, 0, -46581587500.0])
ops.load(462, *[0, 0, -46581587500.0])
ops.load(470, *[0, 0, -46581587500.0])
ops.load(478, *[0, 0, -46581587500.0])
ops.load(486, *[0, 0, -46581587500.0])
ops.load(494, *[0, 0, -46581587500.0])
ops.load(502, *[0, 0, -46581587500.0])
ops.load(510, *[0, 0, -46581587500.0])
ops.load(517, *[0, 0, -46581587500.0])
ops.load(865, *[0, 0, -46581587500.0])
ops.load(867, *[0, 0, -46581587500.0])
ops.load(869, *[0, 0, -46581587500.0])
ops.load(871, *[0, 0, -46581587500.0])
ops.load(873, *[0, 0, -46581587500.0])
ops.load(875, *[0, 0, -46581587500.0])
ops.load(877, *[0, 0, -46581587500.0])
ops.load(879, *[0, 0, -46581587500.0])
ops.load(881, *[0, 0, -46581587500.0])
ops.load(883, *[0, 0, -46581587500.0])
ops.load(885, *[0, 0, -46581587500.0])
ops.load(887, *[0, 0, -46581587500.0])
ops.load(794, *[0, 0, -46581587500.0])
ops.load(798, *[0, 0, -46581587500.0])
ops.load(802, *[0, 0, -46581587500.0])
ops.load(806, *[0, 0, -46581587500.0])
ops.load(810, *[0, 0, -46581587500.0])
ops.load(814, *[0, 0, -46581587500.0])
ops.load(818, *[0, 0, -46581587500.0])
ops.load(822, *[0, 0, -46581587500.0])
ops.load(826, *[0, 0, -46581587500.0])
ops.load(830, *[0, 0, -46581587500.0])
ops.load(834, *[0, 0, -46581587500.0])
ops.load(838, *[0, 0, -46581587500.0])
ops.load(433, *[0, 0, -46581587500.0])
ops.load(440, *[0, 0, -46581587500.0])
ops.load(448, *[0, 0, -46581587500.0])
ops.load(456, *[0, 0, -46581587500.0])
ops.load(464, *[0, 0, -46581587500.0])
ops.load(472, *[0, 0, -46581587500.0])
ops.load(480, *[0, 0, -46581587500.0])
ops.load(488, *[0, 0, -46581587500.0])
ops.load(496, *[0, 0, -46581587500.0])
ops.load(504, *[0, 0, -46581587500.0])
ops.load(512, *[0, 0, -46581587500.0])
ops.load(519, *[0, 0, -46581587500.0])
ops.load(615, *[0, 0, -46581587500.0])
ops.load(621, *[0, 0, -46581587500.0])
ops.load(629, *[0, 0, -46581587500.0])
ops.load(637, *[0, 0, -46581587500.0])
ops.load(645, *[0, 0, -46581587500.0])
ops.load(653, *[0, 0, -46581587500.0])
ops.load(661, *[0, 0, -46581587500.0])
ops.load(669, *[0, 0, -46581587500.0])
ops.load(677, *[0, 0, -46581587500.0])
ops.load(685, *[0, 0, -46581587500.0])
ops.load(693, *[0, 0, -46581587500.0])
ops.load(701, *[0, 0, -46581587500.0])
ops.load(619, *[0, 0, -46581587500.0])
ops.load(625, *[0, 0, -46581587500.0])
ops.load(633, *[0, 0, -46581587500.0])
ops.load(641, *[0, 0, -46581587500.0])
ops.load(649, *[0, 0, -46581587500.0])
ops.load(657, *[0, 0, -46581587500.0])
ops.load(665, *[0, 0, -46581587500.0])
ops.load(673, *[0, 0, -46581587500.0])
ops.load(681, *[0, 0, -46581587500.0])
ops.load(689, *[0, 0, -46581587500.0])
ops.load(697, *[0, 0, -46581587500.0])
ops.load(705, *[0, 0, -46581587500.0])
ops.constraints(*['Transformation'])
ops.integrator(*['LoadControl', 0.01])
ops.numberer(*['RCM'])
ops.system(*['BandSPD'])
ops.test(*['NormDispIncr', 6, 10, 0, 2])
ops.algorithm(*['Newton', False, False, False])
ops.analysis('Static')
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.wipeAnalysis()
ops.loadConst('-time', 0.0)
ops.pattern('MultipleSupport', 3)
ops.timeSeries('Path', 1141, '-values', *[-7.071413165249396e-06, -7.072057087498251e-06, -7.075131179590244e-06, -7.079821898514638e-06, -7.087962785590207e-06, -7.097879915818339e-06, -7.109475973265944e-06, -7.12160090188263e-06, -7.13234294380527e-06, -7.1401709647034295e-06, -7.144301889638882e-06, -7.145928066165652e-06, -7.145508789108135e-06, -7.142205049603945e-06, -7.13661120244069e-06, -7.129821824491955e-06, -7.126534910639748e-06, -7.13182498657261e-06, -7.149722023314098e-06, -7.180226020864211e-06, -7.217926849989453e-06, -7.2526599979028106e-06, -7.274928975675721e-06, -7.2764719334372785e-06, -7.259904123202432e-06, -7.236295914481161e-06, -7.224857199616963e-06, -7.246072073030518e-06, -7.318622920138296e-06, -7.447833922924474e-06, -7.61740602683858e-06, -7.798027581884526e-06, -7.956136869324837e-06, -8.063564564508852e-06, -8.111665920296218e-06, -8.107387657219078e-06, -8.075641744653694e-06, -8.040788088692352e-06, -8.017233994905837e-06, -8.002449249033816e-06, -7.984725016285665e-06, -7.948670827317983e-06, -7.872752576076891e-06, -7.761142114759423e-06, -7.645813639101107e-06, -7.5464381552592386e-06, -7.467204795830185e-06, -7.409154932247475e-06, -7.368324077106081e-06, -7.339814146689605e-06, -7.3293540481245145e-06, -7.339056082855677e-06, -7.360512881859904e-06, -7.372812888206681e-06, -7.358642960753059e-06, -7.319211817957694e-06, -7.263740826601861e-06, -7.187603841884993e-06, -7.0702581069781445e-06, -6.910328920639586e-06, -6.738860065524932e-06, -6.621254215133376e-06, -6.6145012169727124e-06, -6.738552201568382e-06, -6.968857178435428e-06, -7.243953859870089e-06, -7.495829777326435e-06, -7.668370017199777e-06, -7.727389856881928e-06, -7.683616786380298e-06, -7.587757863802835e-06, -7.512266165576875e-06, -7.473272034985712e-06, -7.428442131640622e-06, -7.331752840400441e-06, -7.150464170990745e-06, -6.893184036016464e-06, -6.6346237872494385e-06, -6.4881851358222775e-06, -6.534798103530193e-06, -6.792095973651158e-06, -7.208666829683352e-06, -7.65980439609848e-06, -8.003828952496406e-06, -8.152852387866005e-06, -8.108790098049212e-06, -7.900013770267833e-06, -7.581100817333208e-06, -7.231607924040873e-06, -6.969681180635234e-06, -6.9349221121228766e-06, -7.191360964498017e-06, -7.658244612684939e-06, -8.154943316185381e-06, -8.50035394250881e-06, -8.544218871975318e-06, -8.2612441474339e-06, -7.797427315381356e-06, -7.324977104872232e-06, -6.920373834873317e-06, -6.582786227227189e-06, -6.292648777161958e-06, -6.0400620895961765e-06, -5.895944013900589e-06, -5.947440968157025e-06, -6.225126981007634e-06, -6.697650860587601e-06, -7.299081062228652e-06, -7.977753739396576e-06, -8.722944585315417e-06, -9.561799743096344e-06, -1.0450129593664315e-05, -1.1179679859196767e-05, -1.1440790331107564e-05, -1.0944590030703694e-05, -9.67969299381366e-06, -7.958986316225491e-06, -6.191622105689021e-06, -4.682484814111376e-06, -3.5877710615750402e-06, -2.959259973067674e-06, -2.7779460651800036e-06, -2.9939189971628366e-06, -3.5781720271188533e-06, -4.513432941166684e-06, -5.7701640798768494e-06, -7.269322850333992e-06, -8.943556167650968e-06, -1.0605540410324465e-05, -1.1864380212500691e-05, -1.2358400454104412e-05, -1.195465029013576e-05, -1.096400956157595e-05, -9.88658666756237e-06, -9.125705219048541e-06, -8.85393819771707e-06, -8.99674432730535e-06, -9.402720934303943e-06, -9.914978363667615e-06, -1.0445080079080071e-05, -1.0982829735439736e-05, -1.1564879969228059e-05, -1.2219269592605997e-05, -1.2979309758520685e-05, -1.3725990356761031e-05, -1.4095309779804666e-05, -1.3538829989556689e-05, -1.1705190445354674e-05, -8.814917237032205e-06, -5.644872999255313e-06, -3.2101190754474374e-06, -2.284748916281387e-06, -2.986269009852549e-06, -4.722803168988321e-06, -6.612821835005889e-06, -7.792034011799842e-06, -7.656759407836944e-06, -6.136272986623226e-06, -3.747376013052417e-06, -1.2794760095857782e-06, 4.282975112346321e-07, 6.039994104867219e-07, -1.1647009614534909e-06, -4.700007139035733e-06, -9.50419416767545e-06, -1.4931810255802702e-05, -2.0182620573905297e-05, -2.4442340873065405e-05, -2.6871139198192395e-05, -2.6950130632030778e-05, -2.484284050296992e-05, -2.1243720766506158e-05, -1.6908299585338682e-05, -1.2477010386646725e-05, -8.466677172691561e-06, -5.129535111336736e-06, -2.6399870876048226e-06, -1.1081790489697596e-06, -5.307352921590791e-07, -7.69169616887666e-07, -1.305411956309399e-06, -1.4972180224503973e-06, -1.10552196019853e-06, -3.600366937916988e-07, 4.813391001334821e-07, 1.2141759953010478e-06, 1.5050710544528556e-06, 1.040746951730398e-06, -2.1906120650783123e-07, -2.070584059765679e-06, -3.903854121745098e-06, -4.8343049456889275e-06, -4.2898032006633e-06, -2.1923190161032835e-06, 1.2686119816862629e-06, 5.854567007190781e-06, 1.1184540198883042e-05, 1.62642500072252e-05, 1.965591036423575e-05, 2.0078719899174757e-05, 1.6865169527591206e-05, 1.033847001963295e-05, 1.473596967116464e-06, -8.36858725961065e-06, -1.7829750504461117e-05, -2.5595349143259227e-05, -3.0372410037671216e-05, -3.1424438930116594e-05, -2.9055030609015375e-05, -2.3999980840017088e-05, -1.729040923237335e-05, -1.0349829608458094e-05, -4.5063138713885564e-06, -2.743821880812902e-07, 2.2876890852785436e-06, 3.0887649700162e-06, 2.4238161131506786e-06, 1.0949570423690602e-06, -1.448527058300897e-07, -1.2898519798909547e-06, -3.1107720133149996e-06, -6.43309113002033e-06, -1.1373969755368307e-05, -1.7247459254576825e-05, -2.3020440494292416e-05, -2.7489189960760996e-05, -2.9770229957648553e-05, -2.9572769562946633e-05, -2.6988460376742296e-05, -2.2585680198972113e-05, -1.7190959624713287e-05, -1.1631519555521663e-05, -6.254282197915018e-06, -1.0380730373071856e-06, 4.001731213065796e-06, 8.327406249009073e-06, 1.0598630069580395e-05, 9.718258297652937e-06, 5.468881226988742e-06, -1.5983049479473266e-06, -1.0198629752267152e-05, -1.8190099581261165e-05, -2.3405069441650994e-05, -2.4916800612118095e-05, -2.282880996062886e-05, -1.800012068997603e-05, -1.1774510312534403e-05, -5.714347935281694e-06, -7.926890930320951e-07, 2.5449930944887456e-06, 3.807406073974562e-06, 2.874666961361072e-06, 2.096366955584017e-07, -3.2374409784097224e-06, -6.349650902848225e-06, -8.318378604599275e-06, -8.967864232545253e-06, -8.727404747332912e-06, -8.127602086460683e-06, -7.870909030316398e-06, -8.346704817085993e-06, -9.673074600868858e-06, -1.246108968189219e-05, -1.721935041132383e-05, -2.362272971367929e-05, -3.087530058110133e-05, -3.810066118603572e-05, -4.4031690777046606e-05, -4.758454088005237e-05, -4.830937905353494e-05, -4.6388639020733535e-05, -4.285218892619014e-05, -3.876031041727401e-05, -3.4741049603326246e-05, -3.089051824645139e-05, -2.697222043934744e-05, -2.2458680177805945e-05, -1.712252924335189e-05, -1.149338004324818e-05, -6.621507054660469e-06, -3.3862379495985806e-06, -2.3374439024337335e-06, -4.046762114739977e-06, -8.78072933119256e-06, -1.5836460079299286e-05, -2.374715950281825e-05, -3.113334969384596e-05, -3.696989006130025e-05, -4.0260638343170285e-05, -4.038301995024085e-05, -3.7265130231389776e-05, -3.128220123471692e-05, -2.363916064496152e-05, -1.6177329598576762e-05, -1.065205015038373e-05, -8.209772204281762e-06, -9.037098607223015e-06, -1.2743170373141766e-05, -1.810646972444374e-05, -2.344648055441212e-05, -2.6908750442089513e-05, -2.719702933973167e-05, -2.3620750653208233e-05, -1.6323470845236443e-05, -7.189481948444154e-06, 1.2905940138807637e-06, 7.080468094500247e-06, 9.019636308948975e-06, 6.750387910869904e-06, 5.435350090010616e-07, -8.745529157749843e-06, -1.9495439119054936e-05, -2.9744980565737933e-05, -3.79012999474071e-05, -4.266214091330767e-05, -4.34900211985223e-05, -4.032436845591292e-05, -3.372599167050794e-05, -2.5037070372491144e-05, -1.5943609469104558e-05, -8.496233022015076e-06, -4.9331561058352236e-06, -7.32311900719651e-06, -1.617207999515813e-05, -2.9477980206138454e-05, -4.321235974202864e-05, -5.299639087752439e-05, -5.664413038175553e-05, -5.452111872727983e-05, -4.826454824069515e-05, -3.931683022528887e-05, -2.8828919312218204e-05, -1.798607081582304e-05, -7.825778993719723e-06, 2.0029330016768654e-07, 4.46692320110742e-06, 3.6694150367111433e-06, -1.924004891407094e-06, -1.0183330232393928e-05, -1.8353650375502184e-05, -2.4321900127688423e-05, -2.7184449209016748e-05, -2.6931180400424637e-05, -2.4269800633192062e-05, -2.0209910871926695e-05, -1.6022819181671366e-05, -1.2860779861512128e-05, -1.1634590009634849e-05, -1.2940179658471607e-05, -1.7501630281913094e-05, -2.5477960662101395e-05, -3.6283989174989983e-05, -4.858553074882366e-05, -5.956348104518838e-05, -6.555703293997794e-05, -6.466206104960293e-05, -5.801597944810055e-05, -4.767057907884009e-05, -3.530022149789147e-05, -2.1608080714941025e-05, -7.379005182883702e-06, 6.356803169182967e-06, 1.8221720893052407e-05, 2.6675290428102016e-05, 2.989787026308477e-05, 2.690638939384371e-05, 1.8722079403232783e-05, 7.843166713428218e-06, -3.0191549740266055e-06, -1.1807949704234488e-05, -1.7188460333272815e-05, -1.818788041418884e-05, -1.3483039765560534e-05, -2.686695097509073e-06, 1.2900490219180938e-05, 3.0530030926456675e-05, 4.768605867866427e-05, 6.278127693803981e-05, 7.521860243286937e-05, 8.531592175131664e-05, 9.385670273331925e-05, 0.00010118269710801542, 0.00010745110193965957, 0.00011270139657426625, 0.00011705190263455734, 0.00012089929805370048, 0.00012402409629430622, 0.0001252485963050276, 0.0001232015056302771, 0.00011694659770000726, 0.00010666390153346583, 9.426930773770437e-05, 8.171042281901464e-05, 6.966859655221924e-05, 5.834542025695555e-05, 4.7849080146988854e-05, 3.853176167467609e-05, 3.101877882727422e-05, 2.5449540771660395e-05, 1.9916189557989128e-05, 1.233711009263061e-05, 2.50354310082912e-06, -7.920356438262388e-06, -1.6863610653672367e-05, -2.2136939151096158e-05, -2.1595060388790444e-05, -1.4333930266730022e-05, -1.836539013311267e-06, 1.1191030353074893e-05, 2.0184639652143233e-05, 2.255828985653352e-05, 1.764941043802537e-05, 6.514210781460861e-06, -8.405533662880771e-06, -2.302406937815249e-05, -3.2733278203522786e-05, -3.5285880585433915e-05, -3.190439019817859e-05, -2.576197039161343e-05, -1.9378539946046658e-05, -1.4023299627297092e-05, -1.0048729564005043e-05, -7.232570169435348e-06, -5.2726350077136885e-06, -3.5734049106395105e-06, -1.8158930288336705e-06, -6.730195991622168e-07, -1.3686519650946138e-06, -4.4600319597520865e-06, -8.925314432417508e-06, -1.2828239960072096e-05, -1.5461089788004756e-05, -1.7852609744295478e-05, -2.07271605177084e-05, -2.268484968226403e-05, -2.0509169189608656e-05, -1.159587009169627e-05, 4.601016826200066e-06, 2.531653990445193e-05, 4.477287075133063e-05, 5.698636960005388e-05, 5.822754974360578e-05, 4.874973092228174e-05, 3.188525079167448e-05, 1.1898790035047568e-05, -7.380904207821004e-06, -2.2741680368199013e-05, -3.2260501029668376e-05, -3.5961078538093716e-05, -3.349890175741166e-05, -2.3547039745608345e-05, -6.636480065935757e-06, 1.331704970652936e-05, 2.9760229153907858e-05, 3.6179950257064775e-05, 2.794917054416146e-05, 4.90818683829275e-06, -2.7275909815216437e-05, -5.847276042914018e-05, -7.79090914875269e-05, -7.945310790091753e-05, -6.30563372396864e-05, -3.491696043056436e-05, -3.002842049681931e-06, 2.6037110728793778e-05, 4.7687550249975175e-05, 5.9001449699280784e-05, 5.854917981196195e-05, 4.749923027702607e-05, 2.953172952402383e-05, 1.0383840162830893e-05, -3.1855859106144635e-06, -6.808576927141985e-06, -8.50315416300873e-07, 9.976764886232559e-06, 1.8930029909824952e-05, 2.1053230739198625e-05, 1.549736043671146e-05, 4.729688953375444e-06, -7.327344974328298e-06, -1.7751559425960295e-05, -2.555522951297462e-05, -3.191229916410521e-05, -3.929395825252868e-05, -4.864928996539675e-05, -5.867025174666196e-05, -6.740514072589576e-05, -7.355138950515538e-05, -7.63849529903382e-05, -7.447251846315339e-05, -6.735274655511603e-05, -5.637286085402593e-05, -4.348303991719149e-05, -3.020977965206839e-05, -1.663859984546434e-05, -2.853090109056211e-06, 1.0604940143821295e-05, 2.178965041821357e-05, 2.824735020112712e-05, 2.9132239433238283e-05, 2.4707289412617683e-05, 1.6505040548508987e-05, 7.704890776949469e-06, 1.5702770497227903e-06, -7.013409799583314e-07, 2.3824699724173115e-07, 1.8310510085939313e-06, 1.7659369859757135e-06, -7.375683139798639e-07, -5.111926839163061e-06, -9.818238140724134e-06, -1.2770819921570364e-05, -1.2376760423649102e-05, -9.769521057023667e-06, -6.960562132007908e-06, -5.209300070418976e-06, -5.867846994078718e-06, -8.50649485073518e-06, -1.1644309779512696e-05, -1.389046974509256e-05, -1.3287640285852831e-05, -7.499810180888744e-06, 3.390196980035398e-06, 1.4148699847282842e-05, 1.8265969629283063e-05, 1.1183719834662043e-05, -7.535745226050494e-06, -3.418327105464414e-05, -6.291773752309382e-05, -8.824822725728154e-05, -0.000106486797449179, -0.00011539120168890804, -0.00011400719813536853, -0.00010351419768994674, -8.590859943069518e-05, -6.217714690137655e-05, -3.3547639759490266e-05, -2.0959230369044235e-06, 2.807000964821782e-05, 5.231031900621019e-05, 6.70812078169547e-05, 7.03677287674509e-05, 6.258750363485888e-05, 4.669513873523101e-05, 2.693433089007158e-05, 7.075775101839099e-06, -1.0508450031920802e-05, -2.4123450202750973e-05, -3.2519550586584955e-05, -3.5431010473985225e-05, -3.405498864594847e-05, -2.9647550036315806e-05, -2.2688160242978483e-05, -1.2912610145576764e-05, -1.7363089455102454e-06, 7.4422518991923425e-06, 1.142607015935937e-05, 8.674947821418755e-06, 4.913314910481859e-07, -8.100701961666346e-06, -1.0728679626481608e-05, -4.216492015984841e-06, 8.892779987945687e-06, 2.238827983092051e-05, 3.14752796839457e-05, 3.4563010558485985e-05, 3.321760959806852e-05, 3.106578878941946e-05, 3.195851968484931e-05, 3.656828994280659e-05, 4.250705023878254e-05, 4.774787157657556e-05, 5.189485818846151e-05, 5.4648189689032733e-05, 5.4462041589431465e-05, 5.031489854445681e-05, 4.284422175260261e-05, 3.359066977282055e-05, 2.410142042208463e-05, 1.706516013655346e-05, 1.7898710211738944e-05, 3.1356401450466365e-05, 5.5760978284524754e-05, 8.440959209110588e-05, 0.00010957309859804809, 0.00012634749873541296, 0.00013348989887163043, 0.00013309880159795284, 0.00012845010496675968, 0.00012081680324627087, 0.00011030150199076161, 9.607434185454622e-05, 7.799114246154204e-05, 5.7539131375961006e-05, 3.7293928471626714e-05, 2.0060590031789616e-05, 9.3890530479257e-06, 7.82763436291134e-06, 1.4261029718909413e-05, 2.373692041146569e-05, 3.0045779567444697e-05, 2.9001930670347065e-05, 1.906323086586781e-05, 5.158839826435724e-07, -2.3736149159958586e-05, -4.963907122146338e-05, -7.182968693086877e-05, -8.591890218667686e-05, -9.081311145564541e-05, -8.74931865837425e-05, -7.882931095082313e-05, -6.817450775997713e-05, -5.9146201238036156e-05, -5.612850145553239e-05, -6.276489148149267e-05, -8.004788833204657e-05, -0.00010345099872210994, -0.00012643399531953037, -0.00014239440497476608, -0.00014648509386461228, -0.00013909410336054862, -0.00012367090675979853, -0.00010510189895285293, -8.604385220678523e-05, -6.672449671896175e-05, -4.766873098560609e-05, -3.0514969694195315e-05, -2.0230259906384163e-05, -2.3288750526262447e-05, -4.286715920898132e-05, -7.58438982302323e-05, -0.00011434200132498518, -0.00014854190521873534, -0.00016919340123422444, -0.00017077640222851187, -0.00015195869491435587, -0.00011579620331758633, -6.937753641977906e-05, -2.3438480639015324e-05, 1.034834986057831e-05, 2.429844971629791e-05, 1.6932919606915675e-05, -9.063845936907455e-06, -4.7066401748452336e-05, -8.774422167334706e-05, -0.00012261170195415616, -0.00014586909674108028, -0.00015696209447924048, -0.00016028160462155938, -0.0001603918062755838, -0.00015806680312380195, -0.00015148750389926136, -0.00013850840332452208, -0.00011739529873011634, -9.043866157298908e-05, -6.447858322644606e-05, -4.5365439291344956e-05, -3.532120899762958e-05, -3.467779970378615e-05, -4.3151070713065565e-05, -5.994827006361447e-05, -8.362977678189054e-05, -0.00011090900079580024, -0.00013663880235981196, -0.00015305560373235494, -0.00015301389794331044, -0.00013720570132136345, -0.00011556810204638168, -9.880823199637234e-05, -9.232910088030621e-05, -9.542689076624811e-05, -0.00010317889973521233, -0.00010904230293817818, -0.00010731859947554767, -9.744244016474113e-05, -8.190300286514685e-05, -6.38523415545933e-05, -4.552569953375496e-05, -2.8886830477858894e-05, -1.3877330275136046e-05, 1.1164900115545606e-07, 1.345136024610838e-05, 2.753398075583391e-05, 4.456548049347475e-05, 6.678768841084093e-05, 9.270748705603182e-05, 0.00011787519906647503, 0.00013723279698751867, 0.0001492907031206414, 0.00015716379857622087, 0.0001654165971558541, 0.0001772505056578666, 0.00019110400171484798, 0.00020379699708428234, 0.0002140475990017876, 0.00022115350293461233, 0.00022398239525500685, 0.00022365970653481781, 0.00022466179507318884, 0.00023076719662640244, 0.00024138459411915392, 0.0002512854989618063, 0.0002550797944422811, 0.0002508409961592406, 0.00024029069754760712, 0.0002273956051794812, 0.00021695939358323812, 0.0002117296971846372, 0.00021036059479229152, 0.00020949910685885698, 0.00020622920419555157, 0.00020017310453113168, 0.00019331810472067446, 0.00018960969464387745, 0.0001915658067446202, 0.0001983263937290758, 0.00020708709780592471, 0.00021392649796325713, 0.00021575120626948774, 0.00021200970513746142, 0.00020437959756236523, 0.0001954655017470941, 0.00018563629419077188, 0.00016919159679673612, 0.00014076479419600219, 0.00010032470163423568, 5.3058491175761446e-05, 6.869875051052077e-06, -3.105158975813538e-05, -5.551756112254225e-05, -6.49189532850869e-05, -6.0247421060921624e-05, -4.337614882388152e-05, -1.5891779185039923e-05, 1.8631630155141465e-05, 5.1591010560514405e-05, 7.156823266996071e-05, 6.999266042839736e-05, 4.51114792667795e-05, 2.839607077476103e-06, -4.514764077612199e-05, -8.718515891814604e-05, -0.00011893719783984125, -0.0001401547051500529, -0.00015108680236153305, -0.00015238650667015463, -0.00014477809600066394, -0.00013085799582768232, -0.00011470149911474437, -0.00010059319902211428, -9.252649761037901e-05, -9.203523950418457e-05, -9.724230039864779e-05, -0.00010518090130062774, -0.00011326999810989946, -0.00011724780051736161, -0.0001134491030825302, -0.00010186310100834817, -8.615379920229316e-05, -7.320600707316771e-05, -7.243086292874068e-05, -9.009803034132347e-05, -0.0001248857006430626, -0.00016771949594840407, -0.00020614049572031945, -0.00023113269708119333, -0.0002380478981649503, -0.0002258361055282876, -0.0001959094952326268, -0.00015236259787343442, -0.00010114790347870439, -4.970641020918265e-05, -4.865661139774602e-06, 2.8513819415820763e-05, 4.7931211156537756e-05, 5.3596191719407216e-05, 4.8191839596256614e-05, 3.668495992315002e-05, 2.2465670554083772e-05, 5.405548108683433e-06, -1.5107099898159504e-05, -3.7953890569042414e-05, -6.086844950914383e-05, -8.23832378955558e-05, -0.00010136039782082662, -0.00011534120130818337, -0.00012150200200267136, -0.00011983310105279088, -0.00011085189908044413, -9.399023838341236e-05, -6.971624679863453e-05, -4.067604095325805e-05, -1.0189380191150121e-05, 1.7136509995907545e-05, 3.4559820051072165e-05, 3.75265117327217e-05, 2.6684410840971395e-05, 4.565873041428858e-06, -2.7446320018498227e-05, -6.635714089497924e-05, -0.00010574080079095438, -0.00013854970165994018, -0.0001608099992154166, -0.00017188259516842663, -0.0001749379007378593, -0.00017460349772591144, -0.0001765057968441397, -0.00018519340665079653, -0.0001987649011425674, -0.0002092755021294579, -0.00020944149582646787, -0.00019922939827665687, -0.0001836697047110647, -0.00017031710012815893, -0.00016421730106230825, -0.00016566310659982264, -0.00017107039457187057, -0.00017467989528086036, -0.0001714649988571182, -0.00015792039630468935, -0.00013407789811026305, -0.00010378989827586338, -7.363557233475149e-05, -4.876506864093244e-05, -3.171397838741541e-05, -2.3585749659105204e-05, -2.4265440515591763e-05, -3.267147985752672e-05, -4.5955890527693555e-05, -6.118226883700117e-05, -7.345052290474996e-05, -7.760785229038447e-05, -7.282746082637459e-05, -6.0400230722734705e-05, -4.303361856727861e-05, -2.4467730327160098e-05, -1.0466759704286233e-05, -6.741779998264974e-06, -1.6046789824031293e-05, -3.7563921068795025e-05, -6.570341065526009e-05, -9.262368985218927e-05, -0.00011053300113417208, -0.0001133245968958363, -9.787182352738455e-05, -6.74353213980794e-05, -3.065579949179664e-05, 4.766141046275152e-06, 3.6180539609631523e-05, 6.550111720571294e-05, 9.519128070678562e-05, 0.00012564500502776355, 0.00015243689995259047, 0.00016975239850580692, 0.00017560800188221037, 0.00017225320334546268, 0.00016325399337802082, 0.00015131810505408794, 0.00014013370673637837, 0.0001339799928246066, 0.0001368472003377974, 0.00014980969717726111, 0.00017005880363285542, 0.0001918555935844779, 0.00021228620607871562, 0.00023278310254681855, 0.00025466099032200873, 0.0002753860899247229, 0.00029041070956736803, 0.0002987692132592201, 0.0003021674056071788, 0.0003024000907316804, 0.00030214869184419513, 0.0003049061924684793, 0.0003143961075693369, 0.00033245590748265386, 0.00035751648829318583, 0.00038513680920004845, 0.0004077153862453997, 0.0004170403117313981, 0.0004088834102731198, 0.00038548960583284497, 0.0003543169004842639, 0.0003239797952119261, 0.00030103541212156415, 0.00028708280296996236, 0.00027992879040539265, 0.00027887040050700307, 0.00028525650850497186, 0.0003006455081049353, 0.0003243128885515034, 0.0003506478969939053, 0.00037232349859550595, 0.00038135069189593196, 0.0003706734860315919, 0.0003374110965523869, 0.000284462992567569, 0.00022115980391390622, 0.0001614976063137874, 0.0001188276000902988, 0.00010075909813167527, 0.00010806410136865452, 0.00013602249964606017, 0.00017656630370765924, 0.00021836129599250853, 0.00024978190776892006, 0.00026308800443075597, 0.0002569642965681851, 0.0002358844067202881, 0.00020712599507533014, 0.00017903589468915015, 0.00015823029389139265, 0.0001467456022510305, 0.00014282450138125569, 0.00014116060629021376, 0.00013449109974317253, 0.00011713179992511868, 8.734964649192989e-05, 4.802579860552214e-05, 5.360891009331681e-06, -3.536358053679578e-05, -7.185361027950421e-05, -0.00010267949983244762, -0.00012788000458385795, -0.00014875989290885627, -0.00016809170483611524, -0.0001885110978037119, -0.00021169580577407032, -0.00023861259978730232, -0.00027008631150238216, -0.000304548186250031, -0.00033902080031111836, -0.00037149019772186875, -0.0004005504888482392, -0.00042570970254018903, -0.0004462079086806625, -0.00046324459253810346, -0.0004807020886801183, -0.000502032577060163, -0.0005278508760966361, -0.000556478975340724, -0.0005844174884259701, -0.0006056324928067625, -0.0006130675901658833, -0.0006040572770871222, -0.000582690117880702, -0.0005560169229283929, -0.0005305851227603853, -0.0005102931754663587, -0.0004977834760211408, -0.0004932957817800343, -0.0004954506875947118, -0.0005019932286813855, -0.0005072287749499083, -0.0005048912134952843, -0.0004900709027424455, -0.0004624346038326621, -0.00042665109504014254, -0.00039138610009104013, -0.0003645610122475773, -0.0003493113908916712, -0.0003439417923800647, -0.00034509951365180314, -0.00035081501118838787, -0.0003598341136239469, -0.0003713869082275778, -0.0003823357983492315, -0.0003854690003208816, -0.00037232390604913235, -0.00033826951403170824, -0.00028462859336286783, -0.00021673970331903547, -0.00014229769294615835, -6.932872929610312e-05, -5.273715032672044e-06, 4.555236955638975e-05, 8.226866339100525e-05, 0.00010422590275993571, 0.00011213830293854699, 0.00010791920067276806, 9.353273344459012e-05, 7.26505895727314e-05, 4.985972918802872e-05, 3.161250060657039e-05, 2.5341489163110964e-05, 3.522323095239699e-05, 5.988697012071498e-05, 9.366282756673172e-05, 0.00012891610094811767, 0.0001572939072502777, 0.00017415320326108485, 0.00018101869500242174, 0.0001844057987909764, 0.00019190189777873456, 0.00020771230629179627, 0.00023247780336532742, 0.0002629747032187879, 0.00029270511004142463, 0.00031292688800022006, 0.00031626661075279117, 0.00029931560857221484, 0.00026406950200907886, 0.0002182019961765036, 0.00017187140474561602, 0.00013166719872970134, 9.792346827453002e-05, 6.869166099932045e-05, 4.288946001906879e-05, 1.8503109458833933e-05, -7.221924988698447e-06, -3.511035174597055e-05, -6.43240418867208e-05, -9.150661207968369e-05, -0.00011241479660384357, -0.00012306610005907714, -0.0001221687998622656, -0.00011109709885204211, -9.220314677804708e-05, -6.942940672161058e-05, -4.6246710553532466e-05, -2.58581403613789e-05, -1.102659007301554e-05, -3.914909029845148e-06, -5.641104053211166e-06, -1.6661959307384677e-05, -3.507854125928134e-05, -5.601737939286977e-05, -7.305751205421984e-05, -8.051109034568071e-05, -7.421610644087195e-05, -5.189365037949756e-05, -1.4601439943362493e-05, 3.093473060289398e-05, 7.35656576580368e-05, 0.00010569860023679212, 0.00012419330596458167, 0.0001289706997340545, 0.00012299249647185206, 0.00011115709639852867, 0.00010076350008603185, 9.895410039462149e-05, 0.00010947880218736827, 0.00013392149412538856, 0.0001721042935969308, 0.000222597096581012, 0.000282185705145821, 0.00034556310856714845, 0.00040656881174072623, 0.0004590963071677834, 0.0005005347193218768, 0.0005333618028089404, 0.0005636591813527048, 0.0005970501806586981, 0.000632563722319901, 0.0006653873715549707, 0.0006910146912559867, 0.0007080279174260795, 0.0007178300875239074, 0.0007237130776047707, 0.0007282844162546098, 0.0007298719137907028, 0.0007256760145537555, 0.0007150131277740002, 0.0006987014785408974, 0.000677581992931664, 0.0006524436175823212, 0.0006246673874557018, 0.0005941131967119873, 0.0005581977893598378, 0.0005175396800041199, 0.0004767364007420838, 0.00044236669782549143, 0.00042105140164494514, 0.00041609370964579284, 0.00042418891098350286, 0.0004355924902483821, 0.00044165580766275525, 0.0004374329000711441, 0.0004226510936859995, 0.0004015731974504888, 0.00038107309956103563, 0.0003657586930785328, 0.00035302271135151386, 0.0003363598953001201, 0.0003101323964074254, 0.0002741253993008286, 0.00023284630151465535, 0.00019297930703032762, 0.00016022070485632867, 0.0001380064059048891, 0.0001292233937419951, 0.00013405679783318192, 0.0001476520992582664, 0.00016178849909920245, 0.00016834199777804315, 0.0001624767028260976, 0.0001445817033527419, 0.00011874699703184888, 8.944355795392767e-05, 5.989622150082141e-05, 3.0839139071758837e-05, 3.0338239866978256e-06, -2.13329003599938e-05, -3.90203385904897e-05, -4.704823004431091e-05, -4.4066440750611946e-05, -3.011875924130436e-05, -7.4336448960821144e-06, 2.043256063188892e-05, 4.913963857688941e-05, 7.678355905227363e-05, 0.00010527319682296365, 0.00013931159628555179, 0.00018218539480585605, 0.00023252780374605209, 0.0002859153028111905, 0.0003367670869920403, 0.0003803212021011859, 0.00041511451127007604, 0.0004427740932442248, 0.00046662590466439724, 0.0004896821919828653, 0.0005129153723828495, 0.0005359326023608446, 0.0005582558223977685, 0.00057869782904163, 0.0005960802081972361, 0.0006102964980527759, 0.0006230453145690262, 0.0006380907725542784, 0.0006569739198312163, 0.0006740412209182978, 0.0006818887777626514, 0.0006759361131116748, 0.0006560548790730536, 0.0006262214737944305, 0.0005933251231908798, 0.0005644524935632944, 0.0005435100756585598, 0.000531370984390378, 0.0005256002186797559, 0.0005238556186668575, 0.0005249459063634276, 0.0005276968004181981, 0.0005279429024085402, 0.0005170573713257909, 0.00048465150757692754, 0.0004217464884277433, 0.00032568018650636077, 0.0002000600943574682, 5.393104947870597e-05, -9.965558274416253e-05, -0.0002477176021784544, -0.0003809074987657368, -0.0004977795761078596, -0.0005998951965011656, -0.0006877683917991817, -0.0007590338937006891, -0.0008121266146190464, -0.0008496724767610431, -0.000878186197951436, -0.0009087644284591079, -0.0009533920092508197, -0.0010199419921264052, -0.0011103230062872171, -0.0012193250004202127, -0.0013365329941734672, -0.0014505749568343163, -0.0015511009842157364, -0.0016309759812429547, -0.001687707961536944, -0.0017249929951503873, -0.0017496809596195817, -0.0017651430098339915, -0.0017712060362100601, -0.0017682570032775402, -0.001755272038280964, -0.001730127027258277, -0.0016907339449971914, -0.001638539950363338, -0.0015802140114828944, -0.0015220210188999772, -0.0014680499443784356, -0.001422874047420919, -0.0013916910393163562, -0.0013766189804300666, -0.00137523899320513, -0.001382029033266008, -0.0013920279452577233, -0.0013992500025779009, -0.001394285005517304, -0.001366300042718649, -0.0013097230112180114, -0.001229017972946167, -0.0011351179564371705, -0.001039988943375647, -0.0009512538090348244, -0.0008754730806685984, -0.0008187341154552996, -0.0007819823804311454, -0.0007594642229378223, -0.0007461959030479193, -0.0007407930097542703, -0.0007389814709313214, -0.0007316662813536823, -0.0007088761194609106, -0.0006631637224927545, -0.0005905847065150738, -0.0004936439800076187, -0.0003797908138949424, -0.00025698699755594134, -0.00013026449596509337, -8.174981189768005e-07, 0.00013190250319894403, 0.00026927300496026874, 0.0004087623965460807, 0.0005418339278548956, 0.0006608287803828716, 0.0007641467964276671, 0.000853896199259907, 0.0009332306799478829, 0.0010061670327559114, 0.0010760079603642225, 0.0011443969560787082, 0.0012095089768990874, 0.0012685939436778426, 0.0013207360170781612, 0.0013658240204676986, 0.0014044080162420869, 0.0014372050063684583, 0.0014655960258096457, 0.0014902539551258087, 0.001512052956968546, 0.001530113979242742, 0.0015404210425913334, 0.001538212993182242, 0.0015188719844445586, 0.0014802459627389908, 0.0014221760211512446, 0.0013442330528050661, 0.0012485269689932466, 0.0011417530477046967, 0.0010351620148867369, 0.0009421947179362178, 0.000871450116392225, 0.0008237113943323493, 0.0007952793966978788, 0.0007812432013452053, 0.0007751196972094476, 0.0007702952716499567, 0.0007599545060656965, 0.0007358448929153383, 0.0006906709168106318, 0.0006217805203050375, 0.0005332776927389205, 0.0004344652988947928, 0.000336386205162853, 0.00024847910390235484, 0.00017591859796084464, 0.00011810199794126675, 6.82933023199439e-05, 1.8198059478891082e-05, -3.7834728573216125e-05, -0.0001013665969367139, -0.00016885279910638928, -0.00023243800387717783, -0.0002839560038410127, -0.00032084560371004045, -0.0003489163937047124, -0.000377176096662879, -0.00040924400673247874, -0.00044190831249579787, -0.00046734779607504606, -0.0004778571892529726, -0.00047299391007982194, -0.0004603650013450533, -0.0004508602141868323, -0.00045289850095286965, -0.0004693618102464825, -0.0004980702069588006, -0.0005329038831405342, -0.000566438480746001, -0.0005938794929534197, -0.0006126501248218119, -0.0006232355954125524, -0.0006274871993809938, -0.0006288046715781093, -0.0006285543786361814, -0.0006263577961362898, -0.0006251428858377039, -0.0006291820900514722, -0.0006413151859305799, -0.0006607635878026485, -0.0006827214965596795, -0.0007001681951805949, -0.0007071049767546356, -0.0006992619019001722, -0.000673141679726541, -0.0006270689773373306, -0.0005615212139673531, -0.00048364000394940376, -0.00041024701204150915, -0.0003628749109338969, -0.0003570283006411046, -0.00039459861000068486, -0.0004667635075747967, -0.000559319625608623, -0.0006575150764547288, -0.0007508639828301966, -0.0008371917065232992, -0.0009162579081021249, -0.0009827445028349757, -0.0010272510116919875, -0.0010417030425742269, -0.001024566008709371, -0.0009832961950451136, -0.0009313179180026054, -0.0008815288892947137, -0.0008427838911302388, -0.0008207550272345543, -0.0008186735794879496, -0.0008391597075387836, -0.0008830719161778688, -0.0009471296216361225, -0.0010223359568044543, -0.0010962940286844969, -0.00115360994823277, -0.0011794030433520675, -0.0011678660521283746, -0.0011250339448451996, -0.001063987030647695, -0.0009992541745305061, -0.0009441720903851092, -0.0009079372975975275, -0.0008940263069234788, -0.0009004352032206953, -0.0009221470099873841, -0.0009541952749714255, -0.000991225941106677, -0.0010257209651172161, -0.0010489169508218765, -0.0010540829971432686, -0.0010406440123915672, -0.0010151939932256937, -0.0009865444153547287, -0.0009603698854334652, -0.0009369265753775835, -0.0009136836160905659, -0.0008866597781889141, -0.0008523770957253873, -0.0008081264095380902, -0.0007527443813160062, -0.000688435509800911, -0.0006203412776812911, -0.0005570818902924657, -0.0005057139787822962, -0.0004684670129790902, -0.0004426538944244385, -0.00042190568638034165, -0.00040118981269188225, -0.0003775313089136034, -0.0003505614004097879, -0.00032220399589277804, -0.0002960698038805276, -0.0002731856075115502, -0.0002505666925571859, -0.00022693299979437143, -0.00020371979917399585, -0.00018295939662493765, -0.0001640286936890334, -0.00014324650692287832, -0.00011782469664467499, -8.772736327955499e-05, -5.6760858569759876e-05, -2.7819549359264784e-05, 1.0080259471578756e-06, 3.426484909141436e-05, 7.566346903331578e-05, 0.00012474939285311848, 0.00017715789726935327, 0.000229789104196243, 0.00028555819881148636, 0.0003499212034512311, 0.00042490489431656897, 0.0005071288906037807, 0.0005892154877074063, 0.0006654917960986495, 0.0007345494232140481, 0.0007987719727680087, 0.000863872526679188, 0.0009366393205709755, 0.0010185879655182362, 0.0011060379911214113, 0.001194717944599688, 0.0012817590031772852, 0.0013643370475620031, 0.0014367339899763465, 0.001490799942985177, 0.001517434953711927, 0.0015127500519156456, 0.0014815069735050201, 0.0014366050017997622, 0.0013939590426161885, 0.0013667469611391425, 0.0013622860424220562, 0.001379486988298595, 0.0014110079500824213, 0.0014488969463855028, 0.0014879649970680475, 0.0015240319771692157, 0.0015520659508183599, 0.0015673780580982566, 0.0015653329901397228, 0.0015430189669132233, 0.0014993329532444477, 0.0014354869490489364, 0.001356731983833015, 0.0012714510085061193, 0.0011885239509865642, 0.0011131770443171263, 0.0010466160019859672, 0.0009890826186165214, 0.000941067177336663, 0.0008990346104837954, 0.0008544714073650539, 0.0008002190734259784, 0.0007345550111494958, 0.000658681383356452, 0.0005768814007751644, 0.0004966466804035008, 0.00042402901453897357, 0.00036107891355641186, 0.0003081923059653491, 0.0002645383938215673, 0.00022498759790323675, 0.00018075949628837407, 0.0001242987927980721, 5.323249934008345e-05, -2.9388449547695927e-05, -0.00011791590077336878, -0.00020692740508820862, -0.0002902112901210785, -0.00035883928649127483, -0.0004042297077830881, -0.00042468481115065515, -0.00042823029798455536, -0.0004258583066985011, -0.0004267829062882811, -0.00043491649557836354, -0.0004463208024390042, -0.0004514965112321079, -0.00044172510388307273, -0.0004161641118116677, -0.0003807368048001081, -0.0003413601079955697, -0.0003002859011758119, -0.00025715879746712744, -0.00021120079327374697, -0.00016227280138991773, -0.00011032020120183006, -5.729318945668638e-05, -1.0481679964868817e-05, 2.1971989554003812e-05, 3.626375109888613e-05, 3.3123400498880073e-05, 1.5119509953365196e-05, -1.2414569937391207e-05, -4.203886055620387e-05, -6.805564771639183e-05, -8.443272963631898e-05, -8.29847194836475e-05, -5.7459110394120216e-05, -1.0198929885518737e-05, 4.5854369091102853e-05, 9.325647260993719e-05, 0.00011870940215885639, 0.00011798909690696746, 9.521460742689669e-05, 5.930889892624691e-05, 1.9340150174684823e-05, -1.9752989828702994e-05, -5.830873851664364e-05, -0.00010110220318892971, -0.0001529870933154598, -0.00021681739599443972, -0.000292167387669906, -0.00037619000067934394, -0.00046385658788494766, -0.0005495935911312699, -0.0006305545102804899, -0.0007038628100417554, -0.0007661149138584733, -0.000813505903352052, -0.0008422195096500218, -0.0008493867935612798, -0.000831915414892137, -0.0007871593115851283, -0.0007138500805012882, -0.0006163857760839164, -0.0005057741072960198, -0.00039549829671159387, -0.00029844208620488644, -0.0002239599998574704, -0.000177466994500719, -0.00016042409697547555, -0.00017233409744221717, -0.00021158030722290277, -0.00027271610451862216, -0.00034718308597803116, -0.00042209180537611246, -0.00048312029684893787, -0.0005187222850508988, -0.0005229528760537505, -0.000495920074172318, -0.00044574099592864513, -0.00038621851126663387, -0.0003292892943136394, -0.0002826914133038372, -0.0002500280097592622, -0.0002328057016711682, -0.00023233940009959042, -0.00024834691430442035, -0.0002797739871311933, -0.0003250582085456699, -0.00038110199966467917, -0.0004433811118360609, -0.0005063766147941351, -0.0005646360805258155, -0.0006157113239169121, -0.0006620322819799185, -0.0007075584726408124, -0.0007546949200332165, -0.000802727707196027, -0.000849397387355566, -0.0008910857723094523, -0.000922820414416492, -0.0009424035088159144, -0.0009546927758492529, -0.0009686707053333521, -0.0009940707823261619, -0.0010379799641668797, -0.0011024180566892028, -0.0011834190227091312, -0.0012715300545096397, -0.001354873995296657, -0.0014248290099203587, -0.001479370053857565, -0.0015191619750112295, -0.0015423629665747285, -0.0015458980342373252, -0.0015275459736585617, -0.0014888349687680602, -0.0014354990562424064, -0.001374782994389534, -0.001314411056227982, -0.0012623489601537585, -0.0012256089830771089, -0.0012064280454069376, -0.001200595055706799, -0.001198382000438869, -0.0011893659830093384, -0.00116796197835356, -0.0011344420490786433, -0.0010916480096057057, -0.0010435800068080425, -0.0009924237383529544, -0.0009380021947436035, -0.0008792589069344103, -0.0008170228102244437, -0.000753222790081054, -0.0006885792827233672, -0.0006209051935002208, -0.0005460387910716236, -0.00046103779459372163, -0.0003658487112261355, -0.00026162838912568986, -0.000151008294778876, -3.673918035929091e-05, 7.820891914889216e-05, 0.00018715079932007939, 0.00028359508723951876, 0.0003660797083284706, 0.0004354219126980752, 0.000489381025545299, 0.0005287629901431501, 0.0005598647985607386, 0.0005916359950788319, 0.0006332860211841762, 0.0006882190937176347, 0.0007561622769571841, 0.0008364706882275641, 0.0009271139279007912, 0.0010222259443253279, 0.0011124740121886134, 0.0011868519941344857, 0.0012352829799056053, 0.0012513219844549894, 0.001232270966283977, 0.0011791669530794024, 0.001098194974474609, 0.0010014999425038695, 0.0009023571037687361, 0.0008116404060274363, 0.0007381130126304924, 0.0006858194246888161, 0.0006514415144920349, 0.0006266960990615189, 0.0006042267195880413, 0.0005821248050779104, 0.0005632336251437664, 0.0005518313846550882, 0.0005485606961883605, 0.0005492334021255374, 0.0005471677286550403, 0.0005344764795154333, 0.0005064653232693672, 0.00046504000783897936, 0.00041643710574135184, 0.00036792480386793613, 0.0003281384997535497, 0.00030449300538748503, 0.00030030691414140165, 0.00031316481181420386, 0.0003373732033651322, 0.00036503191222436726, 0.00038913870230317116, 0.0004055626050103456, 0.000414605310652405, 0.000420390599174425, 0.00042915219091810286, 0.00044536020141094923, 0.00046859908616170287, 0.0004962342791259289, 0.0005247655790299177, 0.0005513317883014679, 0.0005732367280870676, 0.0005863658734597266, 0.0005875767092220485, 0.0005752114811912179, 0.0005509565817192197, 0.0005216419231146574, 0.000498904671985656, 0.0004943523090332747, 0.0005141216097399592, 0.0005590853979811072, 0.0006265525007620454, 0.000713436515070498, 0.0008158109267242253, 0.0009308845037594438, 0.0010569320293143392, 0.0011911250185221434, 0.0013279230333864689, 0.0014561460120603442, 0.0015653519658371806, 0.0016517960466444492, 0.001719256048090756, 0.001775686047039926, 0.0018278149655088782, 0.0018791219918057323, 0.0019266209565103054, 0.001962766982614994, 0.00197804206982255, 0.001968159107491374, 0.0019383380422368646, 0.0018990619573742151, 0.0018606840167194605, 0.0018268900457769632, 0.001791295944713056, 0.0017404980026185513, 0.0016613430343568325, 0.0015463420422747731, 0.0013954939786344767, 0.001216348959133029, 0.001021194038912654, 0.0008227957878261805, 0.0006336400983855128, 0.0004635381046682596, 0.0003176144964527339, 0.00019698070536833256, 9.861052240012214e-05, 1.5979780073394068e-05, -5.7004221162060276e-05, -0.00012471269292291254, -0.0001930542930494994, -0.0002696033916436136, -0.00035976231447421014, -0.00046412411029450595, -0.0005784552777186036, -0.0006952970870770514, -0.0008080170955508947, -0.0009166023228317499, -0.001025561010465026, -0.0011380099458619952, -0.0012528769439086318, -0.0013656850205734372, -0.001470691990107298, -0.001562761957757175, -0.0016407619696110487, -0.0017045310232788324, -0.0017512580379843712, -0.0017767969984561205, -0.0017792360158637166, -0.001762900035828352, -0.0017352709546685219, -0.0017044730484485626, -0.0016775690019130707, -0.001657527987845242, -0.0016423390479758382, -0.0016270369524136186, -0.001605366007424891, -0.0015725289704278111, -0.001526530017144978, -0.0014680969761684537, -0.0014018700458109379, -0.001333483960479498, -0.0012651319848373532, -0.0011950109619647264, -0.0011185100302100182, -0.001028807950206101, -0.0009196113096550107, -0.0007938224007375538, -0.000664968101773411, -0.0005462854169309139, -0.0004467557882890105, -0.00036975290277041495, -0.0003125469957012683, -0.00026857529883272946, -0.00023266150674317032, -0.00020072849292773753, -0.00016857169975992292, -0.0001328786020167172, -9.064839105121791e-05, -3.9925071178004146e-05, 1.9859180611092597e-05, 8.539416739949957e-05, 0.0001490988943260163, 0.0002003599947784096, 0.0002286430972162634, 0.00022581960365641862, 0.00019035580044146627, 0.00012761949619743973, 4.747508864966221e-05, -3.65167397831101e-05, -0.000109251202957239, -0.00015550589887425303, -0.00016500790661666542, -0.00013779870641883463, -8.407727000303566e-05, -1.83067204488907e-05, 4.413818896864541e-05, 8.858228829922155e-05, 0.00010408760135760531, 8.65043475641869e-05, 3.869934880640358e-05, -3.0470770070678554e-05, -0.00010900790221057832, -0.00018538380390964448, -0.00024861301062628627, -0.00029045340488664806, -0.0003067688085138798, -0.0002993087109643966, -0.00027104929904453456, -0.00022335069661494344, -0.00015577230078633875, -6.928019865881652e-05, 3.1851159292273223e-05, 0.0001414340949850157, 0.000249471195274964, 0.0003473302931524813, 0.0004328454961068928, 0.0005105765885673463, 0.0005881058750674129, 0.0006717587821185589, 0.0007644505240023136, 0.0008639381849206984, 0.0009658777271397412, 0.0010643129935488105, 0.0011533299693837762, 0.0012276240158826113, 0.0012829770566895604, 0.0013169440208002925, 0.00132822897285223, 0.0013188329758122563, 0.001293475041165948, 0.0012572050327435136, 0.0012173070572316647, 0.0011834939941763878, 0.0011644959449768066, 0.0011643710313364863, 0.0011823669774457812, 0.0012154929572716355, 0.001261934987269342, 0.0013200549874454737, 0.0013852929696440697, 0.0014503409620374441, 0.0015082809841260314, 0.0015561030013486743, 0.0015938800061121583, 0.0016201860271394253, 0.00163078005425632, 0.001625137054361403, 0.0016100589418783784, 0.0015967460349202156, 0.0015931579982861876, 0.0015999709721654654, 0.0016133739845827222, 0.0016288369661197066, 0.0016427220543846488, 0.0016520239878445864, 0.0016530669527128339, 0.0016439859755337238, 0.0016254830406978726, 0.0015991399995982647, 0.001565273036248982, 0.0015250210417434573, 0.0014792470028623939, 0.0014298929600045085, 0.0013813730329275131, 0.0013401659671217203, 0.001312374952249229, 0.00130132504273206, 0.0013070639688521624, 0.0013255079975351691, 0.001350497012026608, 0.001375259947963059, 0.0013936200411990285, 0.0014005700359120965, 0.0013921919744461775, 0.0013646000297740102, 0.001312042004428804, 0.001229549990966916, 0.0011160180438309908, 0.0009742805850692093, 0.0008083818247541785, 0.0006200040807016194, 0.0004116786003578454, 0.00019006150250788778, -3.299371019238606e-05, -0.000242780995904468, -0.0004259693087078631, -0.0005724822985939682, -0.0006782594718970358, -0.0007429667166434228, -0.000770997372455895, -0.0007711520884186029, -0.0007570083253085613, -0.0007457120227627456, -0.0007531270966865122, -0.0007881054189056158, -0.0008501298143528402, -0.0009330133907496929, -0.00102680001873523, -0.0011203560279682279, -0.001201402978040278, -0.0012588989920914173, -0.0012881429865956306, -0.0012877159751951694, -0.0012598959729075432, -0.0012104699853807688, -0.00114913797006011, -0.0010902700014412403, -0.0010515439789742231, -0.001048285048455, -0.001086427946574986, -0.001163588953204453, -0.001271352986805141, -0.0013974850298836827, -0.001529559027403593, -0.0016558150527998805, -0.0017665489576756954, -0.0018525189952924848, -0.001904024975374341, -0.0019151639426127076, -0.001888287952169776, -0.0018345549469813704, -0.0017679339507594705, -0.001701770001091063, -0.001645948039367795, -0.0016059869667515159, -0.0015817000530660152, -0.0015673099551349878, -0.00155223801266402, -0.0015240299981087446, -0.0014729889808222651, -0.0013943769736215472, -0.001288097002543509, -0.0011611999943852425, -0.0010244420263916254, -0.0008878327789716423, -0.0007584610139019787, -0.0006385755841620266, -0.0005270538968034089, -0.0004242869035806507, -0.0003354717919137329, -0.0002653498959261924, -0.00021305399422999471, -0.000172400294104591, -0.00013548429706133902, -9.650040738051757e-05, -5.5477659770986065e-05, -1.816002986743115e-05, 1.0326880328648258e-05, 2.9878179702791385e-05, 4.684440136770718e-05, 7.182129775173962e-05, 0.00011514440120663494, 0.00018273679597768933, 0.00026991849881596863, 0.000364636885933578, 0.000455259985756129, 0.000534110120497644, 0.0005981053109280765, 0.0006496639107353985, 0.0006936215795576572, 0.0007311351946555078, 0.0007600350072607398, 0.0007768375216983259, 0.0007801029132679105, 0.0007713498780503869, 0.0007553758914582431, 0.0007374904816970229, 0.0007194699719548225, 0.0007032352732494473, 0.0006913089891895652, 0.0006866832845844328, 0.0006926393252797425, 0.0007128592114895582, 0.0007476483006030321, 0.0007918315241113305, 0.0008372085285373032, 0.0008736684103496373, 0.0008933076751418412, 0.0008931205957196653, 0.0008748866966925561, 0.0008449613815173507, 0.000811736099421978, 0.0007800168823450804, 0.0007491359137929976, 0.0007159645901992917, 0.0006773374043405056, 0.0006327629089355469, 0.0005839579971507192, 0.0005348980776034296, 0.0004901775973848999, 0.0004548215074464679, 0.00043438069405965507, 0.0004290957876946777, 0.0004309414071030915, 0.0004288294003345072, 0.0004133318143431097, 0.000381804711651057, 0.00033562429598532617, 0.0002790357102639973, 0.000216626503970474, 0.0001490839058533311, 7.606775034219027e-05, 3.888829951392836e-07, -7.361207099165767e-05, -0.0001437306054867804, -0.00020906080317217857, -0.00026941660325974226, -0.0003230478905607015, -0.0003659391077235341, -0.0003942188050132245, -0.000405581813538447, -0.0003977351007051766, -0.00036931890645064414, -0.0003231996961403638, -0.0002687558007892221, -0.00021604759967885911, -0.00016927199612837285, -0.0001263409067178145, -8.23542577563785e-05, -3.2303269108524546e-05, 2.722077988437377e-05, 9.337985829915851e-05, 0.00015735060151200742, 0.0002086291933665052, 0.00024128760560415685, 0.0002548221964389086, 0.00025369899231009185, 0.00024676680914126337, 0.00024396739900112152, 0.00025164600810967386, 0.00026994329527951777, 0.00029482541140168905, 0.0003206272085662931, 0.00034322019200772047, 0.0003610267012845725, 0.00037335880915634334, 0.000379036704543978, 0.0003787236928474158, 0.0003754291101358831, 0.00036986079066991806, 0.00035777530865743756, 0.00033700550557114184, 0.00030894350493326783, 0.00027549860533326864, 0.00023727960069663823, 0.000196908600628376, 0.00015953229740262032, 0.0001303643948631361, 0.00011179110151715577, 0.00010468540131114423, 0.00010981880041072145, 0.00012448820052668452, 0.00014290980470832437, 0.0001592467015143484, 0.00016733059601392597, 0.00016127449634950608, 0.00013992239837534726, 0.00010760690202005208, 7.042757351882756e-05, 3.2708889193600044e-05, -2.44290004047798e-06, -3.36358389176894e-05, -6.247692363103852e-05, -9.107126243179664e-05, -0.00012111329851904884, -0.0001514947070972994, -0.00017732659762259573, -0.0001898579066619277, -0.00018166650261264294, -0.00015149109822232276, -0.00010351410310249776, -4.892101060249843e-05, -7.163874897742062e-07, 3.1753901566844434e-05, 4.462166180019267e-05, 3.926160934497602e-05, 2.0206880435580388e-05, -6.803004907851573e-06, -3.719633969012648e-05, -6.714346091030166e-05, -9.419147681910545e-05, -0.0001177594022010453, -0.00013604060222860426, -0.00014601490693166852, -0.00014583830488845706, -0.0001383417984470725, -0.00012930319644510746, -0.0001227829052368179, -0.00011992619693046436, -0.00011921839904971421, -0.00011920819815713912, -0.00012033840175718069, -0.00012619930203072727, -0.00014104010188020766, -0.0001665861054789275, -0.00020278070587664843, -0.00024913749075494707, -0.00030261260690167546, -0.0003572870045900345, -0.00040824819006957114, -0.00045293220318853855, -0.0004884001100435853, -0.0005121345166116953, -0.0005216164281591773, -0.0005150752840563655, -0.00049183628289029, -0.00045466801384463906, -0.00040736570372246206, -0.0003534005954861641, -0.0002976988034788519, -0.0002458849048707634, -0.00020447210408747196, -0.00017950139590539038, -0.00017549250333104283, -0.0001936982007464394, -0.00023230729857459664, -0.0002834922925103456, -0.00033546920167282224, -0.00037840180448256433, -0.00040539068868383765, -0.0004166720900684595, -0.00041922880336642265, -0.000421129196183756, -0.00042708340333774686, -0.00043820569408126175, -0.00045341430814005435, -0.00046780798584222794, -0.00047260618885047734, -0.0004602115077432245, -0.00042820858652703464, -0.00037998100742697716, -0.0003205290122423321, -0.0002540588902775198, -0.00018381049449089915, -0.00011315120354993269, -4.5456941734300926e-05, 1.5848689145059325e-05, 6.638289778493345e-05, 0.00010337160347262397, 0.00012711199815385044, 0.00014093739446252584, 0.00014747880049981177, 0.00014678449952043593, 0.00013837890583090484, 0.00012298699584789574, 0.00010389539966126904, 8.802019146969542e-05, 8.269085810752586e-05, 8.934752258937806e-05, 0.00010195629874942824, 0.00011133970110677183, 0.00011024260311387479, 9.488200885243714e-05, 6.648353155469522e-05, 2.945559026557021e-05, -1.1943459867325146e-05, -5.460244938149117e-05, -9.776712249731645e-05, -0.00014336399908643216, -0.00019397240248508751, -0.0002508678880985826, -0.00031406921334564686, -0.00038387280073948205, -0.00045910890912637115, -0.0005349668208509684, -0.0006061248132027686, -0.0006704857805743814, -0.0007270142086781561, -0.0007753035170026124, -0.0008156087133102119, -0.0008470481843687594, -0.0008685900829732418, -0.0008818937931209803, -0.0008913591736927629, -0.0009031667141243815, -0.0009218946797773242, -0.0009474955732002854, -0.0009763228008523583, -0.001003416022285819, -0.0010236790403723717, -0.0010318659478798509, -0.0010248159524053335, -0.0010033630533143878, -0.0009689796133898199, -0.0009221744257956743, -0.0008617111016064882, -0.0007859520264901221, -0.0006946790963411331, -0.000592840020544827, -0.0004936850164085627, -0.0004132367903366685, -0.00036186640500091016, -0.00034259509993717074, -0.00035344139905646443, -0.0003888788924086839, -0.0004421763005666435, -0.000506626209244132, -0.0005754873272962868, -0.0006391929928213358, -0.0006837231921963394, -0.0006947777001187205, -0.0006625435198657215, -0.0005840928060933948, -0.0004657809913624078, -0.00031963299261406064, -0.00015990500105544925, 1.1892219617948285e-06, 0.00015454420645255595, 0.00029138728859834373, 0.0004029338888358325, 0.0004814256972167641, 0.0005256058066152036, 0.0005403045215643942, 0.0005343772936612368, 0.0005183733883313835, 0.0004994110204279423, 0.00048068829346448183, 0.0004650015907827765, 0.00045664049685001373, 0.00045868189772590995, 0.0004715700924862176, 0.000494214182253927, 0.0005264516221359372, 0.000567203271202743, 0.0006104637286625803, 0.0006468915962614119, 0.0006694396724924445, 0.0006761502008885145, 0.0006681531085632741, 0.000645495078060776, 0.0006080046878196299, 0.0005565698957070708, 0.0004932237206958234, 0.0004221929993946105, 0.0003489706141408533, 0.00027956400299444795, 0.00021685629326384515, 0.00015987560618668795, 0.00010411239782115445, 4.6108110836939886e-05, -1.4028530131326988e-05, -7.633480709046125e-05, -0.00014376940089277923, -0.0002220838941866532, -0.0003158070903737098, -0.0004262999864295125, -0.0005504500004462898, -0.0006823656731285155, -0.0008163884049281478, -0.0009469966171309352, -0.00107096997089684, -0.0011865870328620076, -0.001289566047489643, -0.0013719010166823864, -0.0014243409968912601, -0.001438237028196454, -0.001406347961165011, -0.00132651103194803, -0.001203989959321916, -0.001051530009135604, -0.0008899404783733189, -0.0007413430721499026, -0.0006232361774891615, -0.0005454493802972138, -0.0005083535215817392, -0.0005060879047960043, -0.0005287015810608864, -0.000564918911550194, -0.0006023250753059983, -0.0006290004239417613, -0.0006381077109836042, -0.0006278317887336016, -0.0005962650757282972, -0.0005415905034169555, -0.0004641049890778959, -0.0003683835966512561, -0.0002641436003614217, -0.00016373379912693053, -7.839142926968634e-05, -1.1758250366256107e-05, 4.0370930946664885e-05, 8.570707723265514e-05, 0.00013230140029918402, 0.00018659490160644054, 0.0002489098988007754, 0.00031649108859710395, 0.00038617709651589394, 0.0004556037893053144, 0.0005219975137151778, 0.0005821305094286799, 0.0006309421150945127, 0.0006617917097173631, 0.0006700978265143931, 0.0006557510932907462, 0.0006240499787963927, 0.0005816586199216545, 0.0005352199077606201, 0.000489953497890383, 0.00045008279266767204, 0.00041720439912751317, 0.00038923879037611187, 0.00036210360121913254, 0.00033117301063612103, 0.0002954385126940906, 0.0002583758032415062, 0.0002246548974653706, 0.00019702650024555624, 0.00017079009558074176, 0.00013719640264753252, 8.89176080818288e-05, 2.5718820324982516e-05, -4.615488069248386e-05, -0.00011833690223284066, -0.0001843508071033284, -0.0002421160024823621, -0.00029364199144765735, -0.00034341320861130953, -0.00039348480640910566, -0.0004392105038277805, -0.0004704651073552668, -0.00047692880616523325, -0.00045290039270184934, -0.0003979757020715624, -0.0003189166891388595, -0.00023036569473333657, -0.00014852560707367957, -8.367069676751271e-05, -3.9723490772303194e-05, -1.4428879694605712e-05, -7.505840926569363e-07, 9.660206160333473e-06, 2.417212090222165e-05, 4.7102090320549905e-05, 7.807101792423055e-05, 0.00011433669715188444, 0.0001519901998108253, 0.00018950180674437433, 0.00022968670236878097, 0.0002771473955363035, 0.0003338610986247659, 0.0003986562951467931, 0.0004677466058637947, 0.0005343515076674521, 0.0005911394255235791, 0.000634420313872397, 0.0006654280005022883, 0.0006900171865709126, 0.0007156101055443287, 0.0007472378201782703, 0.0007877346943132579, 0.0008366642287001014, 0.0008869637968018651, 0.0009252203744836152, 0.0009390030172653496, 0.0009225750109180808, 0.0008799794013611972, 0.0008222899050451815, 0.0007627524901181459, 0.0007123267278075218, 0.0006762549164704978, 0.0006546758231706917, 0.0006417090771719813, 0.0006283249822445214, 0.0006064549088478088, 0.0005722715286538005, 0.0005278523894958198, 0.00048017941298894584, 0.00043923238990828395, 0.00041437079198658466, 0.0004114201874472201, 0.0004298053099773824, 0.0004613214114215225, 0.0004947750712744892, 0.000520664791110903, 0.0005333452136255801, 0.0005311043933033943, 0.0005132487858645618, 0.00047916319454088807, 0.0004287601914256811, 0.00036212700069881976, 0.00028215680504217744, 0.0001946694974321872, 0.00010641250264598057, 2.426564969937317e-05, -4.6639470383524895e-05, -0.00010139300138689578, -0.0001378207962261513, -0.00016009710088837892, -0.00017358410696033388, -0.0001833317946875468, -0.00019233599596191198, -0.00019897180027328432, -0.00019666469597723335, -0.00017693899280857295, -0.00013638449308928102, -7.918424671515822e-05, -1.1636179806373548e-05, 6.073609984014183e-05, 0.00013270600175019354, 0.00019766429613810033, 0.00024868210311979055, 0.0002785178949125111, 0.00028262700652703643, 0.0002620313025545329, 0.0002248897944809869, 0.00018534960690885782, 0.000157449598191306, 0.00015112600522115827, 0.00016737690020818263, 0.00020188509370200336, 0.0002495991066098213, 0.0003049277001991868, 0.00036300410283729434, 0.0004190276958979666, 0.00046774960355833173, 0.0005054274224676192, 0.0005302862846292555, 0.0005410655867308378, 0.000538550375495106, 0.000524756673257798, 0.0005003978149034083, 0.0004669349000323564, 0.0004271102952770889, 0.0003827108012046665, 0.00033385519054718316, 0.0002817035128828138, 0.00023012940073385835, 0.00018418139370623976, 0.0001459774939576164, 0.00011304380313958973, 8.200861338991672e-05, 5.307063111104071e-05, 3.225283944630064e-05, 2.5268869649153203e-05, 3.169400952174328e-05, 4.973847171640955e-05, 7.73503998061642e-05, 0.00010965260298689827, 0.00014211679808795452, 0.00017425209807697684, 0.00020842179947067052, 0.0002474019129294902, 0.00029162169084884226, 0.0003410473873373121, 0.0003966173098888248, 0.000461512798210606, 0.000538629072252661, 0.000623692583758384, 0.0007070775027386844, 0.0007768053910695016, 0.0008235372952185571, 0.00084354990394786, 0.0008396998164243996, 0.0008198270807042718, 0.000792484381236136, 0.0007649922044947743, 0.0007423852803185582, 0.0007270019850693643, 0.0007148127187974751, 0.0006970650865696371, 0.0006689102156087756, 0.0006307394942268729, 0.000585948524530977, 0.0005396861233748496, 0.0004943201201967895, 0.000445629091700539, 0.0003876657865475863, 0.0003157664032187313, 0.000226123898755759, 0.0001198683021357283, 3.1433698950422695e-06, -0.0001153838966274634, -0.00022803009778726846, -0.00033055461244657636, -0.0004253133956808597, -0.0005214589182287455, -0.0006262966780923307, -0.0007392126717604697, -0.0008520116098225117, -0.000955834926571697, -0.0010452100541442633, -0.0011194919934496284, -0.0011823589447885752, -0.0012379740364849567, -0.0012871259823441505, -0.0013273980002850294, -0.0013567289570346475, -0.0013745409669354558, -0.001383148948661983, -0.0013867999659851193, -0.0013901849742978811, -0.0013980569783598185, -0.0014113859506323934, -0.0014269109815359116, -0.001442042994312942, -0.0014546130551025271, -0.0014610439538955688, -0.0014564819866791368, -0.0014366500545293093, -0.0013984240358695388, -0.0013428200036287308, -0.001276210998184979, -0.0012049729702994227, -0.0011310289846733212, -0.0010511280270293355, -0.0009604949154891074, -0.0008570008794777095, -0.0007447152165696025, -0.0006341856205835938, -0.0005356675828807056, -0.0004528299905359745, -0.00038289499934762716, -0.0003197896876372397, -0.0002570773067418486, -0.00019259970576968044, -0.0001306852063862607, -7.725688919890672e-05, -3.360061964485794e-05, 4.085619821125874e-06, 4.251412974554114e-05, 8.765356324147433e-05, 0.00014350000128615648, 0.00021442670549731702, 0.0003044499026145786, 0.00041301059536635876, 0.0005345555837266147, 0.0006609532865695655, 0.000782801304012537, 0.0008914825157262385, 0.0009816032834351063, 0.001052386942319572, 0.0011066349688917398, 0.001147228991612792, 0.0011746040545403957, 0.0011874879710376263, 0.0011844780528917909, 0.001168080954812467, 0.0011423990363255143, 0.0011106040328741074, 0.0010751240188255906, 0.0010370520176365972, 0.0009975516004487872, 0.0009558586752973497, 0.0009088426013477147, 0.0008528552716597915, 0.0007861931808292866, 0.0007129019941203296, 0.0006390149937942624, 0.000571739801671356, 0.0005179141880944371, 0.00047948129940778017, 0.000454056600574404, 0.0004368149093352258, 0.00042034030775539577, 0.0003981440095230937, 0.0003663914103526622, 0.0003231125883758068, 0.00026962620904669166, 0.00021055599790997803, 0.0001509556022938341, 9.556711302138865e-05, 4.6393979573622346e-05, 2.2341430394590134e-06, -3.763478161999956e-05, -7.035458838799968e-05, -8.862760296324268e-05, -8.44916794449091e-05, -5.470206087920815e-05, -1.944298901435104e-06, 6.614442827412859e-05, 0.00013796970597468317, 0.00020120250701438636, 0.00024704300449229777, 0.00027214980218559504, 0.0002792880986817181, 0.00027550029335543513, 0.00027011509519070387, 0.00027112659881822765, 0.00028009130619466305, 0.00029558729147538543, 0.0003139715117868036, 0.0003276508941780776, 0.0003298354858998209, 0.00031824730103835464, 0.0002965677995234728, 0.00027305580442771316, 0.0002586746122688055, 0.00026490099844522774, 0.0003015540132764727, 0.00037488600355573, 0.0004866931994911283, 0.0006319158710539341, 0.0007974358159117401, 0.00096632179338485, 0.001124404021538794, 0.0012624009978026152, 0.0013758509885519743, 0.0014645470073446631, 0.001531671965494752, 0.0015812950441613793, 0.0016181019600480795, 0.0016466829692944884, 0.001669366960413754, 0.0016861390322446823, 0.0016956259496510029, 0.0016954640159383416, 0.0016842179466038942, 0.0016618820372968912, 0.001626807963475585, 0.0015737720532342792, 0.0014999370323494077, 0.0014081139815971255, 0.0013048399705439806, 0.0011992730433121324, 0.0011019610101357102, 0.0010194870410487056, 0.0009498735889792442, 0.0008876466890797019, 0.0008268483798019588, 0.0007642019190825522, 0.0006983298226259649, 0.0006262570968829095, 0.0005431331228464842, 0.00044733480899594724, 0.00034185589174740016, 0.00023239929578267038, 0.0001256456016562879, 2.6123560019186698e-05, -6.225176912266761e-05, -0.0001367305958410725, -0.00019865170179400593, -0.0002513343933969736, -0.000295824691420421, -0.00033038630499504507, -0.00035316860885359347, -0.00036533380625769496, -0.0003711793979164213, -0.00037742240238003433, -0.00039009639294818044, -0.0004128105938434601, -0.0004476727917790413, -0.0004969210713170469, -0.0005632442771457136, -0.0006457972922362387, -0.0007390921236947179, -0.000834914215374738, -0.0009238289785571396, -0.0009961287723854184, -0.0010433739516884089, -0.0010608700104057789, -0.0010454549919813871, -0.000994182308204472, -0.0009060692973434925, -0.0007864260114729404, -0.0006505876081064343, -0.0005172244273126125, -0.0004021227068733424, -0.0003128104144707322, -0.0002495736989658326, -0.00020771590061485767, -0.0001781798928277567, -0.00015076229465194046, -0.00011384169920347631, -5.944440999883227e-05, 1.0232270142296329e-05, 8.795302710495889e-05, 0.00016551009321119636, 0.0002368082059547305, 0.0003012708912137896, 0.00035979971289634705, 0.00041424931259825826, 0.00046740210382267833, 0.0005218929727561772, 0.0005804823013022542, 0.0006434426177293062, 0.0007057375041767955, 0.0007571931928396225, 0.000787263794336468, 0.0007922713994048536, 0.0007758288993500173, 0.0007454432779923081, 0.0007089534192346036, 0.0006692755850963295, 0.000625109882093966, 0.0005710106925107539, 0.0005008911830373108, 0.0004109363944735378, 0.00029995921067893505, 0.0001691448997007683, 1.9840050299535505e-05, -0.0001464727974962443, -0.00032702001044526696, -0.0005129952915012836, -0.0006915840785950422, -0.0008506120066158473, -0.00098010478541255, -0.0010759140131995082, -0.0011383979581296444, -0.0011718620080500841, -0.001184634049423039, -0.0011859240476042032, -0.0011836879421025515, -0.001181571977213025, -0.0011776420287787914, -0.001164486980997026, -0.0011338359909132123, -0.0010831990512087941, -0.0010111170122399926, -0.0009145305957645178, -0.0007909446721896529, -0.0006398119148798287, -0.0004645092994906008, -0.00027428180328570306, -8.082309068413451e-05, 0.00010460490011610091, 0.00027447010506875813, 0.0004264898889232427, 0.0005616900161840022, 0.000682230107486248, 0.00078889838187024, 0.000882440188433975, 0.0009655613102950156, 0.001043834025040269, 0.0011251169489696622, 0.0012158669997006655, 0.0013170959427952766, 0.0014236080460250378, 0.0015255489852279425, 0.001614477951079607, 0.0016884070355445147, 0.0017505900468677282, 0.001805383013561368, 0.0018568569794297218, 0.0019079430494457483, 0.0019628629088401794, 0.002026681089773774, 0.002102561993524432, 0.0021902350708842278, 0.002284891903400421, 0.0023800861090421677, 0.0024695659521967173, 0.0025455099530518055, 0.0025984710082411766, 0.0026165670715272427, 0.002588283969089389, 0.0025073010474443436, 0.0023760648909956217, 0.0022032600827515125, 0.0019996738992631435, 0.0017771970015019178, 0.001545647974126041, 0.001313467975705862, 0.00108698895201087, 0.0008672592812217772, 0.0006514915730804205, 0.0004367576912045479, 0.00022234530479181558, 1.0437939636176452e-05, -0.00019323709420859814, -0.0003812180075328797, -0.0005481931730173528, -0.0006909485091455281, -0.0008061780827119946, -0.0008893624763004482, -0.000934598792809993, -0.0009356820955872536, -0.0008922741981223226, -0.0008139032870531082, -0.0007140933885239065, -0.0006056465208530426, -0.0004990901215933263, -0.00040161630022339523, -0.00031896779546514153, -0.0002569278876762837, -0.00021859370463062078, -0.00020419030624907464, -0.00021197370369918644, -0.00023532840714324266, -0.0002632910036481917, -0.0002837369975168258, -0.00028662479599006474, -0.00026526639703661203, -0.00021753530018031597, -0.00014655580162070692, -5.571529982262291e-05, 5.341587893781252e-05, 0.00017806660616770387, 0.00031293221400119364, 0.0004527198907453567, 0.0005933665088377893, 0.0007308963104151189, 0.0008624790934845805, 0.0009854446398094296, 0.001093789003789425, 0.0011787839466705918, 0.0012335809879004955, 0.0012588270474225283, 0.0012639079941436648, 0.0012621659552678466, 0.00126628705766052, 0.0012870749924331903, 0.0013290089555084705, 0.001386774005368352, 0.001450521987862885, 0.0015112810069695115, 0.0015677310293540359, 0.0016252710483968258, 0.0016912199789658189, 0.0017700400203466415, 0.0018585469806566834, 0.0019497249741107225, 0.0020350900012999773, 0.0021087690256536007, 0.0021688949782401323, 0.0022151849698275328, 0.0022488210815936327, 0.0022704889997839928, 0.0022802678868174553, 0.0022755530662834644, 0.0022526539396494627, 0.0022089609410613775, 0.002143709920346737, 0.002058961894363165, 0.0019599581137299538, 0.0018536599818617105, 0.0017459969967603683, 0.0016402410110458732, 0.001537322998046875, 0.0014330450212582946, 0.0013186390278860927, 0.0011870160233229399, 0.0010360049782320857, 0.0008667224901728332, 0.0006828323821537197, 0.0004918241174891591, 0.00030282430816441774, 0.00012454019451979548, -3.798881152761169e-05, -0.000183414900675416, -0.0003082942857872695, -0.00040550061385147274, -0.00046822690637782216, -0.0004958899808116257, -0.000496429274789989, -0.00048281010822393, -0.00046819710405543447, -0.0004630943003576249, -0.0004725349135696888, -0.0004946484114043415, -0.0005239772144705057, -0.0005511114723049104, -0.000565060880035162, -0.0005577611154876649, -0.0005275344010442495, -0.0004815015126951039, -0.00043068171362392604, -0.00038567750016227365, -0.0003529161913320422, -0.0003355683002155274, -0.0003333860950078815, -0.00034357179538346827, -0.00036208401434123516, -0.00038521859096363187, -0.00041067099664360285, -0.0004373429110273719, -0.0004654410877265036, -0.0004939840873703361, -0.0005196426063776016, -0.000537548097781837, -0.0005428909207694232, -0.0005318291950970888, -0.0005015042261220515, -0.0004534810141194612, -0.00039702479261904955, -0.0003467726055532694, -0.00031456220312975347, -0.0003044196928385645, -0.0003109755052719265, -0.0003230618021916598, -0.00033054559025913477, -0.0003294810885563493, -0.00032131740590557456, -0.00031175740878097713, -0.00030861940467730165, -0.00032054539769887924, -0.00035410100826993585, -0.0004117350035812706, -0.0004928847192786634, -0.0005929954932071269, -0.0007034286973066628, -0.00081416848115623, -0.0009149935212917626, -0.0009966748766601086, -0.0010526649421080947, -0.0010825080098584294, -0.0010925199603661895, -0.001093655009754002, -0.0010960500221699476, -0.0011062000412493944, -0.0011246720096096396, -0.0011467289878055453, -0.0011666619684547186, -0.0011806039838120341, -0.001188409049063921, -0.0011919779935851693, -0.001194723998196423, -0.0012001469731330872, -0.0012107460061088204, -0.0012291229795664549, -0.0012563109630718827, -0.001289358944632113, -0.0013233580393716693, -0.0013550319708883762, -0.001382671995088458, -0.0014049039455130696, -0.0014237579889595509, -0.00144472299143672, -0.0014692960539832711, -0.0014899390516802669, -0.00149051402695477, -0.001453935052268207, -0.001368541968986392, -0.0012319970410317183, -0.0010518749477341771, -0.0008447826257906854, -0.000634513096883893, -0.00044890970457345247, -0.0003096289874520153, -0.0002247144002467394, -0.00018847039609681815, -0.00018571640248410404, -0.00019825970230158418, -0.00020935549400746822, -0.0002056741068372503, -0.00017793590086512268, -0.0001206520973937586, -3.281711906311102e-05, 8.249885286204517e-05, 0.00021806090080644935, 0.0003622705116868019, 0.0004994219052605331, 0.0006104353233240545, 0.0006783332210034132, 0.0006934229750186205, 0.000655913318041712, 0.0005743950023315847, 0.00046136739547364414, 0.0003313239139970392, 0.00019910170522052795, 7.875299343140796e-05, -2.2040110707166605e-05, -0.00010411380208097398, -0.00016781530575826764, -0.000206552300369367, -0.00021065700275357813, -0.00017234659753739834, -9.025335020851344e-05, 2.9126160370651633e-05, 0.0001707974006421864, 0.00031689461320638657, 0.00045417388901114464, 0.0005754097946919501, 0.0006794232758693397, 0.0007689502090215683, 0.0008449049200862646, 0.0009038652060553432, 0.0009439103887416422, 0.0009683900279924273, 0.0009842382278293371, 0.0009960411116480827, 0.001004862948320806, 0.0010127919958904386, 0.001023179036565125, 0.0010392169933766127, 0.0010633040219545364, 0.0010943040251731873, 0.0011258419835940003, 0.0011459849774837494, 0.0011419879738241434, 0.0011078650131821632, 0.0010475900489836931, 0.0009728210279718041, 0.0008970306953415275, 0.0008320009219460189, 0.000786328106187284, 0.0007641061092726886, 0.0007653608918190002, 0.000786679913289845, 0.0008245253120549023, 0.0008778747287578881, 0.0009447279153391719, 0.00101839704439044, 0.0010905100498348475, 0.001153178047388792, 0.0012017369735985994, 0.0012367439921945333, 0.001262048026546836, 0.0012819640105590224, 0.0012969759991392493, 0.0013024560175836086, 0.0012923020403832197, 0.0012626009993255138, 0.00121474196203053, 0.0011545580346137285, 0.0010897800093516707, 0.0010299179702997208, 0.000983617384918034, 0.0009567976812832057, 0.0009489586809650064, 0.0009513234836049378, 0.0009517946746200323, 0.0009396453970111907, 0.0009081158204935491, 0.0008544753072783351, 0.0007782885222695768, 0.0006823358125984669, 0.000569998228456825, 0.0004418920143507421, 0.0002990140928886831, 0.00014387740520760417, -2.0560970369842835e-05, -0.00018864420417230576, -0.000353464885847643, -0.0005103665753267705, -0.0006566246156580746, -0.0007945480174385011, -0.0009321615798398852, -0.0010776700219139457, -0.001236859941855073, -0.0014104190049692988, -0.001594268949702382, -0.0017793929437175393, -0.0019517740001901984, -0.0020992690697312355, -0.0022176310885697603, -0.0023115859366953373, -0.0023889539297670126, -0.002457842929288745, -0.002526935888454318, -0.0026007189881056547, -0.0026755989529192448, -0.0027411379851400852, -0.0027871939819306135, -0.002808409044519067, -0.002802330069243908, -0.0027650310657918453, -0.0026908109430223703, -0.0025770149659365416, -0.00242978404276073, -0.0022664950229227543, -0.002110718982294202, -0.0019855389837175608, -0.0019121549557894468, -0.0019068090477958322, -0.0019775310065597296, -0.0021203169599175453, -0.0023193340748548508, -0.0025522441137582064, -0.002794597065076232, -0.003022765973582864, -0.0032131040934473276, -0.0033450850751250982, -0.00340835889801383, -0.0034027099609375, -0.003334897104650736, -0.0032173190265893936, -0.0030658480245620012, -0.0028961729258298874, -0.002721887081861496, -0.0025512289721518755, -0.002382277976721525, -0.002205523895099759, -0.0020088190212845802, -0.0017814389429986477, -0.0015169359976425767, -0.001216538017615676, -0.0008882951224222779, -0.0005423534894362092, -0.00018892450316343457, 0.0001615034998394549, 0.0004993787733837962, 0.000815986713860184, 0.0011038649827241898, 0.0013576969504356384, 0.0015739209484308958, 0.0017498249653726816, 0.0018849499756470323, 0.001981307053938508, 0.0020437759812921286, 0.002078430028632283, 0.002092663897201419, 0.0020948240999132395, 0.0020929130259901285, 0.00209237402305007, 0.002093113958835602, 0.002091015921905637, 0.0020796549506485462, 0.002051400952041149, 0.002002368913963437, 0.0019327850313857198, 0.0018468309426680207, 0.0017526430310681462, 0.0016594480257481337, 0.0015750189777463675, 0.0015014909440651536, 0.0014348450349643826, 0.0013689600164070725, 0.0012977420119568706, 0.0012137610465288162, 0.0011075399816036224, 0.0009718009969219565, 0.0008041938999667764, 0.0006080192979425192, 0.0003931031096726656, 0.00017565330199431628, -2.5459579774178565e-05, -0.00019304369925521314, -0.00031456779106520116, -0.00038689348730258644, -0.0004142393881920725, -0.00040648059803061187, -0.00037549439002759755, -0.00033155170967802405, -0.00027971650706604123, -0.00021954230032861233, -0.00014877860667183995, -6.557284359587356e-05, 2.948807923530694e-05, 0.0001334964035777375, 0.00023893230536486953, 0.00033401369000785053, 0.0004070136055815965, 0.00044782200711779296, 0.000450549996457994, 0.0004143436090089381, 0.00034391749068163335, 0.000247069401666522, 0.00013099009811412543, 2.697097897907952e-06, -0.00013269559713080525, -0.00027162808692082763, -0.0004111622110940516, -0.0005470113828778267, -0.0006722675170749426, -0.0007780250743962824, -0.0008556811953894794, -0.0008990570204332471, -0.0009061460150405765, -0.0008835952030494809, -0.000845614995341748, -0.0008076183148659766, -0.0007811635150574148, -0.000773733772803098, -0.0007861243793740869, -0.0008104671724140644, -0.0008324523805640638, -0.0008395552285946906, -0.0008241113973781466, -0.0007820167811587453, -0.0007131114252842963, -0.0006208621198311448, -0.0005114789819344878, -0.0003912078100256622, -0.0002659921010490507, -0.00014021640527062118, -1.4668090443592519e-05, 0.0001115413979277946, 0.00023634849640075117, 0.0003528463130351156, 0.0004527500132098794, 0.0005282043130137026, 0.000574579811654985, 0.0005902362172491848, 0.0005766673712059855, 0.0005368309211917222, 0.0004750535008497536, 0.0003980426990892738, 0.00031388920615427196, 0.0002311488933628425, 0.00015911819355096668, 0.00010694080265238881, 8.233748667407781e-05, 9.11518291104585e-05, 0.0001341618044534698, 0.0002027964947046712, 0.0002833681064657867, 0.00035983530688099563, 0.00041872909059748054, 0.0004520589136518538, 0.00045658991439267993, 0.0004326986090745777, 0.0003827165928669274, 0.00031071470584720373, 0.0002192406973335892, 0.00010645340080372989, -2.905549990828149e-05, -0.00018015819659922272, -0.0003328587918076664, -0.0004727584891952574, -0.000587373913731426, -0.0006699673249386251, -0.0007193997153081, -0.0007368826773017645, -0.0007276264950633049, -0.0006983287748880684, -0.0006548804230988026, -0.0006015487015247345, -0.0005418782238848507, -0.0004792239051312208, -0.00041966591379605234, -0.0003744116984307766, -0.00035642649163492024, -0.00037346911267377436, -0.0004240474954713136, -0.0004995047929696739, -0.0005880063981749117, -0.0006785215809941292, -0.0007620570249855518, -0.0008319459739141166, -0.0008846108103170991, -0.0009205415262840688, -0.0009432992083020508, -0.0009567185188643634, -0.0009641313808970153, -0.0009676516056060791, -0.0009670634171925485, -0.0009612289723008871, -0.0009466347983106971, -0.0009175498853437603, -0.0008675028802827001, -0.0007909446721896529, -0.0006871892837807536, -0.0005632186075672507, -0.00043077970622107387, -0.0002995549002662301, -0.0001742134045343846, -5.804804095532745e-05, 4.759497824124992e-05, 0.0001455947058275342, 0.00024388039309997112, 0.00035115060745738447, 0.0004698474076576531, 0.0005976642132736742, 0.0007282817969098687, 0.0008532323990948498, 0.0009606116218492389, 0.0010323210153728724, 0.0010474870214238763, 0.0009866913314908743, 0.0008374929893761873, 0.0005997198168188334, 0.00028762250440195203, -7.246388850035146e-05, -0.00044812800479121506, -0.0008040792890824378, -0.0011066009756177664, -0.0013273650547489524, -0.0014454950578510761, -0.0014498409582301974, -0.0013415219727903605, -0.0011358909541741014, -0.0008612027741037309, -0.0005562945734709501, -0.0002640718885231763, -2.552085970819462e-05, 0.00012861780123785138, 0.00017962510173674673, 0.0001179230966954492, -5.136480831424706e-05, -0.00030619269818998873, -0.0006118380115367472, -0.0009288929868489504, -0.001222515944391489, -0.0014684259658679366, -0.0016567090060561895, -0.0017896420322358608, -0.0018787230364978313, -0.0019381040474399924, -0.001979920081794262, -0.0020150020718574524, -0.0020534340292215347, -0.0021016369573771954, -0.0021625300869345665, -0.00223716301843524, -0.0023236959241330624, -0.0024167438969016075, -0.0025104740634560585, -0.0026022770907729864, -0.0026908759027719498, -0.0027743480168282986, -0.0028507988899946213, -0.0029163178987801075, -0.0029639611020684242, -0.0029856350738555193, -0.002974345115944743, -0.00292574311606586, -0.0028365401085466146, -0.002704811980947852, -0.002533863065764308, -0.0023356089368462563, -0.0021288800053298473, -0.0019351179944351315, -0.0017728309612721205, -0.0016546309925615788, -0.0015855790115892887, -0.0015597169985994697, -0.0015610350528731942, -0.001566583989188075, -0.0015535580459982157, -0.0015088190557435155, -0.0014270750107243657, -0.001306738005951047, -0.0011510159820318222, -0.0009702639072202146, -0.0007810412207618356, -0.0006026303744874895, -0.0004533535975497216, -0.0003468449867796153, -0.0002901357947848737, -0.0002817432105075568, -0.0003135779988951981, -0.0003751326003111899, -0.0004535866028163582, -0.0005318776238709688, -0.0005914730136282742, -0.0006161748897284269, -0.0005955399828962982, -0.0005297713214531541, -0.00043080339673906565, -0.00031891430262476206, -0.00022045770310796797, -0.0001599178067408502, -0.00015345719293691218, -0.0002075418015010655, -0.00032073669717647135, -0.00048546871403232217, -0.0006873512174934149, -0.0009088731021620333, -0.0011334510054439306, -0.0013456769520416856, -0.001529844943434, -0.0016733109951019287, -0.0017690049717202783, -0.0018130550161004066, -0.0018047059420496225, -0.0017471989849582314, -0.0016486779786646366, -0.0015185970114544034, -0.0013658460229635239, -0.0011996510438621044, -0.001031395047903061, -0.0008731252164579928, -0.0007349600200541317, -0.0006244555115699768, -0.0005428817821666598, -0.00048271811101585627, -0.00042912669596262276, -0.00036718009505420923, -0.0002886395959649235, -0.00019114630413241684, -7.847519009374082e-05, 3.978360109613277e-05, 0.00015385460574179888, 0.0002592676901258528, 0.00035853200824931264, 0.00045719920308329165, 0.0005613479879684746, 0.0006757649825885892, 0.0008027144940569997, 0.0009382839198224247, 0.0010708540212363005, 0.0011842449894174933, 0.0012619179906323552, 0.0012913000537082553, 0.0012668089475482702, 0.0011916039511561394, 0.0010765519691631198, 0.0009352738852612674, 0.0007830471149645746, 0.0006350089097395539, 0.0005029792082495987, 0.0003969868121203035, 0.00032652198569849133, 0.0003013366076629609, 0.00032696890411898494, 0.00040182878728955984, 0.0005194778786972165, 0.0006699736113660038, 0.0008380134822800756, 0.0010027439566329122, 0.0011463180417194963, 0.0012581689516082406, 0.0013350070221349597, 0.001377742039039731, 0.0013900420162826777, 0.0013765309704467654, 0.0013378079747781157, 0.0012694579781964421, 0.0011654780246317387, 0.001023510005325079, 0.0008448470034636557, 0.0006343802087940276, 0.00040252460166811943, 0.00016272469656541944, -6.850084173493087e-05, -0.00027094490360468626, -0.0004243922885507345, -0.0005167489871382713, -0.0005508121103048325, -0.0005407824064604938, -0.0005090191261842847, -0.000480807910207659, -0.0004791306855622679, -0.0005196878919377923, -0.0006079126033000648, -0.000738701201044023, -0.0008966514724306762, -0.0010574229527264833, -0.0011902609840035439, -0.0012649260461330414, -0.0012595070293173194, -0.001163588953204453, -0.0009803371503949165, -0.0007258941768668592, -0.0004264063900336623, -0.00011397070193197578, 0.00017904670676216483, 0.00042429970926605165, 0.0006000198191031814, 0.0006928971270099282, 0.0007020886987447739, 0.0006392861250787973, 0.0005236442084424198, 0.00037558309850282967, 0.0002128453052137047, 5.355820030672476e-05, -8.132340735755861e-05, -0.00017455990018788725, -0.0002195864071836695, -0.0002218417066615075, -0.0001963515969691798, -0.0001619339018361643, -0.00013683880388271064, -0.00013502560614142567, -0.00016608690202701837, -0.00023217429406940937, -0.0003263264079578221, -0.0004358454898465425, -0.0005462361150421202, -0.0006409200141206384, -0.0007014037109911442, -0.000711681495886296, -0.0006644303794018924, -0.0005615773261524737, -0.0004124412953387946, -0.00023395610332954675, -4.437397001311183e-05, 0.00014006100536789745, 0.00030376770882867277, 0.00043358991388231516, 0.0005193090182729065, 0.0005555506213568151, 0.0005431990139186382, 0.0004905745154246688, 0.0004119205113966018, 0.0003192296135239303, 0.00021913780074100941, 0.00011232629913138226, -3.3155990877276054e-06, -0.00013066020619589835, -0.0002707242965698242, -0.00041669310303404927, -0.0005548606859520078, -0.0006699573714286089, -0.0007505055982619524, -0.0007889054249972105, -0.000783541880082339, -0.0007440883200615644, -0.0006856115069240332, -0.0006214188179001212, -0.0005591781227849424, -0.0004992788890376687, -0.00043571958667598665, -0.0003609439008869231, -0.00027198309544473886, -0.00016865860379766673, -5.251296897768043e-05, 7.516778714489192e-05, 0.00021574880520347506, 0.0003705667913891375, 0.0005361774237826467, 0.0007055398891679943, 0.0008718182216398418, 0.0010291229700669646, 0.0011744239600375295, 0.0013069550041109324, 0.0014265900244936347, 0.0015323429834097624, 0.0016174359479919076, 0.00167135801166296, 0.0016852630069479346, 0.0016591340536251664, 0.0016014729626476765, 0.0015235119499266148, 0.0014355520252138376, 0.0013428189558908343, 0.0012474879622459412, 0.0011505379807204008, 0.00105329102370888, 0.0009600076009519398, 0.0008791215950623155, 0.0008222907199524343, 0.000801721413154155, 0.000825977826025337, 0.0008958064136095345, 0.00100149295758456, 0.0011286139488220215, 0.0012623330112546682, 0.0013895990559831262, 0.0015007370384410024, 0.0015906690387055278, 0.001656898995861411, 0.0016972919693216681, 0.0017137640388682485, 0.001712752040475607, 0.0017017399659380317, 0.0016848179511725903, 0.0016627879813313484, 0.0016331180231645703, 0.0015916830161586404, 0.0015353510389104486, 0.0014659330481663346, 0.001392193022184074, 0.0013259670231491327, 0.0012749989982694387, 0.00123831897508353, 0.0012056860141456127, 0.0011657599825412035, 0.001111202989704907, 0.0010402309708297253, 0.0009585068910382688, 0.0008742681820876896, 0.0007938559865579009, 0.0007204260909929872, 0.0006527361110784113, 0.0005877393996343017, 0.0005215192795731127, 0.000447197409812361, 0.000358177610905841, 0.0002530924102757126, 0.00013710699568036944, 1.9822269678115845e-05, -8.818950300337747e-05, -0.00017769519763533026, -0.00024064960598479956, -0.0002713467110879719, -0.0002711414999794215, -0.0002494252985343337, -0.0002186919009545818, -0.00019391070236451924, -0.0001901674986584112, -0.00021684900275431573, -0.0002737194881774485, -0.00035135250072926283, -0.00043649229337461293, -0.0005176680278964341, -0.0005905557190999389, -0.0006548573728650808, -0.0007118582725524902, -0.000768209109082818, -0.0008330551208928227, -0.0009099323069676757, -0.0009952452965080738, -0.0010798670118674636, -0.0011515930527821183, -0.0011994210071861744, -0.0012172299902886152, -0.0012089409865438938, -0.0011875319760292768, -0.0011682109907269478, -0.0011602339800447226, -0.001163142966106534, -0.001168085029348731, -0.0011620080331340432, -0.0011311050038784742, -0.001062712981365621, -0.0009519098093733191, -0.0008057701052166522, -0.0006382392020896077, -0.00046524550998583436, -0.00030131739913485944, -0.00015957749565131962, -4.919827915728092e-05, 2.529063931433484e-05, 6.264002149691805e-05, 6.373102951329201e-05, 2.97562492050929e-05, -3.597123941290192e-05, -0.00012754219642374665, -0.00023633020464330912, -0.00035016750916838646, -0.00045459289685823023, -0.0005367550766095519, -0.0005887855077162385, -0.0006056592101231217, -0.0005852854228578508, -0.0005301011842675507, -0.00044641148997470737, -0.0003440348955336958, -0.00023199559655040503, -0.0001167012014775537, -2.3327650069404626e-06, 0.00010621979890856892, 0.00020175229292362928, 0.00027804001001641154, 0.0003327383892610669, 0.0003677938075270504, 0.00038639610284008086, 0.000391685200156644, 0.00038546440191566944, 0.0003712981997523457, 0.0003551444096956402, 0.0003427125921007246, 0.00033998480648733675, 0.0003518222947604954, 0.0003817832039203495, 0.0004286481998860836, 0.0004848336102440953, 0.0005431203753687441, 0.0005991096841171384, 0.0006524752825498581, 0.0007070287247188389, 0.0007692669751122594, 0.0008467664010822773, 0.0009464151808060706, 0.0010716370306909084, 0.0012188779655843973, 0.0013789150398224592, 0.001541387988254428, 0.0016975620528683066, 0.0018408099422231317, 0.0019650340545922518, 0.0020659680012613535, 0.0021430549677461386, 0.002197488909587264, 0.002228931989520788, 0.0022370500955730677, 0.002225280972197652, 0.0021981028839945793, 0.0021563570480793715, 0.002099056029692292, 0.0020260571036487818, 0.0019381180172786117, 0.0018343989504501224, 0.00171268405392766, 0.0015717330388724804, 0.0014155659591779113, 0.0012519529554992914, 0.0010908209951594472, 0.0009430943173356354, 0.0008162030717357993, 0.0007117831846699119, 0.0006231984007172287, 0.0005395180778577924, 0.00044851680286228657, 0.00033833389170467854, 0.00020268770458642393, 4.165006976108998e-05, -0.00013811769895255566, -0.00032337679294869304, -0.0004982845857739449, -0.0006496366113424301, -0.0007740071159787476, -0.0008799554198049009, -0.0009830802446231246, -0.0010983790270984173, -0.0012346080038696527, -0.0013909509871155024, -0.0015569919487461448, -0.0017185109900310636, -0.00186190998647362, -0.0019782669842243195, -0.0020633370149880648, -0.0021177208982408047, -0.0021487229969352484, -0.002164758974686265, -0.002169146900996566, -0.002158197108656168, -0.002125407103449106, -0.002064407104626298, -0.001973364967852831, -0.0018568179802969098, -0.001722277025692165, -0.0015791900223121047, -0.001435016980394721, -0.0012952269753441215, -0.0011658519506454468, -0.0010547270067036152, -0.0009704479016363621, -0.0009171628043986857, -0.0008933371864259243, -0.0008946378948166966, -0.0009154565050266683, -0.0009493280085735023, -0.0009897862328216434, -0.0010292979422956705, -0.0010578640503808856, -0.0010665419977158308, -0.0010498800547793508, -0.0010026809759438038, -0.0009203706867992878, -0.000802937604021281, -0.0006561169284395874, -0.00048804760444909334, -0.0003056752902921289, -0.00011571269715204835, 7.389640086330473e-05, 0.00025507970713078976, 0.00042150169610977173, 0.0005711205885745585, 0.0007047703838907182, 0.0008223255863413215, 0.0009208176052197814, 0.000999466166831553, 0.0010642949491739273, 0.001127387979067862, 0.0012011020444333553, 0.0012927260249853134, 0.0014042219845578074, 0.0015314619522541761, 0.001667274977080524, 0.0018024840392172337, 0.0019269220065325499, 0.0020331658888608217, 0.00211845594458282, 0.0021831479389220476, 0.0022282819263637066, 0.00225480692461133, 0.002262627938762307, 0.0022513919975608587, 0.002221327042207122, 0.002175966976210475, 0.002123716054484248, 0.0020770670380443335, 0.002048447960987687, 0.002045671921223402, 0.002071223920211196, 0.002122042002156377, 0.0021920991130173206, 0.002271929057314992, 0.0023467130959033966, 0.0024012639187276363, 0.002428570995107293, 0.002434907015413046, 0.00243612308986485, 0.0024530079681426287, 0.002505426062270999, 0.002605979098007083, 0.002757072914391756, 0.002946974942460656, 0.0031555190216749907, 0.003359158057719469, 0.0035370970144867897, 0.0036751350853592157, 0.0037661809474229813, 0.003808004083111882, 0.00379724008962512, 0.003729823976755142, 0.0036056959070265293, 0.0034323320724070072, 0.0032253870740532875, 0.003001492004841566, 0.0027748250868171453, 0.0025586560368537903, 0.002366680884733796, 0.0022117970511317253, 0.0021014490630477667, 0.0020347218960523605, 0.0020026599522680044, 0.0019903790671378374, 0.0019822109024971724, 0.0019652689807116985, 0.001929517020471394, 0.0018672270234674215, 0.001771230949088931, 0.0016342060407623649, 0.0014473899500444531, 0.0012023360468447208, 0.0008959788247011602, 0.0005332023720256984, 0.0001259895070688799, -0.0003073310072068125, -0.0007428969838656485, -0.0011541680432856083, -0.0015211240388453007, -0.0018358660163357854, -0.002097710967063904, -0.0023102129343897104, -0.00247908104211092, -0.0026088228914886713, -0.002700560027733445, -0.002752705942839384, -0.0027624950744211674, -0.0027300259098410606, -0.0026631790678948164, -0.0025730179622769356, -0.0024674308951944113, -0.0023485668934881687, -0.002216652035713196, -0.002071406925097108, -0.0019142860546708107, -0.0017468889709562063, -0.0015702820383012295, -0.0013879790203645825, -0.001204770989716053, -0.0010261599672958255, -0.0008579317945986986, -0.0007066412945277989, -0.0005755535094067454, -0.00046217278577387333, -0.00035730638774111867, -0.0002463090931996703, -0.00011563809675863013, 3.989351898781024e-05, 0.00021629099501296878, 0.0004046717949677259, 0.0005957554094493389, 0.0007822447223588824, 0.0009602598147466779, 0.0011282910127192736, 0.0012866329634562135, 0.0014368420233950019, 0.001580214942805469, 0.0017158440314233303, 0.0018407580209895968, 0.0019526970572769642, 0.002050539944320917, 0.0021335850469768047, 0.002199856098741293, 0.0022438031155616045, 0.002258111024275422, 0.0022352309897542, 0.0021673510782420635, 0.002051982097327709, 0.0018938829889521003, 0.001701466040685773, 0.0014860349474474788, 0.001259922981262207, 0.0010367119684815407, 0.0008309949189424515, 0.0006570718251168728, 0.0005252892151474953, 0.00043820528662763536, 0.00039159960579127073, 0.0003761055995710194, 0.0003818485129158944, 0.0003972889971919358, 0.0004088688874617219, 0.0004034136945847422, 0.00037102081114426255, 0.0003059724986087531, 0.0002037679951172322, 6.112117989687249e-05, -0.00012092830002075061, -0.0003397784021217376, -0.0005930776824243367, -0.0008792845183052123, -0.0011950100306421518, -0.0015305590350180864, -0.0018698700005188584, -0.0021960700396448374, -0.0024938140995800495, -0.00275065703317523, -0.0029608700424432755, -0.0031234899070113897, -0.0032371440902352333, -0.0032988348975777626, -0.0033076039981096983, -0.003268249100074172, -0.003189424052834511, -0.0030813131015747786, -0.002956551034003496, -0.0028293870855122805, -0.0027124190237373114, -0.0026176508981734514, -0.002554209902882576, -0.0025250690523535013, -0.002527188044041395, -0.0025511060375720263, -0.0025820808950811625, -0.0026037280913442373, -0.0026005960535258055, -0.0025612199679017067, -0.0024805429857224226, -0.002358274068683386, -0.0022006630897521973, -0.002016776939854026, -0.0018123290501534939, -0.001590498024597764, -0.0013525449903681874, -0.0010997309582307935, -0.0008347939001396298, -0.0005600915173999965, -0.0002780315116979182, 6.177008799568284e-06, 0.0002871197066269815, 0.0005627573118545115, 0.0008341684006154537, 0.0011052440386265516, 0.001379534020088613, 0.001657675951719284, 0.0019362079910933971, 0.0022056710440665483, 0.002451172098517418, 0.002658768091350794, 0.0028221909888088703, 0.0029446189291775227, 0.0030332570895552635, 0.003096702042967081, 0.003140450920909643, 0.0031639710068702698, 0.003164184046909213, 0.0031386620830744505, 0.0030868060421198606, 0.0030083449091762304, 0.0029046270065009594, 0.00277877994813025, 0.0026348840910941362, 0.002475281013175845, 0.002296704100444913, 0.0020961000118404627, 0.0018767319852486253, 0.0016467149835079908, 0.0014160240534693003, 0.0011945440201088786, 0.0009915103437379003, 0.0008129628258757293, 0.0006611517164856195, 0.0005344690289348364, 0.00042799211223609746, 0.00033189350506290793, 0.00023354140284936875, 0.00012357129890006036, -1.335747015218658e-06, -0.00013612759357783943, -0.0002714935108087957, -0.0003977011947426945, -0.0005091439816169441, -0.0006057210266590118, -0.0006903506000526249, -0.0007688842015340924, -0.0008455489878542721, -0.0009197596809826791, -0.0009874384850263596, -0.0010452379938215017, -0.0010952240554615855, -0.0011434439802542329, -0.0011973329819738865, -0.0012631589779630303, -0.0013448350364342332, -0.0014437480131164193, -0.0015547149814665318, -0.001665450050495565, -0.0017609780188649893, -0.0018304820405319333, -0.0018710989970713854, -0.0018819889519363642, -0.0018603099742904305, -0.0018048109486699104, -0.0017179310088977218, -0.0016075540333986282, -0.0014870919985696673, -0.0013726509641855955, -0.0012772480258718133, -0.0012072400422766805, -0.0011610840447247028, -0.0011307180393487215, -0.0011049900203943253, -0.0010710180504247546, -0.0010181680554524064, -0.0009422170114703476, -0.0008469205931760371, -0.0007407325902022421, -0.000633156974799931, -0.0005332896835170686, -0.0004463540099095553, -0.00037158268969506025, -0.0003022307937499136, -0.0002281104971189052, -0.0001375206047669053, -1.7245449271285906e-05, 0.00014601049770135432, 0.00036192729021422565, 0.0006319452077150345, 0.0009485805057920516, 0.0012959339655935764, 0.001652113045565784, 0.0019912479910999537, 0.0022894490975886583, 0.002529042074456811, 0.0027015109080821276, 0.0028086560778319836, 0.002860046923160553, 0.0028683310374617577, 0.002844512928277254, 0.0027962320018559694, 0.0027256030589342117, 0.002632156014442444, 0.0025161278899759054, 0.0023806989192962646, 0.002231951104477048, 0.0020779080223292112, 0.0019255980150774121, 0.0017752180574461818, 0.001619643997400999, 0.00144693604670465, 0.0012460829457268119, 0.0010117259807884693, 0.0007460956112481654, 0.0004563101101666689, 0.0001504442043369636, -0.00016255950322374701, -0.00047532859025523067, -0.0007836589938960969, -0.001084072981029749, -0.0013713960070163012, -0.0016407599905505776, -0.001889407983981073, -0.0021183479111641645, -0.002330969087779522, -0.002532576909288764, -0.0027266410179436207, -0.0029116570949554443, -0.003084493102505803, -0.003244082909077406, -0.0033902660943567753, -0.003523360937833786, -0.0036468070466071367, -0.003766352077946067, -0.003888272913172841, -0.004015511833131313, -0.004146679770201445, -0.004276713822036982, -0.004399226047098637, -0.004509117919951677, -0.004602614790201187, -0.004675066098570824, -0.004721614066511393, -0.004736479837447405, -0.004716787952929735, -0.004664374981075525, -0.004581662826240063, -0.004472624976187944, -0.004342768806964159, -0.004196629859507084, -0.004036160185933113, -0.003861933946609497, -0.0036742750089615583, -0.0034747279714792967, -0.0032678639981895685, -0.0030596700962632895, -0.0028574299067258835, -0.002666749060153961, -0.002490225015208125, -0.0023254340048879385, -0.002162930089980364, -0.0019906999077647924, -0.0017991369822993875, -0.0015849519986659288, -0.0013496680185198784, -0.0010969899594783783, -0.0008326303213834763, -0.0005657090223394334, -0.00030660349875688553, -6.171502900542691e-05, 0.00016738810518290848, 0.00038498599315062165, 0.0005975082749500871, 0.0008107019821181893, 0.0010301369475200772, 0.0012591569684445858, 0.0014978729886934161, 0.0017417189665138721, 0.0019824409391731024, 0.0022113919258117676, 0.0024190940894186497, 0.0025950120761990547, 0.002730448031798005, 0.002818379085510969, 0.002852350939065218, 0.0028283570427447557, 0.0027458439581096172, 0.0026114110369235277, 0.002437555929645896, 0.0022371390368789434, 0.002025661990046501, 0.001821603043936193, 0.0016430510440841317, 0.0015001690480858088, 0.0013889239635318518, 0.0012986590154469013, 0.001218824996612966, 0.0011439899681136012, 0.0010754979448392987, 0.0010160079691559076, 0.0009679659269750118, 0.0009328736923635006, 0.0009097842848859727, 0.0008949487237259746, 0.0008815203909762204, 0.0008609705255366862, 0.0008241881732828915, 0.0007657899986952543, 0.0006876441184431314, 0.0005965869058854878, 0.0005010081804357469, 0.00040828698547556996, 0.00032428180566057563, 0.00025344471214339137, 0.00019614030316006392, 0.0001486984983785078, 0.0001084496034309268, 7.596726209158078e-05, 5.5800741392886266e-05, 5.471543045132421e-05, 7.847329106880352e-05, 0.0001274051028303802, 0.00019263039575889707, 0.0002613771939650178, 0.0003218121128156781, 0.0003668208955787122, 0.0003967277880292386, 0.0004170787869952619, 0.0004358156002126634, 0.0004628509923350066, 0.0005101874121464789, 0.000587618793360889, 0.0006971855764277279, 0.000833313271868974, 0.0009840041166171432, 0.001132918056100607, 0.001264333026483655, 0.0013672830536961555, 0.0014395919861271977, 0.0014840669464319944, 0.0015037859557196498, 0.0015018719714134932, 0.0014783500228077173, 0.0014298750320449471, 0.00135509402025491, 0.0012549960520118475, 0.0011339030461385846, 0.0010023500071838498, 0.0008742036879993975, 0.0007611744804307818, 0.0006703775725327432, 0.0006024552858434618, 0.0005534887895919383, 0.0005218225996941328, 0.000509750796481967, 0.0005212576943449676, 0.0005599349969998002, 0.0006252651801332831, 0.0007110012229532003, 0.0008037614170461893, 0.0008851098245941103, 0.0009348980966024101, 0.0009374152286909521, 0.0008868572767823935, 0.0007897727773524821, 0.0006620096974074841, 0.0005230295937508345, 0.00039376888889819384, 0.000293487188173458, 0.0002360975049668923, 0.0002286100061610341, 0.00026977641391567886, 0.0003514502022881061, 0.00046159850899130106, 0.0005864084232598543, 0.0007097232155501842, 0.0008165491162799299, 0.0008963639265857637, 0.0009456287953071296, 0.000969869492109865, 0.000982919940724969, 0.0010022730566561222, 0.0010399490129202604, 0.0010961269726976752, 0.0011620339937508106, 0.0012236320180818439, 0.001268360996618867, 0.0012884100433439016, 0.0012800820404663682, 0.0012422569561749697, 0.001175106968730688, 0.0010805450147017837, 0.0009631142020225525, 0.0008305938099510968, 0.0006915248814038932, 0.0005522806895896792, 0.00041764919296838343, 0.00028921099146828055, 0.00016648649761918932, 4.903920125798322e-05, -6.214647874003276e-05, -0.00016484969819430262, -0.00025616950006224215, -0.00033171309041790664, -0.00038791311089880764, -0.00042492488864809275, -0.0004468821862246841, -0.0004625573055818677, -0.0004833019047509879, -0.0005157553241588175, -0.000560204905923456, -0.0006169643020257354, -0.0006867442280054092, -0.0007678173715248704, -0.0008556853281334043, -0.0009440261055715382, -0.0010233860230073333, -0.0010821899631991982, -0.0011113689979538321, -0.0011057589435949922, -0.0010640770196914673, -0.0009888106724247336, -0.0008840655791573226, -0.0007575136260129511, -0.000617543701082468, -0.00047241381253115833, -0.0003330307954456657, -0.00021044739696662873, -0.00011429510050220415, -5.0854028813773766e-05, -2.4580309400334954e-05, -3.675658081192523e-05, -8.469520980725065e-05, -0.00016169169975910336, -0.0002581205917522311, -0.00036352479946799576, -0.00046615200699307024, -0.0005537444958463311, -0.0006152249989099801, -0.0006473928224295378, -0.0006572838174179196, -0.0006585770752280951, -0.0006671114242635667, -0.0006978792953304946, -0.000761847011744976, -0.0008638811996206641, -0.001000317046418786, -0.0011601339792832732, -0.0013279160484671593, -0.0014868739526718855, -0.0016233649803325534, -0.0017300850013270974, -0.0018066520569846034, -0.0018579380121082067, -0.0018948980141431093, -0.0019317000405862927, -0.0019820239394903183, -0.0020565090235322714, -0.0021613389253616333, -0.0022974188905209303, -0.002456354908645153, -0.002623734064400196, -0.0027816470246762037, -0.0029120598919689655, -0.002998840995132923, -0.0030319830402731895, -0.003010964021086693, -0.0029427779372781515, -0.002840061904862523, -0.0027158919256180525, -0.002581849927082658, -0.0024472461082041264, -0.0023200209252536297, -0.0022094598971307278, -0.0021244268864393234, -0.0020710269454866648, -0.0020483280532062054, -0.002044813008978963, -0.0020421789959073067, -0.0020204458851367235, -0.001962054055184126, -0.0018559599993750453, -0.0016992120072245598, -0.0014963160501793027, -0.0012611269485205412, -0.0010154149495065212, -0.000781106820795685, -0.0005751635180786252, -0.0004065886896569282, -0.00027501030126586556, -0.0001729085051920265, -8.887262811185792e-05, -7.977789209689945e-06, 8.266093209385872e-05, 0.00018602820637170225, 0.00029932500910945237, 0.00041601588600315154, 0.0005267923115752637, 0.0006248129066079855, 0.0007050855201669037, 0.0007631607004441321, 0.000797045009676367, 0.0008084396831691265, 0.0008024962735362351, 0.0007875084993429482, 0.0007706983014941216, 0.0007518312777392566, 0.0007252878858707845, 0.0006851973012089729, 0.0006285398849286139, 0.0005564467865042388, 0.0004751766100525856, 0.0003946876968257129, 0.00032549790921621025, 0.0002772694861050695, 0.000259008607827127, 0.0002763461961876601, 0.0003287545114289969, 0.00040918460581451654, 0.0005079766851849854, 0.0006134756258688867, 0.0007137954817153513, 0.0008011005120351911, 0.0008714402792975307, 0.0009193497244268656, 0.0009348489111289382, 0.000908733403775841, 0.0008379481150768697, 0.0007235215744003654, 0.0005698685999959707, 0.00038764681085012853, 0.0001915343018481508, -6.153582035040017e-06, -0.00019741810683626682, -0.0003768005990423262, -0.0005406017880886793, -0.000684914703015238, -0.0008055226062424481, -0.0009029117063619196, -0.0009825609158724546, -0.0010521740186959505, -0.0011210970114916563, -0.0011956170201301575, -0.0012759800301864743, -0.001358908019028604, -0.0014405379770323634, -0.0015160540351644158, -0.0015813990030437708, -0.0016363549511879683, -0.001682150992564857, -0.0017189380014315248, -0.0017446390120312572, -0.0017558879917487502, -0.001751153962686658, -0.0017314429860562086, -0.0017004429828375578, -0.0016616559587419033, -0.001620942959561944, -0.0015898819547146559, -0.001580541953444481, -0.001600653980858624, -0.0016511189751327038, -0.001725386013276875, -0.00181312405038625, -0.0019051600247621536, -0.001993299927562475, -0.002071365946903825, -0.0021369359456002712, -0.0021899319253861904, -0.002231067046523094, -0.0022601280361413956, -0.0022766690235584974, -0.0022802839521318674, -0.0022705181036144495, -0.0022479600738734007, -0.0022118149790912867, -0.0021592089906334877, -0.002087427070364356, -0.001998073887079954, -0.001896618981845677, -0.0017906019929796457, -0.0016867320518940687, -0.0015897629782557487, -0.0015016760444268584, -0.0014208010397851467, -0.0013433489948511124, -0.001266050967387855, -0.0011888189474120736, -0.0011138259433209896, -0.0010440560290589929, -0.0009799620602279902, -0.0009171618730761111, -0.0008497245144098997, -0.0007732249796390533, -0.0006864427123218775, -0.0005926078883931041, -0.0004969473811797798, -0.00040391000220552087, -0.00031441598548553884, -0.00022520939819514751, -0.00013114360626786947, -3.0239780244301073e-05, 7.501828076783568e-05, 0.00018129519594367594, 0.0002852586912922561, 0.0003837475087493658, 0.00047237551189027727, 0.0005479885148815811, 0.0006096035940572619, 0.000657973694615066, 0.0006970326066948473, 0.0007339188014157116, 0.0007793112890794873, 0.0008431968162767589, 0.0009282398968935013, 0.00103062205016613, 0.0011443640105426311, 0.001264033024199307, 0.0013858400052413344, 0.0015072179958224297, 0.0016238070093095303, 0.0017276050057262182, 0.0018114789854735136, 0.0018725449917837977, 0.0019139789510518312, 0.0019450959516689181, 0.001977552892640233, 0.002019863110035658, 0.0020758449099957943, 0.0021451120264828205, 0.002225222997367382, 0.0023117640521377325, 0.002396439900621772, 0.00246933801099658, 0.0025199430529028177, 0.0025375760160386562, 0.002514821942895651, 0.002450921107083559, 0.0023511280305683613, 0.0022277471143752337, 0.0020989279728382826, 0.001983274007216096, 0.0018952389946207404, 0.0018454990349709988, 0.0018391950288787484, 0.0018726950511336327, 0.0019320229766890407, 0.001997539075091481, 0.0020514819771051407, 0.002083434024825692, 0.002091513015329838, 0.002080023055896163, 0.002054309006780386, 0.0020186700858175755, 0.001977191073819995, 0.0019330809591338038, 0.001888897968456149, 0.0018475389806553721, 0.001811132999137044, 0.0017780240159481764, 0.0017405679682269692, 0.0016896160086616874, 0.001621649949811399, 0.0015425479505211115, 0.0014669590163975954, 0.0014146859757602215, 0.0014012890169396996, 0.0014300550101324916, 0.0014960940461605787, 0.0015906529733911157, 0.0017020499799400568, 0.001818323042243719, 0.0019282969878986478, 0.0020216929260641336, 0.0020918180234730244, 0.0021374321077018976, 0.0021622790955007076, 0.002176044974476099, 0.002193413907662034, 0.00223059905692935, 0.0023002170491963625, 0.002409430919215083, 0.0025604579132050276, 0.002748070051893592, 0.002961430000141263, 0.0031858859583735466, 0.0034075051080435514, 0.003615668974816799, 0.0038025870453566313, 0.003964104223996401, 0.004098927136510611, 0.004211930092424154, 0.004314232151955366, 0.004417866934090853, 0.004531695041805506, 0.004658701829612255, 0.004795977845788002, 0.0049338131211698055, 0.0050572678446769714, 0.005150318145751953, 0.005198421888053417, 0.005192139185965061, 0.005131238140165806, 0.005024596117436886, 0.004883996210992336, 0.004722146783024073, 0.004551799967885017, 0.004384077154099941, 0.004225437995046377, 0.004076763987541199, 0.003936208784580231, 0.003799852915108204, 0.003662083065137267, 0.0035136379301548004, 0.003345897886902094, 0.0031538179609924555, 0.002935986965894699, 0.002695753937587142, 0.0024408779572695494, 0.002180584007874131, 0.0019216010114178061, 0.0016668230528011918, 0.001416380051523447, 0.0011698839953169227, 0.0009282786049880087, 0.0006972287083044648, 0.00048548670019954443, 0.00030012550996616483, 0.00014487920270767063, 1.7910100723383948e-05, -8.690205868333578e-05, -0.00017912790644913912, -0.0002681681071408093, -0.0003612597065512091, -0.00046404459862969816, -0.0005793292075395584, -0.0007065547979436815, -0.0008439581724815071, -0.000992066808976233, -0.0011513440404087305, -0.0013192760525271297, -0.001492809969931841, -0.0016688379691913724, -0.0018464319873601198, -0.0020266540814191103, -0.0022101670037955046, -0.0023963290732353926, -0.002581836888566613, -0.002760350937023759, -0.0029249279759824276, -0.003071347950026393, -0.0031991449650377035, -0.003312238957732916, -0.0034165331162512302, -0.003519400954246521, -0.003629629034548998, -0.003756105899810791, -0.003906590864062309, -0.004082521889358759, -0.0042772372253239155, -0.004478240851312876, -0.00467131519690156, -0.004844184033572674, -0.004985955078154802, -0.005085621029138565, -0.0051344819366931915, -0.0051293810829520226, -0.005069965962320566, -0.004955905955284834, -0.004788408987224102, -0.004572949837893248, -0.004322046879678965, -0.0040549528785049915, -0.0037910249084234238, -0.003542887046933174, -0.003313510911539197, -0.003098075045272708, -0.0028893828857690096, -0.002679168013855815, -0.0024576690047979355, -0.002214841078966856, -0.0019418320152908564, -0.001635286957025528, -0.001297031994909048, -0.0009298846125602722, -0.0005348692066036165, -0.00011174249812029302, 0.0003383625007700175, 0.000810622819699347, 0.0012949099764227867, 0.0017773889703676105, 0.0022434641141444445, 0.0026774948928505182, 0.003061650088056922, 0.0033792450558394194, 0.0036185740027576685, 0.003776618978008628, 0.0038596689701080322, 0.0038827750831842422, 0.0038665449246764183, 0.0038321660831570625, 0.003798969089984894, 0.0037818809505552053, 0.0037901978939771652, 0.0038257550913840532, 0.003882460994645953, 0.003945670090615749, 0.003995717968791723, 0.004011696204543114, 0.003976458217948675, 0.003879325930029154, 0.0037142690271139145, 0.0034776299726217985, 0.0031707279849797487, 0.0027994029223918915, 0.0023722329642623663, 0.001903280965052545, 0.001411890028975904, 0.0009204300004057586, 0.0004498501948546618, 1.6336280168616213e-05, -0.00037047031219117343, -0.0007081982912495732, -0.0009999804897233844, -0.001252969028428197, -0.0014776280149817467, -0.0016868480015546083, -0.001894269953481853, -0.0021119790617376566, -0.0023458770010620356, -0.0025941019412130117, -0.002848088974133134, -0.0030942929442971945, -0.003318147035315633, -0.0035084648989140987, -0.003658361965790391, -0.003765365108847618, -0.0038300510495901108, -0.003856122028082609, -0.00384857808239758, -0.00381092494353652, -0.0037465558853000402, -0.0036600849125534296, -0.0035578529350459576, -0.0034480870235711336, -0.003341339062899351, -0.0032514079939574003, -0.0031921688932925463, -0.0031726809684187174, -0.003193018026649952, -0.0032457190100103617, -0.0033164010383188725, -0.003385073971003294, -0.003431915072724223, -0.0034448460210114717, -0.0034242530819028616, -0.0033792490139603615, -0.0033246399834752083, -0.0032757380977272987, -0.0032450358849018812, -0.0032427150290459394, -0.0032766959629952908, -0.0033503130543977022, -0.003461696906015277, -0.0036022430285811424, -0.0037588980048894882, -0.003918316215276718, -0.0040708570741117, -0.004210446961224079, -0.0043329838663339615, -0.004436879884451628, -0.004523843992501497, -0.004598577972501516, -0.004665683954954147, -0.004724462050944567, -0.004766012076288462, -0.004776660818606615, -0.004744675010442734, -0.004665980115532875, -0.0045464481227099895, -0.004397176206111908, -0.0042301020585000515, -0.00405433913692832, -0.0038732169196009636, -0.0036863989662379026, -0.0034916140139102936, -0.003284754930064082, -0.0030631551053375006, -0.0028270299080759287, -0.0025801709853112698, -0.00233366503380239, -0.0021047419868409634, -0.001909328973852098, -0.0017586459871381521, -0.0016579310176894069, -0.0016025969525799155, -0.0015806240262463689, -0.001577220973558724, -0.0015766529832035303, -0.0015658850315958261, -0.0015372990164905787, -0.001488563953898847, -0.0014231790555641055, -0.0013489510165527463, -0.0012697819620370865, -0.0011818789644166827, -0.0010780870215967298, -0.0009500739979557693, -0.0007921889191493392, -0.0006031569209881127, -0.00038709360524080694, -0.0001523430983070284, 9.16932913241908e-05, 0.00033633181010372937, 0.0005761992069892585, 0.000811010308098048, 0.0010452340357005596, 0.0012852340005338192, 0.0015343469567596912, 0.0017882529646158218, 0.0020350769627839327, 0.0022588069550693035, 0.002442643977701664, 0.0025722880382090807, 0.0026378300972282887, 0.002632956951856613, 0.0025527379475533962, 0.0023982441052794456, 0.0021829719189554453, 0.0019308760529384017, 0.0016717249527573586, 0.0014365119859576225, 0.001249313005246222, 0.0011199209839105606, 0.001047985046170652, 0.0010277279652655125, 0.0010498999617993832, 0.001101379981264472, 0.0011664419434964657, 0.0012304079718887806, 0.0012823910219594836, 0.0013155860360711813, 0.0013284779852256179, 0.001327101024799049, 0.0013230020413175225, 0.001330130035057664, 0.0013606500579044223, 0.0014235300477594137, 0.0015212070429697633, 0.0016491779824718833, 0.0018006230238825083, 0.0019684000872075558, 0.0021461080759763718, 0.002328665927052498, 0.0025143350940197706, 0.0027026960160583258, 0.00289426208473742, 0.003092946019023657, 0.0033034069929271936, 0.003527678083628416, 0.0037625839468091726, 0.004001793917268515, 0.004236170090734959, 0.004455246962606907, 0.004649376031011343, 0.004812994971871376, 0.004945314023643732, 0.005047652870416641, 0.0051241060718894005, 0.005178647115826607, 0.005210749804973602, 0.005218372214585543, 0.005199134815484285, 0.005150720942765474, 0.005069771781563759, 0.004954826086759567, 0.004808945115655661, 0.004638118203729391, 0.004448383115231991, 0.004244654905050993, 0.0040296101942658424, 0.0038004189264029264, 0.0035499949008226395, 0.00327501492574811, 0.002979100914672017, 0.002670333022251725, 0.0023595390375703573, 0.0020561639685183764, 0.0017676970455795527, 0.0015005309833213687, 0.0012582909548655152, 0.0010425460059195757, 0.0008513223729096353, 0.0006757347146049142, 0.0005036151851527393, 0.00032391789136454463, 0.00012885169417131692, -8.450649329461157e-05, -0.0003115014114882797, -0.0005405358970165253, -0.0007551274029538035, -0.0009377407841384411, -0.001071559963747859, -0.0011448819423094392, -0.0011572380317375064, -0.0011210850207135081, -0.0010540620423853397, -0.0009735235944390297, -0.0008944591972976923, -0.000826990813948214, -0.0007786236237734556, -0.0007534588221460581, -0.0007496292237192392, -0.0007600265089422464, -0.0007734369137324393, -0.0007780113955959678, -0.0007653777138330042, -0.0007325074984692037, -0.0006815216038376093, -0.0006174910231493413, -0.0005469074822030962, -0.00047529040602967143, -0.0004039524937979877, -0.0003293977933935821, -0.0002444651909172535, -0.00014250210369937122, -2.1051200747024268e-05, 0.00011945409642066807, 0.00027812301414087415, 0.0004540905065368861, 0.0006451687077060342, 0.0008455606875941157, 0.0010444530053064227, 0.001230034977197647, 0.0013917130418121815, 0.0015201079659163952, 0.0016072579892352223, 0.0016467149835079908, 0.0016400739550590515, 0.0015984210185706615, 0.0015403579454869032, 0.0014870420563966036, 0.0014554460067301989, 0.0014541830169036984, 0.001482093008235097, 0.0015311939641833305, 0.0015908279456198215, 0.001649903948418796, 0.0016965699614956975, 0.0017200859729200602, 0.001711979042738676, 0.001667437027208507, 0.00158654002007097, 0.0014704209752380848, 0.0013186499709263444, 0.0011318669421598315, 0.0009143155766651034, 0.0006750766769982874, 0.0004266730975359678, 0.00018203939544036984, -4.836649895878509e-05, -0.0002565713948570192, -0.000440100091509521, -0.0006036531995050609, -0.0007558231009170413, -0.0009079729206860065, -0.0010726329637691379, -0.0012607560493052006, -0.0014770219568163157, -0.0017195469699800014, -0.0019768800120800734, -0.002228498924523592, -0.0024516680277884007, -0.00262584094889462, -0.0027375840581953526, -0.002783786039799452, -0.002769713057205081, -0.002706924919039011, -0.0026087670121341944, -0.0024860911071300507, -0.0023477959912270308, -0.0022012239787727594, -0.002049514092504978, -0.0018902439624071121, -0.0017166699981316924, -0.0015211900463327765, -0.0012989239767193794, -0.001050711958669126, -0.0007838094024918973, -0.0005136379040777683, -0.0002601678133942187, -4.293541132938117e-05, 0.00012335620704106987, 0.00023002870148047805, 0.0002734613080974668, 0.0002558118139859289, 0.00018508460198063403, 7.400350295938551e-05, -6.0261831094976515e-05, -0.0001982676039915532, -0.0003231475129723549, -0.0004234065127093345, -0.0004932013107463717, -0.0005299319745972753, -0.0005349909770302474, -0.000513544597197324, -0.0004715824034065008, -0.00041588940075598657, -0.0003543485945556313, -0.0002970822970382869, -0.0002564151945989579, -0.00024611869594082236, -0.00027873789076693356, -0.00036239190376363695, -0.0004964653053320944, -0.0006722848047502339, -0.00087792391423136, -0.0011017610086128116, -0.0013369519729167223, -0.0015829140320420265, -0.0018400759436190128, -0.002106847008690238, -0.0023785019293427467, -0.002648944966495037, -0.002913110889494419, -0.003165144007652998, -0.0033967660274356604, -0.0035985009744763374, -0.003763512009754777, -0.0038877190090715885, -0.0039713080041110516, -0.004021549131721258, -0.004051040858030319, -0.004076092038303614, -0.004112468101084232, -0.0041721579618752, -0.004262187983840704, -0.004385462962090969, -0.004537574015557766, -0.004706989973783493, -0.004878638777881861, -0.005036922171711922, -0.005167808849364519, -0.0052611990831792355, -0.005312213208526373, -0.005320331081748009, -0.005288373213261366, -0.005221640225499868, -0.005129239987581968, -0.005023525096476078, -0.004915720783174038, -0.004808786790817976, -0.004698249977082014, -0.004575077909976244, -0.004429817199707031, -0.004256951157003641, -0.00405847979709506, -0.0038427431136369705, -0.0036214140709489584, -0.0034052219707518816, -0.0032000429928302765, -0.003006181912496686, -0.002818579087033868, -0.0026271590031683445, -0.002423078054562211, -0.0022049429826438427, -0.001976554049178958, -0.0017452819738537073, -0.0015193830477073789, -0.0013039129553362727, -0.0011010660091415048, -0.0009149310062639415, -0.0007524637039750814, -0.0006226508994586766, -0.0005327999242581427, -0.00048353068996220827, -0.00046809628838673234, -0.0004767974023707211, -0.0005016727955080569, -0.0005386212142184377, -0.0005869134911336005, -0.0006471829256042838, -0.0007192955235950649, -0.0007984741241671145, -0.0008788944105617702, -0.0009560766047798097, -0.00102747802156955, -0.0010884649818763137, -0.0011320309713482857, -0.0011535970261320472, -0.0011524129658937454, -0.001132132951170206, -0.0010988370049744844, -0.0010576910572126508, -0.0010113780153915286, -0.0009606651728972793, -0.0009054215042851865, -0.0008427667780779302, -0.0007671496132388711, -0.0006698835059069097, -0.0005425220006145537, -0.00037881769821979105, -0.0001789719972293824, 4.8315450840163976e-05, 0.0002911076880991459, 0.0005388780846260488, 0.0007822837796993554, 0.0010128830326721072, 0.0012243749806657434, 0.0014120859559625387, 0.0015701729571446776, 0.0016917870379984379, 0.0017702860059216619, 0.001802906976081431, 0.0017920229583978653, 0.001744949957355857, 0.0016733199590817094, 0.0015891790390014648, 0.001503390958532691, 0.0014259150484576821, 0.0013632680056616664, 0.0013164370320737362, 0.0012795489747077227, 0.0012406460009515285, 0.0011856330092996359, 0.0011018819641321898, 0.0009821688290685415, 0.0008271466940641403, 0.0006441671284846961, 0.00044423999497666955, 0.0002415274066152051, 5.356694964575581e-05, -0.00010146379645448178, -0.00021178029419388622, -0.0002749247069004923, -0.00029909430304542184, -0.00030070520006120205, -0.00030123008764348924, -0.0003226303088013083, -0.0003832895017694682, -0.0004935290780849755, -0.0006540914764627814, -0.000855219375807792, -0.0010765560436993837, -0.0012960199965164065, -0.001500174985267222, -0.0016847529914230108, -0.0018505200278013945, -0.0020004950929433107, -0.002137593924999237, -0.00226154294796288, -0.002368031069636345, -0.002449149964377284, -0.0024960068985819817, -0.002502277959138155, -0.0024627400562167168, -0.0023731249384582043, -0.002228924073278904, -0.0020267849322408438, -0.001767260953783989, -0.001456064055673778, -0.0011024270206689835, -0.0007206492009572685, -0.0003336833033245057, 3.122431007795967e-05, 0.00034776408574543893, 0.0005978567060083151, 0.000777103123255074, 0.0008936948725022376, 0.0009652309236116707, 0.0010146190179511905, 0.001064877025783062, 0.0011350440327078104, 0.001235336996614933, 0.0013672129716724157, 0.0015235600294545293, 0.0016923650400713086, 0.0018592070555314422, 0.002008948940783739, 0.002126422943547368, 0.0021977019496262074, 0.0022142690140753984, 0.0021723241079598665, 0.0020735689904540777, 0.0019248389871791005, 0.0017401400255039334, 0.001540158991701901, 0.0013480669585987926, 0.001183627056889236, 0.001058851950801909, 0.0009773188503459096, 0.0009328055894002318, 0.0009112533880397677, 0.0008934094803407788, 0.0008586824988014996, 0.0007894738810136914, 0.0006765046273358166, 0.0005226469947956502, 0.00034177990164607763, 0.00015509680088143796, -1.545172926853411e-05, -0.0001551888999529183, -0.00025809291400946677, -0.00032686381018720567, -0.0003721791144926101, -0.00041045190300792456, -0.00046022748574614525, -0.0005374758038669825, -0.0006523085758090019, -0.0008085548761300743, -0.0010043550282716751, -0.0012304040137678385, -0.001473836018703878, -0.0017216249834746122, -0.0019584898836910725, -0.0021671210415661335, -0.0023317160084843636, -0.002443575067445636, -0.0025019580498337746, -0.0025142740923911333, -0.002494867891073227, -0.0024655379820615053, -0.0024513478856533766, -0.0024725969415158033, -0.002539160894230008, -0.0026465889532119036, -0.0027803070843219757, -0.002918455982580781, -0.0030354668851941824, -0.0031079109758138657, -0.0031207529827952385, -0.0030665479134768248, -0.0029440370853990316, -0.0027608759701251984, -0.0025345711037516594, -0.002287226030603051, -0.0020431510638445616, -0.001824449049308896, -0.0016426059883087873, -0.0014943480491638184, -0.001368319964967668, -0.001247728941962123, -0.0011120110284537077, -0.0009410487255081534, -0.0007217347156256437, -0.0004524017858784646, -0.00014099449617788196, 0.00019800559675786644, 0.0005462851258926094, 0.0008846177952364087, 0.0011994770029559731, 0.0014890170423313975, 0.0017624220345169306, 0.0020357139874249697, 0.002324292901903391, 0.0026391390711069107, 0.0029858509078621864, 0.003362484974786639, 0.0037605699617415667, 0.0041672708466649055, 0.004568508826196194, 0.004949252121150494, 0.005294770002365112, 0.005591366905719042, 0.00582893006503582, 0.006006369832903147, 0.006132869049906731, 0.006225410848855972, 0.006302728783339262, 0.0063804988749325275, 0.006470569875091314, 0.006578221917152405, 0.006701274774968624, 0.00683262012898922, 0.006962546147406101, 0.007082472089678049, 0.007186857983469963, 0.0072714779525995255, 0.007329113781452179, 0.007350251078605652, 0.007324484176933765, 0.007244572043418884, 0.00711017195135355, 0.006926131900399923, 0.006697736214846373, 0.006429087836295366, 0.006127743050456047, 0.005804658867418766, 0.005468035116791725, 0.005122299771755934, 0.004767858888953924, 0.004401364829391241, 0.004019367042928934, 0.003621897893026471, 0.0032140109688043594, 0.0028048621024936438, 0.002405507955700159, 0.0020237730350345373, 0.0016633890336379409, 0.0013258600374683738, 0.0010121819796040654, 0.0007212844793684781, 0.0004498767957556993, 0.00019275369413662702, -5.368763959268108e-05, -0.00028857740107923746, -0.0005055608926340938, -0.0006931109237484634, -0.0008398647187277675, -0.0009420004789717495, -0.0010053260484710336, -0.0010447680251672864, -0.0010788829531520605, -0.0011242530308663845, -0.001192064955830574, -0.0012875270331278443, -0.0014092379715293646, -0.0015495390398427844, -0.0016943119699135423, -0.0018239800119772553, -0.0019205049611628056, -0.001972832949832082, -0.0019805049523711205, -0.0019515339517965913, -0.001898122951388359, -0.001829931978136301, -0.0017523779533803463, -0.0016702349530532956, -0.0015866579487919807, -0.0015013329684734344, -0.0014102599816396832, -0.001310323947109282, -0.0012015049578621984, -0.001084742951206863, -0.0009602038189768791, -0.0008304098737426102, -0.0007021905039437115, -0.0005832944880239666, -0.0004801586037501693, -0.00039935510721988976, -0.000346337998053059, -0.0003223275125492364, -0.0003230021975468844, -0.0003400559944566339, -0.00036343460669741035, -0.0003837709955405444, -0.00039251489215530455, -0.00038311429671011865, -0.0003517635923344642, -0.0003034932888112962, -0.00025536189787089825, -0.00022883540077600628, -0.00024261609360110015, -0.0003071351093240082, -0.00042404470150358975, -0.0005855074268765748, -0.0007764332112856209, -0.0009765105205588043, -0.0011620779987424612, -0.0013101770309731364, -0.0014005450066179037, -0.0014194080140441656, -0.0013658959651365876, -0.0012513509718701243, -0.0010937460465356708, -0.0009129390818998218, -0.0007289734203368425, -0.0005606302875094116, -0.0004246557946316898, -0.00033350239391438663, -0.0002930130867753178, -0.00030433578649535775, -0.00036436470691114664, -0.000467408390250057, -0.0006043780012987554, -0.0007624098216183484, -0.0009254678152501583, -0.001078363973647356, -0.0012073939433321357, -0.0013019850011914968, -0.0013616960495710373, -0.0013972900342196226, -0.001425268012098968, -0.0014615310356020927, -0.0015175800072029233, -0.0015972580295056105, -0.0016972559969872236, -0.0018092429963871837, -0.0019216729560866952, -0.0020225499756634235, -0.0021019699051976204, -0.0021535248961299658, -0.002173776039853692, -0.0021620579063892365, -0.002119330922141671, -0.0020473299082368612, -0.0019500410417094827, -0.0018358000088483095, -0.0017126289894804358, -0.0015853779623284936, -0.0014561070129275322, -0.0013272790238261223, -0.001200504950247705, -0.0010751719819381833, -0.0009514614939689636, -0.0008303874055854976, -0.0007147429860197008, -0.0006086889770813286, -0.0005172098753973842, -0.0004453352012205869, -0.00039690101402811706, -0.00037054860149510205, -0.00035767239751294255, -0.0003438178973738104, -0.0003100965986959636, -0.00023529530153609812, -9.902363672154024e-05, 0.00011447299766587093, 0.0004125201085116714, 0.0007889685221016407, 0.0012191570131108165, 0.0016654989449307323, 0.0020858619827777147, 0.002442781114950776, 0.0027115109842270613, 0.002880532993003726, 0.002952289069071412, 0.0029456319753080606, 0.0028913840651512146, 0.00282582500949502, 0.002783054020255804, 0.0027898310218006372, 0.002859981032088399, 0.002992491004988551, 0.00317252310924232, 0.0033757761120796204, 0.003570025088265538, 0.003719140077009797, 0.003793105948716402, 0.0037738990504294634, 0.0036589358933269978, 0.003461217973381281, 0.003206169931218028, 0.0029246180783957243, 0.002643887884914875, 0.0023827520199120045, 0.002148651983588934, 0.0019400139572098851, 0.0017487299628555775, 0.0015614910516887903, 0.001362015027552843, 0.0011373480083420873, 0.0008810862200334668, 0.0005931567284278572, 0.0002812886086758226, -4.103652827325277e-05, -0.0003575554001145065, -0.0006539021851494908, -0.0009199646883644164, -0.001149612944573164, -0.0013411079999059439, -0.0014966450398787856, -0.0016219010576605797, -0.0017245300114154816, -0.0018139679450541735, -0.0019009140087291598, -0.0019951879512518644, -0.0021020660642534494, -0.0022217980585992336, -0.002352037001401186, -0.0024866480380296707, -0.002616221085190773, -0.002729845931753516, -0.0028194100596010685, -0.002884299959987402, -0.002929368056356907, -0.0029635459650307894, -0.0029988850001245737, -0.0030487109906971455, -0.0031237569637596607, -0.0032253488898277283, -0.003342566080391407, -0.0034546880051493645, -0.003536387113854289, -0.0035630168858915567, -0.003515251912176609, -0.0033811458852142096, -0.003158740932121873, -0.0028557979967445135, -0.002487370977178216, -0.002076151082292199, -0.0016505729872733355, -0.0012355060316622257, -0.0008470797911286354, -0.0004927433910779655, -0.00017020439554471523, 0.00013075830065645278, 0.00042217219015583396, 0.0007155319908633828, 0.001022389973513782, 0.0013532160082831979, 0.001714952988550067, 0.0021082249004393816, 0.0025258390232920647, 0.002950680907815695, 0.0033583389595150948, 0.0037221258971840143, 0.0040220278315246105, 0.0042486959137022495, 0.004404181148856878, 0.0045013269409537315, 0.004560274071991444, 0.004604692105203867, 0.004655222874134779, 0.00472575519233942, 0.004823809023946524, 0.004950587172061205, 0.005101691000163555, 0.005267233122140169, 0.005432241130620241, 0.005579088814556599, 0.005689182784408331, 0.0057466221041977406, 0.005742774810642004, 0.005678420886397362, 0.005561706144362688, 0.005405798088759184, 0.005225268192589283, 0.005033488851040602, 0.004841262940317392, 0.004654833115637302, 0.004478168208152056, 0.004312202800065279, 0.004150888882577419, 0.0039802901446819305, 0.003783178050071001, 0.003544829087331891, 0.0032567279413342476, 0.002917109988629818, 0.002529816934838891, 0.0021026700269430876, 0.0016456219600513577, 0.0011725099757313728, 0.0007007236126810312, 0.000248128199018538, -0.0001688050979282707, -0.0005367604899220169, -0.0008483533747494221, -0.0011014649644494057, -0.0012980500468984246, -0.001443085027858615, -0.0015470229554921389, -0.001622923999093473, -0.0016853930428624153, -0.0017477889778092504, -0.001820283941924572, -0.0019076550379395485, -0.0020083009731024504, -0.0021138109732419252, -0.002213496947661042, -0.0023005360271781683, -0.0023749780375510454, -0.002440383890643716, -0.0024986390490084887, -0.002546716947108507, -0.0025771199725568295, -0.0025793490931391716, -0.0025447579100728035, -0.002473024884238839, -0.002371137961745262, -0.0022487530950456858, -0.002115112030878663, -0.0019785920158028603, -0.001847121980972588, -0.0017291719559580088, -0.0016308859921991825, -0.0015544360503554344, -0.001498386962339282, -0.001457893056795001, -0.00142530701123178, -0.001390520017594099, -0.001344737014733255, -0.0012819350231438875, -0.0012003500014543533, -0.001100894995033741, -0.0009848858462646604, -0.0008544484153389931, -0.0007126069976948202, -0.0005644788034260273, -0.00042035849764943123, -0.00029559520771726966, -0.00020665570627897978, -0.0001660131965763867, -0.00017684769409243017, -0.00023167769541032612, -0.0003169942065142095, -0.0004172518092673272, -0.0005125816096551716, -0.0005814501782879233, -0.0006062465254217386, -0.0005797481862828135, -0.0005034218193031847, -0.000386330095352605, -0.0002410893066553399, -8.033050107769668e-05, 8.386236004298553e-05, 0.00024198199389502406, 0.00038719098665751517, 0.0005176573758944869, 0.0006378124817274511, 0.0007581273093819618, 0.0008910964825190604, 0.0010466990061104298, 0.0012307589640840888, 0.001441549975425005, 0.001668964046984911, 0.0018981200410053134, 0.0021137669682502747, 0.0023020480293780565, 0.0024546911008656025, 0.0025703359860926867, 0.002650046953931451, 0.0026927071157842875, 0.0026956379879266024, 0.002658664947375655, 0.002584995934739709, 0.0024797029327601194, 0.00234945397824049, 0.0021996491122990847, 0.002033460885286331, 0.0018497590208426118, 0.0016435639699921012, 0.001409722026437521, 0.0011456350330263376, 0.0008549786289222538, 0.0005473130731843412, 0.00023717069416306913, -5.791027069790289e-05, -0.0003177642065566033, -0.0005219305166974664, -0.0006532525876536965, -0.000700592587236315, -0.0006634371820837259, -0.0005546765751205385, -0.00039455879596062005, -0.0002068744070129469, -1.8325230485061184e-05, 0.00014639720029663295, 0.00026869450812228024, 0.00033680920023471117, 0.0003474765981081873, 0.000305686000501737, 0.0002221745962742716, 0.00011213259858777747, -8.5831970864092e-06, -0.0001250884961336851, -0.0002252904960187152, -0.00030061270808801055, -0.0003469930961728096, -0.0003649523132480681, -0.0003599940100684762, -0.00034001749008893967, -0.0003115157887805253, -0.00028017209842801094, -0.00025431759422644973, -0.00024307089915964752, -0.00025300419656559825, -0.00028784299502149224, -0.000350270391209051, -0.000440226896898821, -0.0005516278906725347, -0.0006730487220920622, -0.0007929094135761261, -0.0009022129816003144, -0.0009915056871250272, -0.0010485469829291105, -0.001060212031006813, -0.0010189269669353962, -0.0009249901049770415, -0.0007861867779865861, -0.000614354619756341, -0.0004231189959682524, -0.00022419780725613236, -2.410353954473976e-05, 0.00017407830455340445, 0.0003666300908662379, 0.0005526053137145936, 0.000733950815629214, 0.0009146733791567385, 0.00109910499304533, 0.0012915290426462889, 0.0014949400210753083, 0.0017092210473492742, 0.0019311680225655437, 0.0021533749531954527, 0.0023644680622965097, 0.002553876955062151, 0.0027137589640915394, 0.002840285887941718, 0.002935641910880804, 0.003008439904078841, 0.0030729409772902727, 0.0031435969285666943, 0.003231812035664916, 0.003349347971379757, 0.003508077934384346, 0.003714597085490823, 0.003966114949434996, 0.004248593933880329, 0.004539194982498884, 0.004808517172932625, 0.00502731092274189, 0.0051710158586502075, 0.005222194828093052, 0.005173155106604099, 0.005027643870562315, 0.004800823051482439, 0.0045156278647482395, 0.004198139067739248, 0.003870835993438959, 0.00354828592389822, 0.0032355349976569414, 0.0029296251013875008, 0.002622306114062667, 0.002305936999619007, 0.00197582202963531, 0.0016295569948852062, 0.0012693930184468627, 0.0009011661750264466, 0.0005326428217813373, 0.0001742135063977912, -0.00016553429304622114, -0.0004826473887078464, -0.0007745934999547899, -0.0010387880029156804, -0.0012755340430885553, -0.0014875440392643213, -0.0016806030180305243, -0.0018645540112629533, -0.002049004891887307, -0.0022399520967155695, -0.002440335927531123, -0.0026510830502957106, -0.0028756209649145603, -0.003119091968983412, -0.0033860590774565935, -0.0036804669070988894, -0.004001971799880266, -0.004343991167843342, -0.004693096037954092, -0.005031928885728121, -0.005343729164451361, -0.0056132059544324875, -0.005827995017170906, -0.005979376845061779, -0.0060631767846643925, -0.00607739994302392, -0.006023713853210211, -0.005908770952373743, -0.0057424758560955524, -0.005536912940442562, -0.005306988023221493, -0.005068275146186352, -0.00483183516189456, -0.0046041421592235565, -0.004386622924357653, -0.004177133087068796, -0.0039742072112858295, -0.0037786168977618217, -0.0035926769487559795, -0.0034202919341623783, -0.003266145009547472, -0.0031295870430767536, -0.003005957929417491, -0.00288956705480814, -0.0027727270498871803, -0.002646401058882475, -0.002500117989256978, -0.002325182082131505, -0.0021150358952581882, -0.0018680499633774161, -0.0015907629858702421, -0.001298328978009522, -0.0010132159804925323, -0.0007622293778695166, -0.0005731952260248363, -0.00046794168883934617, -0.0004579855885822326, -0.0005425788112916052, -0.0007087176200002432, -0.000933690695092082, -0.0011893820483237505, -0.0014475759817287326, -0.0016839000163599849, -0.0018821050180122256, -0.0020372390281409025, -0.002151734894141555, -0.0022307359613478184, -0.0022778469137847424, -0.002294284990057349, -0.0022827209904789925, -0.00225130096077919, -0.0022155779879540205, -0.002192028099671006, -0.0021934390533715487, -0.002226833952590823, -0.002294003963470459, -0.002392101101577282, -0.002515641041100025, -0.002656972035765648, -0.0028056830633431673, -0.0029482899699360132, -0.0030712750740349293, -0.003162720939144492, -0.003215106902644038, -0.003226934000849724, -0.003201819024980068, -0.003146436996757984, -0.0030681591015309095, -0.0029753618873655796, -0.0028768470510840416, -0.0027789499145001173, -0.002686125924810767, -0.0026058040093630552, -0.0025441069155931473, -0.0025017301086336374, -0.0024747420102357864, -0.0024550838861614466, -0.002428855048492551, -0.0023792930878698826, -0.0022908479440957308, -0.0021516450215131044, -0.0019553969614207745, -0.0017043149564415216, -0.0014108530012890697, -0.0010959040373563766, -0.0007857189048081636, -0.0005079315742477775, -0.00029009440913796425, -0.00015435130626428872, -0.00011027540313079953, -0.00015309710579458624, -0.0002686512016225606, -0.00043721080874092877, -0.0006362231215462089, -0.0008425660198554397, -0.0010327589698135853, -0.0011857330100610852, -0.0012879780260846019, -0.0013349199434742332, -0.0013278999831527472, -0.0012707579880952835, -0.001168451039120555, -0.0010273599764332175, -0.000856309721712023, -0.0006665291148237884, -0.00047018390614539385, -0.0002793798048514873, -0.00010747720079962164, 3.451465818216093e-05, 0.00014078669482842088, 0.00021134789858479053, 0.0002515414962545037, 0.0002710227854549885, 0.000278709689155221, 0.0002801076043397188, 0.00027916551334783435, 0.00027927098562940955, 0.0002849730954039842, 0.0003001347940880805, 0.0003290410968475044, 0.0003775969962589443, 0.000451746309408918, 0.0005543524166569114, 0.0006820838898420334, 0.0008287554956041276, 0.0009847311303019524, 0.0011353279696777463, 0.0012624770170077682, 0.0013487699907273054, 0.0013850380200892687, 0.0013737690169364214, 0.0013255970552563667, 0.0012534200213849545, 0.001169694005511701, 0.0010854729916900396, 0.0010097180493175983, 0.0009484824840910733, 0.0009028890053741634, 0.0008723235805518925, 0.0008575182873755693, 0.0008594073005951941, 0.0008750408887863159, 0.000895748904440552, 0.0009109359816648066, 0.0009122479241341352, 0.0008945299778133631, 0.0008588245254941285, 0.0008129089837893844, 0.0007658936083316803, 0.0007228375179693103, 0.0006844414165243506, 0.0006473573157563806, 0.0006077507277950644, 0.0005628237850032747, 0.000513426202815026, 0.0004650930059142411, 0.0004300368018448353, 0.00042616939754225314, 0.00047126319259405136, 0.000579345622099936, 0.0007574008777737617, 0.0010048149852082133, 0.001316242036409676, 0.001680174027569592, 0.002078344114124775, 0.0024852619972079992, 0.0028741909191012383, 0.003221445018425584, 0.0035095680505037308, 0.0037283350247889757, 0.0038765110075473785, 0.0039622168987989426, 0.004001252818852663, 0.004014161881059408, 0.004024138208478689, 0.004053800832480192, 0.004120281897485256, 0.004227939061820507, 0.004366692155599594, 0.004515239968895912, 0.004648142959922552, 0.004742552060633898, 0.004787066951394081, 0.004785609897226095, 0.004753067158162594, 0.004712558817118406, 0.004688352812081575, 0.004696634132415056, 0.004742238204926252, 0.004819600842893124, 0.004915325902402401, 0.005009923130273819, 0.005084536969661713, 0.005127284210175276, 0.005132581107318401, 0.0050966800190508366, 0.005016809795051813, 0.004894997924566269, 0.0047386931255459785, 0.004560884088277817, 0.004377466160804033, 0.004205205012112856, 0.004057095851749182, 0.00393786421045661, 0.003841979894787073, 0.0037526609376072884, 0.0036467791069298983, 0.0035033340100198984, 0.003309225896373391, 0.0030604589264839888, 0.002763281110674143, 0.0024321810342371464, 0.0020869290456175804, 0.0017504279967397451, 0.0014456850476562977, 0.0011919359676539898, 0.0009977214504033327, 0.0008539087139070034, 0.0007373241824097931, 0.000618441088590771, 0.00046752949128858745, 0.0002651088871061802, 8.226063073379919e-06, -0.0002877057995647192, -0.0005957434186711907, -0.0008863477851264179, -0.0011341810459271073, -0.001320751034654677, -0.0014367110561579466, -0.0014828119892627, -0.0014714939752593637, -0.0014240440214052796, -0.0013629950117319822, -0.0013074789894744754, -0.001273258007131517, -0.0012717610225081444, -0.001309953979216516, -0.0013898330507799983, -0.001505931024439633, -0.0016447550151497126, -0.0017872420139610767, -0.001912732026539743, -0.0020043200347572565, -0.0020550331100821495, -0.002069636946544051, -0.002062617102637887, -0.0020549329929053783, -0.002065477892756462, -0.0021064879838377237, -0.002179723000153899, -0.0022775810211896896, -0.002387617016211152, -0.0024945249315351248, -0.002582354936748743, -0.002638279926031828, -0.0026554970536381006, -0.00263313390314579, -0.0025769718922674656, -0.002498053014278412, -0.0024103939067572355, -0.002328772097826004, -0.002267753006890416, -0.002240878064185381, -0.0022540208883583546, -0.002302940934896469, -0.0023745479993522167, -0.0024508091155439615, -0.002512407023459673, -0.002541294088587165, -0.002523438073694706, -0.0024557379074394703, -0.0023484849371016026, -0.0022185449488461018, -0.0020848019048571587, -0.001966811018064618, -0.0018817849922925234, -0.0018382190028205514, -0.0018330520251765847, -0.0018551009707152843, -0.0018892280058935285, -0.0019166909623891115, -0.001918161055073142, -0.0018798649543896317, -0.0017979240510612726, -0.0016782509628683329, -0.0015376630472019315, -0.001396839041262865, -0.0012749549932777882, -0.001186502049677074, -0.0011394090251997113, -0.0011345340171828866, -0.0011669059749692678, -0.001228349981829524, -0.0013081099605187774, -0.0013953810557723045, -0.0014792409492656589, -0.0015494360122829676, -0.001597000053152442, -0.0016167160356417298, -0.001609847997315228, -0.0015824140282347798, -0.0015462780138477683, -0.0015179240144789219, -0.0015108260558918118, -0.0015293279429897666, -0.0015683920355513692, -0.0016155029879882932, -0.001651969039812684, -0.0016554950270801783, -0.001602889969944954, -0.0014736560406163335, -0.0012541810283437371, -0.0009439929272048175, -0.0005585784092545509, -0.00012434560630936176, 0.00032997020753100514, 0.0007783466135151684, 0.0011975329834967852, 0.0015666249673813581, 0.001870727981440723, 0.002104684943333268, 0.0022756229154765606, 0.0023991831112653017, 0.002492319094017148, 0.002567816060036421, 0.002632143907248974, 0.0026860178913921118, 0.0027252871077507734, 0.0027437019161880016, 0.0027351730968803167, 0.0026952619664371014, 0.0026220891159027815, 0.0025180489756166935, 0.0023892309982329607, 0.0022419060114771128, 0.0020800239872187376, 0.001902241026982665, 0.0017032800242304802, 0.0014794720336794853, 0.0012319439556449652, 0.0009668255224823952, 0.0006942041800357401, 0.0004261508001945913, 0.0001752029056660831, -4.6911191020626575e-05, -0.0002306180977029726, -0.00036967749474570155, -0.00046400990686379373, -0.0005226543871685863, -0.0005610662046819925, -0.0005986426258459687, -0.000653476279694587, -0.0007383825141005218, -0.0008607589988969266, -0.0010220949770882726, -0.0012147970264777541, -0.0014243449550122023, -0.0016319929854944348, -0.0018173189600929618, -0.00196004007011652, -0.0020418879576027393, -0.002052428899332881, -0.0019943679217249155, -0.0018779210513457656, -0.001716668950393796, -0.0015249550342559814, -0.001315703964792192, -0.0010979289654642344, -0.0008782822987996042, -0.0006638264749199152, -0.00046201710938476026, -0.00027932680677622557, -0.00012012600200250745, 1.5181150047283154e-05, 0.0001286269980482757, 0.00022225160500966012, 0.00029993339558131993, 0.00036738908966071904, 0.0004284764872863889, 0.0004886130918748677, 0.000554366793949157, 0.0006285370909608901, 0.0007111622835509479, 0.0008025480201467872, 0.0009012711234390736, 0.0010019260225817561, 0.001097199972718954, 0.0011815419420599937, 0.0012511479435488582, 0.0013023309875279665, 0.0013297549448907375, 0.001326023950241506, 0.0012854200322180986, 0.0012062829919159412, 0.001091817975975573, 0.0009486449998803437, 0.000786554825026542, 0.0006182272918522358, 0.00045961569412611425, 0.0003262688114773482, 0.000225555500946939, 0.00015714680193923414, 0.00011855329648824409, 0.0001047948026098311, 0.0001065753967850469, 0.00011214429832762107, 0.00010881549678742886, 8.643411274533719e-05, 3.5988799936603755e-05, -5.026704093324952e-05, -0.00017496860527899116, -0.00033577351132407784, -0.0005266385269351304, -0.0007392321713268757, -0.0009633838781155646, -0.0011876439675688744, -0.0013988990103825927, -0.001582409953698516, -0.001725425012409687, -0.0018207409884780645, -0.001866844017058611, -0.0018673379672691226, -0.0018305130070075393, -0.0017696829745545983, -0.0016986479749903083, -0.0016307990299537778, -0.0015772189944982529, -0.0015439019771292806, -0.0015331630129367113, -0.0015450320206582546, -0.0015758730005472898, -0.0016177779762074351, -0.0016602389514446259, -0.001692158984951675, -0.0017026549903675914, -0.0016856769798323512, -0.00164090096950531, -0.001573677989654243, -0.0014925319701433182, -0.0014063860289752483, -0.0013214580249041319, -0.0012431349605321884, -0.0011760520283132792, -0.001120776985771954, -0.0010749050416052341, -0.0010334739927202463, -0.0009912062669172883, -0.0009418823174200952, -0.0008780207135714591, -0.0007933542947284877, -0.0006849835044704378, -0.0005552283837459981, -0.00041154021164402366, -0.00026532571064308286, -0.0001300824951613322, -1.8108139556716196e-05, 6.274969928199425e-05, 0.00011021840327885002, 0.0001279050047742203, 0.00012440579303074628, 0.00011179529974469915, 0.00010219730029348284, 0.00010761959856608883, 0.00013552300515584648, 0.00018579489551484585, 0.0002517515094950795, 0.00032462889794260263, 0.0003961171896662563, 0.000459331989986822, 0.0005078702815808356, 0.000533349986653775, 0.0005270937108434737, 0.00048463520943187177, 0.0004084892862010747, 0.00030601039179600775, 0.00018777410150505602, 6.597487663384527e-05, -4.986319981981069e-05, -0.000154183799168095, -0.0002443490957375616, -0.0003198813064955175, -0.00038294849218800664, -0.0004361674946267158, -0.00048167150816880167, -0.0005200639134272933, -0.0005531883216463029, -0.0005856358911842108, -0.0006218578782863915, -0.0006664675893262029, -0.0007218124228529632, -0.0007852602284401655, -0.0008510064799338579, -0.0009121578768827021, -0.0009595432784408331, -0.000983558245934546, -0.0009772111661732197, -0.0009379482944495976, -0.0008699268219061196, -0.0007841733167879283, -0.0006922321044839919, -0.0006038972060196102, -0.0005242525949142873, -0.00045185518683865666, -0.0003801664861384779, -0.0003013256937265396, -0.0002091390051646158, -9.828853217186406e-05, 3.532426126184873e-05, 0.00019381579477339983, 0.000375715404516086, 0.000578143575694412, 0.0007959636859595776, 0.001018499955534935, 0.0012295970227569342, 0.0014106399612501264, 0.001547183026559651, 0.0016322929877787828, 0.0016645039431750774, 0.0016477080062031746, 0.0015890629729256034, 0.0014981409767642617, 0.001383833005093038, 0.0012526949867606163, 0.0011075170477852225, 0.0009496128186583519, 0.0007812025141902268, 0.0006045149057172239, 0.00042120370198972523, 0.0002318855986231938, 3.6507750337477773e-05, -0.0001644711010158062, -0.00036952621303498745, -0.0005755507736466825, -0.000777370878495276, -0.0009711651946417987, -0.0011553219519555569, -0.001327318954281509, -0.0014800799544900656, -0.001602598000317812, -0.0016841549659147859, -0.001718249055556953, -0.0017007889691740274, -0.0016293389489874244, -0.001504810992628336, -0.0013330490328371525, -0.0011227020295336843, -0.0008844895055517554, -0.000629876391030848, -0.00037219151272438467, -0.00012478159624151886, 0.0001060600989148952, 0.0003216748882550746, 0.0005264836945571005, 0.0007254512747749686, 0.0009220071951858699, 0.0011180799920111895, 0.0013127910206094384, 0.0015026669716462493, 0.001682159025222063, 0.0018469829810783267, 0.0019967490807175636, 0.0021353759802877903, 0.002266868017613888, 0.002391850110143423, 0.0025089499540627003, 0.002615028992295265, 0.00270474492572248, 0.0027708408888429403, 0.002807680983096361, 0.002811589976772666, 0.002781763905659318, 0.0027193010319024324, 0.0026260900776833296, 0.0025074149016290903, 0.0023725000210106373, 0.00223329896107316, 0.0021015810780227184, 0.001987637020647526, 0.0018998440355062485, 0.001842192024923861, 0.0018116449937224388, 0.0017981460550799966, 0.001786440028809011, 0.0017621919978410006, 0.001715144026093185, 0.0016370819648727775, 0.001518748002126813, 0.001351680955849588, 0.0011334179434925318, 0.0008705465006642044, 0.0005750645068474114, 0.0002623962936922908, -4.8249468818539754e-05, -0.0003354627115186304, -0.0005801938241347671, -0.0007691709906794131, -0.0008956756209954619, -0.000961242476478219, -0.0009745879215188324, -0.00094835419440642, -0.0008996367105282843, -0.0008507964084856212, -0.0008228303049691021, -0.0008319159969687462, -0.0008883090922608972, -0.0009964207420125604, -0.0011553879594430327, -0.0013601910322904587, -0.00159973104018718, -0.0018559140153229237, -0.002104898914694786, -0.0023195119574666023, -0.002476399065926671, -0.002564762020483613, -0.002586446003988385, -0.0025555850006639957, -0.002493994077667594, -0.002424498088657856, -0.0023662219755351543, -0.002335598925128579, -0.0023428569547832012, -0.0023894659243524075, -0.0024716691114008427, -0.0025840098969638348, -0.0027205098886042833, -0.0028708460740745068, -0.0030188939999789, -0.0031474221032112837, -0.00324633507989347, -0.00331537495367229, -0.003358883084729314, -0.0033814560156315565, -0.003386877942830324, -0.003377791028469801, -0.003355171997100115, -0.0033207510132342577, -0.0032813660800457, -0.003245765110477805, -0.003222139086574316, -0.003217794932425022, -0.003239284036681056, -0.003289788030087948, -0.0033677041064947844, -0.003468734910711646, -0.0035858559422194958, -0.0037091190461069345, -0.0038261450827121735, -0.003923994954675436, -0.003991574980318546, -0.004019867163151503, -0.0040034218691289425, -0.003943074028939009, -0.0038457289338111877, -0.0037221249658614397, -0.003583932062610984, -0.0034446679055690765, -0.0033155600540339947, -0.003202053951099515, -0.003103693015873432, -0.0030138608999550343, -0.002923467895016074, -0.0028220880776643753, -0.0026991849299520254, -0.0025468049570918083, -0.002360787009820342, -0.002137154107913375, -0.001870805979706347, -0.0015589749673381448, -0.0012069110525771976, -0.0008303031208924949, -0.0004492427106015384, -8.583990711485967e-05, 0.00023974079522304237, 0.0005141496076248586, 0.0007335470290854573, 0.0009036579867824912, 0.0010391490068286657, 0.0011585609754547477, 0.001277004019357264, 0.0014022040413692594, 0.0015314649790525436, 0.0016575079644098878, 0.0017747159581631422, 0.0018794999923557043, 0.001971327932551503, 0.002055810997262597, 0.002144542057067156, 0.0022506089881062508, 0.002384789986535907, 0.0025504520162940025, 0.0027398481033742428, 0.0029360901098698378, 0.003118193941190839, 0.0032667729537934065, 0.003367228899151087, 0.0034115740563720465, 0.003399183042347431, 0.003337977919727564, 0.003243199083954096, 0.0031324599403887987, 0.003023476107046008, 0.0029277780558913946, 0.002847539959475398, 0.00277962489053607, 0.0027166439685970545, 0.002646141918376088, 0.002554967999458313, 0.0024353149347007275, 0.0022864509373903275, 0.002114363946020603, 0.0019310599891468883, 0.0017529999604448676, 0.001596326008439064, 0.0014715490397065878, 0.001384721021167934, 0.0013386260252445936, 0.0013334830291569233, 0.0013645089929923415, 0.0014191759983077645, 0.001481610001064837, 0.0015406559687107801, 0.0015914899995550513, 0.001631218008697033, 0.001656025997363031, 0.0016626520082354546, 0.0016488659894093871, 0.001612905994988978, 0.0015550019452348351, 0.001477919053286314, 0.0013863580534234643, 0.0012842660071328282, 0.001177879050374031, 0.0010789090301841497, 0.0010023670038208365, 0.0009617524920031428, 0.000967365805990994, 0.0010243869619444013, 0.00113389000762254, 0.001291670952923596, 0.0014867970021441579, 0.0017047059955075383, 0.0019321630243211985, 0.0021595770958811045, 0.002381260972470045, 0.002594158984720707, 0.002795533975586295, 0.0029829060658812523, 0.003155013080686331, 0.0033112019300460815, 0.0034499249886721373, 0.003564526094123721, 0.003643118077889085, 0.0036741408985108137, 0.0036527919583022594, 0.003583855926990509, 0.0034823580645024776, 0.0033673211000859737, 0.003255543066188693, 0.0031551430001854897, 0.0030629211105406284, 0.0029677399434149265, 0.0028541400097310543, 0.0027041349094361067, 0.0024984919000416994, 0.00222244905307889, 0.0018699129577726126, 0.00144409597851336, 0.0009567873203195632, 0.0004272662044968456, -0.00011965440353378654, -0.0006571870762854815, -0.0011608890490606427, -0.0016097580082714558, -0.0019903930369764566, -0.0023050459567457438, -0.0025684640277177095, -0.0028000380843877792, -0.0030167989898473024, -0.0032302918843925, -0.003450097981840372, -0.0036863379646092653, -0.003949216101318598, -0.004246646072715521, -0.0045831347815692425, -0.004960825201123953, -0.005379317793995142, -0.005832098890095949, -0.006305725779384375, -0.0067821890115737915, -0.007237690966576338, -0.007643695920705795, -0.007973662577569485, -0.008211906999349594, -0.008356704376637936, -0.008416485041379929, -0.008407608605921268, -0.008354534395039082, -0.008282857947051525, -0.00821019895374775, -0.008144786581397057, -0.008083033375442028, -0.008008930832147598, -0.007898285053670406, -0.007726228795945644, -0.007476840168237686, -0.007149984128773212, -0.006758925039321184, -0.006322889123111963, -0.005861605051904917, -0.005392603110522032, -0.004929232876747847, -0.004482084885239601, -0.004057846963405609, -0.003659335896372795, -0.003288313979282975, -0.0029430300928652287, -0.0026181871071457863, -0.002307326067239046, -0.0020025840494781733, -0.0016966690309345722, -0.001381134963594377, -0.0010448669781908393, -0.0006778347888030112, -0.00027686660178005695, 0.00015281040396075696, 0.0005939840921200812, 0.0010184720158576965, 0.0013954209862276912, 0.0017015100456774235, 0.0019286050228402019, 0.002083374885842204, 0.0021815448999404907, 0.002241874113678932, 0.002281248103827238, 0.0023089179303497076, 0.0023259210865944624, 0.0023309870157390833, 0.002322085900232196, 0.00229397090151906, 0.0022399660665541887, 0.002154336078092456, 0.002033775905147195, 0.0018773130141198635, 0.0016879889881238341, 0.0014724190114066005, 0.001240230049006641, 0.001002316945232451, 0.0007696687243878841, 0.0005519143887795508, 0.0003588229010347277, 0.00020068249432370067, 8.546801836928353e-05, 1.5189690202532802e-05, -1.6346479242201895e-05, -2.40391291299602e-05, -2.7692989533534274e-05, -4.949951107846573e-05, -0.00010954689787467942, -0.00022143969545140862, -0.0003868475032504648, -0.0005943014984950423, -0.0008260589092969894, -0.0010611870093271136, -0.0012785299913957715, -0.0014633700484409928, -0.0016089429846033454, -0.0017149440245702863, -0.0017875590128824115, -0.0018391900230199099, -0.0018843900179490447, -0.001931641949340701, -0.001980427885428071, -0.0020247451029717922, -0.0020548610482364893, -0.0020624829921871424, -0.0020451790187507868, -0.0020067919977009296, -0.001957912929356098, -0.0019117980264127254, -0.0018759999657049775, -0.0018501660088077188, -0.001830414985306561, -0.00181000295560807, -0.001780199003405869, -0.0017337360186502337, -0.001668476965278387, -0.0015862450236454606, -0.0014906900469213724, -0.0013884160434827209, -0.0012896000407636166, -0.0012041389709338546, -0.0011389759602025151, -0.0010941349901258945, -0.0010620419634506106, -0.0010282440343871713, -0.0009753110934980214, -0.0008855758933350444, -0.0007475307211279869, -0.0005580441793426871, -0.00032073850161395967, -4.517523848335259e-05, 0.00025584478862583637, 0.0005699801258742809, 0.0008884560083970428, 0.001207093009725213, 0.001524023013189435, 0.001836773008108139, 0.0021419739350676537, 0.0024356080684810877, 0.002713118912652135, 0.002971006091684103, 0.003207098925486207, 0.0034206300042569637, 0.0036119678989052773, 0.0037793400697410107, 0.003921835217624903, 0.004042167216539383, 0.004146614111959934, 0.004242647904902697, 0.004336288198828697, 0.004428699146956205, 0.004514344967901707, 0.00458321999758482, 0.00462361192330718, 0.004624534863978624, 0.00457968981936574, 0.00448915408924222, 0.004359889775514603, 0.004203596152365208, 0.0040336898528039455, 0.0038631169591099024, 0.0037034780252724886, 0.0035630210768431425, 0.0034439999144524336, 0.0033426559530198574, 0.0032507660798728466, 0.0031575351022183895, 0.003050497965887189, 0.0029196729883551598, 0.002759861061349511, 0.0025709690526127815, 0.0023578270338475704, 0.002128545893356204, 0.0018952200189232826, 0.001672851969487965, 0.001477641984820366, 0.0013239639811217785, 0.0012210230343043804, 0.0011692040134221315, 0.0011597300181165338, 0.001178878010250628, 0.0012096100253984332, 0.0012319900561124086, 0.0012305090203881264, 0.0011975809466093779, 0.0011300649493932724, 0.0010268089827150106, 0.0008908450836315751, 0.0007307592895813286, 0.0005573396920226514, 0.0003789704933296889, 0.00020042830146849155, 2.1955980628263205e-05, -0.00015894739772193134, -0.00034489919198676944, -0.000538440712261945, -0.0007422477938234806, -0.0009568720124661922, -0.0011788560077548027, -0.0013986179837957025, -0.001600799965672195, -0.0017666990170255303, -0.0018788919551298022, -0.0019234269857406616, -0.0018931720405817032, -0.0017939279787242413, -0.0016435639699921012, -0.001464911038056016, -0.0012800369877368212, -0.0011082109995186329, -0.0009645334212109447, -0.000858534884173423, -0.0007947463891468942, -0.000771604070905596, -0.0007803948828950524, -0.0008070701151154935, -0.0008356688776984811, -0.0008509166073054075, -0.0008406788110733032, -0.0007969518774189055, -0.0007176296203397214, -0.0006044423207640648, -0.0004621584084816277, -0.0002987271873280406, -0.00012464419705793262, 4.8847421567188576e-05, 0.000212602099054493, 0.0003618180053308606, 0.000495683285407722, 0.0006158087053336203, 0.0007268221233971417, 0.0008343762019649148, 0.0009440326248295605, 0.0010591070167720318, 0.0011793229496106505, 0.0012978370068594813, 0.0014012650353834033, 0.001471634954214096, 0.0014906000578776002, 0.0014439619844779372, 0.0013250400079414248, 0.00113601703196764, 0.0008880964014679193, 0.000600990722887218, 0.0002987394982483238, 3.4042859624605626e-06, -0.00026809360133484006, -0.0005077082896605134, -0.0007189444149844348, -0.0009137177257798612, -0.0011077809613198042, -0.001314896042458713, -0.001541013945825398, -0.001783297979272902, -0.0020334171131253242, -0.0022798830177634954, -0.0025096810422837734, -0.002709544962272048, -0.0028681219555437565, -0.00297622405923903, -0.0030257960315793753, -0.0030124750919640064, -0.002938590943813324, -0.002814806066453457, -0.002657335950061679, -0.002483749995008111, -0.0023109340108931065, -0.002152371918782592, -0.002017738064751029, -0.0019129290012642741, -0.0018412109930068254, -0.0018013949738815427, -0.0017874300247058272, -0.0017899960512295365, -0.0017963650170713663, -0.001793042989447713, -0.0017678920412436128, -0.001713008969090879, -0.001629121950827539, -0.0015254650497809052, -0.001415580976754427, -0.0013123450335115194, -0.0012228760169818997, -0.001146181020885706, -0.0010758780408650637, -0.001001426950097084, -0.0009070939267985523, -0.0007767686038278043, -0.0005973331280983984, -0.0003614609013311565, -6.955565186217427e-05, 0.00026855271426029503, 0.0006295741186477244, 0.0009808685863390565, 0.0012847610050812364, 0.0015073210233822465, 0.0016275059897452593, 0.001638098037801683, 0.001545664039440453, 0.0013694519875571132, 0.0011370850261300802, 0.0008800742216408253, 0.000632353825494647, 0.0004262448928784579, 0.00028745768941007555, 0.00022935570450499654, 0.0002499558904673904, 0.00033055979292839766, 0.00043924429337494075, 0.0005394840845838189, 0.0006003694725222886, 0.0005999560817144811, 0.0005268392851576209, 0.00038132211193442345, 0.00017546680464874953, -6.90886881784536e-05, -0.0003252991009503603, -0.0005658441223204136, -0.000769972219131887, -0.0009231470758095384, -0.0010152050526812673, -0.001040876959450543, -0.0009990767575800419, -0.0008934852085076272, -0.0007357746944762766, -0.0005446685245260596, -0.00034151700674556196, -0.00014353319420479238, 4.0015860577113926e-05, 0.00020730039977934211, 0.0003638913040049374, 0.0005165777984075248, 0.0006656580953858793, 0.0008073116187006235, 0.0009363458957523108, 0.0010486639803275466, 0.0011456100037321448, 0.001235045026987791, 0.001329457969404757, 0.0014416410122066736, 0.0015814669895917177, 0.0017562579596415162, 0.0019720839336514473, 0.002232325030490756, 0.0025360509753227234, 0.0028799381107091904, 0.003258436918258667, 0.0036622569896280766, 0.004076369106769562, 0.004483542870730162, 0.004865886177867651, 0.005207246169447899, 0.005495244171470404, 0.005721126217395067, 0.005880128126591444, 0.005974818021059036, 0.006016726139932871, 0.006020353175699711, 0.005999322049319744, 0.005963664967566729, 0.005919413175433874, 0.005868128966540098, 0.005808738060295582, 0.005740842781960964, 0.005665847100317478, 0.005586323793977499, 0.0055038807913661, 0.005415887106209993, 0.005319997202605009, 0.00521805789321661, 0.005113951861858368, 0.005011749919503927, 0.004913088865578175, 0.004815223161131144, 0.004711249843239784, 0.004590513184666634, 0.00443989597260952, 0.004249290097504854, 0.0040154787711799145, 0.0037431030068546534, 0.003444263944402337, 0.0031339048873633146, 0.002829187083989382, 0.0025480680633336306, 0.0023081449326127768, 0.002122909063473344, 0.001998760038986802, 0.0019333510426804423, 0.0019173159962520003, 0.001934592961333692, 0.001965244999155402, 0.0019940100610256195, 0.0020136309321969748, 0.002022413071244955, 0.0020239760633558035, 0.0020273649133741856, 0.0020428579300642014, 0.002076219068840146, 0.00212803203612566, 0.0021922909654676914, 0.002254215069115162, 0.002295524114742875, 0.0023020419757813215, 0.002268702955916524, 0.0022002069745212793, 0.002108243992552161, 0.0020068350713700056, 0.0019121869700029492, 0.0018416079692542553, 0.0018100349698215723, 0.0018267020350322127, 0.0018924650503322482, 0.0020002699457108974, 0.0021363170817494392, 0.0022811470553278923, 0.002415322931483388, 0.002525168005377054, 0.002605103887617588, 0.002655147109180689, 0.0026752410922199488, 0.0026656200643628836, 0.002631187904626131, 0.0025838869623839855, 0.002543604001402855, 0.0025356560945510864, 0.002583246910944581, 0.00270085409283638, 0.002891805022954941, 0.003147735958918929, 0.0034509170800447464, 0.003778683952987194, 0.004106373991817236, 0.004411404021084309, 0.004676343873143196, 0.004892689175903797, 0.00506218895316124, 0.005194495897740126, 0.0053024268709123135, 0.005399329122155905, 0.00549562182277441, 0.005597278010100126, 0.005705248098820448, 0.005818199831992388, 0.005934472195804119, 0.006050652824342251, 0.006162305828183889, 0.006267144810408354, 0.0063653611578047276, 0.0064598871394991875, 0.006554312072694302, 0.0066502890549600124, 0.006745967082679272, 0.006837932858616114, 0.006920748855918646, 0.006985009182244539, 0.0070206038653850555, 0.007018938194960356, 0.006974439136683941, 0.0068835909478366375, 0.0067452359944581985, 0.0065584671683609486, 0.006321968976408243, 0.006032933946698904, 0.005687486845999956, 0.0052836379036307335, 0.004822460003197193, 0.0043106297962367535, 0.003761789994314313, 0.0031934620346874, 0.0026247058995068073, 0.002070588991045952, 0.0015445699682459235, 0.0010580930393189192, 0.0006196323083713651, 0.00023201419389806688, -0.00010702150029828772, -0.0004029149131383747, -0.00066713138949126, -0.0009157439926639199, -0.0011660140007734299, -0.0014372499426826835, -0.0017463569529354572, -0.002102358965203166, -0.002504460047930479, -0.002944381907582283, -0.0034088410902768373, -0.003881443990394473, -0.00434502400457859, -0.004786132834851742, -0.005198535043746233, -0.005581376142799854, -0.005935798864811659, -0.006262606009840965, -0.006564638111740351, -0.006847260054200888, -0.007118651177734137, -0.007388107944279909, -0.0076631479896605015, -0.007945594377815723, -0.008229791186749935, -0.008507048711180687, -0.008769705891609192, -0.009010730311274529, -0.009223440662026405, -0.009402954019606113, -0.009548226371407509, -0.00966173317283392, -0.00974742416292429, -0.009806253015995026, -0.00983412191271782, -0.009819920174777508, -0.009749224409461021, -0.009610144421458244, -0.009396951645612717, -0.009108610451221466, -0.008746502920985222, -0.008315451443195343, -0.007825386710464954, -0.007287180982530117, -0.0067101651802659035, -0.006101899780333042, -0.005469464231282473, -0.004820690024644136, -0.0041648028418421745, -0.003507267916575074, -0.002847184892743826, -0.0021790550090372562, -0.0014998669503256679, -0.0008134787785820663, -0.00012944420450367033, 0.0005421835812740028, 0.0011943669524043798, 0.0018243519589304924, 0.0024339270312339067, 0.0030305141117423773, 0.003622734919190407, 0.004220934119075537, 0.0048369900323450565, 0.005477935075759888, 0.00614567007869482, 0.006835910025984049, 0.0075357528403401375, 0.008227239362895489, 0.008891184814274311, 0.009509272873401642, 0.010069009847939014, 0.010564870201051235, 0.010996519587934017, 0.011370079591870308, 0.01169470977038145, 0.0119825704023242, 0.012246490456163883, 0.012498630210757256, 0.012747109867632389, 0.012996019795536995, 0.013245549984276295, 0.01349152997136116, 0.01372515968978405, 0.013933369889855385, 0.014101560227572918, 0.014216500334441662, 0.01426582969725132, 0.014241700060665607, 0.014144199900329113, 0.013979869894683361, 0.01375959999859333, 0.013499969616532326, 0.013224230147898197, 0.01295814011245966, 0.012724170461297035, 0.01253926008939743, 0.012412579730153084, 0.012341800145804882, 0.012313899584114552, 0.012311359867453575, 0.012314469553530216, 0.012302929535508156, 0.012257089838385582, 0.012161660008132458, 0.01200832985341549, 0.011793759651482105, 0.011518679559230804, 0.011186059564352036, 0.010799949988722801, 0.010367419570684433, 0.009897344745695591, 0.009399556554853916, 0.008885572664439678, 0.008368486538529396, 0.007862196303904057, 0.007380775175988674, 0.006937054917216301, 0.006543263792991638, 0.006209581159055233, 0.005941040813922882, 0.005737750791013241, 0.005592070985585451, 0.005487979855388403, 0.00540416082367301, 0.005320780910551548, 0.005224859807640314, 0.005112166982144117, 0.004985167179256678, 0.004849660210311413, 0.004714571870863438, 0.004589767195284367, 0.0044821929186582565, 0.0043964870274066925, 0.004332929849624634, 0.004285584203898907, 0.004246924072504044, 0.0042117987759411335, 0.004177155904471874, 0.00414004921913147, 0.0040960488840937614, 0.004043239168822765, 0.003982251044362783, 0.00391306122764945, 0.0038354520220309496, 0.0037505680229514837, 0.003658897941932082, 0.003558466909453273, 0.0034457119181752205, 0.003317934926599264, 0.0031784470193088055, 0.0030393400229513645, 0.002917258068919182, 0.002825909061357379, 0.0027710290160030127, 0.00274566188454628, 0.002734122099354863, 0.002720806049183011, 0.0026944910641759634, 0.0026509889867156744, 0.0025915000587701797, 0.002521608956158161, 0.0024462419096380472, 0.0023670790251344442, 0.0022873610723763704, 0.002214543055742979, 0.0021589230746030807, 0.0021292229648679495, 0.0021291410084813833, 0.0021578141022473574, 0.0022065620869398117, 0.0022640249226242304, 0.002318895887583494, 0.0023634040262550116, 0.002393866889178753, 0.002407236024737358, 0.002398259937763214, 0.0023635278921574354, 0.002304073888808489, 0.002223158022388816, 0.002122775884345174, 0.0020008638966828585, 0.0018514690455049276, 0.0016699220286682248, 0.001455942983739078, 0.0012150000547990203, 0.0009543811902403831, 0.0006807327154092491, 0.0003958886954933405, 9.673940803622827e-05, -0.00022260799596551806, -0.000566198315937072, -0.000932767172344029, -0.0013121579540893435, -0.0016880870098248124, -0.0020469028968364, -0.002382538979873061, -0.0026972759515047073, -0.003002203069627285, -0.003312269924208522, -0.0036411790642887354, -0.0039964709430933, -0.0043776631355285645, -0.0047789160162210464, -0.005193389020860195, -0.005614881869405508, -0.006039538886398077, -0.006464710924774408, -0.006886700168251991, -0.007300242781639099, -0.007698834873735905, -0.00807594507932663, -0.008426636457443237, -0.008745864033699036, -0.009029180742800236, -0.009273082949221134, -0.00947624258697033, -0.009639020077884197, -0.009764974936842918, -0.009861081838607788, -0.009935717098414898, -0.009994049556553364, -0.010036850348114967, -0.0100595997646451, -0.01005444023758173, -0.010012869723141193, -0.009930809028446674, -0.009806896559894085, -0.009640549309551716, -0.009432381018996239, -0.009185973554849625, -0.008906558156013489, -0.008599908091127872, -0.00827121827751398, -0.007925355806946754, -0.007569558918476105, -0.007212852127850056, -0.006865331903100014, -0.006535375956445932, -0.006227036938071251, -0.005936893168836832, -0.005655048880726099, -0.005367112811654806, -0.005060058087110519, -0.004725491162389517, -0.004359629936516285, -0.003964785020798445, -0.0035480959340929985, -0.003120314097031951, -0.0026934209745377302, -0.002275790087878704, -0.0018704090034589171, -0.001474812044762075, -0.0010832080151885748, -0.0006901427987031639, -0.0002921285922639072, 0.00011136109969811514, 0.0005176031263545156, 0.0009214027086272836, 0.0013180860551074147, 0.0017029179725795984, 0.0020697179716080427, 0.0024127939250320196, 0.0027273460291326046, 0.0030125079210847616, 0.0032715050037950277, 0.0035104460548609495, 0.0037379050627350807, 0.003961999900639057, 0.004188817925751209, 0.004418062046170235, 0.0046403370797634125, 0.004841662012040615, 0.005007944069802761, 0.005126943811774254, 0.005189383868128061, 0.0051930188201367855, 0.005143377929925919, 0.005051991902291775, 0.004931692034006119, 0.004795437213033438, 0.0046575628221035, 0.004533545114099979, 0.004437536932528019, 0.004375950898975134, 0.00434829480946064, 0.004348189104348421, 0.004364699125289917, 0.004382520914077759, 0.004383911844342947, 0.004351910203695297, 0.004275375045835972, 0.004153664223849773, 0.003997423220425844, 0.0038245979230850935, 0.0036528799682855606, 0.0034941979683935642, 0.0033568849321454763, 0.0032431790605187416, 0.0031462740153074265, 0.0030534309335052967, 0.0029511249158531427, 0.002829700941219926, 0.00268470193259418, 0.0025194529443979263, 0.002342470921576023, 0.0021640239283442497, 0.0019955190364271402, 0.001846382045187056, 0.0017247849609702826, 0.0016369540244340897, 0.0015879239654168487, 0.0015807809541001916, 0.0016143260290846229, 0.0016810100059956312, 0.0017713740235194564, 0.001877355040051043, 0.001991007011383772, 0.002103762933984399, 0.002203444018959999, 0.0022772829979658127, 0.00232030195184052, 0.0023370690178126097, 0.002339283935725689, 0.002342736115679145, 0.0023629639763385057, 0.0024076360277831554, 0.002473738044500351, 0.002552479039877653, 0.002634611912071705, 0.0027139869052916765, 0.002788648009300232, 0.00285815610550344, 0.0029194920789450407, 0.0029699180740863085, 0.003010963089764118, 0.0030474350787699223, 0.003086400916799903, 0.0031329370103776455, 0.003185991896316409, 0.0032408449333161116, 0.0032897840719670057, 0.0033210960682481527, 0.0033231729175895452, 0.0032917559146881104, 0.003232768038287759, 0.003160947933793068, 0.003095038002356887, 0.0030509880743920803, 0.0030413460917770863, 0.003072175895795226, 0.003137272084131837, 0.0032212489750236273, 0.0033067860640585423, 0.003379873000085354, 0.003433461068198085, 0.003468492068350315, 0.0034914559219032526, 0.0035079719964414835, 0.0035140831023454666, 0.003495957935228944, 0.0034370229113847017, 0.0033238930627703667, 0.003150280099362135, 0.0029171069618314505, 0.002633723895996809, 0.002315457910299301, 0.0019791850354522467, 0.0016394329722970724, 0.001306519960053265, 0.0009856604738160968, 0.0006785431760363281, 0.00038491509621962905, 0.00010285819735145196, -0.00017353059956803918, -0.0004543031973298639, -0.0007504784734919667, -0.0010705660097301006, -0.0014201570302248001, -0.0017998659750446677, -0.0022028249222785234, -0.002616852056235075, -0.0030292810406535864, -0.0034282319247722626, -0.003806319087743759, -0.004160313867032528, -0.00449081277474761, -0.004801108036190271, -0.005092334933578968, -0.005364344920963049, -0.005615551955997944, -0.005842986982315779, -0.006043316796422005, -0.006209651939570904, -0.006331561133265495, -0.00639935489743948, -0.006410065107047558, -0.006370450835675001, -0.0062963152304291725, -0.006209229119122028, -0.00613254914060235, -0.006088939029723406, -0.00609517190605402, -0.006159528158605099, -0.006278377026319504, -0.0064320918172597885, -0.006589776836335659, -0.006718926131725311, -0.006794644054025412, -0.006803419906646013, -0.006744973827153444, -0.006630016025155783, -0.00647530285641551, -0.0062972609885036945, -0.006108323112130165, -0.005914962850511074, -0.005720431916415691, -0.0055283741094172, -0.005342139862477779, -0.0051647680811584, -0.004995785187929869, -0.004830779042094946, -0.004663762170821428, -0.004485717974603176, -0.004288321826606989, -0.004069441929459572, -0.0038336319848895073, -0.003593205939978361, -0.0033629960380494595, -0.00315546290948987, -0.002978347009047866, -0.0028340849094092846, -0.0027197650633752346, -0.0026241960003972054, -0.0025291999336332083, -0.002417593030259013, -0.0022796939592808485, -0.0021144640631973743, -0.001926771947182715, -0.0017245820490643382, -0.001518651028163731, -0.0013208880554884672, -0.0011416670167818666, -0.0009876854019239545, -0.0008608272764831781, -0.0007592710899189115, -0.0006782065029256046, -0.0006121523911133409, -0.0005569867207668722, -0.0005077074165455997, -0.000458219408756122, -0.0004028510011266917, -0.00033728161361068487, -0.000258877087617293, -0.00016820429300423712, -7.259339326992631e-05, 1.7039550584740937e-05, 9.125103679252788e-05, 0.000143904093420133, 0.00017192830273415893, 0.00017750280676409602, 0.00016713139484636486, 0.00014792020374443382, 0.0001288091007154435, 0.00012080860324203968, 0.00013569889415521175, 0.00018475379329174757, 0.0002768666890915483, 0.0004152496112510562, 0.0005936981760896742, 0.000798009627033025, 0.001011030049994588, 0.001214894000440836, 0.0013957699993625283, 0.0015464660245925188, 0.0016639940440654755, 0.0017487469594925642, 0.0018047570483759046, 0.0018411270575597882, 0.0018688089912757277, 0.0018952039536088705, 0.0019244930008426309, 0.0019570160657167435, 0.001986372983083129, 0.0020029330626130104, 0.0019979849457740784, 0.001962515991181135, 0.0018891670042648911, 0.001773020951077342, 0.001608793972991407, 0.001391818979755044, 0.001127535942941904, 0.0008328750845976174, 0.0005291471024975181, 0.00023280520690605044, -4.8630328819854185e-05, -0.000314392993459478, -0.0005650697858072817, -0.0008018807275220752, -0.0010294020175933838, -0.0012574000284075737, -0.0015006009489297867, -0.0017754669534042478, -0.0020971139892935753, -0.0024766060523688793, -0.002917506033554673, -0.0034170779399573803, -0.003965157084167004, -0.004544543102383614, -0.005133249796926975, -0.005709891207516193, -0.006254600826650858, -0.006752382963895798, -0.007198721170425415, -0.007599459029734135, -0.00796640757471323, -0.008314530365169048, -0.008655743673443794, -0.008997838944196701, -0.009347187355160713, -0.009708059020340443, -0.0100786704570055, -0.010449649766087532, -0.010806519538164139, -0.011136299930512905, -0.011431010439991951, -0.011688780039548874, -0.011912080459296703, -0.01210705004632473, -0.012283430434763432, -0.012451940216124058, -0.012621560133993626, -0.012795659713447094, -0.012969809584319592, -0.013133250176906586, -0.013270679861307144, -0.013368530198931694, -0.013420309871435165, -0.01342542003840208, -0.013386170379817486, -0.013308409601449966, -0.01320314034819603, -0.013083660043776035, -0.012961549684405327, -0.01284439954906702, -0.012736259959638119, -0.012641320005059242, -0.012565620243549347, -0.012514130212366581, -0.012488390319049358, -0.012486210092902184, -0.012500029988586903, -0.012515770271420479, -0.012514140456914902, -0.012476439587771893, -0.01238980982452631, -0.012247810140252113, -0.012052569538354874, -0.011813949793577194, -0.011546489782631397, -0.011267789639532566, -0.010995959863066673, -0.010747220367193222, -0.010532010346651077, -0.010352489538490772, -0.010203770361840725, -0.010075319558382034, -0.009956154972314835, -0.009840983897447586, -0.009728960692882538, -0.009621135890483856, -0.009519827552139759, -0.009425166994333267, -0.009333296678960323, -0.009237712249159813, -0.009131267666816711, -0.009009165689349174, -0.008871455676853657, -0.008718300610780716, -0.008546627126634121, -0.008350462652742863, -0.008125100284814835, -0.007868344895541668, -0.007581876125186682, -0.007271017879247665, -0.006946350913494825, -0.006622299086302519, -0.0063110701739788055, -0.006019121035933495, -0.005749811884015799, -0.005504886154085398, -0.005279767792671919, -0.0050647081807255745, -0.004850063938647509, -0.004628259222954512, -0.00439971499145031, -0.004170806147158146, -0.003949242178350687, -0.0037449148949235678, -0.0035642508883029222, -0.0034079840406775475, -0.0032744070049375296, -0.0031627670396119356, -0.003071052022278309, -0.0029941119719296694, -0.002922849962487817, -0.0028473129495978355, -0.0027600999455899, -0.0026557259261608124, -0.0025324830785393715, -0.002393689937889576, -0.002248764969408512, -0.0021119210869073868, -0.00200231303460896, -0.0019399479497224092, -0.001939216977916658, -0.002003544010221958, -0.0021225051023066044, -0.002275029895827174, -0.002436039038002491, -0.002583703026175499, -0.002703645033761859, -0.002789566060528159, -0.0028448670636862516, -0.002880603075027466, -0.002913753967732191, -0.00296319299377501, -0.0030441461130976677, -0.0031650778837502003, -0.003324927994981408, -0.0035131049808114767, -0.003710479009896517, -0.003893160028383136, -0.004039534833282232, -0.004133870825171471, -0.004169931169599295, -0.004149565007537603, -0.004081416875123978, -0.003979548811912537, -0.0038589381147176027, -0.003732467070221901, -0.0036110179498791695, -0.0035010259598493576, -0.0034019749145954847, -0.003309423103928566, -0.0032173621002584696, -0.0031194020994007587, -0.003008676925674081, -0.0028800300788134336, -0.0027313579339534044, -0.0025640069507062435, -0.0023816379252821207, -0.0021922860760241747, -0.002010788070037961, -0.0018534660339355469, -0.0017324560321867466, -0.0016530259745195508, -0.0016144539695233107, -0.0016158079961314797, -0.0016573929460719228, -0.0017376550240442157, -0.0018498320132493973, -0.0019813459366559982, -0.0021158899180591106, -0.002237635897472501, -0.0023362699430435896, -0.0024087210185825825, -0.002461961004883051, -0.0025075620505958796, -0.00255708210170269, -0.002622236032038927, -0.00271024601534009, -0.002816590014845133, -0.0029285980854183435, -0.0030340710654854774, -0.003124343929812312, -0.003193550044670701, -0.003239104989916086, -0.003266091924160719, -0.0032910320442169905, -0.003334284061565995, -0.003410309087485075, -0.0035244629252701998, -0.0036725751124322414, -0.0038446190301328897, -0.004030573181807995, -0.004221939016133547, -0.004411202855408192, -0.004590920172631741, -0.004754514899104834, -0.0048984079621732235, -0.005019187927246094, -0.005112621001899242, -0.005173829849809408, -0.005198341794312, -0.005188093055039644, -0.005149884149432182, -0.00509251793846488, -0.005025617778301239, -0.004956407006829977, -0.004885942209511995, -0.0048114219680428505, -0.004726840183138847, -0.004625645000487566, -0.004504707176238298, -0.004363492131233215, -0.004206082783639431, -0.004044513218104839, -0.0038930769078433514, -0.0037614579778164625, -0.0036526869516819715, -0.0035625179298222065, -0.003480887971818447, -0.003397297114133835, -0.0033036749809980392, -0.0031954480800777674, -0.003070523962378502, -0.0029300409369170666, -0.002775938017293811, -0.002610159106552601, -0.0024360809475183487, -0.002256050007417798, -0.002070886082947254, -0.0018837129464372993, -0.0017010070150718093, -0.0015301259700208902, -0.0013774520484730601, -0.001248082029633224, -0.0011452080216258764, -0.0010673130163922906, -0.0010059180203825235, -0.0009511542739346623, -0.0008978457772172987, -0.0008439347730018198, -0.0007872263086028397, -0.0007256155950017273, -0.0006624542875215411, -0.0006074085831642151, -0.0005708792014047503, -0.0005595554248429835, -0.0005749791744165123, -0.0006156350718811154, -0.0006774667999707162, -0.0007547112181782722, -0.0008413243922404945, -0.0009341876721009612, -0.0010345550253987312, -0.0011426130076870322, -0.0012538139708340168, -0.00135976099409163, -0.0014516180381178856, -0.0015218850458040833, -0.0015673850430175662, -0.0015918869758024812, -0.0016019030008465052, -0.0016032529529184103, -0.0015998140443116426, -0.001595771056599915, -0.001596627989783883, -0.001608990947715938, -0.001640742993913591, -0.0016958119813352823, -0.0017714600544422865, -0.0018598289461806417, -0.0019514349987730384, -0.002036816906183958, -0.002108108950778842, -0.0021601140033453703, -0.0021891500800848007, -0.002192375948652625, -0.002171587897464633, -0.0021330108866095543, -0.002083271974697709, -0.0020272540859878063, -0.0019644969142973423, -0.0018885909812524915, -0.0017901810351759195, -0.0016630409518256783, -0.00150944699998945, -0.0013406709767878056, -0.001173458993434906, -0.001024447032250464, -0.0009052125969901681, -0.0008206223137676716, -0.0007679712143726647, -0.0007379304151982069, -0.0007213226053863764, -0.0007117210770957172, -0.000703744706697762, -0.0006930637173354626, -0.0006750925094820559, -0.000646802072878927, -0.0006047873175702989, -0.0005458511877804995, -0.00047045270912349224, -0.00037880989839322865, -0.0002696540905162692, -0.0001450475974706933, -8.192673703888431e-06, 0.00013654360373038799, 0.0002826566924341023, 0.0004213603970129043, 0.000541707209777087, 0.0006337382947094738, 0.0006891777156852186, 0.0007037225877866149, 0.000677798583637923, 0.0006163808866403997, 0.0005277632735669613, 0.0004255244857631624, 0.0003285713028162718, 0.00025690390611998737, 0.00022996739426162094, 0.00026227300986647606, 0.0003597679897211492, 0.0005193910910747945, 0.0007292312802746892, 0.0009710824815556407, 0.0012220590142533183, 0.001457393984310329, 0.0016512159490957856, 0.0017784129595384002, 0.0018212150316685438, 0.0017730649560689926, 0.001640788046643138, 0.0014434129698202014, 0.0012048729695379734, 0.0009495610138401389, 0.0007025497034192085, 0.00048485881416127086, 0.00030803069239482284, 0.00017599589773453772, 8.671209798194468e-05, 3.2667321647750214e-05, 6.150215085654054e-06, 2.4302130441355985e-06, 2.1403089704108424e-05, 6.716873758705333e-05, 0.00014303300122264773, 0.0002478570968378335, 0.00037716238875873387, 0.0005229582893662155, 0.0006706488202326, 0.0008049156749621034, 0.0009139569010585546, 0.0009899671422317624, 0.0010326739866286516, 0.0010498049668967724, 0.0010545389959588647, 0.0010608519660308957, 0.0010802870383486152, 0.0011225870111957192, 0.0011961020063608885, 0.0013047880493104458, 0.0014449319569393992, 0.001605179044418037, 0.00177122897002846, 0.0019281499553471804, 0.002058529993519187, 0.0021449080668389797, 0.0021747120190411806, 0.002141068922355771, 0.002044535940513015, 0.0018957259599119425, 0.001710255048237741, 0.0015061870217323303, 0.0013010710244998336, 0.001108511001802981, 0.000941339589189738, 0.0008126230095513165, 0.0007320825825445354, 0.0007007485837675631, 0.0007099650101736188, 0.0007438390166498721, 0.0007799789891578257, 0.0007958610076457262, 0.0007724144961684942, 0.0006960337050259113, 0.0005585079779848456, 0.0003573326102923602, 9.432250953977928e-05, -0.00022563509992323816, -0.0005955903907306492, -0.0010057060280814767, -0.0014428369468078017, -0.001892969012260437, -0.0023425340186804533, -0.002779050962999463, -0.0031888450030237436, -0.003558153985068202, -0.0038755880668759346, -0.004131391178816557, -0.004320091102272272, -0.004443233832716942, -0.004508771933615208, -0.0045296791940927505, -0.004520094953477383, -0.0044950018636882305, -0.004468029830604792, -0.004449322819709778, -0.004441247787326574, -0.0044372049160301685, -0.00442697387188673, -0.004399500787258148, -0.004344393033534288, -0.004251592792570591, -0.004111690912395716, -0.003914679866284132, -0.003650663886219263, -0.0033146371133625507, -0.002908505965024233, -0.0024447920732200146, -0.0019420860335230827, -0.0014202829916030169, -0.0008999393903650343, -0.00039771199226379395, 7.909222040325403e-05, 0.0005328687257133424, 0.000973832793533802, 0.0014133340446278453, 0.0018581999465823174, 0.0023100480902940035, 0.0027668699622154236, 0.003225587075576186, 0.0036840930115431547, 0.004139801021665335, 0.0045910668559372425, 0.005037651862949133, 0.005481052212417126, 0.005922514013946056, 0.006363116204738617, 0.006800754927098751, 0.007227317895740271, 0.007631284184753895, 0.007999296300113201, 0.00831853412091732, 0.008581230416893959, 0.008786613121628761, 0.008938360959291458, 0.009039762429893017, 0.009093793109059334, 0.00910183135420084, 0.009061533957719803, 0.00897113885730505, 0.008837065659463406, 0.00867411307990551, 0.008502417244017124, 0.008342942222952843, 0.008212856017053127, 0.00811980664730072, 0.008062968030571938, 0.008032778277993202, 0.008015918545424938, 0.007999145425856113, 0.00796904880553484, 0.007915172725915909, 0.007830264046788216, 0.007708284072577953, 0.0075439452193677425, 0.007334270980209112, 0.007082223892211914, 0.006797824986279011, 0.006494069006294012, 0.006182708777487278, 0.00587125588208437, 0.005564408842474222, 0.005266963038593531, 0.004982862155884504, 0.004711740184575319, 0.004450513981282711, 0.004199921153485775, 0.003967017866671085, 0.0037611129228025675, 0.003588794032111764, 0.0034517140593379736, 0.0033452999778091908, 0.0032598080579191446, 0.0031841639429330826, 0.003109823912382126, 0.003032421926036477, 0.0029489139560610056, 0.0028542550280690193, 0.0027432849165052176, 0.0026149291079491377, 0.002472108928486705, 0.0023221969604492188, 0.0021756100468337536, 0.002043151995167136, 0.0019327809568494558, 0.0018450800562277436, 0.0017754039727151394, 0.0017153799999505281, 0.0016555089969187975, 0.001590196043252945, 0.0015192539431154728, 0.0014469960005953908, 0.0013813090045005083, 0.001331927953287959, 0.0013103580567985773, 0.001328191952779889, 0.0013938939664512873, 0.0015107450308278203, 0.0016756339464336634, 0.0018791770562529564, 0.0021059629507362843, 0.002336215926334262, 0.0025476529262959957, 0.0027188649401068687, 0.0028321780264377594, 0.002879591891542077, 0.002866932889446616, 0.0028121930081397295, 0.0027370809111744165, 0.0026589669287204742, 0.0025891039986163378, 0.002534278901293874, 0.002497680950909853, 0.0024785620626062155, 0.002473666099831462, 0.00247652898542583, 0.002479379065334797, 0.002472291002050042, 0.002447328995913267, 0.0024016539100557566, 0.0023347269743680954, 0.0022470129188150167, 0.002138399053364992, 0.0020078159868717194, 0.0018529120134189725, 0.0016735800309106708, 0.0014737709425389767, 0.0012593020219355822, 0.001036279951222241, 0.0008128226036205888, 0.0006003823946230114, 0.00040980649646371603, 0.0002466281002853066, 0.00011536930105648935, 2.316549034730997e-05, -2.2068930775276385e-05, -1.6113239325932227e-05, 4.033227014588192e-05, 0.00013857059821020812, 0.00026207760674878955, 0.00039055111119523644, 0.0005028549931012094, 0.0005806757835671306, 0.0006108718807809055, 0.0005880288081243634, 0.0005133150261826813, 0.0003930166130885482, 0.00023637519916519523, 5.56960585527122e-05, -0.00013475739979185164, -0.0003219053032808006, -0.0004939478822052479, -0.0006414111121557653, -0.0007586764986626804, -0.0008452818728983402, -0.0009043944883160293, -0.0009422341827303171, -0.0009662494994699955, -0.0009809701004996896, -0.0009875275427475572, -0.000982989906333387, -0.0009623471996746957, -0.0009189696866087615, -0.0008443212136626244, -0.0007316689006984234, -0.0005779530038125813, -0.0003853210946545005, -0.00016048259567469358, 8.981425344245508e-05, 0.0003618795017246157, 0.0006517810979858041, 0.0009534551063552499, 0.001260005054064095, 0.0015621980419382453, 0.0018487479537725449, 0.0021074959076941013, 0.0023290920071303844, 0.0025089539121836424, 0.0026510499883443117, 0.0027681849896907806, 0.0028783311136066914, 0.002998894080519676, 0.003141202963888645, 0.003308757906779647, 0.0034990650601685047, 0.003705003997310996, 0.003917701076716185, 0.00412733806297183, 0.004326287191361189, 0.00451052887365222, 0.0046809022314846516, 0.004841352812945843, 0.004994256887584925, 0.005138772074133158, 0.005271303001791239, 0.0053890058770775795, 0.005490365903824568, 0.005573534872382879, 0.005635897163301706, 0.00567530607804656, 0.0056905727833509445, 0.005680808797478676, 0.005647038109600544, 0.005592823028564453, 0.005521180108189583, 0.005434543825685978, 0.00533660314977169, 0.00523492693901062, 0.005139679182320833, 0.005058011040091515, 0.004992487840354443, 0.004940862767398357, 0.004897321108728647, 0.004855656065046787, 0.0048093670047819614, 0.004750499036163092, 0.004673123825341463, 0.0045758080668747425, 0.004462142009288073, 0.00433753477409482, 0.00420565577223897, 0.004069063812494278, 0.003930165898054838, 0.003789633046835661, 0.003643869888037443, 0.003487502923235297, 0.003316927934065461, 0.0031331030186265707, 0.0029404188971966505, 0.0027421650011092424, 0.0025394039694219828, 0.002331281080842018, 0.0021173530258238316, 0.0019030480179935694, 0.0016989270225167274, 0.0015146649675443769, 0.0013550779549404979, 0.001219470053911209, 0.0011039749952033162, 0.0010052230209112167, 0.0009213663870468736, 0.0008534207008779049, 0.0008040759130381048, 0.0007743831956759095, 0.0007632978959009051, 0.0007686304743401706, 0.0007875091978348792, 0.0008161527221091092, 0.0008492611232213676, 0.0008830424048937857, 0.0009148954995907843, 0.0009439697023481131, 0.0009734318009577692, 0.0010075160535052419, 0.0010520699433982372, 0.00111356598790735, 0.0011980249546468258, 0.0013088600244373083, 0.001446272013708949, 0.0016068919794633985, 0.0017854500329121947, 0.00197502295486629, 0.002168710110709071, 0.002362149069085717, 0.002554526086896658, 0.0027461729478091, 0.002937332959845662, 0.0031308759935200214, 0.003331755055114627, 0.0035451429430395365, 0.003774269949644804, 0.004017564933747053, 0.004267462063580751, 0.004511686973273754, 0.004739081021398306, 0.004942989908158779, 0.005121518857777119, 0.005277330055832863, 0.005415314808487892, 0.005539541132748127, 0.005650804843753576, 0.005747622810304165, 0.005826938897371292, 0.005884876009076834, 0.005917664151638746, 0.005924123805016279, 0.0059051369316875935, 0.005861962214112282, 0.0057991608045995235, 0.005725201219320297, 0.005648986902087927, 0.005579385906457901, 0.0055258069187402725, 0.0054931980557739735, 0.005476744845509529, 0.005461518187075853, 0.005431949160993099, 0.005377442110329866, 0.005295062903314829, 0.005188080947846174, 0.005063352175056934, 0.0049309819005429745, 0.004804819822311401, 0.004699151962995529, 0.004621861968189478, 0.004573922138661146, 0.004549869801849127, 0.004540698137134314, 0.004536367952823639, 0.004529075231403112, 0.004513384774327278, 0.004483213182538748, 0.004435336217284203, 0.00437061907723546, 0.004292875062674284, 0.004205501172691584, 0.004107731860131025, 0.003997073974460363, 0.0038693819660693407, 0.0037230600137263536, 0.0035626220051199198, 0.003399013075977564, 0.0032468580175191164, 0.003119251923635602, 0.0030247881077229977, 0.0029641129076480865, 0.002929819980636239, 0.002910858951508999, 0.0028957671020179987, 0.0028741289861500263, 0.002838843036442995, 0.0027872170321643353, 0.0027209899853914976, 0.002646984066814184, 0.0025765320751816034, 0.0025237121153622866, 0.0025005401112139225, 0.0025118389166891575, 0.0025572380982339382, 0.002631101058796048, 0.0027270540595054626, 0.0028405480552464724, 0.0029692118987441063, 0.0031106879469007254, 0.003260438097640872, 0.0034134311135858297, 0.003566707018762827, 0.0037199389189481735, 0.0038741850294172764, 0.004032679833471775, 0.004199779126793146, 0.004380769096314907, 0.004578916821628809, 0.00479357922449708, 0.005022372119128704, 0.005260452162474394, 0.005500609055161476, 0.005733763799071312, 0.005951539147645235, 0.006148323882371187, 0.006320131942629814, 0.00646525714546442, 0.006581998895853758, 0.00666843680664897, 0.006721861194819212, 0.006739141885191202, 0.006721110083162785, 0.0066749220713973045, 0.006613447796553373, 0.006551964208483696, 0.006505434866994619, 0.006484644021838903, 0.006494778208434582, 0.006535928230732679, 0.006600281223654747, 0.0066734920255839825, 0.006736829876899719, 0.006773056928068399, 0.006770369131118059, 0.00672175595536828, 0.006623751949518919, 0.006475450005382299, 0.006277712062001228, 0.006031541153788567, 0.005737788043916225, 0.005398537032306194, 0.005017717834562063, 0.004601743072271347, 0.004159621894359589, 0.0037021159660071135, 0.003241030965000391, 0.0027872829232364893, 0.0023451519664376974, 0.0019108799751847982, 0.001477023004554212, 0.0010369770461693406, 0.0005883955745957792, 0.00013259099796414375, -0.00032880270737223327, -0.0007934579043649137, -0.0012596610467880964, -0.0017265330534428358, -0.002194642089307308, -0.002666329964995384, -0.003145888913422823, -0.0036354910116642714, -0.004134933929890394, -0.004640774801373482, -0.005147982854396105, -0.005651100073009729, -0.006142470054328442, -0.006613635923713446, -0.007057033013552427, -0.007468620780855417, -0.00785087700933218, -0.008211682550609112, -0.008561271242797375, -0.00890862476080656, -0.009260846301913261, -0.009620213881134987, -0.009984702803194523, -0.010347289964556694, -0.010697449557483196, -0.0110227195546031, -0.011308410204946995, -0.011543129570782185, -0.011722399853169918, -0.011846429668366909, -0.011920100077986717, -0.011949770152568817, -0.011942369863390923, -0.011906130239367485, -0.01184780988842249, -0.011772979982197285, -0.011683350428938866, -0.011575089767575264, -0.01144460029900074, -0.011293919757008553, -0.011131989769637585, -0.010970639996230602, -0.010821850039064884, -0.010695260018110275, -0.01059412956237793, -0.010512299835681915, -0.01043654978275299, -0.010349350050091743, -0.010233409702777863, -0.010077140294015408, -0.009875462390482426, -0.009628117084503174, -0.00933743454515934, -0.009007579647004604, -0.008642380125820637, -0.00824592262506485, -0.007823717780411243, -0.007384071126580238, -0.006937216967344284, -0.006491732783615589, -0.006055665202438831, -0.005635417066514492, -0.00522998021915555, -0.004831349011510611, -0.004427103791385889, -0.004005827009677887, -0.00356138008646667, -0.003095603082329035, -0.002617571037262678, -0.002143552992492914, -0.0016914779553189874, -0.0012753249611705542, -0.0009015543037094176, -0.0005695814033970237, -0.00027479720301926136, -1.0938800187432207e-05, 0.000229346303967759, 0.00045546769979409873, 0.0006771744810976088, 0.0009026143234223127, 0.0011388829443603754, 0.001390589983202517, 0.0016598410438746214, 0.0019440730102360249, 0.0022378889843821526, 0.0025357340928167105, 0.0028341710567474365, 0.0031319139525294304, 0.003429548116400838, 0.0037292290944606066, 0.00403317715972662, 0.004341511055827141, 0.004653144162148237, 0.004964366089552641, 0.005270096007734537, 0.005565527826547623, 0.005845728795975447, 0.006104839034378529, 0.006338578183203936, 0.006544293835759163, 0.006719564087688923, 0.006861134897917509, 0.006966690998524427, 0.007039770949631929, 0.00709184305742383, 0.007139481138437986, 0.007198721170425415, 0.007280655205249786, 0.007392961997538805, 0.007540660910308361, 0.007722415961325169, 0.007929185405373573, 0.008146953769028187, 0.00836020428687334, 0.008554781787097454, 0.008721472695469856, 0.00885729305446148, 0.008963544853031635, 0.009045159444212914, 0.009107984602451324, 0.009156265296041965, 0.009190195240080357, 0.009206092916429043, 0.009202387183904648, 0.009181312285363674, 0.009145986288785934, 0.009098043665289879, 0.00903945043683052, 0.00897261407226324, 0.008900516666471958, 0.008825908415019512, 0.008751394227147102, 0.008678142912685871, 0.008605719543993473, 0.008535152301192284, 0.008468135260045528, 0.008405469357967377, 0.008346536196768284, 0.008289402350783348, 0.008230660110712051, 0.008166656829416752, 0.008093710988759995, 0.008008996024727821, 0.007910780608654022, 0.007797660771757364, 0.007668237201869488, 0.007520488929003477, 0.007355616893619299, 0.007181054912507534, 0.007009719964116812, 0.006856685969978571, 0.006734066177159548, 0.006648931186646223, 0.006601621862500906, 0.006586881820112467, 0.0065999990329146385, 0.006637842860072851, 0.006695027928799391, 0.0067633697763085365, 0.006830601952970028, 0.006881846114993095, 0.006903143133968115, 0.006884702015668154, 0.0068225921131670475, 0.0067183529026806355, 0.0065795788541436195, 0.006414791103452444, 0.006230636965483427, 0.00603473000228405, 0.0058393320068717, 0.005662421230226755, 0.005522219929844141, 0.005429952871054411, 0.005385859869420528, 0.0053816549479961395, 0.00540270796045661, 0.005430418066680431, 0.005445098038762808, 0.005431510973721743, 0.005382842849940062, 0.005301033146679401, 0.005194244906306267, 0.005070832092314959, 0.004935677163302898, 0.004789756145328283, 0.004632159136235714, 0.00446196598932147, 0.00428029615432024, 0.0040902611799538136, 0.0038948869332671165, 0.0036948840133845806, 0.003489523893222213, 0.0032785239163786173, 0.0030602579936385155, 0.002830391051247716, 0.0025848140940070152, 0.002322237007319927, 0.0020433960016816854, 0.0017488020239397883, 0.0014413660392165184, 0.0011271110270172358, 0.0008119365083985031, 0.0004992462927475572, 0.00018978409934788942, -0.00012092300312360749, -0.0004410597903188318, -0.0007781372987665236, -0.001136463019065559, -0.0015164939686655998, -0.0019148379797115922, -0.0023216810077428818, -0.0027191999834030867, -0.003088427009060979, -0.0034156988840550184, -0.0036962570156902075, -0.003932284191250801, -0.004131540190428495, -0.004306981805711985, -0.004473756067454815, -0.004645880777388811, -0.004836572799831629, -0.005054471082985401, -0.005300189834088087, -0.005564431194216013, -0.0058296541683375835, -0.006076072808355093, -0.006288070231676102, -0.006454893853515387, -0.006568457931280136, -0.006623608060181141, -0.006621973123401403, -0.006571706850081682, -0.006483856122940779, -0.006371620111167431, -0.006248887162655592, -0.006128058768808842, -0.006019366905093193, -0.005929235834628344, -0.005857580807060003, -0.005799204111099243, -0.005750508978962898, -0.005708531942218542, -0.005669272970408201, -0.005629620049148798, -0.005584903061389923, -0.0055295201018452644, -0.005463346838951111, -0.005392487160861492, -0.005323404911905527, -0.005259472876787186, -0.005201071035116911, -0.005146001931279898, -0.0050916410982608795, -0.00503728911280632, -0.004983020015060902, -0.004927920177578926, -0.004870456177741289, -0.004810212180018425, -0.004752646200358868, -0.00470832409337163, -0.0046911342069506645, -0.004713438916951418, -0.004781248047947884, -0.004893407225608826, -0.005044323857873678, -0.005224431864917278, -0.00542072718963027, -0.005620001815259457, -0.005812747869640589, -0.005994447041302919, -0.006166001781821251, -0.006330979987978935, -0.006494301836937666, -0.0066615501418709755, -0.0068385060876607895, -0.007029972039163113, -0.007238870952278376, -0.007467282935976982, -0.007717583794146776, -0.00798880122601986, -0.008275656960904598, -0.008570191450417042, -0.008860878646373749, -0.009132464416325092, -0.00937172956764698, -0.009569394402205944, -0.009721045382320881, -0.009828082285821438, -0.009895045310258865, -0.009928027167916298, -0.009934154339134693, -0.009921655058860779, -0.009898817166686058, -0.009871811605989933, -0.009843618609011173, -0.009813937358558178, -0.009779182262718678, -0.009732183068990707, -0.009662955068051815, -0.009561151266098022, -0.009419208392500877, -0.009234311990439892, -0.009008325636386871, -0.008748716674745083, -0.008467365987598896, -0.0081773791462183, -0.007888136431574821, -0.00760271493345499, -0.007319110911339521, -0.00703273294493556, -0.006739723030477762, -0.006440755911171436, -0.006142281927168369, -0.005853056907653809, -0.0055794198997318745, -0.005322305951267481, -0.005076980218291283, -0.00483643589541316, -0.004594882950186729, -0.004347172100096941, -0.004089434165507555, -0.003821444930508733, -0.003544338047504425, -0.0032588960602879524, -0.002966670086607337, -0.0026717009022831917, -0.0023780479095876217, -0.002088933950290084, -0.0018049849895760417, -0.0015254480531439185, -0.001249411958269775, -0.0009792373748496175, -0.0007237499812617898, -0.0004946141270920634, -0.00029949890449643135, -0.00013806790229864419, -2.774341965050553e-06, 0.00011797850311268121, 0.0002353864983888343, 0.0003565498918760568, 0.00048306360258720815, 0.0006122150225564837, 0.000737240188755095, 0.0008482494158670306, 0.0009343398851342499, 0.000986325554549694, 0.0009983150521293283, 0.0009686314733698964, 0.0009003942832350731, 0.0007992403116077185, 0.0006739977980032563, 0.0005360950017347932, 0.0003984193899668753, 0.0002737595932558179, 0.0001708271011011675, 9.109400707529858e-05, 3.4478580346331e-05, 1.6248139900199021e-06, -7.1365261646860745e-06, 3.1322640552389203e-06, 2.1003630536142737e-05, 3.195214958395809e-05, 2.042555934167467e-05, -2.674965980986599e-05, -0.00011939799878746271, -0.0002611347008496523, -0.00044822771451435983, -0.0006704865954816341, -0.0009116154978983104, -0.0011536229867488146, -0.0013784939656034112, -0.0015700870426371694, -0.0017150910571217537, -0.0018057150300592184, -0.001842417987063527, -0.0018316099885851145, -0.0017824650276452303, -0.0017019340302795172, -0.0015951760578900576, -0.001466394984163344, -0.0013207109877839684, -0.001168117974884808, -0.0010210450273007154, -0.000888490176293999, -0.0007732184021733701, -0.0006745437276549637, -0.0005902984994463623, -0.000517423904966563, -0.0004510637081693858, -0.00038814981235191226, -0.0003268985019531101, -0.00026512768818065524, -0.0002012568002101034, -0.00013401059550233185, -6.14838718320243e-05, 1.7408219719072804e-05, 9.936241258401424e-05, 0.00017725469660945237, 0.00024136340653058141, 0.0002807716082315892, 0.00028484739596024156, 0.0002456691872794181, 0.00016100489301607013, 3.734253914444707e-05, -0.00010917989857262, -0.00025582811213098466, -0.00038197438698261976, -0.00047743270988576114, -0.0005431995959952474, -0.0005896177026443183, -0.0006296196952462196, -0.0006749785970896482, -0.0007341870223172009, -0.0008115806267596781, -0.000906469183973968, -0.0010136880446225405, -0.0011245450004935265, -0.0012267479905858636, -0.0013072530273348093, -0.0013568890281021595, -0.0013744879979640245, -0.0013649440370500088, -0.0013393210247159004, -0.001311297994107008, -0.001293887966312468, -0.0012960380408912897, -0.00131977500859648, -0.001362079055979848, -0.001417970983311534, -0.0014815579634159803, -0.0015451549552381039, -0.0016020849579945207, -0.0016506570391356945, -0.0016939659835770726, -0.0017369469860568643, -0.0017841779626905918, -0.0018380139954388142, -0.0018992420518770814, -0.001968557946383953, -0.0020450609736144543, -0.0021271060686558485, -0.0022154159378260374, -0.0023126809392124414, -0.002424261998385191, -0.0025557701010257006, -0.0027049120981246233, -0.002860171953216195, -0.003002784913405776, -0.0031110988929867744, -0.0031650608871132135, -0.0031524149235337973, -0.0030739670619368553, -0.0029385830275714397, -0.0027587648946791887, -0.002545709954574704, -0.00230797310359776, -0.0020553350914269686, -0.001802206039428711, -0.0015631000278517604, -0.0013505170354619622, -0.0011746829841285944, -0.0010424869833514094, -0.000956507574301213, -0.0009153470164164901, -0.0009143020724877715, -0.0009457244887016714, -0.0009992201812565327, -0.0010653069475665689, -0.001136380946263671, -0.0012080769520252943, -0.0012796339578926563, -0.0013553219614550471, -0.0014424410182982683, -0.0015453719533979893, -0.0016634840285405517, -0.001792781986296177, -0.0019285540329292417, -0.0020649819634854794, -0.002196487970650196, -0.002317778067663312, -0.002426126040518284, -0.0025228809099644423, -0.0026104459539055824, -0.0026904649566859007, -0.0027660110499709845, -0.0028443909250199795, -0.0029331159312278032, -0.003036834066733718, -0.00315365893766284, -0.0032749311067163944, -0.0033877980895340443, -0.003477067919448018, -0.0035291770473122597, -0.003533625975251198, -0.0034845639020204544, -0.0033820250537246466, -0.0032324769999831915, -0.0030461999122053385, -0.002834059065207839, -0.0026058750227093697, -0.002368262968957424, -0.0021253719460219145, -0.001881567994132638, -0.0016404699999839067, -0.0014021169627085328, -0.0011623799800872803, -0.0009177066967822611, -0.0006675879121758044, -0.0004133429902140051, -0.00015892299416009337, 8.969027840066701e-05, 0.00032435631146654487, 0.0005374380853027105, 0.0007248519104905427, 0.0008866111747920513, 0.0010284560266882181, 0.0011608339846134186, 0.0012934280093759298, 0.0014296260196715593, 0.001567660947330296, 0.0017031989991664886, 0.0018332330510020256, 0.001958827953785658, 0.002084573032334447, 0.002215621992945671, 0.002354610012844205, 0.002499775029718876, 0.002643585903570056, 0.002775656059384346, 0.002885754918679595, 0.0029653029050678015, 0.0030081679578870535, 0.0030126580968499184, 0.002983435057103634, 0.0029303880874067545, 0.002863640896975994, 0.0027913989033550024, 0.002716697985306382, 0.002639289014041424, 0.0025579629000276327, 0.002472887048497796, 0.0023886479903012514, 0.0023151689674705267, 0.0022645338904112577, 0.0022456711158156395, 0.0022647948935627937, 0.0023225159384310246, 0.002413880079984665, 0.0025286029558628798, 0.002654721960425377, 0.0027822048868983984, 0.002902040956541896, 0.003005279926583171, 0.0030824351124465466, 0.0031269730534404516, 0.00313792796805501, 0.0031182330567389727, 0.0030725309625267982, 0.00300977798178792, 0.0029430589638650417, 0.002886787988245487, 0.00285328202880919, 0.0028495320584625006, 0.002879031002521515, 0.0029438959900289774, 0.0030432939529418945, 0.0031737100798636675, 0.003328405087813735, 0.003495605895295739, 0.003662476083263755, 0.003818555036559701, 0.0039588590152561665, 0.004081331193447113, 0.004185888916254044, 0.004276394844055176, 0.004360471852123737, 0.004447396844625473, 0.004543970804661512, 0.0046522668562829494, 0.004772392101585865, 0.004901675041764975, 0.00503308791667223, 0.005156600847840309, 0.005261145997792482, 0.0053364732302725315, 0.005374872125685215, 0.005372839979827404, 0.005331053864210844, 0.005253797862678766, 0.005146251991391182, 0.005015489179641008, 0.004869879223406315, 0.004718097858130932, 0.004566616844385862, 0.004418834112584591, 0.004272093065083027, 0.004118926823139191, 0.0039518531411886215, 0.003765743924304843, 0.003560496959835291, 0.0033401839900761843, 0.0031134220771491528, 0.002890933072194457, 0.002683372003957629, 0.0024979650042951107, 0.002337547019124031, 0.002199392067268491, 0.0020780470222234726, 0.0019666149746626616, 0.0018561920151114464, 0.0017398210475221276, 0.0016151999589055777, 0.001485095010139048, 0.001357270055450499, 0.0012411529896780849, 0.0011469200253486633, 0.0010825609788298607, 0.0010515990434214473, 0.0010543089592829347, 0.0010879900073632598, 0.0011489390162751079, 0.0012312460457906127, 0.001327181002125144, 0.0014271939871832728, 0.0015204929513856769, 0.0015974519774317741, 0.0016536880284547806, 0.001690597040578723, 0.0017115609953179955, 0.0017192249651998281, 0.0017135570524260402, 0.00169402698520571, 0.0016604720149189234, 0.0016131519805639982, 0.0015529609518125653, 0.0014814309542998672, 0.0013985770056024194, 0.0013025760417804122, 0.0011947560124099255, 0.0010820700554177165, 0.0009737682994455099, 0.0008792724111117423, 0.0008035543141886592, 0.0007467200048267841, 0.0007070843712426722, 0.0006810522172600031, 0.0006640846258960664, 0.0006498369039036334, 0.0006328482995741069, 0.0006113798008300364, 0.0005850329180248082, 0.0005513951764442027, 0.0005075929220765829, 0.00045191191020421684, 0.000381866586394608, 0.0002926609886344522, 0.00017575320089235902, 2.222678995167371e-05, -0.00017286049842368811, -0.0004076114855706692, -0.0006734256749041378, -0.0009589422843419015, -0.0012518060393631458, -0.0015370890032500029, -0.0018014099914580584, -0.0020392299629747868, -0.002252537989988923, -0.002445684978738427, -0.0026234209071844816, -0.002789720892906189, -0.0029487109277397394, -0.0031049149110913277, -0.0032600359991192818, -0.003412859980016947, -0.003564302111044526, -0.0037175840698182583, -0.0038767470978200436, -0.004044848028570414, -0.00422229478135705, -0.004407356958836317, -0.00459644990041852, -0.004783446900546551, -0.004961186088621616, -0.005123795010149479, -0.0052692340686917305, -0.0054001822136342525, -0.005522563122212887, -0.005642875097692013, -0.005766816902905703, -0.005897196009755135, -0.006033030804246664, -0.0061697461642324924, -0.0062998090870678425, -0.0064154420979321, -0.006512385793030262, -0.0065893870778381824, -0.006648805923759937, -0.0066941771656274796, -0.006729220971465111, -0.006760770920664072, -0.006797946989536285, -0.0068464120849967, -0.00690458994358778, -0.0069643971510231495, -0.0070133269764482975, -0.007038731127977371, -0.007031990215182304, -0.006988416891545057, -0.006908314768224955, -0.006795316934585571, -0.006655268836766481, -0.006495174951851368, -0.0063222721219062805, -0.006145054940134287, -0.005970946047455072, -0.005803165957331657, -0.005639650858938694, -0.005476688966155052, -0.005309131927788258, -0.005128228105604649, -0.004924147855490446, -0.0046890610828995705, -0.004419685807079077, -0.004117434844374657, -0.00378890591673553, -0.003445030888542533, -0.003100086934864521, -0.002768466016277671, -0.0024613640271127224, -0.0021857700776308775, -0.0019446410005912185, -0.001737563987262547, -0.0015602370258420706, -0.0014039230300113559, -0.0012553019914776087, -0.001098126987926662, -0.00091678457101807, -0.0006988050881773233, -0.00043611699948087335, -0.00013001369370613247, 0.0002093720977427438, 0.0005666280048899353, 0.0009263514075428247, 0.0012746050488203764, 0.001601853989996016, 0.0019034090219065547, 0.002181323943659663, 0.0024435780942440033, 0.0027002329006791115, 0.002958805998787284, 0.0032236899714916945, 0.0034963719081133604, 0.0037735109217464924, 0.004047942813485861, 0.004310207907110453, 0.00455131521448493, 0.004765083082020283, 0.004948793910443783, 0.005103650037199259, 0.005233677104115486, 0.0053427438251674175, 0.00543225510045886, 0.005500342231243849, 0.005544254090636969, 0.00556117994710803, 0.005551671143621206, 0.005522624123841524, 0.005485821980983019, 0.005454290192574263, 0.005437037907540798, 0.005437543150037527, 0.00545466085895896, 0.005485611967742443, 0.005524688865989447, 0.005563217215240002, 0.00558915501460433, 0.005590546876192093, 0.005559824872761965, 0.00549562880769372, 0.0053999219089746475, 0.005271926987916231, 0.005109856836497784, 0.00491253612563014, 0.004681265912950039, 0.004419440869241953, 0.0041338419541716576, 0.0038353970739990473, 0.003535649972036481, 0.00324536906555295, 0.0029722019098699093, 0.002717816038057208, 0.0024791210889816284, 0.0022492820862680674, 0.0020209290087223053, 0.0017868450377136469, 0.0015427550533786416, 0.0012895349645987153, 0.0010330489603802562, 0.0007817542064003646, 0.0005448088049888611, 0.0003288490988779813, 0.00013893470168113708, -1.9886969312210567e-05, -0.00014442800602409989, -0.00023249340301845223, -0.0002830658049788326, -0.0002985442988574505, -0.0002828795986715704, -0.0002412570029264316, -0.00018117070430889726, -0.00011054499918827787, -3.836383984889835e-05, 2.6874389732256532e-05, 7.90886624599807e-05, 0.00011696109868353233, 0.00014269859821069986, 0.0001587354054208845, 0.00016897160094231367, 0.0001780656020855531, 0.00019002679619006813, 0.00020623370073735714, 0.00022599940712098032, 0.0002466210862621665, 0.00026514899218454957, 0.0002792071900330484, 0.0002856726059690118, 0.00028435589047148824, 0.00027969060465693474, 0.0002797488996293396, 0.00029270179220475256, 0.0003262207901570946, 0.00038647849578410387, 0.0004762730095535517, 0.0005951629718765616, 0.0007388778030872345, 0.0009022300946526229, 0.0010798630537465215, 0.001265338039956987, 0.0014516320079565048, 0.0016307609621435404, 0.0017971120541915298, 0.0019501609494909644, 0.002095781033858657, 0.0022436389699578285, 0.002403985010460019, 0.0025842590257525444, 0.002784505020827055, 0.002999129006639123, 0.0032194750383496284, 0.003436456900089979, 0.003641346003860235, 0.0038285860791802406, 0.004000429064035416, 0.004166712984442711, 0.004340223036706448, 0.004529376979917288, 0.004735914990305901, 0.004956606775522232, 0.005184021778404713, 0.005407472141087055, 0.0056131090968847275, 0.00578693812713027, 0.005920593161135912, 0.006011961027979851, 0.006063995882868767, 0.006085976958274841, 0.006094765849411488, 0.006111095193773508, 0.0061531998217105865, 0.0062331329099833965, 0.0063513838686048985, 0.006499826908111572, 0.006663870997726917, 0.0068260361440479755, 0.0069695268757641315, 0.007080419920384884, 0.0071480232290923595, 0.007165980990976095, 0.007131299935281277, 0.007043804973363876, 0.006909660995006561, 0.006741621997207403, 0.006555338855832815, 0.006367214024066925, 0.006191250868141651, 0.006039006169885397, 0.00591905415058136, 0.005836525931954384, 0.005791951902210712, 0.005778876133263111, 0.0057839262299239635, 0.005792070180177689, 0.005790844094008207, 0.00577163090929389, 0.0057294717989861965, 0.005662432871758938, 0.005569826811552048, 0.005452016834169626, 0.005312267225235701, 0.00515760388225317, 0.004998812917619944, 0.004850686993449926, 0.004726441111415625, 0.004629211965948343, 0.004551811143755913, 0.004484735894948244, 0.004419596865773201, 0.004350096918642521, 0.004273901227861643, 0.004188924096524715, 0.004089708905667067, 0.003971974831074476, 0.0038354960270226, 0.003682863898575306, 0.003515796037390828, 0.003334315028041601, 0.0031362250447273254, 0.0029191349167376757, 0.002682924037799239, 0.002432666951790452, 0.002175125991925597, 0.0019148250576108694, 0.0016545229591429234, 0.0013962930534034967, 0.0011397419730201364, 0.0008838797220960259, 0.0006274539045989513, 0.0003652673913165927, 9.048764331964776e-05, -0.0002009388990700245, -0.0005080385017208755, -0.0008247190271504223, -0.0011449320008978248, -0.0014643620233982801, -0.0017780039925128222, -0.002078660996630788, -0.002356411889195442, -0.0026022009551525116, -0.002813484985381365, -0.002993820933625102, -0.0031499650795012712, -0.003286320948973298, -0.003404637100175023, -0.003507518908008933, -0.003601779928430915, -0.003694158047437668, -0.0037890670355409384, -0.0038863299414515495, -0.0039800307713449, -0.004060031846165657, -0.004115724004805088, -0.004140493925660849, -0.0041338009759783745, -0.004096988122910261, -0.004031376913189888, -0.003938787151128054, -0.0038226121105253696, -0.0036891470663249493, -0.003544586943462491, -0.0033914989326149225, -0.003229113994166255, -0.0030552439857274294, -0.0028685000725090504, -0.00266671902500093, -0.0024474600795656443, -0.002208814024925232, -0.001951094949617982, -0.0016783119644969702, -0.001396559993736446, -0.0011117140529677272, -0.0008258767193183303, -0.0005406636046245694, -0.00026112981140613556, 5.8072650972462725e-06, 0.000250371202128008, 0.00046188710257411003, 0.0006292472244240344, 0.0007428003009408712, 0.0007985968259163201, 0.0008022526744753122, 0.0007685921736992896, 0.0007159903179854155, 0.0006590635166503489, 0.000607235124334693, 0.0005653667030856013, 0.0005324594094417989, 0.000501887989230454, 0.00046626231051050127, 0.0004189905012026429, 0.0003527730004861951, 0.0002602389140520245, 0.00013641809346154332, -1.839109063439537e-05, -0.00019801700545940548, -0.00039557309355586767, -0.0006077163270674646, -0.0008343906956724823, -0.0010776149574667215, -0.00134017295204103, -0.0016214889474213123, -0.0019174970220774412, -0.002222656039521098, -0.0025267628952860832, -0.002815498970448971, -0.0030792600009590387, -0.003315218025818467, -0.0035237420815974474, -0.003707580966874957, -0.003872324014082551, -0.004024412948638201, -0.004172335844486952, -0.0043242499232292175, -0.0044866809621453285, -0.004665587097406387, -0.004867510870099068, -0.005097195040434599, -0.005355786066502333, -0.005638939794152975, -0.005937838926911354, -0.006243086885660887, -0.006547107826918364, -0.0068456148728728294, -0.007135823834687471, -0.007414503023028374, -0.007676886860281229, -0.007917732000350952, -0.008131151087582111, -0.00831365492194891, -0.008467376232147217, -0.008601524867117405, -0.008729820139706135, -0.008865276351571083, -0.009013675153255463, -0.009169437922537327, -0.009319300763309002, -0.009449006989598274, -0.009549489244818687, -0.009616508148610592, -0.009648243896663189, -0.009645543992519379, -0.009612598456442356, -0.009555311873555183, -0.009478733874857426, -0.009386155754327774, -0.009276779368519783, -0.009148775599896908, -0.009002665989100933, -0.008839298039674759, -0.008656815625727177, -0.008451510220766068, -0.008219950832426548, -0.007961447350680828, -0.007676437962800264, -0.007366465870290995, -0.007033541798591614, -0.006682645995169878, -0.006318266037851572, -0.005943838972598314, -0.005561854224652052, -0.005175366997718811, -0.00478722807019949, -0.004401130136102438, -0.004021810833364725, -0.003653198014944792, -0.0032995170913636684, -0.002964962972328067, -0.002652313094586134, -0.002361173974350095, -0.00208783196285367, -0.001828146050684154, -0.001576822018250823, -0.0013278309488669038, -0.001076831016689539, -0.0008247552905231714, -0.0005795736215077341, -0.0003549300890881568, -0.0001656969980103895, -2.642163963173516e-05, 5.203907858231105e-05, 6.362902058754116e-05, 1.0063649824587628e-05, -9.83469799393788e-05, -0.00024393459898419678, -0.00040358779369853437, -0.0005565906758420169, -0.0006900795269757509, -0.0007986308773979545, -0.0008816398913040757, -0.0009440265130251646, -0.0009939797455444932, -0.0010415849974378943, -0.001096484949812293, -0.0011667880462482572, -0.001257693045772612, -0.001370570040307939, -0.0015036039985716343, -0.0016519969794899225, -0.0018113820115104318, -0.001979158027097583, -0.002155303955078125, -0.0023400080390274525, -0.0025305759627372026, -0.002719973912462592, -0.002899518935009837, -0.0030666959937661886, -0.003226791974157095, -0.003384263953194022, -0.003536755917593837, -0.0036772729363292456, -0.0037972258869558573, -0.0038889660499989986, -0.003948577214032412, -0.003976637031883001, -0.003976713865995407, -0.003955846186727285, -0.0039248219691216946, -0.0038946550339460373, -0.0038746208883821964, -0.003872449044138193, -0.003893123008310795, -0.003936528228223324, -0.003997898194938898, -0.004069535061717033, -0.0041426001116633415, -0.004210156854242086, -0.004268344957381487, -0.004315918777137995, -0.00435365317389369, -0.004382752813398838, -0.0044048200361430645, -0.004422562196850777, -0.004439149051904678, -0.004456301219761372, -0.004472814034670591, -0.004482623189687729, -0.0044742547906935215, -0.004433081950992346, -0.00434820307418704, -0.004216698929667473, -0.004044549074023962, -0.0038438430055975914, -0.0036314709577709436, -0.0034248109441250563, -0.0032356351148337126, -0.0030692529398947954, -0.002926238114014268, -0.0028033049311488867, -0.0026935581117868423, -0.0025885149370878935, -0.0024809979368001223, -0.0023668259382247925, -0.0022414689883589745, -0.002099707955494523, -0.001939116045832634, -0.0017595370300114155, -0.0015653410227969289, -0.0013610109454020858, -0.0011511800112202764, -0.0009415845270268619, -0.0007365052006207407, -0.0005393208120949566, -0.0003513985138852149, -0.00017208029748871922, -6.44820374873234e-07, 0.00016319169662892818, 0.000319535902235657, 0.0004685303138103336, 0.0006111428956501186, 0.0007507234113290906, 0.0008915106882341206, 0.0010372080141678452, 0.0011898139491677284, 0.001350346952676773, 0.0015181789640337229, 0.0016914770239964128, 0.0018664540257304907, 0.0020373519510030746, 0.0021993599366396666, 0.002348921960219741, 0.0024828698951750994, 0.002598135033622384, 0.00269392691552639, 0.002773744985461235, 0.002843396971002221, 0.0029103029519319534, 0.002980790100991726, 0.003059437032788992, 0.003148334100842476, 0.0032476179767400026, 0.0033548660576343536, 0.003464065957814455, 0.003567456966266036, 0.0036560639273375273, 0.003723242087289691, 0.0037667860742658377, 0.0037851170636713505, 0.0037749910261482, 0.003733190940693021, 0.0036590690724551678, 0.003556635929271579, 0.0034355490934103727, 0.0033068840857595205, 0.003176921047270298, 0.003047423902899027, 0.0029166829772293568, 0.002783087082207203, 0.002646719105541706, 0.002507129916921258, 0.0023644519969820976, 0.002218788955360651, 0.0020717140287160873, 0.0019251089543104172, 0.0017804260132834315, 0.0016398660372942686, 0.0015071609523147345, 0.0013866890221834183, 0.0012827409664168954, 0.001199468970298767, 0.0011366179678589106, 0.0010862980270758271, 0.0010347870411351323, 0.0009662691154517233, 0.0008665216155350208, 0.000727216771338135, 0.000548495096154511, 0.00034126261016353965, 0.0001268477935809642, -7.263563020387664e-05, -0.00024257809855043888, -0.000377069489331916, -0.0004793883999809623, -0.000558434403501451, -0.0006276848143897951, -0.000701822922565043, -0.0007914244779385626, -0.0009010339854285121, -0.001030461979098618, -0.0011719129979610443, -0.001311706961132586, -0.0014389980351552367, -0.001547118998132646, -0.0016338430577889085, -0.001699791057035327, -0.0017470340244472027, -0.001779851969331503, -0.0018033840460702777, -0.0018243020167574286, -0.0018486280459910631, -0.0018800690304487944, -0.0019200750393792987, -0.001969225937500596, -0.0020290170796215534, -0.002102901926264167, -0.0021937519777566195, -0.0023021239321678877, -0.0024256741162389517, -0.0025592739693820477, -0.0026969679165631533, -0.0028303160797804594, -0.0029509488958865404, -0.003055104985833168, -0.003141911933198571, -0.003212240058928728, -0.003268938045948744, -0.0033147670328617096, -0.003352134022861719, -0.0033838769886642694, -0.003415169892832637, -0.0034500400070101023, -0.0034905080683529377, -0.0035372721031308174, -0.003587838029488921, -0.0036384379491209984, -0.0036850098986178637, -0.00372517597861588, -0.003758349921554327, -0.003786162007600069, -0.003811900969594717, -0.003838975913822651, -0.003868834115564823, -0.003900685114786029, -0.003931765910238028, -0.003956940956413746, -0.0039711641147732735, -0.003970639780163765, -0.003954894840717316, -0.003926890902221203, -0.003891752101480961, -0.003857094096019864, -0.003830478060990572, -0.0038180199917405844, -0.0038220910355448723, -0.003839618992060423, -0.003861896926537156, -0.0038769340608268976, -0.003871652064844966, -0.0038357640150934458, -0.003763801883906126, -0.0036568089853972197, -0.00352186500094831, -0.0033709739800542593, -0.0032194301020354033, -0.003082755021750927, -0.002973881084471941, -0.002902100095525384, -0.0028711610939353704, -0.002878938103094697, -0.0029178299009799957, -0.002977275988087058, -0.0030454678926616907, -0.0031120909843593836, -0.0031686800066381693, -0.0032077189534902573, -0.003223575884476304, -0.003212671959772706, -0.0031744330190122128, -0.0031114460434764624, -0.0030296100303530693, -0.002940189093351364, -0.0028587100096046925, -0.0028023249469697475, -0.0027864770963788033, -0.0028225008863955736, -0.0029141989070922136, -0.003055565059185028, -0.0032342120539397, -0.0034331900533288717, -0.003634139895439148, -0.003822141094133258, -0.003987892065197229, -0.004129427019506693, -0.004250319208949804, -0.00435556098818779, -0.004450844135135412, -0.004540126770734787, -0.004625400993973017, -0.004706198815256357, -0.004782191012054682, -0.00485558807849884, -0.004933340009301901, -0.005022854078561068, -0.005128986202180386, -0.005256071221083403, -0.0054076057858765125, -0.005587058141827583, -0.005796570796519518, -0.006037055980414152, -0.006306477822363377, -0.006599714048206806, -0.006911782082170248, -0.0072376541793346405, -0.007571650203317404, -0.007907776162028313, -0.00824043620377779, -0.008563763462007046, -0.0088737141340971, -0.009167580865323544, -0.009440688416361809, -0.009687146171927452, -0.00990010891109705, -0.010074679739773273, -0.010212750174105167, -0.010319620370864868, -0.010402490384876728, -0.01046966016292572, -0.010529830120503902, -0.010589109733700752, -0.010648390278220177, -0.010703399777412415, -0.010747999884188175, -0.010779060423374176, -0.010794620029628277, -0.010793659836053848, -0.01077624037861824, -0.01074496004730463, -0.01070442982017994, -0.01065846998244524, -0.010607689619064331, -0.010547650046646595, -0.010469360277056694, -0.010361379943788052, -0.01021603960543871, -0.01003270037472248, -0.009817375801503658, -0.009578379802405834, -0.009321358986198902, -0.009048514068126678, -0.008761364035308361, -0.008462642319500446, -0.008155779913067818, -0.007844297215342522, -0.007530224043875933, -0.007212440948933363, -0.006889644078910351, -0.006563834846019745, -0.006240755785256624, -0.005924760829657316, -0.005615750793367624, -0.005308188032358885, -0.004993141163140535, -0.004661210812628269, -0.004306402988731861, -0.0039261761121451855, -0.003521841950714588, -0.003095177933573723, -0.0026451940648257732, -0.0021680810023099184, -0.001660478999838233, -0.0011237770086154342, -0.0005642084288410842, 9.844367014011368e-06, 0.0005878055817447603, 0.0011574180098250508, 0.001708748983219266, 0.002237096894532442, 0.002739554038271308, 0.003213295014575124, 0.0036571710370481014, 0.00407232902944088, 0.004461992997676134, 0.0048310537822544575, 0.005182170774787664, 0.00551638612523675, 0.00583414314314723, 0.006135018076747656, 0.006416195072233677, 0.006673077121376991, 0.006898597814142704, 0.007087016943842173, 0.0072344401851296425, 0.007337450049817562, 0.00739565584808588, 0.007415723986923695, 0.007411071099340916, 0.007399342022836208, 0.007396947126835585, 0.007411933038383722, 0.0074469828978180885, 0.007499540224671364, 0.007556017022579908, 0.007597126066684723, 0.007604384794831276, 0.007562567014247179, 0.007463363930583, 0.007308330852538347, 0.007106637116521597, 0.006873320788145065, 0.006623794790357351, 0.0063681951723992825, 0.006108923815190792, 0.0058426507748663425, 0.005566282197833061, 0.005280512850731611, 0.004989758133888245, 0.004700417164713144, 0.0044165379367768764, 0.00413811020553112, 0.003863302990794182, 0.003589139087125659, 0.003314046887680888, 0.003039757953956723, 0.002771718893200159, 0.0025184929836541414, 0.00228946004062891, 0.0020911889150738716, 0.0019284050213173032, 0.0018039740389212966, 0.0017154579982161522, 0.0016558630159124732, 0.0016170799499377608, 0.0015901699662208557, 0.00156625104136765, 0.0015416579553857446, 0.0015150830149650574, 0.0014832729939371347, 0.00144582602661103, 0.0014060060493648052, 0.0013654630165547132, 0.0013198739616200328, 0.0012643360532820225, 0.0011961329728364944, 0.001114794984459877, 0.001021350035443902, 0.000918246281798929, 0.0008058248786255717, 0.000682077428791672, 0.0005462893168441951, 0.0003985443036071956, 0.0002420821983832866, 8.205018093576655e-05, -7.748186180833727e-05, -0.0002302744978806004, -0.0003667194105219096, -0.00047341189929284155, -0.0005369725986383855, -0.0005505986046046019, -0.0005181874730624259, -0.00045205288915894926, -0.00036585520138032734, -0.00026978898677043617, -0.00016941399371717125, -6.556422886205837e-05, 4.5524291635956615e-05, 0.00016916969616431743, 0.00030929830973036587, 0.00046504350029863417, 0.0006316415965557098, 0.0008047731244005263, 0.000982123427093029, 0.0011622400488704443, 0.001343423966318369, 0.0015260030049830675, 0.0017131409840658307, 0.0019076770404353738, 0.0021113241091370583, 0.0023213329259306192, 0.0025289910845458508, 0.0027230209670960903, 0.002895503072068095, 0.003043504897505045, 0.0031682730186730623, 0.0032762489281594753, 0.0033770669251680374, 0.0034814788959920406, 0.003596387105062604, 0.003720497014001012, 0.003847721964120865, 0.003968268167227507, 0.0040719821117818356, 0.004152887035161257, 0.00421132380142808, 0.004252794198691845, 0.004284447990357876, 0.0043143341317772865, 0.004349921829998493, 0.004398256074637175, 0.00446311105042696, 0.0045423610135912895, 0.004628797061741352, 0.004711509216576815, 0.004780322778970003, 0.004830420948565006, 0.004864790942519903, 0.004886236973106861, 0.004892504774034023, 0.004880115855485201, 0.004844973795115948, 0.004784250166267157, 0.00469485018402338, 0.004574811086058617, 0.0044242930598556995, 0.004242638126015663, 0.004031448159366846, 0.0037967900279909372, 0.003549447050318122, 0.0033054170198738575, 0.003081049071624875, 0.002887411043047905, 0.002731726039201021, 0.0026183261070400476, 0.0025496839080005884, 0.002525466028600931, 0.002539265900850296, 0.002579252002760768, 0.002629321999847889, 0.002674971939995885, 0.0027068080380558968, 0.0027189310640096664, 0.002707601059228182, 0.002672564936801791, 0.0026196360122412443, 0.0025605119299143553, 0.002509560901671648, 0.0024807280860841274, 0.0024840340483933687, 0.002525290008634329, 0.0026030540466308594, 0.0027107009664177895, 0.002841369016095996, 0.0029898779466748238, 0.0031503511127084494, 0.0033159360755234957, 0.003478395054116845, 0.003629653947427869, 0.0037638279609382153, 0.0038800430484116077, 0.003981363959610462, 0.004072216805070639, 0.0041588651947677135, 0.00424799881875515, 0.00434460211545229, 0.004454107955098152, 0.004584508016705513, 0.004745625890791416, 0.0049433521926403046, 0.00517491577193141, 0.005433504935353994, 0.005709647201001644, 0.005993593018501997, 0.006275712978094816, 0.006547317840158939, 0.006800503935664892, 0.007026719860732555, 0.007216183003038168, 0.007361448835581541, 0.007460169959813356, 0.0075142099522054195, 0.007526541128754616, 0.00749980378895998, 0.007437680847942829, 0.00734609505161643, 0.007233100943267345, 0.007105897180736065, 0.00696921581402421, 0.0068271588534116745, 0.006682351231575012, 0.006531890016049147, 0.006369569804519415, 0.0061900559812784195, 0.0059907869435846806, 0.005771899130195379, 0.005536907818168402, 0.00528913177549839, 0.00502766715362668, 0.004750237800180912, 0.004456841852515936, 0.004149014130234718, 0.00383044988848269, 0.0035086360294371843, 0.003189393086358905, 0.0028705240692943335, 0.002546747913584113, 0.0022153339814394712, 0.0018791770562529564, 0.0015464740572497249, 0.0012273859465494752, 0.0009293382172472775, 0.0006558034219779074, 0.00040664890548214316, 0.0001765252964105457, -4.1148341551888734e-05, -0.00025178660871461034, -0.00046131189446896315, -0.000674157403409481, -0.0008939031977206469, -0.001124058966524899, -0.0013650290202349424, -0.0016117229824885726, -0.0018541530007496476, -0.0020787110552191734, -0.0022728319745510817, -0.002429927932098508, -0.0025468498934060335, -0.002623002976179123, -0.0026614039670675993, -0.002665749052539468, -0.0026393160223960876, -0.0025859109591692686, -0.002510471036657691, -0.0024161450564861298, -0.002302482957020402, -0.002167836995795369, -0.002012695884332061, -0.0018402510322630405, -0.0016535449540242553, -0.0014539819676429033, -0.0012411250500008464, -0.001016531023196876, -0.0007847733213566244, -0.0005506132147274911, -0.00031848440994508564, -9.075700654648244e-05, 0.00013419659808278084, 0.0003614604938775301, 0.0005965044256299734, 0.000843825691845268, 0.0011074820067733526, 0.0013878720346838236, 0.0016827969811856747, 0.0019877550657838583, 0.002296348102390766, 0.0025997059419751167, 0.0028882259503006935, 0.0031534270383417606, 0.0033921590074896812, 0.003607355058193207, 0.0038064720574766397, 0.0039990427903831005, 0.004194927867501974, 0.0044029089622199535, 0.004631995223462582, 0.004890704993158579, 0.005183272995054722, 0.005507849156856537, 0.0058560678735375404, 0.006214782129973173, 0.006568313110619783, 0.006900180131196976, 0.0071948510594666, 0.007438831962645054, 0.007623505778610706, 0.007747345138341188, 0.007817414589226246, 0.007847628556191921, 0.007856928743422031, 0.007866669446229935, 0.007896183989942074, 0.007958805188536644, 0.008059770800173283, 0.00819696020334959, 0.008361982181668282, 0.008543870411813259, 0.008730136789381504, 0.008909345604479313, 0.009071962907910347, 0.009211313910782337, 0.009323257021605968, 0.009405718185007572, 0.00945814698934555, 0.009479643777012825, 0.009472008794546127, 0.00944000855088234, 0.009388072416186333, 0.00931764580309391, 0.00922803208231926, 0.009116721339523792, 0.008983032777905464, 0.008830543607473373, 0.008665597066283226, 0.008495880290865898, 0.008330876007676125, 0.008184042759239674, 0.008070389740169048, 0.007999066263437271, 0.007971128448843956, 0.007978991605341434, 0.00800981093198061, 0.00804623682051897, 0.008069047704339027, 0.008066055364906788, 0.008035639300942421, 0.007984204217791557, 0.007920457981526852, 0.007852344773709774, 0.0077839200384914875, 0.007714258041232824, 0.0076416609808802605, 0.007567975204437971, 0.007498355116695166, 0.007437941152602434, 0.007385736797004938, 0.007335339207202196, 0.007274752948433161, 0.007192532066255808, 0.00708062993362546, 0.006935729179531336, 0.006759794894605875, 0.006560856010764837, 0.006350071169435978, 0.006137874908745289, 0.005930895917117596, 0.005729285068809986, 0.005530320107936859, 0.005331229884177446, 0.005130634177476168, 0.004927477799355984, 0.00472134817391634, 0.00451271515339613, 0.004303665831685066, 0.004097921773791313, 0.0038997631054371595, 0.0037138250190764666, 0.0035438518971204758, 0.003391468897461891, 0.0032549730967730284, 0.0031286869198083878, 0.0030020989943295717, 0.0028648129664361477, 0.0027096939738839865, 0.002532375045120716, 0.0023293730337172747, 0.0021013449877500534, 0.0018547120271250606, 0.001599675975739956, 0.0013474259758368134, 0.0011084240395575762, 0.0008894582279026508, 0.000693088280968368, 0.0005173574900254607, 0.00035752818803302944, 0.00020679610315710306, 5.8355319197289646e-05, -9.32116963667795e-05, -0.00025002050097100437, -0.0004125871928408742, -0.0005821387167088687, -0.0007577858050353825, -0.0009374797227792442, -0.0011189739452674985, -0.001300796982832253, -0.001479597995057702, -0.0016493999864906073, -0.0018050529761239886, -0.001945098047144711, -0.002074776915833354, -0.0022034260910004377, -0.0023409519344568253, -0.0024960769806057215, -0.002673269947990775, -0.002870656084269285, -0.0030811510514467955, -0.0032954919151961803, -0.003506297944113612, -0.0037077460438013077, -0.0038959761150181293, -0.004068746231496334, -0.004226665012538433, -0.0043710279278457165, -0.004501222167164087, -0.0046138400211930275, -0.004705133847892284, -0.004774465225636959, -0.00482217688113451, -0.004848895128816366, -0.004858416970819235, -0.004856377840042114, -0.004849820863455534, -0.004844356793910265, -0.004843359813094139, -0.004847678821533918, -0.004857304040342569, -0.004873754922300577, -0.004896280821412802, -0.0049196030013263226, -0.004935857839882374, -0.004935921169817448, -0.0049118660390377045, -0.004857222083956003, -0.004769069142639637, -0.004650196060538292, -0.0045047481544315815, -0.004334933124482632, -0.004142589867115021, -0.003932487219572067, -0.0037098880857229233, -0.003479671897366643, -0.0032472889870405197, -0.0030168381053954363, -0.0027884389273822308, -0.0025588308926671743, -0.0023244349285960197, -0.0020834479946643114, -0.0018352889455854893, -0.0015795249491930008, -0.001314320950768888, -0.0010358899598941207, -0.0007403441122733057, -0.00042647900409065187, -9.572364797350019e-05, 0.00025308941258117557, 0.0006256134947761893, 0.0010274129454046488, 0.00146127596963197, 0.0019279109546914697, 0.002423491096124053, 0.0029388319235295057, 0.00346604292280972, 0.004000171087682247, 0.004539546091109514, 0.005082557909190655, 0.005627965088933706, 0.0061737229116261005, 0.0067170108668506145, 0.007252876181155443, 0.0077746352180838585, 0.008274485357105732, 0.00874640978872776, 0.009187603369355202, 0.009596535935997963, 0.009970825165510178, 0.010310440324246883, 0.010619300417602062, 0.010903400368988514, 0.011165370233356953, 0.01140195969492197, 0.011605910025537014, 0.011772310361266136, 0.011901970021426678, 0.012000460177659988, 0.012073390185832977, 0.012120679952204227, 0.012141830287873745, 0.012140190228819847, 0.01212012954056263, 0.012083129957318306, 0.012027510441839695, 0.011953080072999, 0.011862380430102348, 0.011759289540350437, 0.01164788007736206, 0.011532739736139774, 0.0114164799451828, 0.011297089979052544, 0.011169170029461384, 0.011027369648218155, 0.01086840033531189, 0.010689360089600086, 0.010488609783351421, 0.010264740325510502, 0.010013939812779427, 0.009730028919875622, 0.009407402947545052, 0.009044603444635868, 0.008644879795610905, 0.008214211091399193, 0.007759586907923222, 0.007289492059499025, 0.006814002990722656, 0.006341588217765093, 0.0058790650218725204, 0.005430764984339476, 0.004999734926968813, 0.004588800016790628, 0.004198696929961443, 0.003827182110399008, 0.003473218996077776, 0.003137239022180438, 0.0028189150616526604, 0.002515074098482728, 0.0022223240230232477, 0.001938113011419773, 0.0016599140362814069, 0.001382702961564064, 0.001102310954593122, 0.0008196611888706684, 0.0005403275135904551, 0.0002730170963332057, 2.4017799660214223e-05, -0.0002045680012088269, -0.00040993568836711347, -0.0005862694815732539, -0.0007263525039888918, -0.0008268979727290571, -0.0008875068742781878, -0.0009112306288443506, -0.0009055790724232793, -0.0008832925232127309, -0.0008599084103479981, -0.0008480416727252305, -0.000853939272928983, -0.0008773311274126172, -0.0009139140020124614, -0.0009583028731867671, -0.0010058520128950477, -0.001052694977261126, -0.0010968559654429555, -0.0011395210167393088, -0.001183390966616571, -0.001232272945344448, -0.0012868300545960665, -0.0013420480536296964, -0.0013875779695808887, -0.0014127009781077504, -0.001412414014339447, -0.0013839700259268284, -0.00132590695284307, -0.0012418710393831134, -0.001142362947575748, -0.0010437059681862593, -0.0009648572886362672, -0.0009217461920343339, -0.0009239831124432385, -0.0009755815262906253, -0.001072610029950738, -0.001205208944156766, -0.0013594389893114567, -0.001519281999208033, -0.0016715510282665491, -0.0018087440403178334, -0.0019316569669172168, -0.0020473410841077566, -0.002166135935112834, -0.0022990319412201643, -0.0024551479145884514, -0.0026404550299048424, -0.002857021987438202, -0.0031035649590194225, -0.0033744669053703547, -0.003661941969767213, -0.003959531895816326, -0.004265535157173872, -0.004581382963806391, -0.00490933284163475, -0.0052505480125546455, -0.005603870842605829, -0.005966547876596451, -0.006336113903671503, -0.006709645036607981, -0.007083909120410681, -0.007455537095665932, -0.00782250240445137, -0.008183714002370834, -0.008537819609045982, -0.008881199173629284, -0.009208680130541325, -0.009514177218079567, -0.00979082565754652, -0.010033530183136463, -0.010243000462651253, -0.010427829809486866, -0.010600849986076355, -0.010773959569633007, -0.010955650359392166, -0.011149040423333645, -0.01135443989187479, -0.011570420116186142, -0.01179272960871458, -0.012014330364763737, -0.012226860038936138, -0.012421660125255585, -0.012591030448675156, -0.01272668968886137, -0.012821890413761139, -0.012876180000603199, -0.012893239967525005, -0.012879160232841969, -0.012839600443840027, -0.01277828961610794, -0.012699680402874947, -0.012609199620783329, -0.012513370253145695, -0.012418380007147789, -0.01232870016247034, -0.012244230136275291, -0.012159920297563076, -0.012069189921021461, -0.011963429860770702, -0.011831659823656082, -0.011662350036203861, -0.011448689736425877, -0.011193029582500458, -0.010906339623034, -0.010603910312056541, -0.0103005301207304, -0.010006359778344631, -0.009723369032144547, -0.009446551091969013, -0.009168284945189953, -0.008880935609340668, -0.008580118417739868, -0.008264710195362568, -0.00793737918138504, -0.007601973135024309, -0.0072610448114573956, -0.006915547885000706, -0.006567317992448807, -0.006221462972462177, -0.005884580779820681, -0.005561222787946463, -0.005254807882010937, -0.004966231063008308, -0.00469334376975894, -0.004427414853125811, -0.004156060051172972, -0.0038675449322909117, -0.003555272938683629, -0.0032191830687224865, -0.00286289700306952, -0.0024914899840950966, -0.002111959969624877, -0.0017343750223517418, -0.0013709960039705038, -0.0010337800486013293, -0.0007288947235792875, -0.00045297539327293634, -0.0001948371937032789, 6.053292963770218e-05, 0.00032660950091667473, 0.0006124817882664502, 0.0009185482049360871, 0.0012378570390865207, 0.001564068952575326, 0.001893679960630834, 0.00221976893953979, 0.0025295810773968697, 0.0028063540812581778, 0.0030363500118255615, 0.0032129939645528793, 0.0033374920021742582, 0.0034165910910815, 0.0034606740809977055, 0.0034813599195331335, 0.0034906489308923483, 0.0034994708839803934, 0.0035182919818907976, 0.0035558980889618397, 0.00361520703881979, 0.003695945953950286, 0.003795407945290208, 0.003907761070877314, 0.004024668131023645, 0.004136492032557726, 0.00423603318631649, 0.004319535102695227, 0.004388007801026106, 0.004446967970579863, 0.004506730008870363, 0.004578608088195324, 0.004670130088925362, 0.004783207084983587, 0.004916885867714882, 0.005072338972240686, 0.0052502150647342205, 0.005445058923214674, 0.005647997837513685, 0.0058472538366913795, 0.006033805198967457, 0.006203448865562677, 0.006356086116284132, 0.006493364926427603, 0.006616184953600168, 0.00672631710767746, 0.006828151177614927, 0.006926864851266146, 0.00702766003087163, 0.00713443523272872, 0.007245180197060108, 0.007350157015025616, 0.0074378130957484245, 0.0074975029565393925, 0.007523225154727697, 0.0075155640952289104, 0.007480955217033625, 0.007429860066622496, 0.007374675944447517, 0.007325944025069475, 0.007291014771908522, 0.007274349220097065, 0.007278814911842346, 0.007303480990231037, 0.00734067615121603, 0.007375959772616625, 0.007392701227217913, 0.007376622874289751, 0.0073180608451366425, 0.007212699856609106, 0.007062389049679041, 0.006874069105833769, 0.006658234167844057, 0.006426422856748104, 0.006187422201037407, 0.005946684163063765, 0.005708063021302223, 0.005477167200297117, 0.005258824210613966, 0.0050553129985928535, 0.004865483846515417, 0.004686030093580484, 0.00451247813180089, 0.004341073799878359, 0.0041698371060192585, 0.003999247215688229, 0.0038318370934575796, 0.0036699529737234116, 0.0035143019631505013, 0.0033659508917480707, 0.0032252310775220394, 0.0030887098982930183, 0.002950953086838126, 0.0028050069231539965, 0.0026465500704944134, 0.0024765098933130503, 0.002302831970155239, 0.002139424905180931, 0.0020022860262542963, 0.0019031900446861982, 0.001843431033194065, 0.0018170169787481427, 0.0018140010070055723, 0.0018227760447189212, 0.0018298060167580843, 0.001824249979108572, 0.001800440950319171, 0.0017588060582056642, 0.0017049240414053202, 0.001646692049689591, 0.0015920409932732582, 0.0015461919829249382, 0.0015101350145414472, 0.0014830559957772493, 0.0014644870534539223, 0.0014547760365530849, 0.0014553129440173507, 0.0014683579793199897, 0.0014954740181565285, 0.0015387580497190356, 0.0016008010134100914, 0.0016811899840831757, 0.0017765579978004098, 0.0018830789485946298, 0.001998485065996647, 0.0021213360596448183, 0.0022511850111186504, 0.0023900240194052458, 0.0025398049037903547, 0.0026982189156115055, 0.0028592830058187246, 0.0030166239012032747, 0.0031672129407525063, 0.0033076528925448656, 0.003431475954130292, 0.003535008989274502, 0.0036229740362614393, 0.003707712981849909, 0.003804486943408847, 0.003926115110516548, 0.0040784478187561035, 0.004260154906660318, 0.0044630891643464565, 0.0046766651794314384, 0.004889281932264566, 0.005089594051241875, 0.00526665011420846, 0.005413777194917202, 0.0055298940278589725, 0.005618747789412737, 0.005687003023922443, 0.005742535926401615, 0.0057909851893782616, 0.005834090057760477, 0.005872718058526516, 0.005910051986575127, 0.005950840190052986, 0.005997340194880962, 0.006047029048204422, 0.006096918135881424, 0.006146375089883804, 0.006192873232066631, 0.0062310281209647655, 0.006256944965571165, 0.006269981153309345, 0.006270762998610735, 0.006260876078158617, 0.0062415748834609985, 0.006212296895682812, 0.00617374200373888, 0.006127775181084871, 0.0060754078440368176, 0.006017690058797598, 0.005955791100859642, 0.00588958477601409, 0.005817533005028963, 0.005734569858759642, 0.0056337639689445496, 0.0055095660500228405, 0.005358742084354162, 0.005181643180549145, 0.0049833860248327255, 0.004775486886501312, 0.004574184771627188, 0.004393810871988535, 0.004242206923663616, 0.004119101911783218, 0.004016220103949308, 0.003922127187252045, 0.0038236009422689676, 0.00371062895283103, 0.003579607931897044, 0.0034316719975322485, 0.003270393004640937, 0.0031004250049591064, 0.002925537060946226, 0.0027479929849505424, 0.0025704388972371817, 0.0023958319798111916, 0.0022269131150096655, 0.00206645205616951, 0.0019174630288034678, 0.001780729042366147, 0.0016559589421376586, 0.0015441919676959515, 0.001446870039217174, 0.001365288975648582, 0.001298106973990798, 0.0012397109530866146, 0.0011849619913846254, 0.0011303520295768976, 0.0010740129509940743, 0.001015890040434897, 0.0009572735289111733, 0.0008999155834317207, 0.0008449078886769712, 0.000791871570982039, 0.0007384967757388949, 0.0006825255113653839, 0.000622642575763166, 0.0005578208947554231, 0.0004886828828603029, 0.000417859700974077, 0.00035008700797334313, 0.0002894772042054683, 0.00023946509463712573, 0.00020183839660603553, 0.00017658559954725206, 0.00016086810501292348, 0.000149606799823232, 0.00013434530410449952, 0.00010391510295448825, 4.900705971522257e-05, -3.3803098631324247e-05, -0.00014401449880097061, -0.0002800665097311139, -0.0004384999047033489, -0.000612017116509378, -0.0007915967144072056, -0.0009673450840637088, -0.0011314869625493884, -0.0012800239492207766, -0.001415360951796174, -0.0015430550556629896, -0.0016701120184734464, -0.0018043579766526818, -0.0019507290562614799, -0.0021085930056869984, -0.002272553974762559, -0.0024345279671251774, -0.0025859950110316277, -0.0027217420283704996, -0.002840162953361869, -0.002943475032225251, -0.0030360259115695953, -0.003121756948530674, -0.003205025102943182, -0.0032911000307649374, -0.0033849019091576338, -0.003489387920126319, -0.0036038109101355076, -0.0037250949535518885, -0.0038482239469885826, -0.003968026954680681, -0.004083964042365551, -0.0041988808661699295, -0.004319436848163605, -0.004450250882655382, -0.004591932985931635, -0.004740457981824875, -0.004890398122370243, -0.005038035102188587, -0.005180785898119211, -0.005319326184689999, -0.005457359831780195, -0.005600663833320141, -0.005754155106842518, -0.005918850190937519, -0.0060901460237801075, -0.0062584360130131245, -0.00641676178202033, -0.0065652597695589066, -0.006706944201141596, -0.006842183880507946, -0.006970723159611225, -0.007095642853528261, -0.007220290135592222, -0.007346066180616617, -0.007470616139471531, -0.007588899228721857, -0.007694859988987446, -0.007785233203321695, -0.007862390950322151, -0.007931454107165337, -0.007996373809874058, -0.008057196624577045, -0.008113401010632515, -0.008168810978531837, -0.008229328319430351, -0.008295906707644463, -0.008363301865756512, -0.008424894884228706, -0.0084750447422266, -0.008512662723660469, -0.008539708331227303, -0.008557957597076893, -0.008571000769734383, -0.008580543100833893, -0.008585730567574501, -0.008581962436437607, -0.008564100600779057, -0.008526523597538471, -0.008464147336781025, -0.00837605632841587, -0.008266052231192589, -0.008139819838106632, -0.008002858608961105, -0.007859398610889912, -0.007713045924901962, -0.007567673921585083, -0.00742444209754467, -0.007281640078872442, -0.007137254811823368, -0.0069912332110106945, -0.006846384145319462, -0.0067078350111842155, -0.006582279223948717, -0.0064745680429041386, -0.0063848658464848995, -0.0063102152198553085, -0.006247565150260925, -0.00619537103921175, -0.00615212507545948, -0.006113693118095398, -0.006072739139199257, -0.006019641179591417, -0.005946263205260038, -0.005850120913237333, -0.005734588950872421, -0.005607395898550749, -0.005478803068399429, -0.005357726011425257, -0.005248800851404667, -0.005151817109435797, -0.005062054842710495, -0.0049736639484763145, -0.004882000852376223, -0.00478530116379261, -0.00468373904004693, -0.004579300060868263, -0.004472469910979271, -0.00436204019933939, -0.004248653072863817, -0.004138747230172157, -0.004042723216116428, -0.0039689610712230206, -0.003920875955373049, -0.0038973239716142416, -0.0038914100732654333, -0.0038956899661570787, -0.003906317986547947, -0.003922254778444767, -0.003947305027395487, -0.003988970071077347, -0.004053561016917229, -0.004144656006246805, -0.004263576120138168, -0.004408115986734629, -0.004573367070406675, -0.004752185195684433, -0.0049341279082000256, -0.00510710384696722, -0.005260984878987074, -0.0053909700363874435, -0.005501023028045893, -0.005599136929959059, -0.005692796781659126, -0.00578588480129838, -0.005877489224076271, -0.005964632146060467, -0.00604231795296073, -0.006103782914578915, -0.0061411671340465546, -0.006150214001536369, -0.006133075803518295, -0.006095035932958126, -0.00604413915425539, -0.005987232085317373, -0.005929084029048681, -0.0058716111816465855, -0.005814800038933754, -0.00575815886259079, -0.005701403133571148, -0.00564158707857132, -0.005571584217250347, -0.005484092980623245, -0.0053740208968520164, -0.005240981932729483, -0.005089105106890202, -0.004923095926642418, -0.004744790028780699, -0.0045529319904744625, -0.004342828877270222, -0.004107378888875246, -0.003839801996946335, -0.003536726115271449, -0.0031997771002352238, -0.0028344730380922556, -0.002449217950925231, -0.002053949050605297, -0.001659017987549305, -0.001271659042686224, -0.0008929917821660638, -0.0005188505165278912, -0.0001419549953425303, 0.0002439542004140094, 0.0006425419123843312, 0.0010529380524531007, 0.001470818999223411, 0.0018903829623013735, 0.002308068098500371, 0.0027219669427722692, 0.0031325079035013914, 0.003540480975061655, 0.003947487100958824, 0.004355086944997311, 0.004761409014463425, 0.005160640925168991, 0.005544053856283426, 0.005901340860873461, 0.006221670191735029, 0.006497005932033062, 0.006725634913891554, 0.006910494063049555, 0.007056461181491613, 0.007170639932155609, 0.007260628044605255, 0.007330894935876131, 0.0073833828791975975, 0.007417337968945503, 0.007430917117744684, 0.0074213529005646706, 0.007387456018477678, 0.0073286499828100204, 0.007245216052979231, 0.007139727007597685, 0.007017055060714483, 0.006883217953145504, 0.0067420899868011475, 0.006592308171093464, 0.006430450826883316, 0.006253671832382679, 0.006059679202735424, 0.005847101099789143, 0.0056144618429243565, 0.005359373055398464, 0.005079666152596474, 0.00477564986795187, 0.004451189190149307, 0.004113273229449987, 0.0037683609407395124, 0.0034208849538117647, 0.003071758896112442, 0.002719936892390251, 0.00236537610180676, 0.0020095070358365774, 0.0016556510236114264, 0.0013079129857942462, 0.000969614484347403, 0.0006422554142773151, 0.00032563498825766146, 1.8200560589320958e-05, -0.0002811049052979797, -0.0005715335137210786, -0.000850957992952317, -0.0011178459972143173, -0.0013732770457863808, -0.001617736998014152, -0.0018487339839339256, -0.002062099054455757, -0.0022556630428880453, -0.002428831998258829, -0.0025808559730648994, -0.0027106909547001123, -0.002817742060869932, -0.002902266103774309, -0.0029646409675478935, -0.0030069819185882807, -0.0030332980677485466, -0.0030487258918583393, -0.003057424910366535, -0.00306293205358088, -0.003066397039219737, -0.0030661579221487045, -0.0030590470414608717, -0.0030439419206231833, -0.003022893099114299, -0.002996578114107251, -0.0029625750612467527, -0.002916967961937189, -0.002857594983652234, -0.0027851059567183256, -0.0027040699496865273, -0.002619815059006214, -0.002535017905756831, -0.0024490379728376865, -0.0023586119059473276, -0.0022608148865401745, -0.002154347952455282, -0.0020392739679664373, -0.0019150619627907872, -0.001779443002305925, -0.0016312970547005534, -0.0014704560162499547, -0.0012976420111954212, -0.001114540034905076, -0.0009235054021701217, -0.0007263246225193143, -0.0005261803744360805, -0.0003296328941360116, -0.00014373719750437886, 2.6170300770900212e-05, 0.00017860760272014886, 0.0003161614004056901, 0.0004421308112796396, 0.0005559924175031483, 0.0006532701081596315, 0.0007274319068528712, 0.0007736412226222456, 0.0007902372744865716, 0.0007772095268592238, 0.000734152621589601, 0.0006628957926295698, 0.0005686507793143392, 0.0004587121948134154, 0.0003397235122974962, 0.0002177088026655838, 9.791606134967878e-05, -1.4769500012334902e-05, -0.00011857839854201302, -0.00021537620341405272, -0.0003082547918893397, -0.0004010942066088319, -0.0004959192010574043, -0.0005937623791396618, -0.0006948295049369335, -0.0007967168930917978, -0.0008966164896264672, -0.0009914733236655593, -0.001079921959899366, -0.001166015979833901, -0.0012593260034918785, -0.001370641984976828, -0.0015074419789016247, -0.0016715589445084333, -0.001858141040429473, -0.002057932084426284, -0.002262287074699998, -0.0024647200480103493, -0.0026568749453872442, -0.002830313052982092, -0.002983293030411005, -0.00312033505178988, -0.003246121108531952, -0.0033637341111898422, -0.0034754390362650156, -0.0035809900145977736, -0.003677159082144499, -0.0037605890538543463, -0.003829641966149211, -0.00388701306656003, -0.0039390381425619125, -0.003993466030806303, -0.0040565840899944305, -0.004131331108510494, -0.004217354115098715, -0.004312026780098677, -0.004412556998431683, -0.004517427179962397, -0.004622055217623711, -0.004718611016869545, -0.0047987219877541065, -0.004854802042245865, -0.00487927719950676, -0.004865867085754871, -0.0048133558593690395, -0.004725527949631214, -0.004613080061972141, -0.004489774815738201, -0.004366355016827583, -0.0042484961450099945, -0.004136903211474419, -0.0040308209136128426, -0.00393061013892293, -0.003837602911517024, -0.003750791074708104, -0.003664728021249175, -0.0035728150978684425, -0.003469852963462472, -0.003350293030962348, -0.0032085429411381483, -0.0030411980114877224, -0.0028476009611040354, -0.0026279110461473465, -0.002385210944339633, -0.0021252608858048916, -0.0018529710359871387, -0.0015717160422354937, -0.0012847620528191328, -0.0009992121485993266, -0.0007237925892695785, -0.0004652384086512029, -0.00022637119400314987, -5.934028195042629e-06, 0.00020074620260857046, 0.00040011509554460645, 0.0005980920977890491, 0.0007991651073098183, 0.0010053960140794516, 0.0012174659641459584, 0.0014357749605551362, 0.0016596369678154588, 0.0018856329843401909, 0.0021081441082060337, 0.0023220779839903116, 0.0025231209583580494, 0.002707473933696747, 0.0028741098940372467, 0.0030259808991104364, 0.003171880031004548, 0.003325415076687932, 0.0034952270798385143, 0.003679900895804167, 0.0038725959602743387, 0.00406360998749733, 0.004242944996803999, 0.004401661921292543, 0.004534839186817408, 0.004644162021577358, 0.004735354799777269, 0.004814593121409416, 0.004887061193585396, 0.004955505020916462, 0.005019871983677149, 0.005077658221125603, 0.005125896073877811, 0.005162192042917013, 0.005186235066503286, 0.005199161823838949, 0.005204879213124514, 0.0052079129964113235, 0.005207145120948553, 0.005198093131184578, 0.005176878999918699, 0.005140787921845913, 0.005085784010589123, 0.005009497050195932, 0.0049119628965854645, 0.004794557113200426, 0.004659648053348064, 0.0045097749680280685, 0.004349148832261562, 0.004183366894721985, 0.004019200801849365, 0.0038595409132540226, 0.0037002419121563435, 0.00353301502764225, 0.0033511288929730654, 0.0031521229539066553, 0.002936257980763912, 0.0027047640178352594, 0.002459289040416479, 0.002201161114498973, 0.001930902013555169, 0.0016491520218551159, 0.0013582879910245538, 0.0010610379977151752, 0.0007610428147017956, 0.00046268620644696057, 0.00016881090414244682, -0.00012012980005238205, -0.0004056986072100699, -0.0006881278241053224, -0.0009643840021453798, -0.0012307410361245275, -0.0014846209669485688, -0.0017230029916390777, -0.0019416429568082094, -0.0021388770546764135, -0.0023138821125030518, -0.0024670620914548635, -0.002598749939352274, -0.002709273947402835, -0.002802706090733409, -0.002886418020352721, -0.002966729924082756, -0.003048270009458065, -0.0031346420291811228, -0.003228631103411317, -0.0033311680890619755, -0.0034386650659143925, -0.0035412150900810957, -0.0036252550780773163, -0.003679540939629078, -0.003697497071698308, -0.003677044063806534, -0.003621577052399516, -0.003537385957315564, -0.0034325439482927322, -0.003316018031910062, -0.003193975891917944, -0.0030678780749440193, -0.00293358089402318, -0.002786792116239667, -0.002626151079311967, -0.002450333908200264, -0.0022587410639971495, -0.002050834009423852, -0.00182780297473073, -0.0015929179498925805, -0.0013503310037776828, -0.0011046630097553134, -0.0008581954753026366, -0.0006109807873144746, -0.0003609434934332967, -0.00010707639739848673, 0.00015219260239973664, 0.0004172185144852847, 0.0006842506118118763, 0.0009466796764172614, 0.0011991240317001939, 0.0014399780193343759, 0.001669747056439519, 0.0018887219484895468, 0.0020961069967597723, 0.002288839081302285, 0.0024611279368400574, 0.002607583999633789, 0.0027257311157882214, 0.0028169320430606604, 0.0028864520136266947, 0.0029422419611364603, 0.0029927389696240425, 0.003041737014427781, 0.0030864239670336246, 0.00312620191834867, 0.0031639039516448975, 0.0032001000363379717, 0.0032359519973397255, 0.0032726700883358717, 0.003311116946861148, 0.0033492879010736942, 0.0033827871084213257, 0.003407890908420086, 0.0034218239597976208, 0.0034235629718750715, 0.0034130949061363935, 0.0033907799515873194, 0.003357931040227413, 0.003315173089504242, 0.0032602380961179733, 0.003189187031239271, 0.003099139081314206, 0.002989462111145258, 0.002861953107640147, 0.002719075884670019, 0.0025626320857554674, 0.0023972229100763798, 0.0022297720424830914, 0.002066605957224965, 0.0019110890571027994, 0.001766782021149993, 0.0016360509907826781, 0.0015170919941738248, 0.0014064100105315447, 0.0013030900154262781, 0.00120984495151788, 0.0011311030248180032, 0.0010710930218920112, 0.0010311369551345706, 0.0010087150149047375, 0.0009954303968697786, 0.0009781495900824666, 0.0009450215729884803, 0.0008900549728423357, 0.0008125274907797575, 0.0007151099853217602, 0.000602979096584022, 0.0004833797866012901, 0.00036531168734654784, 0.0002577932027634233, 0.00016793109534773976, 9.775689250091091e-05, 4.399962926981971e-05, -2.186608071497176e-06, -5.252753180684522e-05, -0.00011860320228151977, -0.0002072398056043312, -0.000320561695843935, -0.0004557254142127931, -0.0006069759256206453, -0.0007655143272131681, -0.0009216144098900259, -0.0010675829835236073, -0.0011981399729847908, -0.001310474006459117, -0.0014031470054760575, -0.0014790119603276253, -0.001544579048641026, -0.0016078590415418148, -0.0016760060098022223, -0.001753531047143042, -0.0018414410296827555, -0.0019350829534232616, -0.0020246650092303753, -0.002100266981869936, -0.002155713038519025, -0.002191165927797556, -0.002212811028584838, -0.0022300430573523045, -0.0022514129523187876, -0.0022812848910689354, -0.002321098931133747, -0.0023690781090408564, -0.002418472897261381, -0.002460357965901494, -0.002487112069502473, -0.002495362889021635, -0.0024886620230972767, -0.002475043060258031, -0.0024637789465487003, -0.0024632608983665705, -0.002479197923094034, -0.0025123769883066416, -0.002558151027187705, -0.002610997064039111, -0.0026693108957260847, -0.002733703004196286, -0.002804072108119726, -0.002878759056329727, -0.0029541810508817434, -0.003024251898750663, -0.0030807489529252052, -0.003115844912827015, -0.003125949064269662, -0.0031147769186645746, -0.003089637029916048, -0.00305755902081728, -0.0030236931052058935, -0.0029925319831818342, -0.0029677439015358686, -0.0029526820871979, -0.002949279034510255, -0.0029585170559585094, -0.002981276949867606, -0.0030146129429340363, -0.0030517498962581158, -0.0030858370009809732, -0.003110029036179185, -0.003118820022791624, -0.0031119019258767366, -0.0030951460357755423, -0.003079579910263419, -0.0030774909537285566, -0.003097858978435397, -0.003143901005387306, -0.003212854964658618, -0.0032961389515548944, -0.0033816860523074865, -0.0034559189807623625, -0.0035065640695393085, -0.003528354922309518, -0.0035239860881119967, -0.0035005579702556133, -0.003463844070211053, -0.003418449079617858, -0.003371377009898424, -0.0033274369779974222, -0.0032900699879974127, -0.0032648949418216944, -0.003256801050156355, -0.0032671289518475533, -0.003295823000371456, -0.003342228941619396, -0.0034042210318148136, -0.0034788260236382484, -0.0035625749733299017, -0.0036525160539895296, -0.003745890920981765, -0.0038401149213314056, -0.003933708183467388, -0.004027105867862701, -0.0041204290464520454, -0.00421327818185091, -0.004305209964513779, -0.0043964628130197525, -0.004486040212213993, -0.004569388926029205, -0.00464041018858552, -0.0046959188766777515, -0.004736252129077911, -0.004765986930578947, -0.004790558014065027, -0.0048129260540008545, -0.004833301994949579, -0.0048491028137505054, -0.004856468178331852, -0.004851684905588627, -0.00483294203877449, -0.004802356008440256, -0.00476333312690258, -0.004717757925391197, -0.004666610155254602, -0.004611127078533173, -0.004549779929220676, -0.004479933064430952, -0.004401416052132845, -0.004312395118176937, -0.0042081861756742, -0.004083158913999796, -0.003937101922929287, -0.0037756790407001972, -0.0036044290754944086, -0.003425274044275284, -0.003237440949305892, -0.0030400999821722507, -0.00283239409327507, -0.0026142029091715813, -0.0023851320147514343, -0.002145339036360383, -0.0018941080197691917, -0.0016323650488629937, -0.0013647939777001739, -0.0010979940416291356, -0.0008388599962927401, -0.0005905242287553847, -0.0003528982924763113, -0.00012516060087364167, 9.53784110606648e-05, 0.0003122044145129621, 0.0005267265951260924, 0.0007372780237346888, 0.0009431309881620109, 0.0011432430474087596, 0.0013372759567573667, 0.0015273080207407475, 0.0017160970019176602, 0.001906228018924594, 0.0020993819925934076, 0.002295789076015353, 0.002494585933163762, 0.00269230711273849, 0.002884153975173831, 0.0030652759596705437, 0.003233525902032852, 0.003389693098142743, 0.003537710988894105, 0.003683722112327814, 0.003834052011370659, 0.0039931610226631165, 0.0041623301804065704, 0.004341109190136194, 0.004527869168668985, 0.004720817785710096, 0.004917339887470007, 0.00511130690574646, 0.005295002833008766, 0.005459715146571398, 0.005598627962172031, 0.005710025783628225, 0.005796314217150211, 0.0058633009903132915, 0.005920260213315487, 0.005974397994577885, 0.006026641931384802, 0.00607368815690279, 0.006111370865255594, 0.006136793177574873, 0.006147541105747223, 0.006139200180768967, 0.00610625185072422, 0.006046317983418703, 0.005960916168987751, 0.005856283940374851, 0.005740281194448471, 0.005621106829494238, 0.005506189074367285, 0.005402176175266504, 0.005315203219652176, 0.005248030181974173, 0.005199462175369263, 0.005162876099348068, 0.005130121950060129, 0.005094694904983044, 0.005052247084677219, 0.004999728873372078, 0.004933854099363089, 0.004850327968597412, 0.004744228906929493, 0.0046132029965519905, 0.004458711016923189, 0.004285316914319992, 0.004098689183592796, 0.003903189906850457, 0.003704586997628212, 0.0035094809718430042, 0.0033251389395445585, 0.003157644998282194, 0.00300621404312551, 0.0028635719791054726, 0.0027213268913328648, 0.0025741111021488905, 0.0024230070412158966, 0.002275309059768915, 0.002140275901183486, 0.002026794943958521, 0.0019378210417926311, 0.0018663350492715836, 0.0018001629505306482, 0.0017300710314884782, 0.0016498699551448226, 0.0015558069571852684, 0.0014465400017797947, 0.0013217260129749775, 0.0011822109809145331, 0.0010312780505046248, 0.0008707402157597244, 0.0007005520164966583, 0.0005209494847804308, 0.00033475441159680486, 0.00014475149509962648, -4.6747121814405546e-05, -0.0002381942031206563, -0.0004291397053748369, -0.0006201153737492859, -0.0008122968138195574, -0.001006921986117959, -0.001204660045914352, -0.0014047930017113686, -0.0016029729740694165, -0.0017934819916263223, -0.0019688960164785385, -0.0021218189503997564, -0.002246788004413247, -0.002341632964089513, -0.00240674102678895, -0.0024457979016005993, -0.0024645240046083927, -0.002469219034537673, -0.002466013887897134, -0.002458408009260893, -0.0024475969839841127, -0.002435833914205432, -0.0024256580509245396, -0.0024196358863264322, -0.0024202989879995584, -0.0024276229087263346, -0.00243781809695065, -0.002446606056764722, -0.002451889915391803, -0.002454387955367565, -0.002460543066263199, -0.0024766160640865564, -0.002503457944840193, -0.002536504063755274, -0.002569227945059538, -0.0025978200137615204, -0.0026210499927401543, -0.0026368380058556795, -0.0026424298994243145, -0.002635096898302436, -0.0026139039546251297, -0.002580022905021906, -0.0025344460736960173, -0.0024774689227342606, -0.0024093580432236195, -0.002327559981495142, -0.0022268889006227255, -0.0021018690895289183, -0.0019498890032991767, -0.0017731740372255445, -0.0015794399660080671, -0.0013772440142929554, -0.0011714099673554301, -0.0009625247912481427, -0.0007526783156208694, -0.0005477805971167982, -0.0003561727935448289, -0.00018369349709246308, -3.24807406286709e-05, 9.80686818365939e-05, 0.00021109300723765045, 0.0003101624024566263, 0.000396756106056273, 0.0004710571956820786, 0.0005352835869416595, 0.0005920956027694046, 0.0006434955867007375, 0.0006910678930580616, 0.0007372627151198685, 0.0007845665095373988, 0.0008349596173502505, 0.0008910964825190604, 0.0009559288155287504, 0.0010294540552422404, 0.0011082839919254184, 0.0011865530395880342, 0.0012602920178323984, 0.001329301972873509, 0.0013947909465059638, 0.001456795958802104, 0.001514520961791277, 0.0015664820093661547, 0.0016130040166899562, 0.0016584020340815187, 0.0017095690127462149, 0.001774588949047029, 0.001858597039245069, 0.001961875008419156, 0.002078078920021653, 0.0021970150992274284, 0.0023086159490048885, 0.0024058809503912926, 0.0024859749246388674, 0.0025480089243501425, 0.0025941459462046623, 0.0026292919646948576, 0.0026569049805402756, 0.0026781719643622637, 0.002692050999030471, 0.0026964759454131126, 0.0026885580737143755, 0.0026663439348340034, 0.002630518050864339, 0.002583181019872427, 0.0025260529946535826, 0.002462860895320773, 0.0024004289880394936, 0.002345910994336009, 0.002303536981344223, 0.002272275974974036, 0.0022479610051959753, 0.002224506111815572, 0.0021963799372315407, 0.0021605188958346844, 0.00211698398925364, 0.0020692269317805767, 0.002021318068727851, 0.0019755640532821417, 0.0019308320479467511, 0.001881906995549798, 0.0018236140022054315, 0.0017537360545247793, 0.0016733469674363732, 0.0015845310408622026, 0.00148994498886168, 0.0013945299433544278, 0.0013037329772487283, 0.001219009980559349, 0.0011407899437472224, 0.0010712449438869953, 0.0010136429918929935, 0.0009696868946775794, 0.0009355348884128034, 0.0009027820779010653, 0.000863162218593061, 0.0008093140204437077, 0.0007337951101362705, 0.00063374760793522, 0.0005135310930199921, 0.0003839572018478066, 0.0002593300014268607, 0.00015117159637156874, 6.685186963295564e-05, 6.862565896881279e-06, -3.369971091160551e-05, -6.397612014552578e-05, -9.546388173475862e-05, -0.00014042049588169903, -0.00020847779524046928, -0.00030382920522242785, -0.00042458390817046165, -0.0005623751785606146, -0.0007047618273645639, -0.0008397898054681718, -0.0009585008956491947, -0.0010535550536587834, -0.0011210109805688262, -0.00116292096208781, -0.0011855709599331021, -0.00119864905718714, -0.0012135700089856982, -0.001238288008607924, -0.001276141032576561, -0.0013289670459926128, -0.0013992589665576816, -0.0014888319419696927, -0.001595727982930839, -0.0017136710230261087, -0.0018332699546590447, -0.0019455800065770745, -0.002043843036517501, -0.002128175925463438, -0.0022072310093790293, -0.0022935180459171534, -0.002398150973021984, -0.002527069067582488, -0.002678960096091032, -0.0028466819785535336, -0.0030199920292943716, -0.0031875199638307095, -0.003338616108521819, -0.0034644820261746645, -0.0035620180424302816, -0.00363483396358788, -0.003686971962451935, -0.0037217820063233376, -0.0037410850636661053, -0.0037453279364854097, -0.003736312035471201, -0.0037184099201112986, -0.00369632407091558, -0.003673240076750517, -0.003649734891951084, -0.0036255279555916786, -0.0036025019362568855, -0.003583149053156376, -0.003566635074093938, -0.0035474400501698256, -0.0035194531083106995, -0.0034796649124473333, -0.003426804905757308, -0.003360525006428361, -0.003283476922661066, -0.0032028919085860252, -0.0031253378838300705, -0.00305189099162817, -0.002980933990329504, -0.0029126419685781, -0.002847529947757721, -0.002785047050565481, -0.0027230610139667988, -0.002660714089870453, -0.002598447958007455, -0.002537267981097102, -0.002476020948961377, -0.002408944070339203, -0.002326984889805317, -0.0022216381039470434, -0.002087861066684127, -0.001926859957166016, -0.0017465970013290644, -0.0015583459753543139, -0.0013733910163864493, -0.001201704959385097, -0.0010496790055185556, -0.0009187799878418446, -0.0008063819259405136, -0.0007071256986819208, -0.0006148894899524748, -0.0005226152134127915, -0.00042388291331008077, -0.0003142768982797861, -0.00019216339569538832, -5.951747152721509e-05, 7.694320811424404e-05, 0.0002105468010995537, 0.0003366802993696183, 0.0004532797902356833, 0.0005619733710773289, 0.000667095126118511, 0.0007740759174339473, 0.0008879692177288234, 0.0010096350451931357, 0.001133844954892993, 0.0012525529600679874, 0.0013603479601442814, 0.0014561739517375827, 0.0015414520166814327, 0.001617391943000257, 0.0016836229478940368, 0.001739092986099422, 0.0017842239467427135, 0.0018212479772046208, 0.0018554830458015203, 0.0018967429641634226, 0.001956051914021373, 0.002040525898337364, 0.0021496149711310863, 0.0022730990312993526, 0.002394930925220251, 0.0024997319560498, 0.0025773909874260426, 0.0026245610788464546, 0.002644122112542391, 0.0026428319979459047, 0.002629257971420884, 0.0026116210501641035, 0.0025957811158150434, 0.0025837980210781097, 0.002572209108620882, 0.002555226907134056, 0.002527375938370824, 0.002487397054210305, 0.002440233016386628, 0.0023931520991027355, 0.002353498013690114, 0.002327864058315754, 0.002322529908269644, 0.002342232968658209, 0.0023860109504312277, 0.0024486519396305084, 0.002520421054214239, 0.002592393895611167, 0.002658477984368801, 0.002714663976803422, 0.0027563991025090218, 0.002778874011710286, 0.0027804209385067225, 0.002764103002846241, 0.002738154958933592, 0.002711303997784853, 0.002689091954380274, 0.002674889052286744, 0.002666576998308301, 0.0026588928885757923, 0.002646910957992077, 0.002630491042509675, 0.002611943054944277, 0.0025910090189427137, 0.0025643070694059134, 0.0025298648979514837, 0.0024878359399735928, 0.0024391699116677046, 0.002385498955845833, 0.002327623078599572, 0.0022635229397565126, 0.002188713988289237, 0.002097086049616337, 0.0019849929958581924, 0.0018527399515733123, 0.001704085967503488, 0.001546362997032702, 0.001387897995300591, 0.0012344949645921588, 0.0010891889687627554, 0.000952532805968076, 0.0008238130249083042, 0.0007016825838945806, 0.0005836791242472827, 0.0004654667864087969, 0.0003441711887717247, 0.0002184865006711334, 8.782903023529798e-05, -4.5687258534599096e-05, -0.00017866170674096793, -0.0003086568904109299, -0.0004326665948610753, -0.000550789525732398, -0.0006706317071802914, -0.0008006033021956682, -0.0009441060828976333, -0.001098425011150539, -0.0012550370302051306, -0.0014039749512448907, -0.001539719058200717, -0.0016633080085739493, -0.0017797050531953573, -0.0018925060285255313, -0.0020016098860651255, -0.0021033459343016148, -0.002193426014855504, -0.0022714571096003056, -0.002342693042010069, -0.002414810936897993, -0.0024944539181888103, -0.0025854469276964664, -0.0026878919452428818, -0.0027996220160275698, -0.0029178059194236994, -0.0030398499220609665, -0.0031617190688848495, -0.0032808019313961267, -0.003396738087758422, -0.003510002978146076, -0.003621448064222932, -0.003731065895408392, -0.0038369710091501474, -0.003937243018299341, -0.004029289819300175, -0.004111084155738354, -0.004182862117886543, -0.004248627927154303, -0.004313203971832991, -0.004381441045552492, -0.004457737784832716, -0.004544905852526426, -0.004644509870558977, -0.004756723064929247, -0.00488028209656477, -0.0050116111524403095, -0.005143885966390371, -0.005268346983939409, -0.005376465152949095, -0.005459901876747608, -0.005512785166501999, -0.005535533186048269, -0.0055314539931714535, -0.005503926891833544, -0.005454399157315493, -0.005383365787565708, -0.005291415844112635, -0.005180887877941132, -0.005055973771959543, -0.004920244216918945, -0.004777752794325352, -0.0046328529715538025, -0.004491350147873163, -0.004358070902526379, -0.004233858082443476, -0.004116512835025787, -0.003999824170023203, -0.003873986890539527, -0.003729880088940263, -0.0035643549636006355, -0.003382145892828703, -0.00319176004268229, -0.003003990976139903, -0.0028285218868404627, -0.002670888090506196, -0.0025309710763394833, -0.002405162900686264, -0.0022882199846208096, -0.002173142973333597, -0.0020511068869382143, -0.0019156710477545857, -0.0017634800169616938, -0.001593629946000874, -0.0014055799692869186, -0.0012004160089418292, -0.000980276963673532, -0.0007490921998396516, -0.0005115647800266743, -0.0002735719026532024, -4.126251951674931e-05, 0.00017953060159925371, 0.0003860403085127473, 0.0005809601861983538, 0.0007715310784988105, 0.0009647805709391832, 0.001163744949735701, 0.0013683190336450934, 0.0015768849989399314, 0.0017888459842652082, 0.002004150999709964, 0.002220707945525646, 0.0024355431087315083, 0.002645188942551613, 0.002845047041773796, 0.003029565094038844, 0.003195347962900996, 0.003343688091263175, 0.003480267943814397, 0.003612264059484005, 0.003743262030184269, 0.0038708948995918036, 0.003987696021795273, 0.004082769155502319, 0.0041454569436609745, 0.004169827792793512, 0.0041566272266209126, 0.0041132839396595955, 0.0040521021001040936, 0.003986279014497995, 0.003924666903913021, 0.003871372900903225, 0.0038255269173532724, 0.003780171973630786, 0.0037253079935908318, 0.0036521509755402803, 0.003554099937900901, 0.0034270728938281536, 0.0032712509855628014, 0.003090586978942156, 0.002893157070502639, 0.002690244000405073, 0.002491577062755823, 0.0023038729559630156, 0.0021316800266504288, 0.001978403888642788, 0.0018441410502418876, 0.0017257039435207844, 0.0016157299978658557, 0.001504412037320435, 0.001381470006890595, 0.001239671022631228, 0.0010768090141937137, 0.000894047028850764, 0.0006933010881766677, 0.0004771254025399685, 0.00024784920969977975, 9.820356353884563e-06, -0.00023023970425128937, -0.00046617400948889554, -0.0006957467994652689, -0.0009206081740558147, -0.001146299997344613, -0.0013783039757981896, -0.0016184940468519926, -0.0018645819509401917, -0.002110379049554467, -0.002348564099520445, -0.0025734470691531897, -0.0027808710001409054, -0.002969555091112852, -0.0031407650094479322, -0.003298253985121846, -0.0034462010953575373, -0.003586254082620144, -0.003717822954058647, -0.0038410110864788294, -0.003956274129450321, -0.00406675087288022, -0.00417625205591321, -0.00428594509139657, -0.004394026007503271, -0.004494733177125454, -0.0045764087699353695, -0.00462556816637516, -0.004632939118891954, -0.004596391227096319, -0.004520163871347904, -0.0044142939150333405, -0.0042933807708323, -0.004174899775534868, -0.004071950912475586, -0.003989284858107567, -0.003924903925508261, -0.003870787099003792, -0.0038156649097800255, -0.003750031115487218, -0.003668529912829399, -0.003573040943592787, -0.003469873918220401, -0.0033643520437180996, -0.0032595519442111254, -0.003154108067974448, -0.0030435570515692234, -0.0029242360033094883, -0.0027956541161984205, -0.00266043609008193, -0.0025227200239896774, -0.002384474966675043, -0.002246009884402156, -0.0021077790297567844, -0.001969690900295973, -0.0018333570333197713, -0.0017010070150718093, -0.0015720550436526537, -0.001443765009753406, -0.0013137819478288293, -0.001181459054350853, -0.001050604972988367, -0.00092940719332546, -0.0008239587186835706, -0.0007349994848482311, -0.0006615049205720425, -0.0005993858212605119, -0.0005405992269515991, -0.00047595371142961085, -0.00040009309304878116, -0.00031440731254406273, -0.00022501099738292396, -0.00013978520291857421, -6.471361848525703e-05, -2.905884002757375e-06, 4.584455018630251e-05, 8.397395868087187e-05, 0.00011351770081091672, 0.0001373744016746059, 0.00015817969688214362, 0.00017851039592642337, 0.0001995351049117744, 0.00022343400632962584, 0.0002527603937778622, 0.00028733789804391563, 0.0003263925027567893, 0.0003667270066216588, 0.00040237800567410886, 0.00042929701157845557, 0.0004473711014725268, 0.0004585426941048354, 0.0004645886947400868, 0.0004649448092095554, 0.0004580586974043399, 0.0004435514856595546, 0.00042280511115677655, 0.0003993242862634361, 0.00037774149677716196, 0.00036106299376115203, 0.0003515832941047847, 0.0003505928907543421, 0.00035751701216213405, 0.00036932871444150805, 0.0003823117003776133, 0.000392376008676365, 0.0003986970114056021, 0.00040519749745726585, 0.0004173381021246314, 0.00043873500544577837, 0.00046928550000302494, 0.0005061295232735574, 0.0005440819077193737, 0.0005763655062764883, 0.0005959096015430987, 0.0005993582890368998, 0.0005894490168429911, 0.000571661104913801, 0.0005533850053325295, 0.0005439845845103264, 0.0005510594928637147, 0.0005798278143629432, 0.0006302808178588748, 0.0006950877723284066, 0.0007629402098245919, 0.0008250916725955904, 0.0008772545261308551, 0.0009180242195725441, 0.0009493487887084484, 0.0009745795978233218, 0.0009974613785743713, 0.001021640026010573, 0.0010503659723326564, 0.0010850309627130628, 0.0011254360433667898, 0.00117031903937459, 0.0012173140421509743, 0.00126552302390337, 0.001316088018938899, 0.0013689040206372738, 0.0014227740466594696, 0.0014773469883948565, 0.0015336730284616351, 0.0015929300570860505, 0.0016562719829380512, 0.0017227299977093935, 0.0017902350518852472, 0.0018538259901106358, 0.001903568976558745, 0.0019310059724375606, 0.0019353260286152363, 0.0019216480432078242, 0.0018961339956149459, 0.0018643479561433196, 0.0018283670069649816, 0.0017884890548884869, 0.0017457560170441866, 0.0017017009668052197, 0.001657673972658813, 0.0016139160143211484, 0.0015689609572291374, 0.0015204859664663672, 0.0014669609954580665, 0.0014081510016694665, 0.0013443779898807406, 0.0012751939939334989, 0.001198905985802412, 0.0011125010205432773, 0.001013459055684507, 0.0009024729952216148, 0.0007840400794520974, 0.0006649530841968954, 0.0005532986833713949, 0.00045550669892691076, 0.0003748559101950377, 0.0003122513007838279, 0.0002662868064362556, 0.00023569150653202087, 0.00021896109683439136, 0.00021521009330172092, 0.0002239380992250517, 0.00024327420396730304, 0.0002695737057365477, 0.0002980506978929043, 0.00032530329190194607, 0.00034807249903678894, 0.00036334770265966654, 0.0003703027905430645, 0.00036982129677198827, 0.0003638791968114674, 0.0003557495947461575, 0.00034873010008595884, 0.0003467164933681488, 0.00035553230554796755, 0.0003812561044469476, 0.00042612760444171727, 0.00048744140076451004, 0.0005574919050559402, 0.0006280377856455743, 0.0006944378837943077, 0.0007565144915133715, 0.0008170027867890894, 0.0008792533772066236, 0.0009477296844124794, 0.0010276760440319777, 0.001124851987697184, 0.0012447419576346874, 0.0013891840353608131, 0.0015540029853582382, 0.0017292409902438521, 0.001906124991364777, 0.00207872805185616, 0.0022450019605457783, 0.002402703044936061, 0.002547220094129443, 0.0026737460866570473, 0.002778321970254183, 0.002861842978745699, 0.0029312320984899998, 0.002996186027303338, 0.0030651050619781017, 0.003144321031868458, 0.0032380390912294388, 0.0033481260761618614, 0.003473808988928795, 0.003613336943089962, 0.003765546018257737, 0.003927525132894516, 0.004092772025614977, 0.004252876155078411, 0.004398656077682972, 0.004524720832705498, 0.004631946794688702, 0.004725352860987186, 0.004811055026948452, 0.0048958538100123405, 0.004985225852578878, 0.005080495961010456, 0.005180826876312494, 0.005284599959850311, 0.005390620790421963, 0.0054969871416687965, 0.005601552780717611, 0.005700618028640747, 0.005788764916360378, 0.005862697027623653, 0.005922925192862749, 0.005971552804112434, 0.006009124219417572, 0.006037565879523754, 0.006062528118491173, 0.0060910121537745, 0.006127906963229179, 0.00617229612544179, 0.006218248978257179, 0.006258769892156124, 0.006288518197834492, 0.006302117835730314, 0.006294506136327982, 0.006263377144932747, 0.006209570914506912, 0.0061372630298137665, 0.006052377168089151, 0.0059565887786448, 0.0058463867753744125, 0.005717895925045013, 0.0055698188953101635, 0.005402817856520414, 0.005217975936830044, 0.0050182039849460125, 0.00480598583817482, 0.004581667948514223, 0.0043479399755597115, 0.004109859932214022, 0.0038733540568500757, 0.0036430410109460354, 0.00342353992164135, 0.0032187621109187603, 0.0030298810452222824, 0.0028576808981597424, 0.0027034298982471228, 0.002566710114479065, 0.0024433990474790335, 0.0023269408848136663, 0.0022121239453554153, 0.002095910022035241, 0.001973968930542469, 0.001838825992308557, 0.001685169991105795, 0.0015131899854168296, 0.0013280239654704928, 0.001137665007263422, 0.0009503794135525823, 0.000772322528064251, 0.0006063159089535475, 0.0004522883100435138, 0.00030637270538136363, 0.0001654421939747408, 2.765353929135017e-05, -0.00010803530312841758, -0.00024081330047920346, -0.00036692930734716356, -0.00048160439473576844, -0.0005813195020891726, -0.0006634125020354986, -0.0007287369226105511, -0.0007816933793947101, -0.0008249552920460701, -0.000859652878716588, -0.000887213391251862, -0.0009082541218958795, -0.0009208836127072573, -0.000924505409784615, -0.0009216823964379728, -0.0009157533058896661, -0.0009085077908821404, -0.0008983553852885962, -0.0008830698789097369, -0.0008610949153080583, -0.000830075703561306, -0.0007889497792348266, -0.0007374819251708686, -0.0006777315866202116, -0.00061281758826226, -0.0005462266271933913, -0.0004833152052015066, -0.000431729102274403, -0.00039766650297679007, -0.00038372058770619333, -0.0003908062062691897, -0.00041918960050679743, -0.0004671151109505445, -0.0005292203277349472, -0.0005959001719020307, -0.0006586600211448967, -0.0007130461162887514, -0.0007588529260829091, -0.0007975143962539732, -0.0008339544874615967, -0.0008763156947679818, -0.0009321817778982222, -0.0010027979733422399, -0.001084518968127668, -0.0011711700353771448, -0.0012575549772009254, -0.001341228955425322, -0.0014228059444576502, -0.001503617037087679, -0.0015843380242586136, -0.0016660169931128621, -0.0017513480270281434, -0.001842699944972992, -0.0019420030293986201, -0.0020496940705925226, -0.002163924975320697, -0.0022797859273850918, -0.002389068016782403, -0.0024839791003614664, -0.0025601049419492483, -0.0026151658967137337, -0.0026508138980716467, -0.002672746079042554, -0.002688613021746278, -0.002705605933442712, -0.0027302668895572424, -0.002765144919976592, -0.0028083580546081066, -0.002855984028428793, -0.0029025119729340076, -0.002942410996183753, -0.0029705630149692297, -0.0029822099022567272, -0.002970705972984433, -0.002929378068074584, -0.0028582599479705095, -0.0027619050815701485, -0.0026467670686542988, -0.0025197009090334177, -0.002387958113104105, -0.0022587270941585302, -0.002138084964826703, -0.0020302319899201393, -0.0019387720385566354, -0.0018637980101630092, -0.0018002160359174013, -0.0017401829827576876, -0.0016770800575613976, -0.0016065869713202119, -0.0015286150155588984, -0.0014468779554590583, -0.0013682759599760175, -0.0013001069892197847, -0.0012480879668146372, -0.0012139660539105535, -0.0011941459961235523, -0.0011805229587480426, -0.0011637309798970819, -0.0011381020303815603, -0.001104666036553681, -0.0010675130179151893, -0.0010296580148860812, -0.000991868320852518, -0.0009535283898003399, -0.0009144479990936816, -0.0008759383927099407, -0.0008394562173634768, -0.0008060242980718613, -0.0007773120887577534, -0.000755304004997015, -0.000741113384719938, -0.0007339859730564058, -0.0007300868164747953, -0.0007244048174470663, -0.0007134036277420819, -0.0006946654175408185, -0.0006683263927698135, -0.0006374611984938383, -0.000604394415859133, -0.0005704340874217451, -0.0005362320225685835, -0.0005022839177399874, -0.00046939810272306204, -0.000441723910626024, -0.00042804848635569215, -0.00043725408613681793, -0.00047273910604417324, -0.0005307028186507523, -0.000601546373218298, -0.0006730513996444643, -0.0007348685758188367, -0.0007780783926136792, -0.0007947871927171946, -0.0007825770881026983, -0.000748444173950702, -0.0007058283081278205, -0.000667317071929574, -0.000643130682874471, -0.000641017104499042, -0.0006659087957814336, -0.0007195899961516261, -0.0007988897268660367, -0.000894888595212251, -0.0009931304957717657, -0.0010773449903354049, -0.0011362129589542747, -0.0011671649990603328, -0.0011739840265363455, -0.0011649850057438016, -0.0011495030485093594, -0.0011373789748176932, -0.0011389290448278189, -0.001162325032055378, -0.001210120040923357, -0.0012816369999200106, -0.0013744400348514318, -0.001483301050029695, -0.0016020600451156497, -0.0017231550300493836, -0.0018380279652774334, -0.0019411409739404917, -0.0020293339621275663, -0.002099368954077363, -0.002149547915905714, -0.0021800079848617315, -0.002190991071984172, -0.0021841339766979218, -0.0021645950619131327, -0.0021391441114246845, -0.002112630056217313, -0.0020884829573333263, -0.0020711920224130154, -0.0020656040869653225, -0.002075253054499626, -0.0021007840987294912, -0.0021402740385383368, -0.0021895719692111015, -0.0022434459533542395, -0.0022979460190981627, -0.0023538360837846994, -0.0024127380456775427, -0.0024760249070823193, -0.002544452901929617, -0.002618660917505622, -0.0027003749273717403, -0.0027932259254157543, -0.0028997380286455154, -0.0030181061010807753, -0.0031419540755450726, -0.0032617771066725254, -0.003368966979905963, -0.00345901888795197, -0.0035312180407345295, -0.003591103944927454, -0.003648220095783472, -0.0037105348892509937, -0.0037818748969584703, -0.0038623050786554813, -0.003949312027543783, -0.0040396638214588165, -0.0041303131729364395, -0.0042177969589829445, -0.004299155902117491, -0.0043742042034864426, -0.004444850143045187, -0.0045144702307879925, -0.004587590228766203, -0.004667595028877258, -0.004755508154630661, -0.004849005024880171, -0.004942580126225948, -0.005030958913266659, -0.0051133600063622, -0.005193940829485655, -0.0052764881402254105, -0.005360713228583336, -0.005441934801638126, -0.00551227992400527, -0.005564031191170216, -0.005593587178736925, -0.005603502970188856, -0.005599628202617168, -0.005587996914982796, -0.005574606824666262, -0.005565926898270845, -0.005566677078604698, -0.005578331183642149, -0.005597113166004419, -0.005615240894258022, -0.005624246783554554, -0.00561867281794548, -0.005595094058662653, -0.005550254136323929, -0.00548217911273241, -0.005392211023718119, -0.005283581092953682, -0.005159835796803236, -0.005025310907512903, -0.004886525217443705, -0.0047499737702310085, -0.004620058927685022, -0.004498851019889116, -0.004384926054626703, -0.0042750160209834576, -0.004167729057371616, -0.004063103813678026, -0.003963165916502476, -0.0038704590406268835, -0.0037873219698667526, -0.00371380103752017, -0.003646859899163246, -0.0035832941066473722, -0.0035240850411355495, -0.003469809889793396, -0.0034170818980783224, -0.00336087797768414, -0.003295233938843012, -0.0032113459892570972, -0.0031006759963929653, -0.0029580830596387386, -0.0027846419252455235, -0.0025906111113727093, -0.002392384922131896, -0.002205556957051158, -0.002038333099335432, -0.0018895609537139535, -0.0017542940331622958, -0.001625332050025463, -0.0014934019418433309, -0.0013494939776137471, -0.0011878849472850561, -0.0010056949686259031, -0.0008034944767132401, -0.0005839316290803254, -0.00035177470999769866, -0.00011164439638378099, 0.0001329123042523861, 0.00037854848778806627, 0.0006208643899299204, 0.0008556146058253944, 0.001078170957043767, 0.0012873030500486493, 0.0014869429869577289, 0.001684620976448059, 0.0018865979509428144, 0.0020963361021131277, 0.0023122720886021852, 0.0025274520739912987, 0.002731872955337167, 0.002917383098974824, 0.0030808919109404087, 0.0032258499413728714, 0.0033581529278308153, 0.0034810530487447977, 0.0035953789483755827, 0.0037042018957436085, 0.003812643000856042, 0.003927139099687338, 0.004051249008625746, 0.004182523116469383, 0.004313160199671984, 0.004432240966707468, 0.004531960003077984, 0.004610204137861729, 0.004670160822570324, 0.004717804957181215, 0.004759038798511028, 0.004799012094736099, 0.004840570036321878, 0.004885904025286436, 0.004936370067298412, 0.004991868976503611, 0.005052259191870689, 0.00511619308963418, 0.00517968600615859, 0.005238589830696583, 0.005291061010211706, 0.005335303954780102, 0.005366323050111532, 0.0053773787803947926, 0.005362925119698048, 0.005321925040334463, 0.005258228164166212, 0.005177658051252365, 0.005085842218250036, 0.0049867089837789536, 0.004879747983068228, 0.004762472119182348, 0.004634193144738674, 0.004495367873460054, 0.004347003996372223, 0.004191068932414055, 0.004030351992696524, 0.0038690539076924324, 0.0037131980061531067, 0.0035687610507011414, 0.003437696024775505, 0.0033172559924423695, 0.003200008999556303, 0.003078531939536333, 0.0029505910351872444, 0.002817647997289896, 0.0026815079618245363, 0.002543810987845063, 0.00240487908013165, 0.0022648130543529987, 0.0021252750884741545, 0.0019889690447598696, 0.0018604190554469824, 0.0017448699800297618, 0.0016485860105603933, 0.0015759930247440934, 0.0015250700525939465, 0.0014915349893271923, 0.0014708240050822496, 0.0014542220160365105, 0.0014312040293589234, 0.0013946479884907603, 0.0013416589936241508, 0.0012719640508294106, 0.0011882609687745571, 0.0010965249966830015, 0.0010030720150098205, 0.0009136609151028097, 0.0008331091958098114, 0.000765870907343924, 0.0007157539948821068, 0.0006845662137493491, 0.0006735774222761393, 0.0006789949256926775, 0.0006904536858201027, 0.0006982705090194941, 0.0006983279017731547, 0.0006929470109753311, 0.0006869640201330185, 0.0006855180254206061, 0.0006902114837430418, 0.00069895462365821, 0.0007073230226524174, 0.0007119706133380532, 0.0007135861087590456, 0.0007154998020268977, 0.0007209607283584774, 0.000731561507564038, 0.0007461516070179641, 0.0007611684268340468, 0.0007710270001552999, 0.0007697762921452522, 0.0007519139908254147, 0.0007144829141907394, 0.0006563237984664738, 0.0005783831002190709, 0.0004820818139705807, 0.0003689969889819622, 0.0002445534919388592, 0.00011759740300476551, -2.39766200138547e-06, -0.00010981660307152197, -0.0002039593964582309, -0.0002854450140148401, -0.00035669791395775974, -0.0004200087860226631, -0.0004782062896993011, -0.000531261321157217, -0.0005785218090750277, -0.0006243084208108485, -0.0006758582894690335, -0.0007398893940262496, -0.0008206770289689302, -0.0009180885972455144, -0.001029093051329255, -0.0011478259693831205, -0.0012653740122914314, -0.0013736969558522105, -0.0014689010567963123, -0.00155036395881325, -0.0016210370231419802, -0.0016855259891599417, -0.001748549984768033, -0.0018141840118914843, -0.0018856329843401909, -0.0019652959890663624, -0.0020534510258585215, -0.00214586709626019, -0.0022348740603774786, -0.0023159401025623083, -0.0023904331028461456, -0.0024621279444545507, -0.0025338269770145416, -0.002605634042993188, -0.002677326090633869, -0.0027474190574139357, -0.0028130048885941505, -0.0028729229234158993, -0.0029295519925653934, -0.002986065112054348, -0.0030449950136244297, -0.0031086490489542484, -0.0031779929995536804, -0.003251170041039586, -0.0033226669766008854, -0.0033854900393635035, -0.0034342529252171516, -0.003464692970737815, -0.003474839963018894, -0.003466197056695819, -0.003443222027271986, -0.0034104168880730867, -0.0033732359297573566, -0.0033367311116307974, -0.003303482895717025, -0.003273356007412076, -0.003244915045797825, -0.003216858021914959, -0.0031876899302005768, -0.0031562780495733023, -0.0031233809422701597, -0.0030884859152138233, -0.0030475349631160498, -0.0029958789236843586, -0.0029317711014300585, -0.0028549570124596357, -0.0027673819568008184, -0.0026730101089924574, -0.0025757208932191133, -0.002479333896189928, -0.0023869010619819164, -0.0023002158850431442, -0.0022178320214152336, -0.0021351950708776712, -0.002048630965873599, -0.0019592700991779566, -0.0018723109969869256, -0.0017907440196722746, -0.001713986974209547, -0.00164138397667557, -0.0015701360534876585, -0.001496023964136839, -0.001414689002558589, -0.0013238090323284268, -0.0012236960465088487, -0.001116015948355198, -0.001001875032670796, -0.0008802936063148081, -0.0007510678260587156, -0.0006146507221274078, -0.00047388768871314824, -0.00033469090703874826, -0.0002027437003562227, -8.100407285382971e-05, 3.311664841021411e-05, 0.0001464319066144526, 0.00026783719658851624, 0.00040369690395891666, 0.000552511599380523, 0.0007060372154228389, 0.0008534077205695212, 0.0009831228526309133, 0.001084720017388463, 0.0011527120368555188, 0.0011883459519594908, 0.0011988950427621603, 0.0011932889465242624, 0.0011796059552580118, 0.001165754976682365, 0.001160760992206633, 0.001170397037640214, 0.0011938660172745585, 0.001226625987328589, 0.0012637079926207662, 0.001301364041864872, 0.0013391339452937245, 0.001377698965370655, 0.0014160539722070098, 0.0014512039488181472, 0.0014806169783696532, 0.0015017299447208643, 0.0015127479564398527, 0.0015134030254557729, 0.001506416010670364, 0.0014964420115575194, 0.0014869519509375095, 0.0014792169677093625, 0.001474207965657115, 0.001472495961934328, 0.0014746770029887557, 0.0014796130126342177, 0.0014851780142635107, 0.0014894170453771949, 0.0014909369638189673, 0.0014925559516996145, 0.0014984270092099905, 0.0015115570276975632, 0.0015371589688584208, 0.0015803429996594787, 0.0016452319687232375, 0.0017309479881078005, 0.0018314539920538664, 0.001934638014063239, 0.0020286659710109234, 0.002107494045048952, 0.00216996599920094, 0.0022168969735503197, 0.002251832978799939, 0.0022818429861217737, 0.0023152909707278013, 0.002358552999794483, 0.0024134579580277205, 0.002479756949469447, 0.002555789891630411, 0.002635929035022855, 0.0027150639798492193, 0.0027908131014555693, 0.0028617389034479856, 0.0029258779250085354, 0.0029814389999955893, 0.0030257580801844597, 0.00305394409224391, 0.003062634030357003, 0.0030525289475917816, 0.003028897102922201, 0.003000705037266016, 0.0029771269764751196, 0.0029650928918272257, 0.002969851018860936, 0.0029926530551165342, 0.003031281055882573, 0.003083408111706376, 0.003146342933177948, 0.003216989105567336, 0.003294090973213315, 0.003375394968315959, 0.0034561739303171635, 0.003528171917423606, 0.0035817360039800406, 0.0036088749766349792, 0.0036054919473826885, 0.003571108914911747, 0.0035066280979663134, 0.0034143419470638037, 0.003300068899989128, 0.003172921948134899, 0.0030426010489463806, 0.0029175779782235622, 0.0028033440466970205, 0.0027028010226786137, 0.002616079058498144, 0.0025424419436603785, 0.002479986986145377, 0.0024258620105683804, 0.0023758749011904, 0.0023237098939716816, 0.0022607760038226843, 0.002178589114919305, 0.0020730909891426563, 0.0019470859551802278, 0.001808473956771195, 0.0016672139754518867, 0.0015338569646701217, 0.001416004030033946, 0.0013153570471331477, 0.0012299639638513327, 0.0011556249810382724, 0.0010868220124393702, 0.0010186450090259314, 0.0009509663213975728, 0.0008860559901222587, 0.0008258844027295709, 0.0007714941748417914, 0.0007205855217762291, 0.0006693517207168043, 0.0006141324993222952, 0.0005510923801921308, 0.00047756789717823267, 0.0003933102125301957, 0.0003003352030646056, 0.000202022900339216, 0.00010253040090901777, 4.972001079295296e-06, -8.910030010156333e-05, -0.0001775796990841627, -0.00025807699421420693, -0.0003278914955444634, -0.0003885453916154802, -0.0004437995085027069, -0.0004968011053279042, -0.0005485358997248113, -0.0005997904809191823, -0.0006522982730530202, -0.000708032981492579, -0.0007690925849601626, -0.0008341377251781523, -0.0008994244853965938, -0.0009618073818273842, -0.0010177609510719776, -0.0010653489734977484, -0.0011033619521185756, -0.0011326370295137167, -0.0011563299922272563, -0.0011797279585152864, -0.0012086039641872048, -0.0012472179951146245, -0.0012982620391994715, -0.001363535993732512, -0.0014451689785346389, -0.001543535036034882, -0.0016548699932172894, -0.0017708799568936229, -0.0018817749805748463, -0.001980795990675688, -0.0020620739087462425, -0.0021211430430412292, -0.0021586609072983265, -0.002181944902986288, -0.002202230039983988, -0.002228023950010538, -0.0022631778847426176, -0.0023072289768606424, -0.0023562998976558447, -0.002406011102721095, -0.0024540768936276436, -0.0024981170427054167, -0.0025349711067974567, -0.0025619310326874256, -0.0025774938985705376, -0.002581977052614093, -0.0025771220680326223, -0.0025671781040728092, -0.002558367094025016, -0.0025542299263179302, -0.002552957972511649, -0.0025469521060585976, -0.002528067911043763, -0.0024916240945458412, -0.002439698902890086, -0.0023799920454621315, -0.002323213964700699, -0.0022790280636399984, -0.0022527810651808977, -0.00224359892308712, -0.002243724884465337, -0.002243119990453124, -0.002233646111562848, -0.0022097700275480747, -0.0021683829836547375, -0.0021081389859318733, -0.002029439900070429, -0.001937165972776711, -0.0018389419419690967, -0.001741152023896575, -0.0016460709739476442, -0.0015532940160483122, -0.0014631090452894568, -0.0013769729994237423, -0.0012941979803144932, -0.0012115660356357694, -0.0011244730558246374, -0.001029276056215167, -0.0009267386049032211, -0.000819988374132663, -0.0007126511773094535, -0.0006069780210964382, -0.0005021202960051596, -0.00039593499968759716, -0.0002854148915503174, -0.00016771549417171627, -4.260314017301425e-05, 8.900732063921168e-05, 0.00022642059775535017, 0.0003680697991512716, 0.0005089935148134828, 0.0006420214776881039, 0.0007586543215438724, 0.0008532478823326528, 0.0009265663102269173, 0.0009860469726845622, 0.0010431340197101235, 0.001109421020373702, 0.0011929370230063796, 0.0012969709932804108, 0.0014199629658833146, 0.0015574910212308168, 0.001701731001958251, 0.0018434820231050253, 0.001972865080460906, 0.002082914113998413, 0.002172230975702405, 0.0022440149914473295, 0.002304829889908433, 0.0023643390741199255, 0.002431197091937065, 0.0025107809342443943, 0.0026062149554491043, 0.002717291936278343, 0.0028388190548866987, 0.0029626840259879827, 0.003081045113503933, 0.0031893299892544746, 0.0032851239666342735, 0.0033708440605551004, 0.003454865887761116, 0.0035489920992404222, 0.003662366885691881, 0.0037947678938508034, 0.003937455825507641, 0.004079080186784267, 0.004209443926811218, 0.004322000779211521, 0.004414860159158707, 0.004489556886255741, 0.004550015088170767, 0.004601558204740286, 0.004650185815989971, 0.004703125916421413, 0.0047662281431257725, 0.0048389919102191925, 0.0049172439612448215, 0.00499746622517705, 0.005076424218714237, 0.005151179153472185, 0.005220983177423477, 0.005285684019327164, 0.005343297030776739, 0.00539170578122139, 0.005430723074823618, 0.005461812950670719, 0.005484357010573149, 0.005495353136211634, 0.005491822957992554, 0.005471915937960148, 0.005435391794890165, 0.005382813047617674, 0.00531669519841671, 0.005241815932095051, 0.005166293121874332, 0.005100591108202934, 0.005052725784480572, 0.005021880846470594, 0.005002416204661131, 0.004988126922398806, 0.004973340779542923, 0.004953524097800255, 0.004925088956952095, 0.004886175040155649, 0.004835686180740595, 0.004770771134644747, 0.004689808003604412, 0.004595447797328234, 0.004494206048548222, 0.004395083989948034, 0.004306301008909941, 0.004232217092067003, 0.004172328859567642, 0.004118768032640219, 0.00406236108392477, 0.0039972541853785515, 0.003921304829418659, 0.0038361221086233854, 0.0037472040858119726, 0.0036604399792850018, 0.0035801168996840715, 0.003511240938678384, 0.0034569650888442993, 0.0034135389141738415, 0.0033727509435266256, 0.0033286409452557564, 0.003277498995885253, 0.003218132071197033, 0.0031554740853607655, 0.0030966729391366243, 0.0030434520449489355, 0.0029921249952167273, 0.0029375150334089994, 0.002874355996027589, 0.0027998830191791058, 0.002714232075959444, 0.0026221428997814655, 0.0025338740088045597, 0.0024604820646345615, 0.0024076690897345543, 0.002377677010372281, 0.0023674950934946537, 0.002371477894484997, 0.002382131991907954, 0.0023901578970253468, 0.0023882840760052204, 0.002373612020164728, 0.002344850916415453, 0.0023000179789960384, 0.002238671062514186, 0.002161314943805337, 0.0020709449891000986, 0.001974472077563405, 0.0018795019714161754, 0.0017911499598994851, 0.0017117209499701858, 0.0016412000404670835, 0.0015771100297570229, 0.0015133150154724717, 0.0014436639612540603, 0.001366604003123939, 0.0012852289946749806, 0.0012042069574818015, 0.0011298960307613015, 0.0010675910161808133, 0.0010199400130659342, 0.0009851462673395872, 0.000957484997343272, 0.0009279706864617765, 0.000886294525116682, 0.0008279677131213248, 0.0007544959080405533, 0.0006702194805257022, 0.0005804484244436026, 0.0004891558783128858, 0.0003965189098380506, 0.0002987777115777135, 0.00019134979811497033, 7.359399751294404e-05, -5.1849041483365e-05, -0.00018057260604109615, -0.0003072441031690687, -0.0004254147061146796, -0.0005289334803819656, -0.0006148808752186596, -0.0006845302996225655, -0.0007415374275296926, -0.0007905926904641092, -0.0008334178128279746, -0.0008686271030455828, -0.0008939143735915422, -0.000907434499822557, -0.0009071792010217905, -0.0008919627871364355, -0.0008610612712800503, -0.0008139616111293435, -0.0007507316768169403, -0.000672074209433049, -0.0005793874734081328, -0.0004767785139847547, -0.0003712153120432049, -0.00026747610536403954, -0.0001676168030826375, -7.14928173692897e-05, 2.078137913485989e-05, 0.00011050979810534045, 0.00020019549992866814, 0.00029107221052981913, 0.0003861192089971155, 0.0004906858084723353, 0.0006083928747102618, 0.0007378525915555656, 0.0008737614843994379, 0.0010080289794132113, 0.0011340710334479809, 0.0012497040443122387, 0.0013550850562751293, 0.001448765047825873, 0.0015280910301953554, 0.001592732034623623, 0.0016476570162922144, 0.0017030970193445683, 0.0017696679569780827, 0.0018529959488660097, 0.001953735016286373, 0.0020673798862844706, 0.0021851309575140476, 0.0022961210925132036, 0.0023913918994367123, 0.002467396901920438, 0.002525076037272811, 0.002567233983427286, 0.002598010003566742, 0.0026208609342575073, 0.0026383730582892895, 0.0026511079631745815, 0.002658502897247672, 0.0026582051068544388, 0.002646300010383129, 0.0026182320434600115, 0.002570775104686618, 0.00250177807174623, 0.0024118900764733553, 0.002306286944076419, 0.0021939980797469616, 0.0020856510382145643, 0.0019900149200111628, 0.0019122599624097347, 0.0018536490388214588, 0.0018101909663528204, 0.0017759730108082294, 0.0017463299445807934, 0.001718917046673596, 0.0016928180120885372, 0.0016679470427334309, 0.0016433439450338483, 0.0016157659702003002, 0.0015805009752511978, 0.0015334519557654858, 0.0014715750003233552, 0.001393986982293427, 0.0013019420439377427, 0.0011992939980700612, 0.0010908859549090266, 0.0009823351865634322, 0.00087762251496315, 0.0007789109949953854, 0.000685902195982635, 0.0005968806799501181, 0.0005103257717564702, 0.00042720549390651286, 0.00035179281258024275, 0.00028886579093523324, 0.00024078150454442948, 0.0002032332995440811, 0.00016613809566479176, 0.00012078019790351391, 6.285584095166996e-05, -6.859943823656067e-06, -8.450359746348113e-05, -0.00016535900067538023, -0.0002448064915370196, -0.0003204850945621729, -0.0003921964962501079, -0.00046074751298874617, -0.0005271055852063, -0.0005912284250371158, -0.0006525872158817947, -0.0007106811972334981, -0.0007659519906155765, -0.0008153177914209664, -0.0008540598792023957, -0.0008809738792479038, -0.0008971361094154418, -0.0009057570714503527, -0.0009127170196734369, -0.0009257838828489184, -0.0009526634821668267, -0.0009987738449126482, -0.001066369004547596, -0.0011532839853316545, -0.0012530420208349824, -0.001355085987597704, -0.0014468739973381162, -0.0015184140065684915, -0.0015642710495740175, -0.001583685982041061, -0.0015780390240252018, -0.0015510079683735967, -0.0015091130044311285, -0.001461290055885911, -0.0014161609578877687, -0.001379302004352212, -0.0013524600071832538, -0.0013330710353329778, -0.0013181299436837435, -0.0013070859713479877, -0.0012999220052734017, -0.001296728034503758, -0.0012958130100741982, -0.00129280099645257, -0.0012826790334656835, -0.0012639870401471853, -0.001236079027876258, -0.0011983319418504834, -0.0011511980555951595, -0.0010983389802277088, -0.0010472990106791258, -0.0010065650567412376, -0.0009834953816607594, -0.0009821004932746291, -0.0010001440532505512, -0.001030831946991384, -0.0010682709980756044, -0.0011089029721915722, -0.0011511490447446704, -0.0011945810401812196, -0.0012406139867380261, -0.0012879580026492476, -0.001329881022684276, -0.0013552459422498941, -0.001354319043457508, -0.001325787976384163, -0.0012776260264217854, -0.001224756008014083, -0.0011790740536525846, -0.0011439180234447122, -0.0011179869761690497, -0.0010986829875037074, -0.0010820729658007622, -0.0010650049662217498, -0.0010454989969730377, -0.0010238339891657233, -0.001002994948066771, -0.0009882819140329957, -0.0009836208773776889, -0.0009890737710520625, -0.0010012580314651132, -0.0010139900259673595, -0.0010208849562332034, -0.001019135001115501, -0.001010520034469664, -0.0010003040079027414, -0.000991800450719893, -0.0009853350929915905, -0.0009793457575142384, -0.0009724257979542017, -0.0009659776114858687, -0.0009636799222789705, -0.000968290027230978, -0.0009807711467146873, -0.0010011859703809023, -0.0010282599832862616, -0.0010589390294626355, -0.0010898499749600887, -0.0011171470396220684, -0.0011376399779692292, -0.0011494579957798123, -0.001152758952230215, -0.0011484239948913455, -0.0011397149646654725, -0.0011325429659336805, -0.0011301579652354121, -0.0011320889461785555, -0.0011364519596099854, -0.001142106018960476, -0.0011487869778648019, -0.001153799006715417, -0.0011517719831317663, -0.0011362270452082157, -0.001104898052290082, -0.0010600819950923324, -0.001005606958642602, -0.0009486118797212839, -0.0008949520997703075, -0.0008463329286314547, -0.000801097194198519, -0.0007560313097201288, -0.000707097293343395, -0.000651846406981349, -0.0005906890146434307, -0.0005274681025184691, -0.000466981902718544, -0.0004111675079911947, -0.0003582042991183698, -0.00030494280508719385, -0.00025064809597097337, -0.00019907590467482805, -0.00015520170563831925, -0.00012315419735386968, -0.00010400619794381782, -9.470504301134497e-05, -8.964324661064893e-05, -8.0694786447566e-05, -6.0703048802679405e-05, -2.505811062292196e-05, 2.772799962258432e-05, 9.660414070822299e-05, 0.0001755320990923792, 0.0002525038144085556, 0.0003152452118229121, 0.0003541950136423111, 0.00036297619226388633, 0.0003376289096195251, 0.00027715900796465576, 0.0001858746982179582, 7.539017678936943e-05, -3.921049938071519e-05, -0.00014349579578265548, -0.00022540030477102846, -0.00028083191136829555, -0.0003121958870906383, -0.0003248763969168067, -0.00033075601095333695, -0.0003442848101258278, -0.00037623458774760365, -0.00043029661173932254, -0.0005032388144172728, -0.000587145914323628, -0.0006716456264257431, -0.0007435436127707362, -0.0007905694073997438, -0.0008091332856565714, -0.0008042178815230727, -0.0007847789092920721, -0.0007629739120602608, -0.0007514507742598653, -0.000761963427066803, -0.0008011374156922102, -0.0008680985192768276, -0.0009588461252860725, -0.0010692139621824026, -0.0011922649573534727, -0.0013183599803596735, -0.0014375370228663087, -0.001542774960398674, -0.001630396000109613, -0.0017019540537148714, -0.001764202956110239, -0.001825863029807806, -0.0018951479578390718, -0.001975543098524213, -0.0020628839265555143, -0.0021483709570020437, -0.002223239978775382, -0.0022811798844486475, -0.002321302890777588, -0.002346599008888006, -0.0023616370745003223, -0.0023712438996881247, -0.002378910081461072, -0.002387505955994129, -0.002398432930931449, -0.0024134600535035133, -0.002436066046357155, -0.002467128913849592, -0.0025042069610208273, -0.002545040100812912, -0.0025866320356726646, -0.0026246339548379183, -0.0026542439591139555, -0.0026694799307733774, -0.002665458945557475, -0.0026430340949445963, -0.0026073860935866833, -0.002563339890912175, -0.002514539984986186, -0.002465174999088049, -0.002418304095044732, -0.0023753540590405464, -0.002337368903681636, -0.0023038280196487904, -0.0022728859912604094, -0.00224242708645761, -0.0022111129947006702, -0.002178316004574299, -0.002145912032574415, -0.0021162941120564938, -0.002089068992063403, -0.002061661100015044, -0.0020332259591668844, -0.00200501992367208, -0.0019792059902101755, -0.001957068918272853, -0.0019391579553484917, -0.0019234999781474471, -0.0019056960009038448, -0.0018799869576469064, -0.0018431720091030002, -0.0017987079918384552, -0.0017544870497658849, -0.0017191109945997596, -0.0017009270377457142, -0.0017044349806383252, -0.001728252973407507, -0.001767497044056654, -0.0018147530499845743, -0.001860948046669364, -0.001897788024507463, -0.0019176020286977291, -0.0019154009642079473, -0.0018895909888669848, -0.0018437040271237493, -0.0017867940478026867, -0.001729522948153317, -0.0016787879867479205, -0.0016359869623556733, -0.0016009010141715407, -0.0015751189785078168, -0.0015617860481142998, -0.0015627129469066858, -0.001575323985889554, -0.0015951920067891479, -0.0016182749532163143, -0.0016409880481660366, -0.0016605310374870896, -0.001673402963206172, -0.0016775709809735417, -0.001674190047197044, -0.0016689429758116603, -0.0016679440159350634, -0.0016745530301705003, -0.001689709024503827, -0.0017130529740825295, -0.0017437429632991552, -0.001781421946361661, -0.001824963022954762, -0.0018709460273385048, -0.0019158830400556326, -0.0019579059444367886, -0.001998411025851965, -0.002041308907791972, -0.002089652931317687, -0.002144979080185294, -0.002207681071013212, -0.0022778459824621677, -0.0023533760104328394, -0.002429746091365814, -0.00250023091211915, -0.0025582860689610243, -0.002600782085210085, -0.0026275499258190393, -0.0026391539722681046, -0.0026362540666013956, -0.002621412044391036, -0.0026004789397120476, -0.0025796389672905207, -0.0025620029773563147, -0.0025467369705438614, -0.002530724974349141, -0.0025118759367614985, -0.002488482976332307, -0.002458510920405388, -0.002416705945506692, -0.0023574689403176308, -0.0022795149125158787, -0.0021868098992854357, -0.0020879660733044147, -0.0019921730272471905, -0.0019039110047742724, -0.0018223959486931562, -0.0017455939669162035, -0.001670273020863533, -0.001591981970705092, -0.0015056220581755042, -0.001409085001796484, -0.001306410995312035, -0.001201955950818956, -0.0010982089443132281, -0.0009972439147531986, -0.0009013263043016195, -0.0008131756912916899, -0.0007356057758443058, -0.0006695715710520744, -0.0006114530260674655, -0.0005535025848075747, -0.00048695370787754655, -0.00040637271013110876, -0.0003135229926556349, -0.00021399889374151826, -0.00011527020251378417, -2.3438680727849714e-05, 5.654960114043206e-05, 0.00012048800272168592, 0.00016565009718760848, 0.0001925763936014846, 0.00020420139480847865, 0.00020551049965433776, 0.00020422869420144707, 0.0002087183966068551, 0.00022652390180155635, 0.0002603557950351387, 0.00030565541237592697, 0.00035554979695007205, 0.00040396509575657547, 0.0004473786102607846, 0.00048400330706499517, 0.0005112066282890737, 0.0005264469073154032, 0.0005309365806169808, 0.00052917271386832, 0.0005254778079688549, 0.0005204961053095758, 0.0005122942966409028, 0.0004992869799025357, 0.00048073820653371513, 0.0004556179919745773, 0.00042287789983674884, 0.0003812932991422713, 0.00033053228980861604, 0.0002716243907343596, 0.00020712129480671138, 0.0001399372995365411, 7.385543722193688e-05, 1.4997500329627655e-05, -3.0633618735009804e-05, -6.173407018650323e-05, -7.898458716226742e-05, -8.401984086958691e-05, -8.015335333766416e-05, -7.446557719958946e-05, -7.401902257697657e-05, -8.542225259589031e-05, -0.00011436380009399727, -0.00016339699504896998, -0.00022911910491529852, -0.0003013261884916574, -0.00036653620190918446, -0.0004135131021030247, -0.0004349602968432009, -0.00043031948735006154, -0.000406671199016273, -0.0003757948870770633, -0.0003486165951471776, -0.00033261009957641363, -0.0003315368958283216, -0.0003458184073679149, -0.0003748224989976734, -0.00041807349771261215, -0.0004752255917992443, -0.0005443093832582235, -0.000621852173935622, -0.0007067837868817151, -0.0008022157126106322, -0.0009105788776651025, -0.0010300440480932593, -0.0011532820062711835, -0.001269737957045436, -0.0013697609538212419, -0.0014466500142589211, -0.0014981370186433196, -0.001529364031739533, -0.0015492039965465665, -0.0015642240177839994, -0.0015794449718669057, -0.0016017310554161668, -0.0016375059494748712, -0.0016880340408533812, -0.0017502009868621826, -0.0018199889454990625, -0.0018938940484076738, -0.001969302073121071, -0.002044911962002516, -0.0021185739897191525, -0.0021870939526706934, -0.0022487409878522158, -0.0023025800473988056, -0.0023463040124624968, -0.002377605065703392, -0.002397435950115323, -0.0024111359380185604, -0.0024234841112047434, -0.0024347680155187845, -0.002441840013489127, -0.0024435780942440033, -0.002442494034767151, -0.0024426979944109917, -0.0024493790697306395, -0.002465528901666403, -0.0024912930093705654, -0.002521617105230689, -0.0025481239426881075, -0.002564891939982772, -0.002568874042481184, -0.002561718923971057, -0.002548207063227892, -0.00253331009298563, -0.002519568894058466, -0.0025061089545488358, -0.0024898680858314037, -0.0024675331078469753, -0.0024374378845095634, -0.0023983099963515997, -0.0023495210334658623, -0.0022940379567444324, -0.002236285014078021, -0.002180672949180007, -0.0021325231064110994, -0.0020949270110577345, -0.002067907014861703, -0.0020483939442783594, -0.002033909084275365, -0.0020249609369784594, -0.0020220340229570866, -0.0020234868861734867, -0.0020246009808033705, -0.0020200670696794987, -0.002005259972065687, -0.0019769431091845036, -0.001932531944476068, -0.0018724260153248906, -0.001798095996491611, -0.0017119509866461158, -0.0016155310440808535, -0.001509553985670209, -0.0013959399657323956, -0.00127986294683069, -0.0011687870137393475, -0.0010682520223781466, -0.0009804358705878258, -0.0009049564832821488, -0.0008399020880460739, -0.0007843804196454585, -0.0007370521780103445, -0.000696046685334295, -0.0006590337725356221, -0.0006234761094674468, -0.0005850839079357684, -0.000538834894541651, -0.00048197119031101465, -0.00041212240466848016, -0.00032651738729327917, -0.0002243350027129054, -0.00010838249727385119, 1.5066359992488287e-05, 0.0001367090007988736, 0.0002471345942467451, 0.0003387414908502251, 0.00040893390541896224, 0.0004619820974767208, 0.000505670381244272, 0.000547977106180042, 0.0005948094767518342, 0.0006485343910753727, 0.0007094651809893548, 0.0007761706947349012, 0.0008454808266833425, 0.0009147544042207301, 0.000980972545221448, 0.0010389949893578887, 0.0010825899662449956, 0.0011065310100093484, 0.0011087850434705615, 0.0010920950444415212, 0.0010638999519869685, 0.0010344160255044699, 0.0010135089978575706, 0.0010065949754789472, 0.0010133680189028382, 0.0010283800074830651, 0.0010435100411996245, 0.0010501430369913578, 0.00104267499409616, 0.0010198960080742836, 0.0009849140187725425, 0.0009436184773221612, 0.0009037556010298431, 0.000873356475494802, 0.0008583834278397262, 0.0008602844900451601, 0.0008765255915932357, 0.0009022729936987162, 0.0009323644917458296, 0.000962349702604115, 0.0009872784139588475, 0.0010032339487224817, 0.0010078089544549584, 0.0010007929522544146, 0.000984290847554803, 0.0009623554069548845, 0.0009390882914885879, 0.0009175430168397725, 0.0008978446712717414, 0.0008792161243036389, 0.0008617640123702586, 0.0008459176169708371, 0.000832596211694181, 0.000822673027869314, 0.000814551895018667, 0.0008047303999774158, 0.0007902390789240599, 0.0007697450928390026, 0.0007432085112668574, 0.0007108662975952029, 0.0006726473802700639, 0.0006296227220445871, 0.0005855396739207208, 0.0005465680733323097, 0.0005195103003643453, 0.000507937918882817, 0.0005122189177200198, 0.0005299935000948608, 0.0005587097839452326, 0.0005970731726847589, 0.0006458031130023301, 0.0007061698124743998, 0.0007800288731232285, 0.0008680251776240766, 0.000969857326708734, 0.0010842130286619067, 0.0012069579679518938, 0.0013336939737200737, 0.0014614040264859796, 0.0015867339679971337, 0.0017051970353350043, 0.0018129160162061453, 0.0019072090508416295, 0.0019870649557560682, 0.002054477110505104, 0.0021152410190552473, 0.0021770140156149864, 0.0022459090687334538, 0.002324152970686555, 0.002410775050520897, 0.0025026770308613777, 0.0025975489988923073, 0.0026947311125695705, 0.002790705068036914, 0.0028778898995369673, 0.0029475020710378885, 0.0029923319816589355, 0.00301005388610065, 0.0030043378937989473, 0.002984503982588649, 0.0029613710939884186, 0.0029431190341711044, 0.002934189047664404, 0.0029334439896047115, 0.002936274977400899, 0.0029375851154327393, 0.002934102900326252, 0.002925572916865349, 0.0029134571086615324, 0.002897992031648755, 0.002878960920497775, 0.0028590080328285694, 0.0028417170979082584, 0.002829320030286908, 0.0028219460509717464, 0.0028174209874123335, 0.00281155901029706, 0.0027965449262410402, 0.0027634999714791775, 0.002707327948883176, 0.0026272039394825697, 0.0025276269298046827, 0.0024213269352912903, 0.002323644934222102, 0.002241854090243578, 0.002175969071686268, 0.0021239928901195526, 0.002085163025185466, 0.002058963058516383, 0.0020416430197656155, 0.0020290471147745848, 0.0020161750726401806, 0.001994091086089611, 0.001956742024049163, 0.0019045310327783227, 0.0018402519635856152, 0.0017675940180197358, 0.001691751996986568, 0.0016202329425141215, 0.001563544967211783, 0.0015325959539040923, 0.0015339419478550553, 0.0015667330008000135, 0.0016220950055867434, 0.0016874369466677308, 0.0017514779465273023, 0.001803544000722468, 0.0018336880020797253, 0.001836910960264504, 0.001815625000745058, 0.0017787739634513855, 0.0017368349945172668, 0.0016975440084934235, 0.0016664329450577497, 0.0016481219790875912, 0.0016449469840154052, 0.0016559760551899672, 0.0016789339715614915, 0.0017088729655370116, 0.0017380890203639865, 0.0017601799918338656, 0.0017725620418787003, 0.0017752760322764516, 0.0017692360561341047, 0.0017572379438206553, 0.0017450869781896472, 0.0017402670346200466, 0.0017490279860794544, 0.0017750069964677095, 0.0018163389759138227, 0.0018685460090637207, 0.0019269180484116077, 0.0019871171098202467, 0.0020455680787563324, 0.002099832985550165, 0.002148363972082734, 0.002191663021221757, 0.0022331338841468096, 0.002277319086715579, 0.002327165100723505, 0.0023813319858163595, 0.002436090959236026, 0.0024864759761840105, 0.002527601085603237, 0.0025561959482729435, 0.002572794910520315, 0.002583329100161791, 0.0025960500352084637, 0.0026191489305347204, 0.0026577450335025787, 0.0027118490543216467, 0.0027748181018978357, 0.002836894942447543, 0.0028899810276925564, 0.002929701004177332, 0.0029567989986389875, 0.0029758589807897806, 0.0029922749381512403, 0.0030121360905468464, 0.0030419519171118736, 0.0030860770493745804, 0.003143718931823969, 0.0032064819242805243, 0.003263545921072364, 0.003304766956716776, 0.0033249000553041697, 0.0033272390719503164, 0.003320632968097925, 0.003313909051939845, 0.003313652938231826, 0.0033247550018131733, 0.0033477279357612133, 0.0033772368915379047, 0.0034051749389618635, 0.003421595087274909, 0.003419057000428438, 0.003397597000002861, 0.003362318966537714, 0.0033167290966957808, 0.0032642988953739405, 0.0032088831067085266, 0.0031547469552606344, 0.003108569886535406, 0.0030757540371268988, 0.0030577529687434435, 0.0030532970558851957, 0.003060817951336503, 0.0030761039815843105, 0.003091762075200677, 0.003100346075370908, 0.003094482934102416, 0.0030684019438922405, 0.0030189049430191517, 0.002948027104139328, 0.0028660399839282036, 0.002788781886920333, 0.0027303791139274836, 0.0026981919072568417, 0.002692543901503086, 0.002707225037738681, 0.002732468070462346, 0.002757868031039834, 0.0027714651077985764, 0.0027669009286910295, 0.0027485329192131758, 0.0027279790956526995, 0.0027158150915056467, 0.0027181420009583235, 0.002736401977017522, 0.0027673461008816957, 0.0028068250976502895, 0.002850867109373212, 0.0028950138948857784, 0.002933155046775937, 0.002958395052701235, 0.002963484963402152, 0.002943947911262512, 0.0029008688870817423, 0.002840302884578705, 0.0027712720911949873, 0.0027015700470656157, 0.0026359029579907656, 0.002575857099145651, 0.0025174999609589577, 0.0024576480500400066, 0.0023973078932613134, 0.0023395998869091272, 0.0022873389534652233, 0.0022436240687966347, 0.0022094850428402424, 0.0021832180209457874, 0.00216211611405015, 0.0021418870892375708, 0.0021168780513107777, 0.002079833997413516, 0.0020247120410203934, 0.0019496140303090215, 0.0018564489437267184, 0.0017486059805378318, 0.0016302790027111769, 0.0015055770054459572, 0.0013762679882347584, 0.001243478967808187, 0.0011080800322815776, 0.0009700154769234359, 0.0008295727893710136, 0.0006879382999613881, 0.0005472127813845873, 0.0004108021967113018, 0.000281141692539677, 0.0001579610980115831, 4.022233042633161e-05, -7.326064223889261e-05, -0.00018396250379737467, -0.0002947768080048263, -0.0004078978963661939, -0.0005238506128080189, -0.0006420544814318419, -0.0007608439773321152, -0.0008773694280534983, -0.000987941399216652, -0.001089234952814877, -0.0011786799877882004, -0.0012563549680635333, -0.001324084005318582, -0.0013859790051355958, -0.0014464559499174356, -0.0015086870407685637, -0.0015746529679745436, -0.0016464049695059657, -0.0017249550437554717, -0.00180881901178509, -0.0018946450436487794, -0.0019784809555858374, -0.0020557839889079332, -0.002121344907209277, -0.0021719960495829582, -0.0022103730589151382, -0.0022431251127272844, -0.0022777020931243896, -0.0023208290804177523, -0.002377253957092762, -0.002448112005367875, -0.002531341975554824, -0.0026227780617773533, -0.002718640025705099, -0.0028138249181210995, -0.0029014560859650373, -0.0029749879613518715, -0.0030317490454763174, -0.003071886021643877, -0.003097976092249155, -0.003112955018877983, -0.0031200689263641834, -0.0031248319428414106, -0.003133605932816863, -0.0031530580017715693, -0.0031885739881545305, -0.0032413240987807512, -0.0033071490470319986, -0.003377807093784213, -0.0034448299556970596, -0.003502870909869671, -0.003550182096660137, -0.0035878720227628946, -0.0036156061105430126, -0.0036302499938756227, -0.003626628080382943, -0.0035997158847749233, -0.0035498531069606543, -0.0034828109201043844, -0.0034033700358122587, -0.0033132750540971756, -0.0032154330983757973, -0.003114751074463129, -0.003017846029251814, -0.0029282609466463327, -0.002845189068466425, -0.002766922116279602, -0.002693861024454236, -0.002626843051984906, -0.0025652858894318342, -0.0025052179116755724, -0.0024401210248470306, -0.0023656529374420643, -0.0022822669707238674, -0.002196060959249735, -0.002116478979587555, -0.002051888033747673, -0.0020083868876099586, -0.0019891110714524984, -0.0019934100564569235, -0.0020174989476799965, -0.0020551818888634443, -0.002097975928336382, -0.0021358910016715527, -0.0021581200417131186, -0.002156904898583889, -0.0021323570981621742, -0.0020924159325659275, -0.0020450640004128218, -0.001995560945942998, -0.001945015974342823, -0.0018915520049631596, -0.0018316219793632627, -0.0017639519646763802, -0.0016930319834500551, -0.0016275589587166905, -0.001576627022586763, -0.0015478719724342227, -0.0015454390086233616, -0.0015685800462961197, -0.0016161620151251554, -0.001684851013123989, -0.00176563102286309, -0.0018451670184731483, -0.001908175996504724, -0.001939001027494669, -0.0019258529646322131, -0.0018657529726624489, -0.0017669900553300977, -0.001644797041080892, -0.0015201029600575566, -0.0014149179914966226, -0.0013447169912979007, -0.0013139069778844714, -0.0013161359820514917, -0.0013372510438784957, -0.0013604529667645693, -0.0013691720087081194, -0.0013510610442608595, -0.0013028610264882445, -0.0012302730465307832, -0.001140802982263267, -0.001040098024532199, -0.0009317112271673977, -0.000821324298158288, -0.0007143313996493816, -0.0006133604911155999, -0.0005190612282603979, -0.0004324376059230417, -0.00035499079967848957, -0.0002861398970708251, -0.00022270869521889836, -0.00016119239444378763, -0.00010003019997384399, -3.7971291021676734e-05, 2.745813071669545e-05, 9.848504851106554e-05, 0.00017801120702642947, 0.0002667742082849145, 0.0003631325962487608, 0.00046299610403366387, 0.0005609369254671037, 0.0006512167165055871, 0.0007301478181034327, 0.0007977540954016149, 0.0008573487284593284, 0.000914328615181148, 0.0009741064859554172, 0.0010408259695395827, 0.0011155479587614536, 0.0011976540554314852, 0.0012862279545515776, 0.0013799190055578947, 0.001477316953241825, 0.0015753109473735094, 0.0016688399482518435, 0.0017513539642095566, 0.0018164849607273936, 0.001860606949776411, 0.0018832460045814514, 0.0018867070320993662, 0.0018771420000120997, 0.001864611986093223, 0.0018581560580059886, 0.001862777047790587, 0.0018822019919753075, 0.0019188630394637585, 0.001970333978533745, 0.0020281579345464706, 0.002081607934087515, 0.002124310005456209, 0.002154767978936434, 0.002175718080252409, 0.0021910760551691055, 0.0022048770915716887, 0.002220473950728774, 0.0022380310110747814, 0.00225612404756248, 0.0022713590878993273, 0.0022804990876466036, 0.002281889086589217, 0.0022763318847864866, 0.0022660410031676292, 0.0022546679247170687, 0.002245736075565219, 0.0022421160247176886, 0.0022478539030998945, 0.0022647720761597157, 0.0022893568966537714, 0.0023173459339886904, 0.0023455999325960875, 0.0023735619615763426, 0.0023989230394363403, 0.0024158249143511057, 0.0024202640634030104, 0.0024119019508361816, 0.002393048955127597, 0.0023657549172639847, 0.0023331530392169952, 0.002301040105521679, 0.0022756289690732956, 0.002259250031784177, 0.0022490681149065495, 0.0022394719999283552, 0.0022231009788811207, 0.0021939389407634735, 0.0021489718928933144, 0.002090096939355135, 0.002023915061727166, 0.0019591220188885927, 0.001903134980238974, 0.001859860960394144, 0.001831014989875257, 0.001813794020563364, 0.0018019559793174267, 0.001790769980289042, 0.001777700032107532, 0.001763571985065937, 0.0017495539505034685, 0.0017381979851052165, 0.0017313810531049967, 0.0017311150440946221, 0.0017404899699613452, 0.0017619000282138586, 0.0017920329701155424, 0.001822934951633215, 0.0018503499450162053, 0.0018719759536907077, 0.0018856939859688282, 0.0018927010241895914, 0.0018958540167659521, 0.0018976680003106594, 0.0019017650047317147, 0.0019107479602098465, 0.0019225990399718285, 0.0019297050312161446, 0.0019221119582653046, 0.0018919650465250015, 0.0018364250427111983, 0.0017586930189281702, 0.0016653339844197035, 0.0015644809463992715, 0.0014643770409747958, 0.0013716439716517925, 0.001289541949518025, 0.0012188219698145986, 0.0011591300135478377, 0.0011112119536846876, 0.0010770770022645593, 0.0010586159769445658, 0.0010544509859755635, 0.0010592039907351136, 0.0010639639804139733, 0.0010589839657768607, 0.001036548987030983, 0.0009927772916853428, 0.0009290439775213599, 0.000850987620651722, 0.0007664838922210038, 0.0006836940883658826, 0.0006070540985092521, 0.0005373090971261263, 0.00047494578757323325, 0.0004214027139823884, 0.00037744740257039666, 0.0003414177044760436, 0.0003114930004812777, 0.00028738469700329006, 0.0002690528053790331, 0.0002539475099183619, 0.00023898670042399317, 0.00022157200146466494, 0.00020065749413333833, 0.00017758659669198096, 0.00015479499415960163, 0.00013364109327085316, 0.00011414170148782432, 9.487661009188741e-05, 7.610194734297693e-05, 6.119140016380697e-05, 5.4872238251846284e-05, 5.9063640946988016e-05, 7.341813034145162e-05, 9.684570250101388e-05, 0.00012798269744962454, 0.00016501359641551971, 0.00020459860388655216, 0.00024360089446417987, 0.0002793197054415941, 0.00031071939156390727, 0.00033915549283847213, 0.0003671644954010844, 0.00039618241135030985, 0.0004273650120012462, 0.00046020839363336563, 0.0004923372180201113, 0.0005201653111726046, 0.00054006720893085, 0.0005506579182110727, 0.0005543510778807104, 0.0005567324114963412, 0.0005635048146359622, 0.0005784793756902218, 0.0006008864147588611, 0.000628546578809619, 0.0006581019842997193, 0.000684689381159842, 0.000703099591191858, 0.0007102140807546675, 0.0007051556021906435, 0.000690846296492964, 0.0006744707934558392, 0.0006643506931141019, 0.0006668451824225485, 0.0006839971174485981, 0.000709558604285121, 0.0007337640854530036, 0.0007462588255293667, 0.0007407892844639719, 0.0007168138981796801, 0.000678636075463146, 0.0006332530174404383, 0.000585947185754776, 0.0005400815862230957, 0.000497841218020767, 0.000459762493846938, 0.00042387930443510413, 0.0003879904979839921, 0.0003505279019009322, 0.00031113080331124365, 0.0002681440964806825, 0.00021772140462417156, 0.00015704550605732948, 8.367944974452257e-05, -2.9000771064602304e-06, -0.00010120400111190975, -0.0002061397972283885, -0.00030947799677960575, -0.00040499819442629814, -0.0004895520978607237, -0.0005620088195428252, -0.0006245162803679705, -0.0006811203784309328, -0.0007387240184471011, -0.0008061645203270018, -0.0008908166782930493, -0.0009966820944100618, -0.0011258230078965425, -0.0012762469705194235, -0.0014401780208572745, -0.0016059030313044786, -0.0017615080578252673, -0.0018967270152643323, -0.002002652967348695, -0.002075335942208767, -0.0021184340585023165, -0.0021382190752774477, -0.002142152050510049, -0.002136243972927332, -0.0021252399310469627, -0.0021122649777680635, -0.0021000138949602842, -0.0020908641163259745, -0.0020879548974335194, -0.0020936329383403063, -0.00210747797973454, -0.0021265819668769836, -0.002146719954907894, -0.0021658209152519703, -0.002185004996135831, -0.0022053481079638004, -0.002225815085694194, -0.002243258059024811, -0.0022532669827342033, -0.002252462087199092, -0.002240902977064252, -0.002221090020611882, -0.002196625107899308, -0.00217256392352283, -0.0021544990595430136, -0.00214664195664227, -0.002148659899830818, -0.002156475093215704, -0.002165447920560837, -0.0021702831145375967, -0.002166717080399394, -0.002148920902982354, -0.0021117241121828556, -0.0020577351097017527, -0.0019939870107918978, -0.0019265100127086043, -0.0018581990152597427, -0.001790776033885777, -0.0017263490008190274, -0.001667720964178443, -0.001617660978808999, -0.0015790440374985337, -0.0015560470055788755, -0.0015487700002267957, -0.0015492320526391268, -0.001543196034617722, -0.0015165089862421155, -0.0014608510537073016, -0.00137504399754107, -0.0012658319901674986, -0.0011445910204201937, -0.0010231579653918743, -0.0009085853234864771, -0.0008018622174859047, -0.0007004227954894304, -0.0005998368724249303, -0.0004974000039510429, -0.0003932128893211484, -0.00029102989356033504, -0.0001967668067663908, -0.00011618300050031394, -5.394177060225047e-05, -1.2062359928677324e-05, 1.4016999557497911e-05, 3.442203160375357e-05, 6.299070810200647e-05, 0.00011396220361348242, 0.00019484059885144234, 0.000303826091112569, 0.00043502330663613975, 0.0005788102280348539, 0.0007219554972834885, 0.0008512022905051708, 0.0009587854729034007, 0.0010438900208100677, 0.0011107149766758084, 0.0011682809563353658, 0.0012271599844098091, 0.0012942380271852016, 0.001372092985548079, 0.0014609229983761907, 0.0015575039433315396, 0.0016549959545955062, 0.001746334950439632, 0.0018258809577673674, 0.0018889929633587599, 0.0019357360433787107, 0.0019710969645529985, 0.002001390093937516, 0.0020324739161878824, 0.002068507019430399, 0.0021109359804540873, 0.00215932191349566, 0.0022110710851848125, 0.002262759953737259, 0.0023111209738999605, 0.0023514609783887863, 0.0023778160102665424, 0.0023845010437071323, 0.0023696860298514366, 0.0023379079066216946, 0.0022978750057518482, 0.002260413020849228, 0.002233366947621107, 0.002217822941020131, 0.002208059886470437, 0.0021961049642413855, 0.002176047069951892, 0.0021439509000629187, 0.0020970909390598536, 0.002035256940871477, 0.0019615760538727045, 0.0018814250361174345, 0.0018001280259341002, 0.0017203009920194745, 0.0016429610550403595, 0.0015686090337112546, 0.0014974350342527032, 0.0014292249688878655, 0.0013627930311486125, 0.0012972640106454492, 0.0012326940195634961, 0.0011670220410451293, 0.001096672029234469, 0.0010196970542892814, 0.0009363830904476345, 0.0008472133777104318, 0.0007511957082897425, 0.0006486169877462089, 0.0005425324197858572, 0.0004373445990495384, 0.000336125202011317, 0.00024028299958445132, 0.00014865730190649629, 5.812909876112826e-05, -3.614052911871113e-05, -0.0001376134023303166, -0.0002446201106067747, -0.0003517231089062989, -0.00045238708844408393, -0.0005420101806521416, -0.0006195144960656762, -0.0006847048061899841, -0.0007361795287579298, -0.0007728378986939788, -0.0007973578758537769, -0.0008166959160007536, -0.0008402452222071588, -0.0008749521803110838, -0.0009221836808137596, -0.0009779897518455982, -0.0010348829673603177, -0.0010853320127353072, -0.001123341964557767, -0.0011462620459496975, -0.0011553389485925436, -0.001152088982053101, -0.0011374619789421558, -0.0011140709975734353, -0.0010870150290429592, -0.0010610410245135427, -0.001038416987285018, -0.001020780997350812, -0.001010512001812458, -0.0010079949861392379, -0.001010279986076057, -0.001014285022392869, -0.0010189639870077372, -0.0010243089636787772, -0.00103073101490736, -0.0010367849608883262, -0.0010393320117145777, -0.0010365709895268083, -0.0010295440442860126, -0.0010221910197287798, -0.0010176970390602946, -0.001015487010590732, -0.0010124739492312074, -0.00100812001619488, -0.001006097998470068, -0.00101233902387321, -0.001029853941872716, -0.0010571239981800318, -0.0010897249449044466, -0.0011220290325582027, -0.001147605013102293, -0.0011628359789028764, -0.0011669730301946402, -0.0011605529580265284, -0.0011459599481895566, -0.0011282289633527398, -0.0011119140544906259, -0.0010992030147463083, -0.0010906870011240244, -0.001085352967493236, -0.0010808389633893967, -0.001074886997230351, -0.0010671609779819846, -0.0010601129615679383, -0.0010586479911580682, -0.0010680579580366611, -0.0010928009869530797, -0.0011334189912304282, -0.0011829689610749483, -0.001230885973200202, -0.0012677520280703902, -0.0012860799906775355, -0.0012834069784730673, -0.0012627890100702643, -0.001231685047969222, -0.001199275953695178, -0.0011726099764928222, -0.0011558689875528216, -0.0011507549788802862, -0.0011545290471985936, -0.00116198998875916, -0.0011675989953801036, -0.0011675989953801036, -0.0011612869566306472, -0.0011512170312926173, -0.0011395750334486365, -0.0011253809789195657, -0.0011025209678336978, -0.0010646929731592536, -0.0010092540178447962, -0.0009387396275997162, -0.0008587883203290403, -0.0007778662256896496, -0.0007045966922305524, -0.0006444539176300168, -0.0005995837855152786, -0.0005681960028596222, -0.0005441312096081674, -0.0005181729793548584, -0.0004824367933906615, -0.00043439038563519716, -0.00037572981091216207, -0.0003115680883638561, -0.00025047961389645934, -0.00020386719552334398, -0.0001799259043764323, -0.00018026780162472278, -0.0002020131069002673, -0.00023910359595902264, -0.00028149699210189283, -0.0003132828860543668, -0.0003169011906720698, -0.00028327939799055457, -0.00021574870334006846, -0.0001287794002564624, -4.173811976215802e-05, 2.85351798083866e-05, 7.274092786246911e-05, 9.041972225531936e-05, 8.927912131184712e-05, 8.07612668722868e-05, 7.309892680495977e-05, 7.244529842864722e-05, 8.373770106118172e-05, 0.00011103489669039845, 0.00015392090426757932, 0.00020877229690086097, 0.00026987679302692413, 0.0003305684949737042, 0.0003858937125187367, 0.000430284213507548, 0.0004575494967866689, 0.000462428288301453, 0.00044467850239016116, 0.00041087449062615633, 0.00037315679946914315, 0.0003435364051256329, 0.0003287857980467379, 0.00033002669806592166, 0.0003452833043411374, 0.00037263560807332397, 0.0004082006053067744, 0.000444650009740144, 0.00047374959103763103, 0.0004890576237812638, 0.00048774731112644076, 0.00047114279004745185, 0.0004432967980392277, 0.0004076510958839208, 0.00036453260690905154, 0.0003145431983284652, 0.0002605800109449774, 0.00020667779608629644, 0.00015474369865842164, 0.00010392229887656868, 5.49762808077503e-05, 1.1238070328545291e-05, -2.324759952898603e-05, -4.533629908110015e-05, -5.2805549785261974e-05, -4.5710461563430727e-05, -2.5569570425432175e-05, 5.373313797463197e-06, 4.173514025751501e-05, 7.691694918321446e-05, 0.00010591059981379658, 0.00012565440556500107, 0.00013527019473258406, 0.00013546019908972085, 0.00012780209362972528, 0.0001145604983321391, 9.880324796540663e-05, 8.310534758493304e-05, 6.795740046072751e-05, 5.284068902255967e-05, 3.624540113378316e-05, 1.7960859622689895e-05, 3.7699049926231964e-07, -1.3709110135096125e-05, -2.3967009838088416e-05, -3.1853309337748215e-05, -3.969961835537106e-05, -4.930379873258062e-05, -6.251648301258683e-05, -8.203965262509882e-05, -0.00011039119999622926, -0.00014777120668441057, -0.00019104090461041778, -0.00023479580704588443, -0.0002744171069934964, -0.0003085772041231394, -0.00034063690691255033, -0.0003768086025957018, -0.0004238891997374594, -0.0004865941882599145, -0.0005653948173858225, -0.000656920310575515, -0.000755039625801146, -0.0008524933946318924, -0.0009410469210706651, -0.001012225984595716, -0.001061673043295741, -0.0010915539460256696, -0.0011099949479103088, -0.0011255269637331367, -0.0011442330433055758, -0.0011709049576893449, -0.0012066729832440615, -0.0012496759882196784, -0.0012940559536218643, -0.0013318490236997604, -0.0013562219683080912, -0.0013616030337288976, -0.0013471189886331558, -0.0013172510080039501, -0.001280286000110209, -0.001246090978384018, -0.0012244830140843987, -0.0012230159481987357, -0.0012434950331225991, -0.001281031989492476, -0.001326613943092525, -0.0013710790080949664, -0.0014059030218049884, -0.001424100948497653, -0.001420706044882536, -0.001395971979945898, -0.0013575679622590542, -0.0013163640396669507, -0.001280845026485622, -0.0012549690436571836, -0.001239681034348905, -0.0012336750514805317, -0.0012347729643806815, -0.0012395229423418641, -0.0012444589519873261, -0.0012460430152714252, -0.0012407740578055382, -0.001226859982125461, -0.0012045910116285086, -0.0011745080118998885, -0.001138255000114441, -0.0010973189491778612, -0.0010533799650147557, -0.0010082570370286703, -0.0009648703853599727, -0.0009269469883292913, -0.0008989315247163177, -0.0008844021940603852, -0.0008841789094731212, -0.0008963432046584785, -0.0009170342236757278, -0.0009425070020370185, -0.0009692530147731304, -0.0009938530856743455, -0.0010148780420422554, -0.0010324650211259723, -0.0010488659609109163, -0.0010664990404620767, -0.0010871399426832795, -0.0011101820273324847, -0.0011315100127831101, -0.0011457139626145363, -0.0011490460019558668, -0.001141211949288845, -0.0011256779544055462, -0.0011081829434260726, -0.0010965720284730196, -0.001096604042686522, -0.0011078569805249572, -0.0011257600272074342, -0.0011460409732535481, -0.0011653989786282182, -0.001181654050014913, -0.001194800017401576, -0.00120760896243155, -0.0012223890516906977, -0.0012383810244500637, -0.0012524520279839635, -0.0012598569737747312, -0.0012568540405482054, -0.0012417590478435159, -0.001215268042869866, -0.0011803379748016596, -0.001142291002906859, -0.0011072979541495442, -0.0010815459536388516, -0.0010713479714468122, -0.0010815670248121023, -0.0011142570292577147, -0.0011700349859893322, -0.0012478550197556615, -0.0013457350432872772, -0.0014630459481850266, -0.001599426963366568, -0.0017524920403957367, -0.001915434026159346, -0.002076338045299053, -0.0022198930382728577, -0.0023314340505748987, -0.002404669066891074, -0.0024420490954071283, -0.0024516889825463295, -0.002443956909701228, -0.0024294829927384853, -0.0024179129395633936, -0.0024159180466085672, -0.002423844998702407, -0.0024355780333280563, -0.0024423389695584774, -0.0024359289091080427, -0.0024137140717357397, -0.002377820899710059, -0.002334210090339184, -0.0022922379430383444, -0.0022604248952120543, -0.002244661096483469, -0.002247791038826108, -0.0022684920113533735, -0.002299825893715024, -0.002330936025828123, -0.002352295909076929, -0.0023591730277985334, -0.0023504009004682302, -0.0023284279741346836, -0.0023009139113128185, -0.002277117921039462, -0.0022654940839856863, -0.002270098077133298, -0.00228696595877409, -0.0023043761029839516, -0.0023109489120543003, -0.0023036589846014977, -0.0022831859532743692, -0.002249205019325018, -0.0021990900859236717, -0.002133843954652548, -0.00206208904273808, -0.0019945339299738407, -0.00193869904614985, -0.0018960949964821339, -0.0018642659997567534, -0.0018409669864922762, -0.0018237050389871001, -0.0018062740564346313, -0.001779597019776702, -0.0017373920418322086, -0.0016772180097177625, -0.0015999199822545052, -0.0015100579475983977, -0.0014134430093690753, -0.0013159209629520774, -0.0012253000168129802, -0.0011505819857120514, -0.0010997869540005922, -0.001075788983143866, -0.0010751780355349183, -0.0010873000137507915, -0.0010984999826177955, -0.0010971640003845096, -0.0010781349847093225, -0.0010439850157126784, -0.0010011260164901614, -0.000957871787250042, -0.0009206333197653294, -0.0008917006780393422, -0.0008709502872079611, -0.0008566383039578795, -0.0008450868772342801, -0.0008314874721691012, -0.0008120003039948642, -0.0007839411264285445, -0.0007468775729648769, -0.0007014824077486992, -0.0006494529079645872, -0.000593179720453918, -0.0005363016971386969, -0.0004813543055206537, -0.00042867069714702666, -0.00037829650682397187, -0.00033103080932050943, -0.00028756039682775736, -0.0002469315950293094, -0.0002080348931485787, -0.00017247340292669833, -0.00014220470620784909, -0.00011703879863489419, -9.495358244748786e-05, -7.378414738923311e-05, -5.355379107641056e-05, -3.5176701203454286e-05, -1.917018926178571e-05, -3.801522098001442e-06, 1.4750499758520164e-05, 3.9894101064419374e-05, 7.499824278056622e-05, 0.00012200210039736703, 0.00018063159950543195, 0.00024725220282562077, 0.00031662159017287195, 0.0003823305887635797, 0.0004407280939631164, 0.000490961188916117, 0.0005315669113770127, 0.0005602330202236772, 0.0005760117783211172, 0.0005824001273140311, 0.0005854637129232287, 0.000589480681810528, 0.000595823978073895, 0.0006064104964025319, 0.0006260990048758686, 0.0006595936720259488, 0.0007100658840499818, 0.0007769637159071863, 0.0008557420806027949, 0.000939682824537158, 0.0010225640144199133, 0.0010991089511662722, 0.001166102010756731, 0.0012229450512677431, 0.0012719070073217154, 0.0013175460044294596, 0.001365027972497046, 0.0014179670251905918, 0.0014773550210520625, 0.0015427640173584223, 0.0016132090240716934, 0.001687119947746396, 0.0017626129556447268, 0.0018366359872743487, 0.0019068759866058826, 0.0019739139825105667, 0.0020368481054902077, 0.002090177033096552, 0.002126729115843773, 0.0021422419231384993, 0.0021359079983085394, 0.0021102139726281166, 0.002072240924462676, 0.0020337249152362347, 0.0020086849108338356, 0.0020062599796801805, 0.002027380047366023, 0.0020664879120886326, 0.002113365102559328, 0.0021568029187619686, 0.002188391052186489, 0.0022060370538383722, 0.002211431972682476, 0.0022072698920965195, 0.002195626962929964, 0.002179990988224745, 0.0021651210263371468, 0.0021531700622290373, 0.00214347499422729, 0.002132958034053445, 0.0021184440702199936, 0.002097429009154439, 0.0020690090022981167, 0.0020342341158539057, 0.0019958470948040485, 0.0019575110636651516, 0.001921887043863535, 0.0018905450124293566, 0.0018638119800016284, 0.0018428879557177424, 0.0018307809950783849, 0.0018306829733774066, 0.0018454940291121602, 0.001875177025794983, 0.0019156630150973797, 0.001958712935447693, 0.001994447084143758, 0.002014702884480357, 0.002016400918364525, 0.002000917913392186, 0.001972234109416604, 0.001935487031005323, 0.0018947579665109515, 0.001854822039604187, 0.0018200669437646866, 0.0017935089999809861, 0.0017750930273905396, 0.0017597749829292297, 0.0017419690266251564, 0.0017200120491907, 0.0016954209422692657, 0.0016711610369384289, 0.0016500779893249273, 0.0016332860104739666, 0.001622786046937108, 0.0016205740394070745, 0.0016281059943139553, 0.0016438850434496999, 0.001663816045038402, 0.0016837000148370862, 0.0016983610112220049, 0.0017038809601217508, 0.0016979980282485485, 0.0016808409709483385, 0.0016536980401724577, 0.0016196180367842317, 0.0015818839892745018, 0.001543950056657195, 0.0015098679577931762, 0.001482993015088141, 0.0014667550567537546, 0.0014615330146625638, 0.0014619269641116261, 0.001457693986594677, 0.0014374960446730256, 0.0013953819870948792, 0.0013333030510693789, 0.001257790019735694, 0.0011753319995477796, 0.0010923920199275017, 0.0010150759480893612, 0.0009481160086579621, 0.000892716518137604, 0.0008454978815279901, 0.0008009863086044788, 0.0007546931155957282, 0.000705127022229135, 0.0006538304733112454, 0.0006050686934031546, 0.000563891779165715, 0.0005346328835003078, 0.0005190870142541826, 0.000514860381372273, 0.0005170439253561199, 0.0005180910229682922, 0.0005127398180775344, 0.0005017492221668363, 0.00048784149112179875, 0.00047279050340875983, 0.0004574432969093323, 0.00044073211029171944, 0.0004202401905786246, 0.0003942688927054405, 0.0003635809989646077, 0.000331382907461375, 0.00030102088931016624, 0.0002748834958765656, 0.0002547038020566106, 0.00024039350682869554, 0.000231329002417624, 0.00022661070397589356, 0.00022252100461628288, 0.00021394589566625655, 0.00019835350394714624, 0.00017577859398443252, 0.00014617390115745366, 0.00010911539720837027, 6.49078210699372e-05, 1.4836909940640908e-05, -3.925480996258557e-05, -9.578173194313422e-05, -0.000151952393935062, -0.00020368890545796603, -0.0002487988967914134, -0.0002886755974031985, -0.00032561790430918336, -0.00036217691376805305, -0.00039996931445784867, -0.0004397958982735872, -0.0004833771090488881, -0.0005315631860867143, -0.0005822657258249819, -0.000631616625469178, -0.000676638213917613, -0.0007177985971793532, -0.0007567001157440245, -0.0007937385234981775, -0.0008285834919661283, -0.0008603322203271091, -0.0008879153174348176, -0.0009111178223975003, -0.0009312673937529325, -0.0009513195254839957, -0.0009759279200807214, -0.0010116039775311947, -0.001064733020029962, -0.0011392369633540511, -0.0012339879758656025, -0.0013416180154308677, -0.0014497640077024698, -0.0015458520501852036, -0.001623932970687747, -0.0016842179466038942, -0.0017293120035901666, -0.0017626079497858882, -0.0017866840353235602, -0.0018042799783870578, -0.001817338983528316, -0.0018263920210301876, -0.0018296809867024422, -0.0018256240291520953, -0.0018158509628847241, -0.0018044660100713372, -0.001795305055566132, -0.0017904250416904688, -0.0017886440036818385, -0.001787554007023573, -0.0017864269902929664, -0.0017861180240288377, -0.001788984052836895, -0.001795743010006845, -0.0018036030232906342, -0.0018088159849867225, -0.0018062590388581157, -0.0017901170067489147, -0.0017572720535099506, -0.0017070299945771694, -0.0016435040161013603, -0.001572591019794345, -0.0015001390129327774, -0.0014313330175355077, -0.0013704480370506644, -0.0013190590543672442, -0.0012749610468745232, -0.0012319510569795966, -0.0011818059720098972, -0.0011182170128449798, -0.0010379409650340676, -0.0009423458832316101, -0.0008366691181436181, -0.0007296265102922916, -0.0006312960758805275, -0.0005508275935426354, -0.0004944364773109555, -0.000463644799310714, -0.00045439100358635187, -0.00045806579873897135, -0.00046412908704951406, -0.0004619375104084611, -0.0004459710035007447, -0.00041669560596346855, -0.0003762024862226099, -0.0003253729082643986, -0.00026442279340699315, -0.0001917513000080362, -0.00010595769708743319, -8.863807124726009e-06, 9.204234083881602e-05, 0.00018534269474912435, 0.00025815810658968985, 0.0003012290981132537, 0.0003146732924506068, 0.0003060867020394653, 0.0002853271143976599, 0.00026039520162157714, 0.00023569360200781375, 0.00021166120131965727, 0.00018824869766831398, 0.00016698980471119285, 0.00015021109720692039, 0.00014338600158225745, 0.00015367359446827322, 0.00018434939556755126, 0.00023316880105994642, 0.0002916250959970057, 0.0003461923042777926, 0.0003821814898401499, 0.00039018038660287857, 0.00036993029061704874, 0.00032917241333052516, 0.0002799479116220027, 0.00023424449318554252, 0.00020224860054440796, 0.00018892269872594625, 0.00019241120025981218, 0.00020560830307658762, 0.00021708010172005743, 0.00021532780374400318, 0.00019291549688205123, 0.0001488520938437432, 8.704308129381388e-05, 1.5265599358826876e-05, -5.611162123386748e-05, -0.00011559580161701888, -0.00015384580183308572, -0.00016818339645396918, -0.00015975820133462548, -0.00013350069639272988, -9.587888780515641e-05, -5.347721162252128e-05, -1.0979980288539082e-05, 2.8910129913128912e-05, 6.386639142874628e-05, 9.259516082238406e-05, 0.00011386050027795136, 0.0001266861945623532, 0.0001307461061514914, 0.00012590289406944066, 0.00011135249951621518, 8.661128958920017e-05, 5.1971910579595715e-05, 8.52935863804305e-06, -4.097458077012561e-05, -9.190553100779653e-05, -0.00013992009917274117, -0.00018139960593543947, -0.00021355319768190384, -0.00023421940568368882, -0.00024237719480879605, -0.00023723120102658868, -0.00021894350356888026, -0.000192849402083084, -0.0001655985979596153, -0.0001431877026334405, -0.0001295631955144927, -0.0001261337019968778, -0.0001349117956124246, -0.0001580064999870956, -0.00019630510360002518, -0.00024683738593012094, -0.00030408569728024304, -0.00036269109114073217, -0.0004199274117127061, -0.0004755900881718844, -0.0005287830135785043, -0.0005748606054112315, -0.0006066237110644579, -0.0006235964829102159, -0.0006329757743515074, -0.0006445663166232407, -0.0006696797790937126, -0.0007166501018218696, -0.0007870362023822963, -0.0008751014829613268, -0.0009694540058262646, -0.0010577290086075664, -0.0011331080459058285, -0.0011957630049437284, -0.0012482129968702793, -0.0012934509431943297, -0.0013364680344238877, -0.0013818410225212574, -0.0014331650454550982, -0.0014955130172893405, -0.0015746239805594087, -0.001672841957770288, -0.0017875989433377981, -0.0019122420344501734, -0.002036744961515069, -0.00215139496140182, -0.002249153098091483, -0.002324942033737898, -0.002375097945332527, -0.0024022620636969805, -0.002414870075881481, -0.0024223849177360535, -0.002433832036331296, -0.002455462934449315, -0.0024885479360818863, -0.0025295999366790056, -0.0025726770982146263, -0.0026112119667232037, -0.0026404699310660362, -0.0026578400284051895, -0.0026630819775164127, -0.0026581769343465567, -0.0026473531033843756, -0.0026365420781075954, -0.002632135059684515, -0.002638390054926276, -0.002655948046594858, -0.0026838090270757675, -0.002719548065215349, -0.002759031020104885, -0.0027970969676971436, -0.002828034106642008, -0.0028465520590543747, -0.0028498780447989702, -0.002836742904037237, -0.002807913115248084, -0.0027660659980028868, -0.0027151540853083134, -0.002659175079315901, -0.0026029839646071196, -0.0025513130240142345, -0.0025060900952667, -0.0024668790865689516, -0.0024343039840459824, -0.0024094709660857916, -0.002392357913777232, -0.002381060039624572, -0.0023722751066088676, -0.002363957930356264, -0.0023569019977003336, -0.002351281000301242, -0.0023439289070665836, -0.002330886898562312, -0.002310842974111438, -0.002284236019477248, -0.0022543040104210377, -0.002226267009973526, -0.0022058850154280663, -0.0021961070597171783, -0.0021950840018689632, -0.0021979669108986855, -0.0022008230444043875, -0.0022015569265931845, -0.0021991499233990908, -0.0021913431119173765, -0.0021752279717475176, -0.0021470629144459963, -0.00210470799356699, -0.0020528289023786783, -0.0019999840296804905, -0.001956603955477476, -0.0019311909563839436, -0.0019268520409241319, -0.0019420499447733164, -0.001972106983885169, -0.0020112539641559124, -0.002051983028650284, -0.002084945095703006, -0.0021020439453423023, -0.0021017598919570446, -0.002089075045660138, -0.0020712600089609623, -0.0020559111144393682, -0.0020497310906648636, -0.0020562559366226196, -0.0020748190581798553, -0.002102317987009883, -0.002135191112756729, -0.0021722340025007725, -0.0022136240731924772, -0.0022578579373657703, -0.002301817061379552, -0.0023430739529430866, -0.0023795568849891424, -0.00240946002304554, -0.0024291779845952988, -0.0024352790787816048, -0.002427854109555483, -0.002409328008070588, -0.0023809729609638453, -0.0023442809469997883, -0.00230377702973783, -0.002262749942019582, -0.002223279094323516, -0.0021868920885026455, -0.002151927910745144, -0.002113746013492346, -0.0020680930465459824, -0.0020150430500507355, -0.0019583150278776884, -0.0019018599996343255, -0.001848733052611351, -0.001801377977244556, -0.0017616209806874394, -0.0017302479827776551, -0.0017077600350603461, -0.0016932289581745863, -0.0016836629947647452, -0.0016749639762565494, -0.0016621809918433428, -0.0016402440378442407, -0.0016064710216596723, -0.0015640540514141321, -0.0015198140172287822, -0.0014799600467085838, -0.0014485199935734272, -0.0014271290274336934, -0.0014152920339256525, -0.0014121730346232653, -0.0014143709558993578, -0.001414204016327858, -0.0014031770406290889, -0.0013767719501629472, -0.0013354599941521883, -0.0012828819453716278, -0.0012258300557732582, -0.0011714049614965916, -0.0011246829526498914, -0.0010894290171563625, -0.0010685869492590427, -0.0010644530411809683, -0.0010769510408863425, -0.0011025540297850966, -0.001136137987487018, -0.0011729110265150666, -0.0012088390067219734, -0.0012396760284900665, -0.0012605410302057862, -0.0012669500429183245, -0.0012588989920914173, -0.0012422750005498528, -0.0012261070078238845, -0.0012190600391477346, -0.0012226459803059697, -0.001231892965734005, -0.0012428299523890018, -0.001252150977961719, -0.0012576490407809615, -0.0012569800019264221, -0.0012480859877541661, -0.0012297660578042269, -0.0012024069437757134, -0.0011675619753077626, -0.0011285189539194107, -0.0010912800207734108, -0.0010613050544634461, -0.0010405000066384673, -0.0010288440389558673, -0.0010264849988743663, -0.0010323330061510205, -0.0010425850050523877, -0.001052316976711154, -0.0010580529924482107, -0.001059266971424222, -0.0010554669424891472, -0.0010447270469740033, -0.0010244440054520965, -0.0009943675249814987, -0.0009574941941536963, -0.0009173664730042219, -0.0008781467913649976, -0.0008442819234915078, -0.0008204309269785881, -0.0008105983142741024, -0.0008178526186384261, -0.0008413959876634181, -0.0008744496153667569, -0.000905657303519547, -0.0009222758817486465, -0.0009177360916510224, -0.0008940296829678118, -0.0008561440045014024, -0.0008089853799901903, -0.0007572185131721199, -0.0007068471750244498, -0.0006628197152167559, -0.0006294852937571704, -0.0006130092078819871, -0.0006179522024467587, -0.0006450157961808145, -0.000690320273861289, -0.0007445304072462022, -0.0007944703102111816, -0.0008268278907053173, -0.0008343975059688091, -0.0008171341032721102, -0.0007810196839272976, -0.0007354323170147836, -0.0006906443741172552, -0.0006594035075977445, -0.0006540984031744301, -0.0006809229962527752, -0.0007366897189058363, -0.0008109128102660179, -0.000890917785000056, -0.0009665095712989569, -0.0010310979560017586, -0.0010817890288308263, -0.00111857196316123, -0.0011445990530773997, -0.001166027970612049, -0.001188974012620747, -0.0012186130043119192, -0.0012582970084622502, -0.0013096639886498451, -0.0013704679440706968, -0.001433114055544138, -0.0014883599942550063, -0.0015317229554057121, -0.0015632159775123, -0.0015847160248085856, -0.0016012979904189706, -0.0016211170004680753, -0.0016508459812030196, -0.0016921909991651773, -0.0017411269946023822, -0.0017890880117192864, -0.0018269260181114078, -0.0018474439857527614, -0.0018477089470252395, -0.001829297048971057, -0.0017981469864025712, -0.0017624660395085812, -0.0017335800221189857, -0.0017253250116482377, -0.0017473200568929315, -0.0018020389834418893, -0.0018834959482774138, -0.001979066990315914, -0.0020733659621328115, -0.002151669003069401, -0.0022035480942577124, -0.002221754053607583, -0.0022048470564186573, -0.002161063952371478, -0.002102601109072566, -0.0020436521153897047, -0.0019991800654679537, -0.0019802520982921124, -0.001991905039176345, -0.0020338899921625853, -0.0021019820123910904, -0.0021869600750505924, -0.002274339087307453, -0.002348504960536957, -0.0023967688903212547, -0.0024092679377645254, -0.002384166931733489, -0.002330767922103405, -0.00226222793571651, -0.0021887430921196938, -0.0021159499883651733, -0.002047732938081026, -0.0019899660255759954, -0.0019488839898258448, -0.0019300980493426323, -0.0019386899657547474, -0.00197734497487545, -0.0020436099730432034, -0.002127772895619273, -0.002215903950855136, -0.002294529927894473, -0.002355078002437949, -0.0023939679376780987, -0.0024110940285027027, -0.0024078181013464928, -0.0023875560145825148, -0.0023548200260847807, -0.002313016913831234, -0.002264376962557435, -0.002211394952610135, -0.002157763112336397, -0.002109660068526864, -0.0020722888875752687, -0.002046789973974228, -0.002032618038356304, -0.0020301840268075466, -0.0020377899054437876, -0.002050396054983139, -0.0020633810199797153, -0.0020717340521514416, -0.0020701009780168533, -0.0020535460207611322, -0.0020201990846544504, -0.0019728299230337143, -0.0019161819946020842, -0.0018572249682620168, -0.0018052899977192283, -0.0017675859853625298, -0.0017488249577581882, -0.001748397946357727, -0.0017601459985598922, -0.0017757980385795236, -0.001784797990694642, -0.0017768259858712554, -0.0017449919832870364, -0.0016900500049814582, -0.0016181990504264832, -0.0015349419554695487, -0.0014447709545493126, -0.0013486719690263271, -0.0012460349826142192, -0.0011372639564797282, -0.0010272209765389562, -0.0009241212974302471, -0.0008352852892130613, -0.0007654178771190345, -0.0007155885105021298, -0.0006833733059465885, -0.0006627844995819032, -0.0006436749827116728, -0.0006128025124780834, -0.0005587046034634113, -0.00047891310532577336, -0.0003779719118028879, -0.00026535510551184416, -0.00015018389967735857, -3.9824601117288694e-05, 5.804425018141046e-05, 0.00013913109432905912, 0.0002062185958493501, 0.0002671412948984653, 0.00033176341094076633, 0.00040672539034858346, 0.0004911895957775414, 0.0005790619761683047, 0.0006635115132667124, 0.0007391684921458364, 0.0008035911014303565, 0.0008563151932321489, 0.0008976159733720124, 0.0009306303109042346, 0.0009619647171348333, 0.0009972859406843781, 0.0010401520412415266, 0.0010909880511462688, 0.001148344948887825, 0.001209696987643838, 0.0012703080428764224, 0.0013243269640952349, 0.0013650209875777364, 0.0013869509566575289, 0.0013906649546697736, 0.0013839909806847572, 0.0013787290081381798, 0.0013858979800716043, 0.0014139419654384255, 0.0014658150030300021, 0.001534439972601831, 0.0016071610152721405, 0.0016725610475987196, 0.0017235149862244725, 0.001757442019879818, 0.0017762399511411786, 0.0017859629588201642, 0.0017931950278580189, 0.0018010300118476152, 0.0018097179709002376, 0.0018174239667132497, 0.0018215449526906013, 0.0018202710198238492, 0.0018153010169044137, 0.0018117360305041075, 0.0018128990195691586, 0.0018190910341218114, 0.0018303639953956008, 0.0018464589957147837, 0.0018673569429665804, 0.0018926489865407348, 0.001922045019455254, 0.001954978099092841, 0.0019890109542757273, 0.0020214859396219254, 0.002051080111414194, 0.002079190919175744, 0.002109010936692357, 0.002143062883988023, 0.002179943025112152, 0.002216470893472433, 0.0022488709073513746, 0.0022719870321452618, 0.0022822159808129072, 0.002279631095007062, 0.0022663830313831568, 0.002243734896183014, 0.0022137409541755915, 0.0021817460656166077, 0.0021534000989049673, 0.0021289840806275606, 0.00210845610126853, 0.0020955679938197136, 0.0020949579775333405, 0.002108926884829998, 0.0021378579549491405, 0.0021812659688293934, 0.0022360149305313826, 0.0022971429862082005, 0.0023561979178339243, 0.0024038651026785374, 0.0024324089754372835, 0.0024376490619033575, 0.002419847995042801, 0.0023850470315665007, 0.002342205960303545, 0.0022998868953436613, 0.0022631490137428045, 0.002232349943369627, 0.0022057299502193928, 0.002181808929890394, 0.0021621088963001966, 0.0021487621124833822, 0.0021455700043588877, 0.002157794078812003, 0.002185869961977005, 0.0022271969355642796, 0.0022771479561924934, 0.0023298319429159164, 0.0023774520959705114, 0.002410565037280321, 0.002423064084723592, 0.002415566937997937, 0.002395601011812687, 0.002371269976720214, 0.002345900982618332, 0.0023191110230982304, 0.002287191106006503, 0.0022477370221167803, 0.002204804914072156, 0.0021679119672626257, 0.0021439041011035442, 0.0021331130992621183, 0.0021315061021596193, 0.0021341999527066946, 0.002140012104064226, 0.0021499800495803356, 0.0021660709753632545, 0.002190082101151347, 0.0022211100440472364, 0.0022567769046872854, 0.0022924260701984167, 0.0023228831123560667, 0.002343535888940096, 0.0023506039287894964, 0.0023406059481203556, 0.002313121920451522, 0.0022751770447939634, 0.0022370850201696157, 0.0022072959691286087, 0.002191286999732256, 0.002190682105720043, 0.0022026579827070236, 0.0022202921099960804, 0.002236028900370002, 0.002243337919935584, 0.002239213092252612, 0.002225646050646901, 0.002207903889939189, 0.002191101899370551, 0.002175823086872697, 0.0021593880373984575, 0.0021410530898720026, 0.0021250920835882425, 0.0021194471046328545, 0.002131880959495902, 0.0021643040236085653, 0.0022103500086814165, 0.002259280998259783, 0.0023010449949651957, 0.0023292088881134987, 0.0023403901141136885, 0.0023349360562860966, 0.002317362930625677, 0.0022942449431866407, 0.0022718010004609823, 0.0022556770127266645, 0.002248629927635193, 0.002250378020107746, 0.002260196954011917, 0.0022775379475206137, 0.0023032650351524353, 0.0023375831078737974, 0.0023779980838298798, 0.0024216650053858757, 0.002466941950842738, 0.002512721111997962, 0.002558116102591157, 0.0026019581127911806, 0.002642515115439892, 0.0026781680062413216, 0.00270565296523273, 0.00271885609254241, 0.0027149540837854147, 0.002696353942155838, 0.0026672629173845053, 0.0026321960613131523, 0.0025951829738914967, 0.002560212044045329, 0.0025301610585302114, 0.002508081030100584, 0.0024956720881164074, 0.00249147298745811, 0.002493500942364335, 0.002500335918739438, 0.002512529958039522, 0.0025321058928966522, 0.00256091495975852, 0.0025977089535444975, 0.002637763973325491, 0.002675748895853758, 0.0027070411015301943, 0.0027280698996037245, 0.002737568924203515, 0.0027355600614100695, 0.0027218160685151815, 0.0026977011002600193, 0.0026651991065591574, 0.002628647955134511, 0.0025959359481930733, 0.0025746070314198732, 0.002568929921835661, 0.002576129976660013, 0.0025875219143927097, 0.002595518948510289, 0.002596959937363863, 0.0025924560613930225, 0.0025830899830907583, 0.0025700998958200216, 0.002553957048803568, 0.0025349019560962915, 0.0025126999244093895, 0.0024877830874174833, 0.0024613169953227043, 0.002432529116049409, 0.0024001318961381912, 0.002362082013860345, 0.0023181510623544455, 0.0022706619929522276, 0.00222163088619709, 0.0021733141038566828, 0.0021269419230520725, 0.002083390951156616, 0.00204284000210464, 0.0020034140907227993, 0.0019637190271168947, 0.001923228963278234, 0.0018814780050888658, 0.0018395220395177603, 0.0017985750455409288, 0.001757150050252676, 0.001713122008368373, 0.0016629870515316725, 0.0016037860186770558, 0.001538221025839448, 0.0014734190190210938, 0.001419764943420887, 0.0013858280144631863, 0.0013753559906035662, 0.0013887359527871013, 0.0014204089529812336, 0.0014621280133724213, 0.0015037680277600884, 0.0015370820183306932, 0.0015578060410916805, 0.0015650260029360652, 0.0015604749787598848, 0.0015452899970114231, 0.0015212709549814463, 0.0014938770327717066, 0.0014717200538143516, 0.001462677028030157, 0.0014720519538968801, 0.0015010599745437503, 0.0015497090062126517, 0.0016168319853022695, 0.0016965479589998722, 0.0017798109911382198, 0.0018549349624663591, 0.0019115889444947243, 0.0019429170060902834, 0.0019440300529822707, 0.0019156700000166893, 0.0018648989498615265, 0.0017998990369960666, 0.0017291740514338017, 0.001660587964579463, 0.001602404983714223, 0.00156251504085958, 0.0015452089719474316, 0.001548529020510614, 0.0015655539464205503, 0.0015883210580796003, 0.0016077449545264244, 0.001615412998944521, 0.001606942038051784, 0.0015822279965505004, 0.0015451499493792653, 0.00150351005140692, 0.0014652470126748085, 0.0014329280238598585, 0.0014039929956197739, 0.001373586943373084, 0.0013367390492931008, 0.0012900360161438584, 0.0012322829570621252, 0.0011646579951047897, 0.0010903090005740523, 0.0010139050427824259, 0.0009413068764843047, 0.0008773956215009093, 0.0008237048168666661, 0.0007798384758643806, 0.0007463057991117239, 0.00072345050284639, 0.0007117001223377883, 0.0007078577182255685, 0.0007008604006841779, 0.0006798147805966437, 0.0006410133792087436, 0.0005899015231989324, 0.0005391634767875075, 0.0005032895714975893, 0.0004899551859125495, 0.0004952059825882316, 0.0005078972899354994, 0.0005175371188670397, 0.0005182902095839381, 0.0005081577110104263, 0.0004879925982095301, 0.00046020428999327123, 0.0004305063921492547, 0.0004072909941896796, 0.00039795361226424575, 0.0004062411026097834, 0.00042842200491577387, 0.0004564985865727067, 0.0004829817044083029, 0.0005035297945141792, 0.0005173927056603134, 0.0005251879920251667, 0.0005266816006042063, 0.0005221018218435347, 0.0005132147925905883, 0.0005011826287955046, 0.00048431329196318984, 0.00045883809798397124, 0.00042384350672364235, 0.00038402850623242557, 0.0003486856003291905, 0.00032910049776546657, 0.00033356848871335387, 0.00036406650906428695, 0.00041654478991404176, 0.00048376841004937887, 0.0005590189248323441, 0.0006357547244988382, 0.0007079694769345224, 0.0007699084817431867, 0.0008167537744157016, 0.0008454715716652572, 0.0008547732140868902, 0.0008476481889374554, 0.00083099992480129, 0.0008124219020828605, 0.0007972979219630361, 0.0007867987151257694, 0.0007805207278579473, 0.0007818524027243257, 0.0007986798882484436, 0.0008377170888707042, 0.000899348990060389, 0.0009752807090990245, 0.0010519439820200205, 0.0011182710295543075, 0.0011686719954013824, 0.001201701001264155, 0.0012174779549241066, 0.0012173899449408054, 0.0012053040554746985, 0.0011864859843626618, 0.0011672769905999303, 0.0011536739766597748, 0.0011485860450193286, 0.0011524149449542165, 0.0011629400542005897, 0.0011782570509240031, 0.001198449986986816, 0.0012241400545462966, 0.001254384987987578, 0.0012886460172012448, 0.001326733035966754, 0.0013677410315722227, 0.001408752053976059, 0.0014467800501734018, 0.0014806570252403617, 0.0015127570368349552, 0.0015477919951081276, 0.0015896830009296536, 0.0016402980545535684, 0.0016972189769148827, 0.0017529899487271905, 0.0018002010183408856, 0.001835947041399777, 0.001862318953499198, 0.001883444027043879, 0.0019015530124306679, 0.0019181070383638144, 0.001933988998644054, 0.0019486000528559089, 0.0019620959646999836, 0.001975849037989974, 0.0019917921163141727, 0.002011111006140709, 0.0020318040624260902, 0.002050091978162527, 0.0020602659787982702, 0.0020576389506459236, 0.0020429259166121483, 0.0020224980544298887, 0.002005469985306263, 0.002000499051064253, 0.0020112579222768545, 0.00203598290681839, 0.002070765011012554, 0.0021095150150358677, 0.0021443860605359077, 0.0021704519167542458, 0.0021875249221920967, 0.002198433969169855, 0.0022051450796425343, 0.002205335069447756, 0.002194528002291918, 0.0021698379423469305, 0.0021321489475667477, 0.0020872640889137983, 0.0020441939122974873, 0.0020100129768252373, 0.0019862910266965628, 0.0019713970832526684, 0.0019633180927485228, 0.0019611939787864685, 0.0019626340363174677, 0.0019633739721029997, 0.0019609429873526096, 0.001954232109710574, 0.00194352597463876, 0.0019299420528113842, 0.001915876055136323, 0.0019039269536733627, 0.001895583001896739, 0.001889607054181397, 0.0018825649749487638, 0.0018706240225583315, 0.0018515799893066287, 0.0018249599961563945, 0.001790364971384406, 0.0017472639447078109, 0.001694898004643619, 0.001633396022953093, 0.0015641739591956139, 0.0014890050515532494, 0.0014096059603616595, 0.0013278849655762315, 0.001245431019924581, 0.0011641000164672732, 0.0010864690411835909, 0.0010157240321859717, 0.0009547374211251736, 0.0009044036269187927, 0.0008609734941273928, 0.0008176951087079942, 0.0007673790096305311, 0.0007071312866173685, 0.0006417579133994877, 0.0005791173898614943, 0.0005257510929368436, 0.00048284430522471666, 0.0004459033953025937, 0.00040800400893203914, 0.00036239810287952423, 0.00030793860787525773, 0.00024928589118644595, 0.00019327409972902387, 0.00014451669994741678, 0.00010058849875349551, 5.552470975089818e-05, 4.011497821920784e-06, -5.763953959103674e-05, -0.00013191609468776733, -0.00021884069428779185, -0.0003160329069942236, -0.00041915950714610517, -0.0005238379817456007, -0.0006293985061347485, -0.0007378999143838882, -0.0008496204973198473, -0.0009609936969354749, -0.0010679200058802962, -0.0011679379967972636, -0.001258883043192327, -0.0013400099705904722, -0.0014123870059847832, -0.0014765169471502304, -0.0015320410020649433, -0.0015795649960637093, -0.0016223849961534142, -0.001667537959292531, -0.0017221589805558324, -0.0017901830142363906, -0.0018708299612626433, -0.001958967885002494, -0.0020473420154303312, -0.002129774075001478, -0.002203725976869464, -0.0022689090110361576, -0.002326336922124028, -0.0023784060031175613, -0.0024313319008797407, -0.0024935940746217966, -0.0025739639531821012, -0.0026762390043586493, -0.0027981260791420937, -0.0029325371142476797, -0.0030691269785165787, -0.003197154961526394, -0.003305637976154685, -0.003385107032954693, -0.0034325208980590105, -0.003452124074101448, -0.003453363897278905, -0.0034451859537512064, -0.003435299964621663, -0.0034302358981221914, -0.003433859907090664, -0.0034487079828977585, -0.0034733859356492758, -0.00350114400498569, -0.003522861050441861, -0.0035304520279169083, -0.003518274985253811, -0.003483884036540985, -0.0034278349485248327, -0.0033543019089847803, -0.003270169021561742, -0.0031856331042945385, -0.0031131869181990623, -0.003064991906285286, -0.003047896083444357, -0.003060064045712352, -0.0030931918881833553, -0.003134174970909953, -0.0031686059664934874, -0.003186027053743601, -0.0031799960415810347, -0.003149759955704212, -0.003099554916843772, -0.003034787019714713, -0.002960389945656061, -0.002880251035094261, -0.002799978945404291, -0.002723750891163945, -0.002653698902577162, -0.0025914038997143507, -0.0025356169790029526, -0.0024837451055645943, -0.002431974047794938, -0.002376137999817729, -0.0023124380968511105, -0.0022409209050238132, -0.00216692709363997, -0.0020975000225007534, -0.002040558960288763, -0.002002107910811901, -0.0019846290815621614, -0.001984952948987484, -0.0019967169500887394, -0.0020120630506426096, -0.002020864048972726, -0.0020146858878433704, -0.0019847380463033915, -0.0019260910339653492, -0.0018430879572406411, -0.0017464139964431524, -0.0016484089428558946, -0.0015598329482600093, -0.0014882610412314534, -0.001436920021660626, -0.0014069429598748684, -0.0013971710577607155, -0.0014042180264368653, -0.0014240610180422664, -0.0014524719445034862, -0.001485339947976172, -0.0015178140019997954, -0.0015456960536539555, -0.0015660549979656935, -0.0015786669682711363, -0.0015839299885556102, -0.0015831280034035444, -0.0015791900223121047, -0.0015737010398879647, -0.0015671560540795326, -0.0015583679778501391, -0.001544423052109778, -0.0015201680362224579, -0.0014825549442321062, -0.0014334189472720027, -0.001377503969706595, -0.001322875963523984, -0.001277719042263925, -0.0012462950544431806, -0.0012289440492168069, -0.001222398946993053, -0.0012209919514134526, -0.0012194280279800296, -0.0012125270441174507, -0.0011960120173171163, -0.0011668310035020113, -0.0011247099610045552, -0.0010744499741122127, -0.0010247670579701662, -0.0009864730527624488, -0.0009668786078691483, -0.0009663187083788216, -0.0009790905751287937, -0.0009978157468140125, -0.0010166219435632229, -0.0010344210313633084, -0.0010533110471442342, -0.00107634998857975, -0.0011057129595428705, -0.0011413940228521824, -0.0011794640449807048, -0.001213481999002397, -0.0012395030353218317, -0.0012559030437842011, -0.0012628840049728751, -0.0012614179868251085, -0.0012531219981610775, -0.0012399699771776795, -0.0012256479822099209, -0.0012133950367569923, -0.001205479959025979, -0.0012017360422760248, -0.0011989700142294168, -0.0011938050156459212, -0.0011846680426970124, -0.0011741049820557237, -0.0011664109770208597, -0.0011641030432656407, -0.0011673930566757917, -0.0011755089508369565, -0.0011872570030391216, -0.0011991820065304637, -0.0012062479509040713, -0.0012044110335409641, -0.0011938420357182622, -0.0011781740467995405, -0.0011630839435383677, -0.0011555190430954099, -0.001161981956101954, -0.0011868010042235255, -0.0012299399822950363, -0.0012875819811597466, -0.001351882005110383, -0.0014133789809420705, -0.0014642470050603151, -0.0014985930174589157, -0.0015129459789022803, -0.0015065600164234638, -0.0014804430538788438, -0.0014372889418154955, -0.0013814809499308467, -0.001320132054388523, -0.0012637339532375336, -0.0012231790460646152, -0.0012054400285705924, -0.0012115909485146403, -0.0012376379454508424, -0.0012768539600074291, -0.0013213210040703416, -0.001359916990622878, -0.0013815580168738961, -0.0013818050501868129, -0.001359208021312952, -0.0013161799870431423, -0.001263994025066495, -0.0012159580364823341, -0.0011815590551123023, -0.001164378016255796, -0.0011627740459516644, -0.0011737559689208865, -0.0011952159693464637, -0.0012238039635121822, -0.0012545989593490958, -0.0012831309577450156, -0.001307378988713026, -0.001326987985521555, -0.0013432910200208426, -0.0013558289501816034, -0.001361698959954083, -0.0013568829745054245, -0.0013378469739109278, -0.0013019329635426402, -0.0012507779756560922, -0.0011912459740415215, -0.0011333329603075981, -0.0010850969702005386, -0.0010494779562577605, -0.0010249640326946974, -0.0010066879913210869, -0.000987798091955483, -0.0009616594761610031, -0.0009247052948921919, -0.000877786020282656, -0.0008269384270533919, -0.0007801178144291043, -0.0007435310981236398, -0.0007202508277259767, -0.0007096994086168706, -0.0007087389240041375, -0.0007122256211005151, -0.0007133521721698344, -0.0007059324998408556, -0.0006842418806627393, -0.0006426143809221685, -0.0005773936281912029, -0.0004900341737084091, -0.00038826558738946915, -0.0002826665004249662, -0.00018388210446573794, -9.973996202461421e-05, -3.3199590689036995e-05, 1.758954931574408e-05, 5.7990531786344945e-05, 9.550640970701352e-05, 0.0001374335988657549, 0.0001869925035862252, 0.0002434271009406075, 0.00030362969846464694, 0.0003631967992987484, 0.000420011900132522, 0.00047380028991028666, 0.0005237736040726304, 0.0005703294882550836, 0.0006153009016998112, 0.0006586245144717395, 0.0006982092745602131, 0.0007308732019737363, 0.0007555445190519094, 0.0007759046857245266, 0.0007984716212376952, 0.0008291663252748549, 0.0008710926049388945, 0.0009226276888512075, 0.0009784403955563903, 0.0010304399766027927, 0.001072583021596074, 0.001103356946259737, 0.0011237780563533306, 0.0011360079515725374, 0.0011450620368123055, 0.001156045007519424, 0.0011726190568879247, 0.0011954159708693624, 0.0012211799621582031, 0.0012452630326151848, 0.001261575031094253, 0.0012666239636018872, 0.0012622399954125285, 0.0012549830134958029, 0.001253715017810464, 0.0012656720355153084, 0.0012951670214533806, 0.001342238043434918, 0.0014024339616298676, 0.001466228044591844, 0.0015225299866870046, 0.0015621479833498597, 0.0015791590558364987, 0.001571101020090282, 0.0015395720256492496, 0.0014922210248187184, 0.0014421379892155528, 0.0014018589863553643, 0.0013786100316792727, 0.0013714369852095842, 0.0013767300406470895, 0.0013923969818279147, 0.0014148550108075142, 0.0014397019986063242, 0.0014652980025857687, 0.0014926400035619736, 0.0015222750371322036, 0.0015498159918934107, 0.0015682120574638247, 0.0015726200072094798, 0.0015606350498273969, 0.001532503985799849, 0.0014913029735907912, 0.00144409597851336, 0.0014005639823153615, 0.0013676759554073215, 0.0013494410086423159, 0.001349181984551251, 0.0013680249685421586, 0.0014047779841348529, 0.001455932972021401, 0.0015172340208664536, 0.0015842110151425004, 0.0016505050007253885, 0.0017065979773178697, 0.0017422409728169441, 0.0017499929526820779, 0.0017266500508412719, 0.0016746210167184472, 0.001604274963028729, 0.001529813976958394, 0.0014624020550400019, 0.0014088860480114818, 0.0013723080046474934, 0.0013535449979826808, 0.0013516199542209506, 0.0013649150496348739, 0.0013907949905842543, 0.0014261320466175675, 0.0014655840350314975, 0.0015034930547699332, 0.0015349100576713681, 0.001556989038363099, 0.0015688349958509207, 0.0015703310491517186, 0.0015641150530427694, 0.0015565870562568307, 0.0015555189456790686, 0.001566688995808363, 0.0015923379687592387, 0.001630250015296042, 0.0016757410485297441, 0.0017235289560630918, 0.0017687149811536074, 0.0018070780206471682, 0.0018347450532019138, 0.001849589985795319, 0.0018522520549595356, 0.0018452489748597145, 0.001832098001614213, 0.0018192409770563245, 0.0018123829504474998, 0.0018108610529452562, 0.001810761052183807, 0.001810310990549624, 0.0018113020341843367, 0.0018161919433623552, 0.0018248920096084476, 0.0018348220037296414, 0.0018447489710524678, 0.0018564859637990594, 0.001873609027825296, 0.0018991270335391164, 0.001934112049639225, 0.0019748059567064047, 0.0020160500425845385, 0.002052746945992112, 0.0020815751049667597, 0.0021026390604674816, 0.002119662007316947, 0.0021379480604082346, 0.0021601750049740076, 0.0021869689226150513, 0.002216761000454426, 0.0022475249134004116, 0.0022768990602344275, 0.0023029448930174112, 0.0023250929079949856, 0.0023459559306502342, 0.0023708681110292673, 0.0024023118894547224, 0.0024366439320147038, 0.002468547085300088, 0.002494517946615815, 0.002511925995349884, 0.0025175679475069046, 0.0025116349570453167, 0.002499595982953906, 0.0024890799541026354, 0.0024856249801814556, 0.0024897539988160133, 0.0024987279903143644, 0.002508854027837515, 0.002512664068490267, 0.002500783884897828, 0.002468511927872896, 0.0025361289735883474, 0.002471808111295104, 0.002402741927653551, 0.0023358329199254513, 0.0022766978945583105, 0.0022280460689216852, 0.0021905770990997553, 0.0021642730571329594, 0.002146294107660651, 0.00213194009847939, 0.0021179961040616035, 0.0021025550086051226, 0.0020815960597246885, 0.0020489979069679976, 0.0020002119708806276, 0.0019362489692866802, 0.0018629459664225578, 0.0017865749541670084, 0.0017116230446845293, 0.0016428929520770907, 0.0015844169538468122, 0.0015396219678223133, 0.0015115919522941113, 0.0015032689552754164, 0.0015128159429877996, 0.0015310420421883464, 0.00154819805175066, 0.0015570300165563822, 0.00155361695215106, 0.0015368950553238392, 0.0015059680445119739, 0.0014625820331275463, 0.0014123220462352037, 0.001364251016639173, 0.0013292660005390644, 0.0013156679924577475, 0.0013246439630165696, 0.0013522569788619876, 0.0013911649584770203, 0.0014318459434434772, 0.0014662969624623656, 0.00149031903129071, 0.0015039050485938787, 0.0015100289601832628, 0.0015134729910641909, 0.0015201859641820192, 0.0015332140028476715, 0.001549907959997654, 0.0015656229807063937, 0.0015775479841977358, 0.0015856409445405006, 0.0015908180503174663, 0.0015923569444566965, 0.001590820960700512, 0.0015893559902906418, 0.0015905230538919568, 0.0015962700126692653, 0.0016087000258266926, 0.0016286630416288972, 0.0016527960542589426, 0.0016732889926061034, 0.001682383008301258, 0.0016736099496483803, 0.0016436469741165638, 0.0015965759521350265, 0.0015450200298801064, 0.0015045090112835169, 0.0014848409919068217, 0.0014880510279908776, 0.0015076090348884463, 0.0015334079507738352, 0.001554433023557067, 0.0015621799975633621, 0.001554075046442449, 0.001532873953692615, 0.001505495049059391, 0.0014794700546190143, 0.0014595210086554289, 0.001447828020900488, 0.001442415057681501, 0.0014396719634532928, 0.0014372760197147727, 0.0014345899689942598, 0.001430902979336679, 0.001424705027602613, 0.0014152670046314597, 0.0014022879768162966, 0.001386065036058426, 0.0013674870133399963, 0.0013478449545800686, 0.0013286860194057226, 0.0013107949635013938, 0.001293409033678472, 0.001275280024856329, 0.001254018978215754, 0.0012274719774723053, 0.0011953309876844287, 0.001159181003458798, 0.0011186939664185047, 0.0010732610244303942, 0.0010243209544569254, 0.0009751038742251694, 0.000930700683966279, 0.0008976758108474314, 0.000882653403095901, 0.0008922960259951651, 0.0009284929255954921, 0.000984886079095304, 0.0010502260411158204, 0.0011128400219604373, 0.001161359017714858, 0.001187094021588564, 0.0011864149710163474, 0.0011619050055742264, 0.0011218000436201692, 0.0010778489522635937, 0.0010423989733681083, 0.00102549500297755, 0.0010312719969078898, 0.0010586290154606104, 0.0011032610200345516, 0.0011600169818848372, 0.0012265309924259782, 0.0013023769715800881, 0.0013852600241079926, 0.0014690370298922062, 0.0015430960338562727, 0.0015956100542098284, 0.0016170500312000513, 0.0016041089547798038, 0.0015633460134267807, 0.0015087570063769817, 0.0014568079495802522, 0.0014221209567040205, 0.0014096900122240186, 0.0014123390428721905, 0.0014196040574461222, 0.001425144961103797, 0.0014298040186986327, 0.0014378350460901856, 0.0014516890514642, 0.0014713000273332, 0.0014927230076864362, 0.001509596942923963, 0.0015167760429903865, 0.0015138749731704593, 0.0015039639547467232, 0.0014911979669705033, 0.0014791389694437385, 0.0014689459931105375, 0.0014574190136045218, 0.0014389059506356716, 0.001408530049957335, 0.0013642499689012766, 0.001307999948039651, 0.0012460009893402457, 0.0011876419885084033, 0.001139865955337882, 0.0011031939648091793, 0.0010747499763965607, 0.0010519339703023434, 0.0010331739904358983, 0.00101629295386374, 0.0009987709345296025, 0.0009772722842171788, 0.0009488461073487997, 0.0009128397796303034, 0.0008700307225808501, 0.0008212748798541725, 0.0007680932176299393, 0.0007138624205254018, 0.0006623915978707373, 0.0006146114901639521, 0.0005696169100701809, 0.0005276828887872398, 0.0004903092049062252, 0.0004585440910886973, 0.0004328495997469872, 0.000411490211263299, 0.000391566805774346, 0.00037106600939296186, 0.0003494161937851459, 0.00032740310416556895, 0.0003051588137168437, 0.00028178931097500026, 0.0002563243906479329, 0.00022684529540129006, 0.00019382679602131248, 0.00015902440645731986, 0.00012146579683758318, 7.845636719139293e-05, 2.7553749532671645e-05, -3.2989741157507524e-05, -0.00010328060307074338, -0.0001825438957894221, -0.00026756711304187775, -0.00034976049209944904, -0.00041990779573097825, -0.00047500801156274974, -0.0005200189189054072, -0.0005630567902699113, -0.0006092634284868836, -0.000660211022477597, -0.0007131061283871531, -0.00076215312583372, -0.0008038742234930396, -0.0008385683177039027, -0.0008689644746482372, -0.0008993832161650062, -0.000931602728087455, -0.0009630008134990931, -0.0009878157870844007, -0.0010050969431176782, -0.0010185909923166037, -0.0010310140205547214, -0.0010435000294819474, -0.0010567860445007682, -0.001071296981535852, -0.0010887030512094498, -0.0011115840170532465, -0.0011421709787100554, -0.0011829710565507412, -0.0012350310571491718, -0.0012974359560757875, -0.001365924021229148, -0.0014337570173665881, -0.0014953690115362406, -0.0015473259845748544, -0.0015899139689281583, -0.0016269549960270524, -0.0016629910096526146, -0.0017015580087900162, -0.0017431889427825809, -0.0017857420025393367, -0.0018273070454597473, -0.0018658350454643369, -0.0019009719835594296, -0.0019351090304553509, -0.0019741379655897617, -0.0020236950367689133, -0.0020861730445176363, -0.002159788040444255, -0.002239326946437359, -0.002318908926099539, -0.0023944799322634935, -0.002463317010551691, -0.002519587054848671, -0.0025579710491001606, -0.002578645944595337, -0.0025855349376797676, -0.002585724927484989, -0.0025854650884866714, -0.0025860678870230913, -0.0025863531045615673, -0.0025865440256893635, -0.0025888129603117704, -0.0025962560903280973, -0.0026089639868587255, -0.0026227240450680256, -0.002632681978866458, -0.0026353299617767334, -0.0026273969560861588, -0.0026078480295836926, -0.0025806839112192392, -0.002553770085796714, -0.002535673091188073, -0.002532840007916093, -0.0025468599051237106, -0.002575397025793791, -0.002612855052575469, -0.002649361966177821, -0.002674063900485635, -0.002680771052837372, -0.002670814050361514, -0.002650290960446, -0.002627322915941477, -0.002611452015116811, -0.002610132098197937, -0.002625561086460948, -0.002652958035469055, -0.002683660015463829, -0.0027117719873785973, -0.002735756104812026, -0.0027547660283744335, -0.002767707919701934, -0.0027727459091693163, -0.0027684590313583612, -0.002755572088062763, -0.002736492082476616, -0.0027160081081092358, -0.0027009700424969196, -0.0026950330939143896, -0.0026971730403602123, -0.0027043360751122236, -0.0027127598877996206, -0.0027203999925404787, -0.002726695965975523, -0.002729235915467143, -0.0027247590478509665, -0.002714558970183134, -0.0027039649430662394, -0.002697665011510253, -0.002696847077459097, -0.002699580043554306, -0.0027036629617214203, -0.0027077309787273407, -0.00270866509526968, -0.0027012780774384737, -0.002681101905182004, -0.0026456268969923258, -0.0025967040564864874, -0.002540129004046321, -0.002482543932273984, -0.0024264189414680004, -0.0023711149115115404, -0.002317958977073431, -0.0022663769777864218, -0.0022119549103081226, -0.00214834394864738, -0.002072240924462676, -0.001984850037842989, -0.0018901580478996038, -0.00179477094206959, -0.0017041109967976809, -0.0016205300344154239, -0.001543074962683022, -0.00147058698348701, -0.0014032910112291574, -0.0013387450017035007, -0.0012714120093733072, -0.0011970560299232602, -0.0011164259631186724, -0.001033973996527493, -0.0009571692207828164, -0.0008945284062065184, -0.000848504074383527, -0.0008116269018501043, -0.000771409017033875, -0.0007170977187342942, -0.0006435901741497219, -0.0005570029024966061, -0.000472285901196301, -0.0004026136011816561, -0.0003533062990754843, -0.0003202912921551615, -0.00029322190675884485, -0.0002605268091429025, -0.00021577930601779372, -0.00016150949522852898, -0.00010331650264561176, -4.579799860948697e-05, 8.43388625071384e-06, 5.794207027065568e-05, 0.00010142139944946393, 0.0001367821969324723, 0.00016178039368242025, 0.00017634080722928047, 0.00018102480680681765, 0.0001791592949302867, 0.0001772052055457607, 0.00018168629321735352, 0.00019750850333366543, 0.00022759829880669713, 0.00027039251290261745, 0.00031837349524721503, 0.0003621916112024337, 0.00039441880653612316, 0.00041054238681681454, 0.0004079499049112201, 0.00038477679481729865, 0.0003422138106543571, 0.00028621978708542883, 0.00022637929941993207, 0.0001708899944787845, 0.0001242636062670499, 8.860244997777045e-05, 6.655706965830177e-05, 6.0819031205028296e-05, 7.341984746744856e-05, 0.00010398789891041815, 0.0001488940033596009, 0.00020303629571571946, 0.00025975549942813814, 0.00031105391099117696, 0.000348379195202142, 0.00036530778743326664, 0.0003600098134484142, 0.0003361554117873311, 0.0003028007922694087, 0.0002706455998122692, 0.0002488919999450445, 0.00024268169363494962, 0.00025261170230805874, 0.0002771822037175298, 0.00031199160730466247, 0.00035120180109515786, 0.00038948480505496264, 0.0004214702930767089, 0.00044234629604034126, 0.000450238207122311, 0.0004460891941562295, 0.00043203160748817027, 0.0004105516127310693, 0.0003849597997032106, 0.0003599667106755078, 0.0003395084058865905, 0.0003242740058340132, 0.00031360049615614116, 0.00030882429564371705, 0.00031497079180553555, 0.00033823520061559975, 0.00037920678732916713, 0.00043217488564550877, 0.0004898605984635651, 0.0005462553817778826, 0.0005975943058729172, 0.0006419899873435497, 0.0006782026030123234, 0.0007053983863443136, 0.0007260958082042634, 0.0007433568243868649, 0.0007596263894811273, 0.0007766098133288324, 0.0007958872010931373, 0.0008191317901946604, 0.000846690614707768, 0.0008781838114373386, 0.000910807226318866, 0.0009398068068549037, 0.0009613275760784745, 0.0009755890932865441, 0.0009854089003056288, 0.0009921400342136621, 0.000995840411633253, 0.0009969264501705766, 0.0009975781431421638, 0.0010014210129156709, 0.0010115830227732658, 0.0010279440321028233, 0.0010475609451532364, 0.0010672119678929448, 0.0010843840427696705, 0.001100150984711945, 0.0011174400569871068, 0.0011381739750504494, 0.0011629960499703884, 0.0011912989430129528, 0.0012213969603180885, 0.0012509759981185198, 0.0012771639740094543, 0.0013000640319660306, 0.0013224680442363024, 0.0013461810303851962, 0.0013716289540752769, 0.0013970589498057961, 0.0014190439833328128, 0.0014332480495795608, 0.0014347400283440948, 0.001419964013621211, 0.0013879219768568873, 0.0013404929777607322, 0.001284328056499362, 0.0012292159954085946, 0.0011830959701910615, 0.0011486930307000875, 0.001124221016652882, 0.0011067199520766735, 0.0010945559479296207, 0.0010872009443119168, 0.0010824409546330571, 0.0010773279936984181, 0.0010686690220609307, 0.0010516990441828966, 0.0010231209453195333, 0.0009828356560319662, 0.0009348795283585787, 0.0008873431943356991, 0.000849153904709965, 0.0008248297963291407, 0.0008139425772242248, 0.0008140148129314184, 0.0008201554883271456, 0.0008267508237622678, 0.0008276687003672123, 0.0008198869181796908, 0.0008054591016843915, 0.0007889232947491109, 0.0007737486739642918, 0.0007607184816151857, 0.0007474425947293639, 0.0007302596932277083, 0.0007072241278365254, 0.0006791047053411603, 0.0006491307867690921, 0.0006227078847587109, 0.0006066735950298607, 0.0006056796992197633, 0.0006197700276970863, 0.0006441309815272689, 0.000670741603244096, 0.0006930454983375967, 0.0007088548154570162, 0.0007190598989836872, 0.0007245686138048768, 0.0007257848046720028, 0.0007225790759548545, 0.0007129762088879943, 0.0006957696750760078, 0.0006731324829161167, 0.0006507502985186875, 0.0006355039076879621, 0.0006308251176960766, 0.000635010888800025, 0.000642819213680923, 0.0006491141975857317, 0.0006517897127196193, 0.0006521110772155225, 0.0006523974006995559, 0.0006528561934828758, 0.0006522922194562852, 0.0006505653145723045, 0.0006482630269601941, 0.000644817715510726, 0.0006386762834154069, 0.0006268147844821215, 0.0006069712108001113, 0.0005796807818114758, 0.0005493854987435043, 0.0005227671936154366, 0.0005050196195952594, 0.0004986092098988593, 0.0005017779185436666, 0.0005092048086225986, 0.0005156744737178087, 0.0005177850252948701, 0.0005137777770869434, 0.0005037744995206594, 0.0004892416764050722, 0.0004739614960271865, 0.0004646650922950357, 0.00046701999963261187, 0.0004809334932360798, 0.0005024566198699176, 0.0005245988140814006, 0.0005392414168454707, 0.0005398516077548265, 0.0005222958279773593, 0.0004855860024690628, 0.00043141678906977177, 0.0003632715088315308, 0.0002882078115362674, 0.00021730859589297324, 0.0001629312027944252, 0.00013308429333847016, 0.0001276636030524969, 0.0001386402000207454, 0.00015654609887860715, 0.00017353940347675234, 0.0001827944943215698, 0.0001777261059032753, 0.0001536603958811611, 0.00010950739670079201, 4.784912016475573e-05, -2.411497916909866e-05, -9.475604019826278e-05, -0.00015094449918251485, -0.0001838830066844821, -0.00019268569303676486, -0.00018268860003445297, -0.00016250509361270815, -0.00014246150385588408, -0.0001307776983594522, -0.0001313545071752742, -0.00014491050387732685, -0.00017062720144167542, -0.00020772080461028963, -0.0002548912016209215, -0.00031098880572244525, -0.000374751805793494, -0.00044286780757829547, -0.0005104125011712313, -0.0005721739144064486, -0.000624392821919173, -0.0006646753172390163, -0.0006914149853400886, -0.0007056380272842944, -0.0007106941775418818, -0.0007096006884239614, -0.0007041615899652243, -0.0006974833086133003, -0.0006948587251827121, -0.0007002452039159834, -0.0007156403153203428, -0.0007410508114844561, -0.0007730770739726722, -0.0008052384946495295, -0.0008339608903042972, -0.0008611034718342125, -0.0008902428089641035, -0.0009234645985998213, -0.0009614331065677106, -0.0010040940251201391, -0.001049994956701994, -0.0010950060095638037, -0.0011342900106683373, -0.0011649980442598462, -0.0011859890073537827, -0.0011975979432463646, -0.0012021169532090425, -0.0012043289607390761, -0.0012089989613741636, -0.0012188920518383384, -0.0012350049801170826, -0.0012578510213643312, -0.0012869540369138122, -0.0013204619754105806, -0.0013555879704654217, -0.0013894770527258515, -0.0014182280283421278, -0.001437898026779294, -0.0014474720228463411, -0.0014472639886662364, -0.0014383799862116575, -0.0014225230552256107, -0.0014030060265213251, -0.0013848779490217566, -0.0013747930061072111, -0.0013783229514956474, -0.0013972800225019455, -0.0014292499981820583, -0.0014683339977636933, -0.0015063530299812555, -0.0015345830470323563, -0.0015466429758816957, -0.0015409709885716438, -0.0015211020363494754, -0.0014942940324544907, -0.0014687289949506521, -0.0014521100092679262, -0.0014502699486911297, -0.001464611035771668, -0.0014905829448252916, -0.0015213609440252185, -0.0015521720051765442, -0.0015791610348969698, -0.0015989280072972178, -0.001609132974408567, -0.0016087860567495227, -0.0015990269603207707, -0.0015825110021978617, -0.0015634950250387192, -0.0015465799951925874, -0.0015356129733845592, -0.0015328139998018742, -0.0015380550175905228, -0.0015484020113945007, -0.0015585989458486438, -0.0015624839579686522, -0.0015554600395262241, -0.0015370500041171908, -0.001510679954662919, -0.0014824720565229654, -0.0014585769968107343, -0.001443524961359799, -0.0014397440245375037, -0.0014478149823844433, -0.001467050053179264, -0.0014952949713915586, -0.0015284910332411528, -0.001560903969220817, -0.0015878280391916633, -0.0016079730121418834, -0.0016203440027311444, -0.0016243299469351768, -0.0016206289874389768, -0.0016095240134745836, -0.001590974978171289, -0.0015665109967812896, -0.0015391570050269365, -0.0015115380520001054, -0.0014857869828119874, -0.0014645300107076764, -0.0014491919428110123, -0.0014392950106412172, -0.0014335350133478642, -0.001430358039215207, -0.0014280830509960651, -0.0014248780207708478, -0.0014185949694365263, -0.0014078839449211955, -0.0013930719578638673, -0.001376052969135344, -0.001359835034236312, -0.0013487250544130802, -0.0013476320309564471, -0.0013587960274890065, -0.0013793959515169263, -0.0014048860175535083, -0.001432031043805182, -0.0014592099469155073, -0.0014858089853078127, -0.0015096679562702775, -0.001525920000858605, -0.0015290100127458572, -0.0015137499431148171, -0.0014787099789828062, -0.0014285369543358684, -0.0013712210347875953, -0.0013165880227461457, -0.0012720059603452682, -0.0012403189903125167, -0.0012197090545669198, -0.0012047929922118783, -0.001189720002003014, -0.0011708870297297835, -0.0011469230521470308, -0.0011175289982929826, -0.0010851819533854723, -0.0010539799695834517, -0.0010273449588567019, -0.0010051439749076962, -0.0009823365835472941, -0.0009515826241113245, -0.0009081725729629397, -0.0008524404838681221, -0.0007898187031969428, -0.0007290840148925781, -0.0006780594121664762, -0.0006413740920834243, -0.0006198415067046881, -0.000609046604949981, -0.0006009726203046739, -0.0005870900931768119, -0.0005610599182546139, -0.0005196061101742089, -0.00046360859414562583, -0.0003981080953963101, -0.000330818205839023, -0.00027002449496649206, -0.00022307300241664052, -0.00019331950170453638, -0.00017831919831223786, -0.000170406507095322, -0.0001593056949786842, -0.00013707380276173353, -0.00010173750342801213, -5.5882250308059156e-05, -3.461605047050398e-06, 5.163608875591308e-05, 0.0001061868024407886, 0.00015883840387687087, 0.00021068229398224503, 0.00026405180688016117, 0.00031988040427677333, 0.0003750429896172136, 0.0004231393104419112, 0.00045813500764779747, 0.0004771155072376132, 0.00048184310435317457, 0.0004768928047269583, 0.00046709980233572423, 0.0004572891048155725, 0.00045079929986968637, 0.0004469993873499334, 0.0004437530878931284, 0.000440720294136554, 0.00043981391354463995, 0.0004429846885614097, 0.00045132500235922635, 0.0004633872886188328, 0.0004754354013130069, 0.00048398779472336173, 0.0004866599047090858, 0.00048276889720000327, 0.00047315031406469643, 0.0004595619975589216, 0.0004448390973266214, 0.0004321922024246305, 0.0004235199885442853, 0.00041778350714594126, 0.0004128023865632713, 0.00040556499152444303, 0.0003933511907234788, 0.00037523091305047274, 0.0003523858031257987, 0.0003274212940596044, 0.0003033230022992939, 0.00028242889675311744, 0.00026675639674067497, 0.0002573044039309025, 0.00025230259052477777, 0.0002467221929691732, 0.00023572960344608873, 0.00021704960090573877, 0.00019153859466314316, 0.00016206350119318813, 0.00013146309356670827, 0.00010241870040772483, 7.658940012333915e-05, 5.48929201613646e-05, 3.714343984029256e-05, 2.2076210370869376e-05, 6.525167009385768e-06, -1.3388769730227068e-05, -3.863278107019141e-05, -6.602730718441308e-05, -8.950525807449594e-05, -0.00010357770224800333, -0.00010664240107871592, -0.00010131570161320269, -9.202351066051051e-05, -8.205418998841196e-05, -7.222963904496282e-05, -6.081275932956487e-05, -4.483948941924609e-05, -2.3411250367644243e-05, 1.0812150321726222e-06, 2.390866029600147e-05, 3.8814170693513006e-05, 4.1111299651674926e-05, 3.0413730200962164e-05, 9.451496225665323e-06, -1.7455080524086952e-05, -4.527618148131296e-05, -6.939911691006273e-05, -8.703039202373475e-05, -9.672727173892781e-05, -9.867556218523532e-05, -9.525653149466962e-05, -9.062464232556522e-05, -9.012911323225126e-05, -9.786488953977823e-05, -0.00011432130122557282, -0.00013512409350369126, -0.00015384980360977352, -0.0001663527946220711, -0.00017120680422522128, -0.00016793679969850928, -0.00015726100536994636, -0.00014199150609783828, -0.00012653569865506142, -0.00011609800276346505, -0.0001141597967944108, -0.00012078360305167735, -0.00013333800598047674, -0.0001483032974647358, -0.00016262629651464522, -0.00017365420353598893, -0.00018035690300166607, -0.00018430029740557075, -0.00018730279407463968, -0.0001898719056043774, -0.0001917373010655865, -0.0001932025043061003, -0.00019408490334171802, -0.00019344830070622265, -0.00019122099911328405, -0.00018867359904106706, -0.00018701949738897383, -0.00018657150212675333, -0.00018651819846127182, -0.00018523620383348316, -0.00018073880346491933, -0.000171421401319094, -0.0001573493063915521, -0.0001399259053869173, -0.00012120849714847282, -0.00010423950152471662, -9.163415961666033e-05, -8.466572035104036e-05, -8.401923696510494e-05, -9.016307012643665e-05, -0.00010179720266023651, -0.00011508719762787223, -0.0001252703950740397, -0.0001289866049773991, -0.00012468639761209488, -0.00011162390001118183, -9.0937246568501e-05, -6.654953904217109e-05, -4.289932985557243e-05, -2.1996249415678903e-05, -3.983399892604211e-06, 1.216949021909386e-05, 2.859900087059941e-05, 4.6975310397101566e-05, 6.658714119112119e-05, 8.496626833220944e-05, 9.987520752474666e-05, 0.00010965309775201604, 0.0001129434967879206, 0.00011052610352635384, 0.0001067397024598904, 0.00010813680273713544, 0.0001191732008010149, 0.00013967030099593103, 0.00016754229727666825, 0.00020003020472358912, 0.00023403989325743169, 0.0002656911965459585, 0.00029152390197850764, 0.00030965980840846896, 0.0003203485975973308, 0.00032580329570919275, 0.00032878699130378664, 0.0003308625891804695, 0.00033199478639289737, 0.00033180840546265244, 0.000331362709403038, 0.00033323888783343136, 0.00033979289582930505, 0.00035195579403080046, 0.0003682133974507451, 0.00038486349512822926, 0.00039890551124699414, 0.0004091933951713145, 0.0004158605879638344, 0.000419139105360955, 0.0004198595997877419, 0.00041928348946385086, 0.0004171236068941653, 0.0004123440885450691, 0.00040462121251039207, 0.00039445358561351895, 0.0003826832107733935, 0.0003706534917000681, 0.00035917811328545213, 0.0003483809996396303, 0.0003382680006325245, 0.00032910131267271936, 0.000321071594953537, 0.00031400538864545524, 0.0003087604127358645, 0.00030696450266987085, 0.00030937278643250465, 0.000316218298394233, 0.0003260078956373036, 0.0003355081134941429, 0.00034128810511901975, 0.00034096938907168806, 0.00033385970164090395, 0.0003208362031728029, 0.00030380868702195585, 0.00028498409665189683, 0.00026607979089021683, 0.0002477213856764138, 0.00023059410159476101, 0.00021531670063268393, 0.00020128139294683933, 0.0001875511952675879, 0.00017461029347032309, 0.0001646689051995054, 0.0001594835048308596, 0.0001582904951646924, 0.00016008080274332315, 0.00016390549717471004, 0.00016802380559965968, 0.00017118119285441935, 0.00017257180297747254, 0.00017126990132965147, 0.00016697400133125484, 0.0001603046985110268, 0.0001519643992651254, 0.000141479293233715, 0.0001282441953662783, 0.0001128349031205289, 9.707066783448681e-05, 8.329771662829444e-05, 7.37272494006902e-05, 6.920768646523356e-05, 6.817484245402738e-05, 6.770429899916053e-05, 6.49488065391779e-05, 5.839320147060789e-05, 4.828945020562969e-05, 3.582799035939388e-05, 2.3992710339371115e-05, 1.6597199646639638e-05, 1.6536530893063173e-05, 2.5533809093758464e-05, 4.297755003790371e-05, 6.61582889733836e-05, 9.153791324933991e-05, 0.00011517499660840258, 0.00013366350322030485, 0.00014509059838019311, 0.000149318395415321, 0.00014783510414417833, 0.00014306569937616587, 0.00013769129873253405, 0.00013457919703796506, 0.0001365766947856173, 0.0001447117974748835, 0.0001569642045069486, 0.00016982729721348733, 0.0001799963938537985, 0.0001854229049058631, 0.0001853480061981827, 0.00018034469394478947, 0.00017273939738515764, 0.00016510749992448837, 0.00015831799828447402, 0.00015228150004986674, 0.00014756190648768097, 0.00014518460375256836, 0.00014564240700565279, 0.00014935679791960865, 0.00015618160250596702, 0.0001657009997870773, 0.00017765660595614463, 0.00019088569388259202, 0.00020330889674369246, 0.0002129719068761915, 0.00021860719425603747, 0.00021975100389681756, 0.00021702449885196984, 0.0002123891026712954, 0.00020859790674876422, 0.00020783230138476938, 0.0002103377046296373, 0.00021540689340326935, 0.00022180449741426855, 0.00022811000235378742, 0.00023309499374590814, 0.00023514279746450484, 0.00023328450333792716, 0.0002272809942951426, 0.00021706210100091994, 0.00020321659394539893, 0.00018726009875535965, 0.00017135249800048769, 0.0001571414031786844, 0.00014451680181082338, 0.0001318949944106862, 0.00011799130152212456, 0.0001030234998324886, 8.87751521077007e-05, 7.806638313923031e-05, 7.305545295821503e-05, 7.308182102860883e-05, 7.465235830750316e-05, 7.396205910481513e-05, 6.838732224423438e-05, 5.757464168709703e-05, 4.351160896476358e-05, 2.818806933646556e-05, 1.2375369806250092e-05, -3.0189560220605927e-06, -1.6054189472924918e-05, -2.467599006195087e-05, -2.840741944964975e-05, -2.876365942938719e-05, -2.7750860681408085e-05, -2.6518870072322898e-05, -2.495658009138424e-05, -2.2296539100352675e-05, -1.794019954104442e-05, -1.1968980288656894e-05, -5.204416083870456e-06, 1.4897559594828635e-06, 7.346763140958501e-06, 1.2643629816011526e-05, 1.883466939034406e-05, 2.697674062801525e-05, 3.584743171813898e-05, 4.1759369196370244e-05, 4.100436854059808e-05, 3.257342177676037e-05, 1.833691931096837e-05, 1.833695023378823e-06, -1.3388869774644263e-05, -2.5133620511041954e-05, -3.2712090614950284e-05, -3.622242002165876e-05, -3.5399989428697154e-05, -2.940781087090727e-05, -1.806528052838985e-05, -2.886579068217543e-06, 1.3575479897554033e-05, 2.9083270419505425e-05, 4.1786588553804904e-05, 4.9913091061171144e-05, 5.241508915787563e-05, 4.921412983094342e-05, 4.090060974704102e-05, 2.8583370294654742e-05, 1.4455839846050367e-05, 1.3948149444331648e-06, -8.54743666423019e-06, -1.4267960068536922e-05, -1.4766429558221716e-05, -9.531235264148563e-06, -2.25673204568011e-08, 1.0637940249580424e-05, 1.925011929415632e-05, 2.3781060008332133e-05, 2.4144710550899617e-05, 2.1536960048251785e-05, 1.7210209989571013e-05, 1.1656429705908522e-05, 5.209717073739739e-06, -1.4849980516373762e-06, -7.816797733539715e-06, -1.4332889804791193e-05, -2.2455769794760272e-05, -3.2854368328116834e-05, -4.511201041168533e-05, -5.833254908793606e-05, -7.140974048525095e-05, -8.339410851476714e-05, -9.425145981367677e-05, -0.00010447159729665145, -0.0001141796019510366, -0.000122595505672507, -0.0001286335027543828, -0.00013247260358184576, -0.0001359168963972479, -0.00014079360698815435, -0.00014784530503675342, -0.00015679369971621782, -0.0001668777986196801, -0.00017698410374578089, -0.00018660009664017707, -0.00019616750068962574, -0.00020640720322262496, -0.00021716080664191395, -0.00022748700575903058, -0.00023665929620619863, -0.0002442912955302745, -0.00025090010603889823, -0.0002575131074991077, -0.0002648860099725425, -0.0002729427069425583, -0.00028121090144850314, -0.00028970048879273236, -0.0002984695020131767, -0.0003069975064136088, -0.0003138110914733261, -0.0003172034048475325, -0.0003160180931445211, -0.0003095399879384786, -0.0002982991863973439, -0.0002837996871676296, -0.0002674499119166285, -0.0002504537987988442, -0.0002342849038541317, -0.0002202238974859938, -0.00020907330326735973, -0.00020149040210526437, -0.00019776090630330145, -0.0001973447942873463, -0.0001986403949558735, -0.00019964069360867143, -0.000198816298507154, -0.00019528910343069583, -0.0001888411061372608, -0.00017917320656124502, -0.00016546140250284225, -0.00014769429981242865, -0.0001278494019061327, -0.00010846750228665769, -9.138143650488928e-05, -7.742983871139586e-05, -6.631430005654693e-05, -5.725938899558969e-05, -4.9735910579329357e-05, -4.347944923210889e-05, -3.813719013123773e-05, -3.296049908385612e-05, -2.694615068321582e-05, -1.947702003235463e-05, -1.067551966116298e-05, -1.0042019766842714e-06, 9.383104043081403e-06, 2.0537219825200737e-05, 3.243419996579178e-05, 4.509765130933374e-05, 5.8093570260098204e-05, 7.02792385709472e-05, 8.018391235964373e-05, 8.682448969921097e-05, 9.036940173245966e-05, 9.206683171214536e-05, 9.342480188934132e-05, 9.549820970278233e-05, 9.886913176160306e-05, 0.00010355820268159732, 0.0001091782032744959, 0.00011541099956957623, 0.0001218170000356622, 0.00012762710684910417, 0.00013151750317774713, 0.00013209119788371027, 0.00012873229570686817, 0.00012144789798185229, 0.00011072120105382055, 9.793148637982085e-05, 8.467950829071924e-05, 7.206181180663407e-05, 6.0756410675821826e-05, 5.089832848170772e-05, 4.2206251237075776e-05, 3.432506127865054e-05, 2.729226980591193e-05, 2.155054062313866e-05, 1.7248599760932848e-05, 1.3881650374969468e-05, 1.0545960321906023e-05, 6.197024958964903e-06, 6.764943094594855e-08, -8.047129085753113e-06, -1.774003976606764e-05, -2.807985947583802e-05, -3.8072888855822384e-05, -4.7359339077956975e-05, -5.605013939202763e-05, -6.401079008355737e-05, -7.051689317449927e-05, -7.458162872353569e-05, -7.55377477617003e-05, -7.335554255405441e-05, -6.92537723807618e-05, -6.540823233081028e-05, -6.393800867954269e-05, -6.611215212615207e-05, -7.168926822487265e-05, -7.917870971141383e-05, -8.660522871650755e-05, -9.238342317985371e-05, -9.543300257064402e-05, -9.53906710492447e-05, -9.290753223467618e-05, -8.944916044129059e-05, -8.669737144373357e-05, -8.548147161491215e-05, -8.572857768740505e-05, -8.680354221723974e-05, -8.814767352305353e-05, -8.924816211219877e-05, -8.964083826867864e-05, -8.933727076509967e-05, -8.86141715454869e-05, -8.749937114771456e-05, -8.580742724006996e-05, -8.359406638192013e-05, -8.132564835250378e-05, -7.971807644935325e-05, -7.929455750854686e-05, -8.033250196604058e-05, -8.308467658935115e-05, -8.718470053281635e-05, -9.15066702873446e-05, -9.466062329011038e-05, -9.54412535065785e-05, -9.32397015276365e-05, -8.830059232423082e-05, -8.11544232419692e-05, -7.229465700220317e-05, -6.261347880354151e-05, -5.360103023122065e-05, -4.681339851231314e-05, -4.337514110375196e-05, -4.365927088656463e-05, -4.741934026242234e-05, -5.3985411796020344e-05, -6.231394218048081e-05, -7.106328121153638e-05, -7.882482896093279e-05, -8.404853724641725e-05, -8.548014011466876e-05, -8.29133132356219e-05, -7.693530642427504e-05, -6.852800288470462e-05, -5.854970004293136e-05, -4.772534157382324e-05, -3.696000931086019e-05, -2.74303001788212e-05, -2.027218033617828e-05, -1.6154990589711815e-05, -1.5322399121942e-05, -1.7444779587094672e-05, -2.1534569896175526e-05, -2.639603007992264e-05, -3.1250150641426444e-05, -3.6044089938513935e-05, -4.083400926901959e-05, -4.5321081415750086e-05, -4.90124111820478e-05, -5.162871821084991e-05, -5.308332038111985e-05, -5.3609150199918076e-05, -5.3471441788133234e-05, -5.2979521569795907e-05, -5.246251021162607e-05, -5.2560608310159296e-05, -5.424064147518948e-05, -5.820579099236056e-05, -6.462047167588025e-05, -7.282968726940453e-05, -8.15383973531425e-05, -8.93797623575665e-05, -9.525447967462242e-05, -9.881480218609795e-05, -0.00010009299876401201, -9.915485861711204e-05, -9.608182881493121e-05, -9.136086737271398e-05, -8.595648978371173e-05, -8.10423371149227e-05, -7.75501030148007e-05, -7.597709918627515e-05, -7.650384213775396e-05, -7.908019324531779e-05, -8.343761146534234e-05, -8.908761810744181e-05, -9.528185910312459e-05, -0.00010103030217578635, -0.00010531549924053252, -0.00010776839917525649, -0.00010873829887714237, -0.00010894979641307145, -0.00010936320177279413, -0.00011089780309703201, -0.00011378349881852046, -0.00011749730037990957, -0.0001210155023727566, -0.00012322039401624352, -0.00012332080223131925, -0.00012107090151403099, -0.00011697540321620181, -0.00011189859651494771, -0.0001067690973286517, -0.0001025359015329741, -0.00010004729847423732, -9.982530173147097e-05, -0.00010185789869865403, -0.00010552180174272507, -0.00010998010111507028, -0.00011456620268290862, -0.00011868579895235598, -0.00012168719695182517, -0.00012286030687391758, -0.00012179649638710544, -0.00011893299961229786, -0.00011526759772095829, -0.0001117903011618182, -0.00010912220022873953, -0.00010740700236056, -0.00010648989700712264, -0.00010625110007822514, -0.00010665779700502753, -0.00010764040052890778, -0.00010899709741352126, -0.00011020670353900641, -0.0001107322023017332, -0.00011021010141121224, -0.00010835369903361425, -0.00010488439875189215, -9.982626215787604e-05, -9.368306928081438e-05, -8.712334238225594e-05, -8.086251182248816e-05, -7.540418300777674e-05, -7.094060856616125e-05, -6.749993190169334e-05, -6.499081791844219e-05, -6.297280197031796e-05, -6.0840160585939884e-05, -5.817506098537706e-05, -5.480591062223539e-05, -5.072879866929725e-05, -4.600967076839879e-05, -4.073153104400262e-05, -3.495539931464009e-05, -2.8808390197809786e-05, -2.2408099539461546e-05, -1.5922589227557182e-05, -9.777247214515228e-06, -4.406108928378671e-06, 8.172914789383867e-09, 3.5638079225464026e-06, 6.5842727963172365e-06, 9.552327355777379e-06, 1.2967009752173908e-05, 1.7300359104410745e-05, 2.2802880266681314e-05, 2.9319780878722668e-05, 3.643150921561755e-05, 4.3505489884410053e-05, 4.9824840971268713e-05, 5.48892785445787e-05, 5.855623021489009e-05, 6.0954731452511624e-05, 6.237815250642598e-05, 6.31881266599521e-05, 6.382713036146015e-05, 6.470618245657533e-05, 6.594004662474617e-05, 6.733681220794097e-05, 6.87247229507193e-05, 7.004129292909056e-05, 7.119627844076604e-05, 7.200500112958252e-05, 7.23086777725257e-05, 7.205821020761505e-05, 7.143242692109197e-05, 7.077991176629439e-05, 7.047039252938703e-05, 7.089893915690482e-05, 7.219152757897973e-05, 7.41960175218992e-05, 7.656153320567682e-05, 7.88890611147508e-05, 8.095116936601698e-05, 8.271302795037627e-05, 8.433683979092166e-05, 8.599578723078594e-05, 8.778431947575882e-05, 8.971617353381589e-05, 9.166511881630868e-05, 9.361313277622685e-05, 9.562094055581838e-05, 9.770775068318471e-05, 9.983847121475264e-05, 0.00010185399878537282, 0.00010355179983889684, 0.00010478470358066261, 0.00010550589649938047, 0.00010581919923424721, 0.00010596169886412099, 0.0001062320006894879, 0.00010690589988371357, 0.00010803050099639222, 0.000109389096905943, 0.00011067139712395146, 0.00011159400310134515, 0.00011198149877600372, 0.00011178570275660604, 0.00011102249845862389, 0.00010969569848384708, 0.00010801819735206664, 0.00010644950089044869, 0.00010552869935054332, 0.00010560669761616737, 0.00010674879740690812, 0.0001088029021047987, 0.00011141350114485249, 0.00011415860353736207, 0.00011661970347631723, 0.00011845379776787013, 0.0001194774013129063, 0.00011967679893132299, 0.00011915749928448349, 0.00011807189730461687, 0.00011666650243569165, 0.00011528989853104576, 0.00011435570195317268, 0.0001141834000009112, 0.00011477689986350015, 0.00011586920300032943, 0.00011710289982147515, 0.0001181365005322732, 0.000118764401122462, 0.00011897250078618526, 0.00011889309826074168, 0.0001186895024147816, 0.00011848330177599564, 0.00011831150186480954, 0.00011813350283773616, 0.00011791389988502488, 0.00011768400145228952, 0.00011751079728128389, 0.00011741740308934823, 0.00011740450281649828, 0.00011745790106942877, 0.00011751930287573487, 0.00011750769772334024, 0.00011735180305549875, 0.00011708359670592472, 0.00011682119657052681, 0.00011661850294331089, 0.0001164229033747688, 0.00011617229756666347, 0.00011588010238483548, 0.00011561800056369975, 0.00011545069719431922, 0.0001154178025899455, 0.00011550549970706925, 0.00011570910282898694, 0.0001160058964160271, 0.00011634299880824983, 0.0001166657020803541, 0.00011688440281432122, 0.00011690630344673991, 0.00011666220234474167, 0.00011617039854172617, 0.0001155580030172132, 0.00011500000255182385, 0.00011463100236142054, 0.00011452379840193316, 0.0001146258000517264, 0.00011475950304884464, 0.00011478600208647549, 0.0001146650974988006, 0.00011443389666965231, 0.00011414440086809918, 0.00011383170203771442, 0.00011353269655955955, 0.00011329189874231815, 0.00011313590221107006, 0.00011303379869787022, 0.00011291589908069, 0.00011270609684288502, 0.0001123572001233697, 0.00011187900236109272, 0.00011133280349895358, 0.00011079089745180681, 0.00011032399925170466, 0.00010997500066878274, 0.00010975339682772756, 0.0001096264022635296, 0.00010954179742839187, 0.00010944020323222503, 0.00010925860260613263, 0.0001089551005861722, 0.00010850110265891999, 0.00010791140084620565, 0.00010726330219767988, 0.00010666489833965898, 0.00010621349792927504, 0.00010594030027277768, 0.00010582640243228525, 0.00010582450340734795, 0.00010587349970592186, 0.00010590170131763443, 0.00010585199925117195, 0.0001056870969478041, 0.00010539070353843272, 0.00010496089817024767, 0.00010438689787406474, 0.00010367060167482123, 0.00010284710151609033, 0.0001019789997371845, 0.00010114850010722876, 0.00010042599751614034, 9.985946235246956e-05, 9.94587826426141e-05, 9.918001887854189e-05, 9.894400864141062e-05, 9.867575136013329e-05, 9.833201329456642e-05, 9.789555770112202e-05, 9.736540960147977e-05, 9.675297042122111e-05, 9.607786341803148e-05, 9.53703565755859e-05, 9.46666332310997e-05, 9.399372356710956e-05, 9.335904178442433e-05, 9.275453339796513e-05, 9.215204045176506e-05, 9.152771963272244e-05, 9.087972284760326e-05, 9.022477024700493e-05, 8.959161641541868e-05, 8.900213288143277e-05, 8.8466789748054e-05, 8.795761823421344e-05, 8.741226338315755e-05, 8.677170262672007e-05, 8.601586887380108e-05, 8.51725199026987e-05, 8.430417074123397e-05, 8.347834955202416e-05, 8.273892308352515e-05, 8.210814121412113e-05, 8.15856983535923e-05, 8.114649244816974e-05, 8.074531069723889e-05, 8.034244092414156e-05, 7.990573794813827e-05, 7.941445801407099e-05, 7.887245737947524e-05, 7.830667891539633e-05, 7.77451423346065e-05, 7.719743734924123e-05, 7.66712983022444e-05, 7.617307710461318e-05, 7.570986053906381e-05, 7.527980778831989e-05, 7.48698366805911e-05, 7.44759090594016e-05, 7.410453690681607e-05, 7.374907727353275e-05, 7.338535215239972e-05, 7.298457785509527e-05, 7.252181239891797e-05, 7.19793897587806e-05, 7.13560584699735e-05, 7.066903344821185e-05, 6.994701834628358e-05, 6.921731255715713e-05, 6.84999322402291e-05, 6.781623233109713e-05, 6.719138036714867e-05, 6.664066313533112e-05, 6.616098835365847e-05, 6.573850259883329e-05, 6.535276042995974e-05, 6.498731818282977e-05, 6.463199679274112e-05, 6.427249900298193e-05, 6.389778718585148e-05, 6.350148760247976e-05, 6.307681906037033e-05, 6.262071838136762e-05, 6.21390572632663e-05, 6.16435136180371e-05, 6.11432406003587e-05, 6.064862827770412e-05, 6.0170990764163435e-05, 5.971769860479981e-05, 5.928782047703862e-05, 5.887381121283397e-05, 5.8461821026867256e-05, 5.8039331634063274e-05, 5.760311978519894e-05, 5.716130181099288e-05, 5.672209954354912e-05, 5.62846107641235e-05, 5.5845401220722124e-05, 5.540109850699082e-05, 5.494841025210917e-05, 5.4485120926983654e-05, 5.4014031775295734e-05, 5.35388317075558e-05, 5.30668294231873e-05, 5.26095500390511e-05, 5.2175808377796784e-05, 5.1767448894679546e-05, 5.137905100127682e-05, 5.099998088553548e-05, 5.06172509631142e-05, 5.022095137974247e-05, 4.980606900062412e-05, 4.9371188652003184e-05, 4.8916048399405554e-05, 4.844354043598287e-05, 4.796048960997723e-05, 4.747752973344177e-05, 4.700828139903024e-05, 4.6561650378862396e-05, 4.613598866853863e-05, 4.572114994516596e-05, 4.5307260734261945e-05, 4.4887521653436124e-05, 4.445555168786086e-05, 4.4008411350660026e-05, 4.3547668610699475e-05, 4.3077328882645816e-05, 4.2601699533406645e-05, 4.212672865833156e-05, 4.165816062595695e-05, 4.1198200051439926e-05, 4.0747599996393546e-05, 4.030729178339243e-05, 3.987694071838632e-05, 3.945593925891444e-05, 3.904306868207641e-05, 3.8635491364402696e-05, 3.8230340578593314e-05, 3.7824458559043705e-05, 3.7413949030451477e-05, 3.699626904563047e-05, 3.657089109765366e-05, 3.6139281291980296e-05, 3.5704080801224336e-05, 3.526738873915747e-05, 3.483051114017144e-05, 3.4394350223010406e-05, 3.3959651773329824e-05, 3.352624116814695e-05, 3.3094391255872324e-05, 3.266529893153347e-05, 3.224072861485183e-05, 3.182316868333146e-05, 3.141559136565775e-05, 3.102008122368716e-05, 3.063575059059076e-05, 3.025915975740645e-05, 2.988517917401623e-05, 2.9509499654523097e-05, 2.9129620088497177e-05, 2.8744219889631495e-05, 2.8353810193948448e-05, 2.7960910301771946e-05, 2.7568750738282688e-05, 2.7179759854334407e-05, 2.6794919904205017e-05, 2.641454921104014e-05, 2.6039109798148274e-05, 2.5668530724942684e-05, 2.5302209905930795e-05, 2.493901047273539e-05, 2.4577659132773988e-05, 2.421729914203752e-05, 2.3857090127421543e-05, 2.3496349967899732e-05, 2.3135109586291946e-05, 2.277357089042198e-05, 2.2411830286728218e-05, 2.2050340703572147e-05, 2.1690200810553506e-05, 2.133268935722299e-05, 2.0978350221412256e-05, 2.062699059024453e-05, 2.0278070223866962e-05, 1.993121077248361e-05, 1.958603024831973e-05, 1.9242230337113142e-05, 1.889966915769037e-05, 1.8558370356913656e-05, 1.8218399418401532e-05, 1.7879900042316876e-05, 1.7542879504617304e-05, 1.720713044051081e-05, 1.687258918536827e-05, 1.6539270291104913e-05, 1.620719012862537e-05, 1.5876190445851535e-05, 1.554614027554635e-05, 1.5216879546642303e-05, 1.4888320038153324e-05, 1.4560389899997972e-05, 1.4233080037229229e-05, 1.3906370440963656e-05, 1.3580340237240307e-05, 1.3255130397737958e-05, 1.2930760021845344e-05, 1.2607169992406853e-05, 1.2284240256121848e-05, 1.1961989912379067e-05, 1.1640509910648689e-05, 1.1320000339765102e-05, 1.1000630365742836e-05, 1.0682480024115648e-05, 1.0365560228819959e-05, 1.0049780030385591e-05, 9.735003004607279e-06, 9.42104361456586e-06, 9.107679034059402e-06, 8.794701898295898e-06, 8.482023986289278e-06, 8.169692591764033e-06, 7.857846867409535e-06, 7.546601864305558e-06, 7.236017154355068e-06, 6.926108198967995e-06, 6.6168640842079185e-06, 6.308268893917557e-06, 6.000303073960822e-06, 5.6929170568764675e-06, 5.386055818235036e-06, 5.079677976027597e-06, 4.773752152686939e-06, 4.4682469706458505e-06, 4.163143785262946e-06, 3.858438958559418e-06, 3.554134082150995e-06, 3.2502330213901587e-06, 2.9467419153661467e-06, 2.6436630378157133e-06, 2.3409979803545866e-06, 2.0387510630826e-06, 1.7369250144838588e-06, 1.4355199482452008e-06, 1.1345330221956829e-06, 8.339599162354716e-07, 5.337947186490055e-07, 2.3403279669764743e-07, -6.532744833975812e-08, -3.642863077857328e-07, -6.628437745348492e-07, -9.610005236027064e-07, -1.2587570381583646e-06, -1.55611201080319e-06, -1.8530680563344504e-06, -2.14962096833915e-06, -2.445772906867205e-06, -2.7415210297476733e-06, -3.0368639727385016e-06, -3.3318019632133655e-06, -3.6263320453144843e-06, -3.920454219041858e-06, -4.214166892779758e-06, -4.507468929659808e-06, -4.800358965439955e-06, -5.092835181130795e-06, -5.3848962124902755e-06, -5.676539785781642e-06], '-time', *[0.0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.17500000000000002, 0.18, 0.185, 0.19, 0.195, 0.2, 0.20500000000000002, 0.21, 0.215, 0.22, 0.225, 0.23, 0.23500000000000001, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.28500000000000003, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.34500000000000003, 0.35000000000000003, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41000000000000003, 0.41500000000000004, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47000000000000003, 0.47500000000000003, 0.48, 0.485, 0.49, 0.495, 0.5, 0.505, 0.51, 0.515, 0.52, 0.525, 0.53, 0.535, 0.54, 0.545, 0.55, 0.555, 0.56, 0.5650000000000001, 0.5700000000000001, 0.5750000000000001, 0.58, 0.585, 0.59, 0.595, 0.6, 0.605, 0.61, 0.615, 0.62, 0.625, 0.63, 0.635, 0.64, 0.645, 0.65, 0.655, 0.66, 0.665, 0.67, 0.675, 0.68, 0.685, 0.6900000000000001, 0.6950000000000001, 0.7000000000000001, 0.705, 0.71, 0.715, 0.72, 0.725, 0.73, 0.735, 0.74, 0.745, 0.75, 0.755, 0.76, 0.765, 0.77, 0.775, 0.78, 0.785, 0.79, 0.795, 0.8, 0.805, 0.81, 0.8150000000000001, 0.8200000000000001, 0.8250000000000001, 0.8300000000000001, 0.835, 0.84, 0.845, 0.85, 0.855, 0.86, 0.865, 0.87, 0.875, 0.88, 0.885, 0.89, 0.895, 0.9, 0.905, 0.91, 0.915, 0.92, 0.925, 0.93, 0.935, 0.9400000000000001, 0.9450000000000001, 0.9500000000000001, 0.9550000000000001, 0.96, 0.965, 0.97, 0.975, 0.98, 0.985, 0.99, 0.995, 1.0, 1.0050000000000001, 1.01, 1.0150000000000001, 1.02, 1.025, 1.03, 1.035, 1.04, 1.045, 1.05, 1.055, 1.06, 1.065, 1.07, 1.075, 1.08, 1.085, 1.09, 1.095, 1.1, 1.105, 1.11, 1.115, 1.12, 1.125, 1.1300000000000001, 1.135, 1.1400000000000001, 1.145, 1.1500000000000001, 1.155, 1.16, 1.165, 1.17, 1.175, 1.18, 1.185, 1.19, 1.195, 1.2, 1.205, 1.21, 1.215, 1.22, 1.225, 1.23, 1.235, 1.24, 1.245, 1.25, 1.2550000000000001, 1.26, 1.2650000000000001, 1.27, 1.2750000000000001, 1.28, 1.285, 1.29, 1.295, 1.3, 1.305, 1.31, 1.315, 1.32, 1.325, 1.33, 1.335, 1.34, 1.345, 1.35, 1.355, 1.36, 1.365, 1.37, 1.375, 1.3800000000000001, 1.385, 1.3900000000000001, 1.395, 1.4000000000000001, 1.405, 1.41, 1.415, 1.42, 1.425, 1.43, 1.435, 1.44, 1.445, 1.45, 1.455, 1.46, 1.465, 1.47, 1.475, 1.48, 1.485, 1.49, 1.495, 1.5, 1.5050000000000001, 1.51, 1.5150000000000001, 1.52, 1.5250000000000001, 1.53, 1.5350000000000001, 1.54, 1.545, 1.55, 1.555, 1.56, 1.565, 1.57, 1.575, 1.58, 1.585, 1.59, 1.595, 1.6, 1.605, 1.61, 1.615, 1.62, 1.625, 1.6300000000000001, 1.635, 1.6400000000000001, 1.645, 1.6500000000000001, 1.655, 1.6600000000000001, 1.665, 1.67, 1.675, 1.68, 1.685, 1.69, 1.695, 1.7, 1.705, 1.71, 1.715, 1.72, 1.725, 1.73, 1.735, 1.74, 1.745, 1.75, 1.7550000000000001, 1.76, 1.7650000000000001, 1.77, 1.7750000000000001, 1.78, 1.7850000000000001, 1.79, 1.795, 1.8, 1.805, 1.81, 1.815, 1.82, 1.825, 1.83, 1.835, 1.84, 1.845, 1.85, 1.855, 1.86, 1.865, 1.87, 1.875, 1.8800000000000001, 1.885, 1.8900000000000001, 1.895, 1.9000000000000001, 1.905, 1.9100000000000001, 1.915, 1.92, 1.925, 1.93, 1.935, 1.94, 1.945, 1.95, 1.955, 1.96, 1.965, 1.97, 1.975, 1.98, 1.985, 1.99, 1.995, 2.0, 2.005, 2.0100000000000002, 2.015, 2.02, 2.025, 2.0300000000000002, 2.035, 2.04, 2.045, 2.05, 2.055, 2.06, 2.065, 2.07, 2.075, 2.08, 2.085, 2.09, 2.095, 2.1, 2.105, 2.11, 2.115, 2.12, 2.125, 2.13, 2.1350000000000002, 2.14, 2.145, 2.15, 2.1550000000000002, 2.16, 2.165, 2.17, 2.1750000000000003, 2.18, 2.185, 2.19, 2.195, 2.2, 2.205, 2.21, 2.215, 2.22, 2.225, 2.23, 2.235, 2.24, 2.245, 2.25, 2.255, 2.2600000000000002, 2.265, 2.27, 2.275, 2.2800000000000002, 2.285, 2.29, 2.295, 2.3000000000000003, 2.305, 2.31, 2.315, 2.32, 2.325, 2.33, 2.335, 2.34, 2.345, 2.35, 2.355, 2.36, 2.365, 2.37, 2.375, 2.38, 2.3850000000000002, 2.39, 2.395, 2.4, 2.4050000000000002, 2.41, 2.415, 2.42, 2.4250000000000003, 2.43, 2.435, 2.44, 2.445, 2.45, 2.455, 2.46, 2.465, 2.47, 2.475, 2.48, 2.485, 2.49, 2.495, 2.5, 2.505, 2.5100000000000002, 2.515, 2.52, 2.525, 2.5300000000000002, 2.535, 2.54, 2.545, 2.5500000000000003, 2.555, 2.56, 2.565, 2.57, 2.575, 2.58, 2.585, 2.59, 2.595, 2.6, 2.605, 2.61, 2.615, 2.62, 2.625, 2.63, 2.6350000000000002, 2.64, 2.645, 2.65, 2.6550000000000002, 2.66, 2.665, 2.67, 2.6750000000000003, 2.68, 2.685, 2.69, 2.695, 2.7, 2.705, 2.71, 2.715, 2.72, 2.725, 2.73, 2.735, 2.74, 2.745, 2.75, 2.755, 2.7600000000000002, 2.765, 2.77, 2.775, 2.7800000000000002, 2.785, 2.79, 2.795, 2.8000000000000003, 2.805, 2.81, 2.815, 2.82, 2.825, 2.83, 2.835, 2.84, 2.845, 2.85, 2.855, 2.86, 2.865, 2.87, 2.875, 2.88, 2.8850000000000002, 2.89, 2.895, 2.9, 2.9050000000000002, 2.91, 2.915, 2.92, 2.9250000000000003, 2.93, 2.935, 2.94, 2.945, 2.95, 2.955, 2.96, 2.965, 2.97, 2.975, 2.98, 2.985, 2.99, 2.995, 3.0, 3.005, 3.0100000000000002, 3.015, 3.02, 3.025, 3.0300000000000002, 3.035, 3.04, 3.045, 3.0500000000000003, 3.055, 3.06, 3.065, 3.0700000000000003, 3.075, 3.08, 3.085, 3.09, 3.095, 3.1, 3.105, 3.11, 3.115, 3.12, 3.125, 3.13, 3.1350000000000002, 3.14, 3.145, 3.15, 3.1550000000000002, 3.16, 3.165, 3.17, 3.1750000000000003, 3.18, 3.185, 3.19, 3.1950000000000003, 3.2, 3.205, 3.21, 3.215, 3.22, 3.225, 3.23, 3.235, 3.24, 3.245, 3.25, 3.255, 3.2600000000000002, 3.265, 3.27, 3.275, 3.2800000000000002, 3.285, 3.29, 3.295, 3.3000000000000003, 3.305, 3.31, 3.315, 3.3200000000000003, 3.325, 3.33, 3.335, 3.34, 3.345, 3.35, 3.355, 3.36, 3.365, 3.37, 3.375, 3.38, 3.3850000000000002, 3.39, 3.395, 3.4, 3.4050000000000002, 3.41, 3.415, 3.42, 3.4250000000000003, 3.43, 3.435, 3.44, 3.4450000000000003, 3.45, 3.455, 3.46, 3.465, 3.47, 3.475, 3.48, 3.485, 3.49, 3.495, 3.5, 3.505, 3.5100000000000002, 3.515, 3.52, 3.525, 3.5300000000000002, 3.535, 3.54, 3.545, 3.5500000000000003, 3.555, 3.56, 3.565, 3.5700000000000003, 3.575, 3.58, 3.585, 3.59, 3.595, 3.6, 3.605, 3.61, 3.615, 3.62, 3.625, 3.63, 3.6350000000000002, 3.64, 3.645, 3.65, 3.6550000000000002, 3.66, 3.665, 3.67, 3.6750000000000003, 3.68, 3.685, 3.69, 3.6950000000000003, 3.7, 3.705, 3.71, 3.715, 3.72, 3.725, 3.73, 3.735, 3.74, 3.745, 3.75, 3.755, 3.7600000000000002, 3.765, 3.77, 3.775, 3.7800000000000002, 3.785, 3.79, 3.795, 3.8000000000000003, 3.805, 3.81, 3.815, 3.8200000000000003, 3.825, 3.83, 3.835, 3.84, 3.845, 3.85, 3.855, 3.86, 3.865, 3.87, 3.875, 3.88, 3.8850000000000002, 3.89, 3.895, 3.9, 3.9050000000000002, 3.91, 3.915, 3.92, 3.9250000000000003, 3.93, 3.935, 3.94, 3.9450000000000003, 3.95, 3.955, 3.96, 3.9650000000000003, 3.97, 3.975, 3.98, 3.985, 3.99, 3.995, 4.0, 4.005, 4.01, 4.015, 4.0200000000000005, 4.025, 4.03, 4.035, 4.04, 4.045, 4.05, 4.055, 4.0600000000000005, 4.065, 4.07, 4.075, 4.08, 4.085, 4.09, 4.095, 4.1, 4.105, 4.11, 4.115, 4.12, 4.125, 4.13, 4.135, 4.14, 4.1450000000000005, 4.15, 4.155, 4.16, 4.165, 4.17, 4.175, 4.18, 4.1850000000000005, 4.19, 4.195, 4.2, 4.205, 4.21, 4.215, 4.22, 4.225, 4.23, 4.235, 4.24, 4.245, 4.25, 4.255, 4.26, 4.265, 4.2700000000000005, 4.275, 4.28, 4.285, 4.29, 4.295, 4.3, 4.305, 4.3100000000000005, 4.315, 4.32, 4.325, 4.33, 4.335, 4.34, 4.345, 4.3500000000000005, 4.355, 4.36, 4.365, 4.37, 4.375, 4.38, 4.385, 4.39, 4.3950000000000005, 4.4, 4.405, 4.41, 4.415, 4.42, 4.425, 4.43, 4.4350000000000005, 4.44, 4.445, 4.45, 4.455, 4.46, 4.465, 4.47, 4.4750000000000005, 4.48, 4.485, 4.49, 4.495, 4.5, 4.505, 4.51, 4.515, 4.5200000000000005, 4.525, 4.53, 4.535, 4.54, 4.545, 4.55, 4.555, 4.5600000000000005, 4.565, 4.57, 4.575, 4.58, 4.585, 4.59, 4.595, 4.6000000000000005, 4.605, 4.61, 4.615, 4.62, 4.625, 4.63, 4.635, 4.64, 4.6450000000000005, 4.65, 4.655, 4.66, 4.665, 4.67, 4.675, 4.68, 4.6850000000000005, 4.69, 4.695, 4.7, 4.705, 4.71, 4.715, 4.72, 4.7250000000000005, 4.73, 4.735, 4.74, 4.745, 4.75, 4.755, 4.76, 4.765, 4.7700000000000005, 4.775, 4.78, 4.785, 4.79, 4.795, 4.8, 4.805, 4.8100000000000005, 4.815, 4.82, 4.825, 4.83, 4.835, 4.84, 4.845, 4.8500000000000005, 4.855, 4.86, 4.865, 4.87, 4.875, 4.88, 4.885, 4.89, 4.8950000000000005, 4.9, 4.905, 4.91, 4.915, 4.92, 4.925, 4.93, 4.9350000000000005, 4.94, 4.945, 4.95, 4.955, 4.96, 4.965, 4.97, 4.9750000000000005, 4.98, 4.985, 4.99, 4.995, 5.0, 5.005, 5.01, 5.015, 5.0200000000000005, 5.025, 5.03, 5.035, 5.04, 5.045, 5.05, 5.055, 5.0600000000000005, 5.065, 5.07, 5.075, 5.08, 5.085, 5.09, 5.095, 5.1000000000000005, 5.105, 5.11, 5.115, 5.12, 5.125, 5.13, 5.135, 5.14, 5.1450000000000005, 5.15, 5.155, 5.16, 5.165, 5.17, 5.175, 5.18, 5.1850000000000005, 5.19, 5.195, 5.2, 5.205, 5.21, 5.215, 5.22, 5.2250000000000005, 5.23, 5.235, 5.24, 5.245, 5.25, 5.255, 5.26, 5.265, 5.2700000000000005, 5.275, 5.28, 5.285, 5.29, 5.295, 5.3, 5.305, 5.3100000000000005, 5.315, 5.32, 5.325, 5.33, 5.335, 5.34, 5.345, 5.3500000000000005, 5.355, 5.36, 5.365, 5.37, 5.375, 5.38, 5.385, 5.39, 5.3950000000000005, 5.4, 5.405, 5.41, 5.415, 5.42, 5.425, 5.43, 5.4350000000000005, 5.44, 5.445, 5.45, 5.455, 5.46, 5.465, 5.47, 5.4750000000000005, 5.48, 5.485, 5.49, 5.495, 5.5, 5.505, 5.51, 5.515, 5.5200000000000005, 5.525, 5.53, 5.535, 5.54, 5.545, 5.55, 5.555, 5.5600000000000005, 5.565, 5.57, 5.575, 5.58, 5.585, 5.59, 5.595, 5.6000000000000005, 5.605, 5.61, 5.615, 5.62, 5.625, 5.63, 5.635, 5.64, 5.6450000000000005, 5.65, 5.655, 5.66, 5.665, 5.67, 5.675, 5.68, 5.6850000000000005, 5.69, 5.695, 5.7, 5.705, 5.71, 5.715, 5.72, 5.7250000000000005, 5.73, 5.735, 5.74, 5.745, 5.75, 5.755, 5.76, 5.765, 5.7700000000000005, 5.775, 5.78, 5.785, 5.79, 5.795, 5.8, 5.805, 5.8100000000000005, 5.815, 5.82, 5.825, 5.83, 5.835, 5.84, 5.845, 5.8500000000000005, 5.855, 5.86, 5.865, 5.87, 5.875, 5.88, 5.885, 5.89, 5.8950000000000005, 5.9, 5.905, 5.91, 5.915, 5.92, 5.925, 5.93, 5.9350000000000005, 5.94, 5.945, 5.95, 5.955, 5.96, 5.965, 5.97, 5.9750000000000005, 5.98, 5.985, 5.99, 5.995, 6.0, 6.005, 6.01, 6.015000000000001, 6.0200000000000005, 6.025, 6.03, 6.035, 6.04, 6.045, 6.05, 6.055, 6.0600000000000005, 6.065, 6.07, 6.075, 6.08, 6.085, 6.09, 6.095, 6.1000000000000005, 6.105, 6.11, 6.115, 6.12, 6.125, 6.13, 6.135, 6.140000000000001, 6.1450000000000005, 6.15, 6.155, 6.16, 6.165, 6.17, 6.175, 6.18, 6.1850000000000005, 6.19, 6.195, 6.2, 6.205, 6.21, 6.215, 6.22, 6.2250000000000005, 6.23, 6.235, 6.24, 6.245, 6.25, 6.255, 6.26, 6.265000000000001, 6.2700000000000005, 6.275, 6.28, 6.285, 6.29, 6.295, 6.3, 6.305, 6.3100000000000005, 6.315, 6.32, 6.325, 6.33, 6.335, 6.34, 6.345, 6.3500000000000005, 6.355, 6.36, 6.365, 6.37, 6.375, 6.38, 6.385, 6.390000000000001, 6.3950000000000005, 6.4, 6.405, 6.41, 6.415, 6.42, 6.425, 6.43, 6.4350000000000005, 6.44, 6.445, 6.45, 6.455, 6.46, 6.465, 6.47, 6.4750000000000005, 6.48, 6.485, 6.49, 6.495, 6.5, 6.505, 6.51, 6.515000000000001, 6.5200000000000005, 6.525, 6.53, 6.535, 6.54, 6.545, 6.55, 6.555, 6.5600000000000005, 6.565, 6.57, 6.575, 6.58, 6.585, 6.59, 6.595, 6.6000000000000005, 6.605, 6.61, 6.615, 6.62, 6.625, 6.63, 6.635, 6.640000000000001, 6.6450000000000005, 6.65, 6.655, 6.66, 6.665, 6.67, 6.675, 6.68, 6.6850000000000005, 6.69, 6.695, 6.7, 6.705, 6.71, 6.715, 6.72, 6.7250000000000005, 6.73, 6.735, 6.74, 6.745, 6.75, 6.755, 6.76, 6.765000000000001, 6.7700000000000005, 6.775, 6.78, 6.785, 6.79, 6.795, 6.8, 6.805, 6.8100000000000005, 6.815, 6.82, 6.825, 6.83, 6.835, 6.84, 6.845, 6.8500000000000005, 6.855, 6.86, 6.865, 6.87, 6.875, 6.88, 6.885, 6.890000000000001, 6.8950000000000005, 6.9, 6.905, 6.91, 6.915, 6.92, 6.925, 6.93, 6.9350000000000005, 6.94, 6.945, 6.95, 6.955, 6.96, 6.965, 6.97, 6.9750000000000005, 6.98, 6.985, 6.99, 6.995, 7.0, 7.005, 7.01, 7.015000000000001, 7.0200000000000005, 7.025, 7.03, 7.035, 7.04, 7.045, 7.05, 7.055, 7.0600000000000005, 7.065, 7.07, 7.075, 7.08, 7.085, 7.09, 7.095, 7.1000000000000005, 7.105, 7.11, 7.115, 7.12, 7.125, 7.13, 7.135, 7.140000000000001, 7.1450000000000005, 7.15, 7.155, 7.16, 7.165, 7.17, 7.175, 7.18, 7.1850000000000005, 7.19, 7.195, 7.2, 7.205, 7.21, 7.215, 7.22, 7.2250000000000005, 7.23, 7.235, 7.24, 7.245, 7.25, 7.255, 7.26, 7.265000000000001, 7.2700000000000005, 7.275, 7.28, 7.285, 7.29, 7.295, 7.3, 7.305, 7.3100000000000005, 7.315, 7.32, 7.325, 7.33, 7.335, 7.34, 7.345, 7.3500000000000005, 7.355, 7.36, 7.365, 7.37, 7.375, 7.38, 7.385, 7.390000000000001, 7.3950000000000005, 7.4, 7.405, 7.41, 7.415, 7.42, 7.425, 7.43, 7.4350000000000005, 7.44, 7.445, 7.45, 7.455, 7.46, 7.465, 7.47, 7.4750000000000005, 7.48, 7.485, 7.49, 7.495, 7.5, 7.505, 7.51, 7.515000000000001, 7.5200000000000005, 7.525, 7.53, 7.535, 7.54, 7.545, 7.55, 7.555, 7.5600000000000005, 7.565, 7.57, 7.575, 7.58, 7.585, 7.59, 7.595, 7.6000000000000005, 7.605, 7.61, 7.615, 7.62, 7.625, 7.63, 7.635, 7.640000000000001, 7.6450000000000005, 7.65, 7.655, 7.66, 7.665, 7.67, 7.675, 7.68, 7.6850000000000005, 7.69, 7.695, 7.7, 7.705, 7.71, 7.715, 7.72, 7.7250000000000005, 7.73, 7.735, 7.74, 7.745, 7.75, 7.755, 7.76, 7.765000000000001, 7.7700000000000005, 7.775, 7.78, 7.785, 7.79, 7.795, 7.8, 7.805000000000001, 7.8100000000000005, 7.815, 7.82, 7.825, 7.83, 7.835, 7.84, 7.845, 7.8500000000000005, 7.855, 7.86, 7.865, 7.87, 7.875, 7.88, 7.885, 7.890000000000001, 7.8950000000000005, 7.9, 7.905, 7.91, 7.915, 7.92, 7.925, 7.930000000000001, 7.9350000000000005, 7.94, 7.945, 7.95, 7.955, 7.96, 7.965, 7.97, 7.9750000000000005, 7.98, 7.985, 7.99, 7.995, 8.0, 8.005, 8.01, 8.015, 8.02, 8.025, 8.03, 8.035, 8.040000000000001, 8.045, 8.05, 8.055, 8.06, 8.065, 8.07, 8.075, 8.08, 8.085, 8.09, 8.095, 8.1, 8.105, 8.11, 8.115, 8.120000000000001, 8.125, 8.13, 8.135, 8.14, 8.145, 8.15, 8.155, 8.16, 8.165000000000001, 8.17, 8.175, 8.18, 8.185, 8.19, 8.195, 8.2, 8.205, 8.21, 8.215, 8.22, 8.225, 8.23, 8.235, 8.24, 8.245000000000001, 8.25, 8.255, 8.26, 8.265, 8.27, 8.275, 8.28, 8.285, 8.290000000000001, 8.295, 8.3, 8.305, 8.31, 8.315, 8.32, 8.325, 8.33, 8.335, 8.34, 8.345, 8.35, 8.355, 8.36, 8.365, 8.370000000000001, 8.375, 8.38, 8.385, 8.39, 8.395, 8.4, 8.405, 8.41, 8.415000000000001, 8.42, 8.425, 8.43, 8.435, 8.44, 8.445, 8.45, 8.455, 8.46, 8.465, 8.47, 8.475, 8.48, 8.485, 8.49, 8.495000000000001, 8.5, 8.505, 8.51, 8.515, 8.52, 8.525, 8.53, 8.535, 8.540000000000001, 8.545, 8.55, 8.555, 8.56, 8.565, 8.57, 8.575000000000001, 8.58, 8.585, 8.59, 8.595, 8.6, 8.605, 8.61, 8.615, 8.620000000000001, 8.625, 8.63, 8.635, 8.64, 8.645, 8.65, 8.655, 8.66, 8.665000000000001, 8.67, 8.675, 8.68, 8.685, 8.69, 8.695, 8.700000000000001, 8.705, 8.71, 8.715, 8.72, 8.725, 8.73, 8.735, 8.74, 8.745000000000001, 8.75, 8.755, 8.76, 8.765, 8.77, 8.775, 8.78, 8.785, 8.790000000000001, 8.795, 8.8, 8.805, 8.81, 8.815, 8.82, 8.825000000000001, 8.83, 8.835, 8.84, 8.845, 8.85, 8.855, 8.86, 8.865, 8.870000000000001, 8.875, 8.88, 8.885, 8.89, 8.895, 8.9, 8.905, 8.91, 8.915000000000001, 8.92, 8.925, 8.93, 8.935, 8.94, 8.945, 8.950000000000001, 8.955, 8.96, 8.965, 8.97, 8.975, 8.98, 8.985, 8.99, 8.995000000000001, 9.0, 9.005, 9.01, 9.015, 9.02, 9.025, 9.03, 9.035, 9.040000000000001, 9.045, 9.05, 9.055, 9.06, 9.065, 9.07, 9.075000000000001, 9.08, 9.085, 9.09, 9.095, 9.1, 9.105, 9.11, 9.115, 9.120000000000001, 9.125, 9.13, 9.135, 9.14, 9.145, 9.15, 9.155, 9.16, 9.165000000000001, 9.17, 9.175, 9.18, 9.185, 9.19, 9.195, 9.200000000000001, 9.205, 9.21, 9.215, 9.22, 9.225, 9.23, 9.235, 9.24, 9.245000000000001, 9.25, 9.255, 9.26, 9.265, 9.27, 9.275, 9.28, 9.285, 9.290000000000001, 9.295, 9.3, 9.305, 9.31, 9.315, 9.32, 9.325000000000001, 9.33, 9.335, 9.34, 9.345, 9.35, 9.355, 9.36, 9.365, 9.370000000000001, 9.375, 9.38, 9.385, 9.39, 9.395, 9.4, 9.405, 9.41, 9.415000000000001, 9.42, 9.425, 9.43, 9.435, 9.44, 9.445, 9.450000000000001, 9.455, 9.46, 9.465, 9.47, 9.475, 9.48, 9.485, 9.49, 9.495000000000001, 9.5, 9.505, 9.51, 9.515, 9.52, 9.525, 9.53, 9.535, 9.540000000000001, 9.545, 9.55, 9.555, 9.56, 9.565, 9.57, 9.575000000000001, 9.58, 9.585, 9.59, 9.595, 9.6, 9.605, 9.61, 9.615, 9.620000000000001, 9.625, 9.63, 9.635, 9.64, 9.645, 9.65, 9.655, 9.66, 9.665000000000001, 9.67, 9.675, 9.68, 9.685, 9.69, 9.695, 9.700000000000001, 9.705, 9.71, 9.715, 9.72, 9.725, 9.73, 9.735, 9.74, 9.745000000000001, 9.75, 9.755, 9.76, 9.765, 9.77, 9.775, 9.78, 9.785, 9.790000000000001, 9.795, 9.8, 9.805, 9.81, 9.815, 9.82, 9.825000000000001, 9.83, 9.835, 9.84, 9.845, 9.85, 9.855, 9.86, 9.865, 9.870000000000001, 9.875, 9.88, 9.885, 9.89, 9.895, 9.9, 9.905, 9.91, 9.915000000000001, 9.92, 9.925, 9.93, 9.935, 9.94, 9.945, 9.950000000000001, 9.955, 9.96, 9.965, 9.97, 9.975, 9.98, 9.985, 9.99, 9.995000000000001, 10.0, 10.005, 10.01, 10.015, 10.02, 10.025, 10.03, 10.035, 10.040000000000001, 10.045, 10.05, 10.055, 10.06, 10.065, 10.07, 10.075000000000001, 10.08, 10.085, 10.09, 10.095, 10.1, 10.105, 10.11, 10.115, 10.120000000000001, 10.125, 10.13, 10.135, 10.14, 10.145, 10.15, 10.155, 10.16, 10.165000000000001, 10.17, 10.175, 10.18, 10.185, 10.19, 10.195, 10.200000000000001, 10.205, 10.21, 10.215, 10.22, 10.225, 10.23, 10.235, 10.24, 10.245000000000001, 10.25, 10.255, 10.26, 10.265, 10.27, 10.275, 10.28, 10.285, 10.290000000000001, 10.295, 10.3, 10.305, 10.31, 10.315, 10.32, 10.325000000000001, 10.33, 10.335, 10.34, 10.345, 10.35, 10.355, 10.36, 10.365, 10.370000000000001, 10.375, 10.38, 10.385, 10.39, 10.395, 10.4, 10.405, 10.41, 10.415000000000001, 10.42, 10.425, 10.43, 10.435, 10.44, 10.445, 10.450000000000001, 10.455, 10.46, 10.465, 10.47, 10.475, 10.48, 10.485, 10.49, 10.495000000000001, 10.5, 10.505, 10.51, 10.515, 10.52, 10.525, 10.53, 10.535, 10.540000000000001, 10.545, 10.55, 10.555, 10.56, 10.565, 10.57, 10.575000000000001, 10.58, 10.585, 10.59, 10.595, 10.6, 10.605, 10.61, 10.615, 10.620000000000001, 10.625, 10.63, 10.635, 10.64, 10.645, 10.65, 10.655, 10.66, 10.665000000000001, 10.67, 10.675, 10.68, 10.685, 10.69, 10.695, 10.700000000000001, 10.705, 10.71, 10.715, 10.72, 10.725, 10.73, 10.735, 10.74, 10.745000000000001, 10.75, 10.755, 10.76, 10.765, 10.77, 10.775, 10.78, 10.785, 10.790000000000001, 10.795, 10.8, 10.805, 10.81, 10.815, 10.82, 10.825000000000001, 10.83, 10.835, 10.84, 10.845, 10.85, 10.855, 10.86, 10.865, 10.870000000000001, 10.875, 10.88, 10.885, 10.89, 10.895, 10.9, 10.905, 10.91, 10.915000000000001, 10.92, 10.925, 10.93, 10.935, 10.94, 10.945, 10.950000000000001, 10.955, 10.96, 10.965, 10.97, 10.975, 10.98, 10.985, 10.99, 10.995000000000001, 11.0, 11.005, 11.01, 11.015, 11.02, 11.025, 11.03, 11.035, 11.040000000000001, 11.045, 11.05, 11.055, 11.06, 11.065, 11.07, 11.075000000000001, 11.08, 11.085, 11.09, 11.095, 11.1, 11.105, 11.11, 11.115, 11.120000000000001, 11.125, 11.13, 11.135, 11.14, 11.145, 11.15, 11.155, 11.16, 11.165000000000001, 11.17, 11.175, 11.18, 11.185, 11.19, 11.195, 11.200000000000001, 11.205, 11.21, 11.215, 11.22, 11.225, 11.23, 11.235, 11.24, 11.245000000000001, 11.25, 11.255, 11.26, 11.265, 11.27, 11.275, 11.28, 11.285, 11.290000000000001, 11.295, 11.3, 11.305, 11.31, 11.315, 11.32, 11.325000000000001, 11.33, 11.335, 11.34, 11.345, 11.35, 11.355, 11.36, 11.365, 11.370000000000001, 11.375, 11.38, 11.385, 11.39, 11.395, 11.4, 11.405, 11.41, 11.415000000000001, 11.42, 11.425, 11.43, 11.435, 11.44, 11.445, 11.450000000000001, 11.455, 11.46, 11.465, 11.47, 11.475, 11.48, 11.485, 11.49, 11.495000000000001, 11.5, 11.505, 11.51, 11.515, 11.52, 11.525, 11.53, 11.535, 11.540000000000001, 11.545, 11.55, 11.555, 11.56, 11.565, 11.57, 11.575000000000001, 11.58, 11.585, 11.59, 11.595, 11.6, 11.605, 11.61, 11.615, 11.620000000000001, 11.625, 11.63, 11.635, 11.64, 11.645, 11.65, 11.655, 11.66, 11.665000000000001, 11.67, 11.675, 11.68, 11.685, 11.69, 11.695, 11.700000000000001, 11.705, 11.71, 11.715, 11.72, 11.725, 11.73, 11.735, 11.74, 11.745000000000001, 11.75, 11.755, 11.76, 11.765, 11.77, 11.775, 11.78, 11.785, 11.790000000000001, 11.795, 11.8, 11.805, 11.81, 11.815, 11.82, 11.825000000000001, 11.83, 11.835, 11.84, 11.845, 11.85, 11.855, 11.86, 11.865, 11.870000000000001, 11.875, 11.88, 11.885, 11.89, 11.895, 11.9, 11.905, 11.91, 11.915000000000001, 11.92, 11.925, 11.93, 11.935, 11.94, 11.945, 11.950000000000001, 11.955, 11.96, 11.965, 11.97, 11.975, 11.98, 11.985, 11.99, 11.995000000000001, 12.0, 12.005, 12.01, 12.015, 12.02, 12.025, 12.030000000000001, 12.035, 12.040000000000001, 12.045, 12.05, 12.055, 12.06, 12.065, 12.07, 12.075000000000001, 12.08, 12.085, 12.09, 12.095, 12.1, 12.105, 12.11, 12.115, 12.120000000000001, 12.125, 12.13, 12.135, 12.14, 12.145, 12.15, 12.155000000000001, 12.16, 12.165000000000001, 12.17, 12.175, 12.18, 12.185, 12.19, 12.195, 12.200000000000001, 12.205, 12.21, 12.215, 12.22, 12.225, 12.23, 12.235, 12.24, 12.245000000000001, 12.25, 12.255, 12.26, 12.265, 12.27, 12.275, 12.280000000000001, 12.285, 12.290000000000001, 12.295, 12.3, 12.305, 12.31, 12.315, 12.32, 12.325000000000001, 12.33, 12.335, 12.34, 12.345, 12.35, 12.355, 12.36, 12.365, 12.370000000000001, 12.375, 12.38, 12.385, 12.39, 12.395, 12.4, 12.405000000000001, 12.41, 12.415000000000001, 12.42, 12.425, 12.43, 12.435, 12.44, 12.445, 12.450000000000001, 12.455, 12.46, 12.465, 12.47, 12.475, 12.48, 12.485, 12.49, 12.495000000000001, 12.5, 12.505, 12.51, 12.515, 12.52, 12.525, 12.530000000000001, 12.535, 12.540000000000001, 12.545, 12.55, 12.555, 12.56, 12.565, 12.57, 12.575000000000001, 12.58, 12.585, 12.59, 12.595, 12.6, 12.605, 12.61, 12.615, 12.620000000000001, 12.625, 12.63, 12.635, 12.64, 12.645, 12.65, 12.655000000000001, 12.66, 12.665000000000001, 12.67, 12.675, 12.68, 12.685, 12.69, 12.695, 12.700000000000001, 12.705, 12.71, 12.715, 12.72, 12.725, 12.73, 12.735, 12.74, 12.745000000000001, 12.75, 12.755, 12.76, 12.765, 12.77, 12.775, 12.780000000000001, 12.785, 12.790000000000001, 12.795, 12.8, 12.805, 12.81, 12.815, 12.82, 12.825000000000001, 12.83, 12.835, 12.84, 12.845, 12.85, 12.855, 12.86, 12.865, 12.870000000000001, 12.875, 12.88, 12.885, 12.89, 12.895, 12.9, 12.905000000000001, 12.91, 12.915000000000001, 12.92, 12.925, 12.93, 12.935, 12.94, 12.945, 12.950000000000001, 12.955, 12.96, 12.965, 12.97, 12.975, 12.98, 12.985, 12.99, 12.995000000000001, 13.0, 13.005, 13.01, 13.015, 13.02, 13.025, 13.030000000000001, 13.035, 13.040000000000001, 13.045, 13.05, 13.055, 13.06, 13.065, 13.07, 13.075000000000001, 13.08, 13.085, 13.09, 13.095, 13.1, 13.105, 13.11, 13.115, 13.120000000000001, 13.125, 13.13, 13.135, 13.14, 13.145, 13.15, 13.155000000000001, 13.16, 13.165000000000001, 13.17, 13.175, 13.18, 13.185, 13.19, 13.195, 13.200000000000001, 13.205, 13.21, 13.215, 13.22, 13.225, 13.23, 13.235, 13.24, 13.245000000000001, 13.25, 13.255, 13.26, 13.265, 13.27, 13.275, 13.280000000000001, 13.285, 13.290000000000001, 13.295, 13.3, 13.305, 13.31, 13.315, 13.32, 13.325000000000001, 13.33, 13.335, 13.34, 13.345, 13.35, 13.355, 13.36, 13.365, 13.370000000000001, 13.375, 13.38, 13.385, 13.39, 13.395, 13.4, 13.405000000000001, 13.41, 13.415000000000001, 13.42, 13.425, 13.43, 13.435, 13.44, 13.445, 13.450000000000001, 13.455, 13.46, 13.465, 13.47, 13.475, 13.48, 13.485, 13.49, 13.495000000000001, 13.5, 13.505, 13.51, 13.515, 13.52, 13.525, 13.530000000000001, 13.535, 13.540000000000001, 13.545, 13.55, 13.555, 13.56, 13.565, 13.57, 13.575000000000001, 13.58, 13.585, 13.59, 13.595, 13.6, 13.605, 13.61, 13.615, 13.620000000000001, 13.625, 13.63, 13.635, 13.64, 13.645, 13.65, 13.655000000000001, 13.66, 13.665000000000001, 13.67, 13.675, 13.68, 13.685, 13.69, 13.695, 13.700000000000001, 13.705, 13.71, 13.715, 13.72, 13.725, 13.73, 13.735, 13.74, 13.745000000000001, 13.75, 13.755, 13.76, 13.765, 13.77, 13.775, 13.780000000000001, 13.785, 13.790000000000001, 13.795, 13.8, 13.805, 13.81, 13.815, 13.82, 13.825000000000001, 13.83, 13.835, 13.84, 13.845, 13.85, 13.855, 13.86, 13.865, 13.870000000000001, 13.875, 13.88, 13.885, 13.89, 13.895, 13.9, 13.905000000000001, 13.91, 13.915000000000001, 13.92, 13.925, 13.93, 13.935, 13.94, 13.945, 13.950000000000001, 13.955, 13.96, 13.965, 13.97, 13.975, 13.98, 13.985, 13.99, 13.995000000000001, 14.0, 14.005, 14.01, 14.015, 14.02, 14.025, 14.030000000000001, 14.035, 14.040000000000001, 14.045, 14.05, 14.055, 14.06, 14.065, 14.07, 14.075000000000001, 14.08, 14.085, 14.09, 14.095, 14.1, 14.105, 14.11, 14.115, 14.120000000000001, 14.125, 14.13, 14.135, 14.14, 14.145, 14.15, 14.155000000000001, 14.16, 14.165000000000001, 14.17, 14.175, 14.18, 14.185, 14.19, 14.195, 14.200000000000001, 14.205, 14.21, 14.215, 14.22, 14.225, 14.23, 14.235, 14.24, 14.245000000000001, 14.25, 14.255, 14.26, 14.265, 14.27, 14.275, 14.280000000000001, 14.285, 14.290000000000001, 14.295, 14.3, 14.305, 14.31, 14.315, 14.32, 14.325000000000001, 14.33, 14.335, 14.34, 14.345, 14.35, 14.355, 14.36, 14.365, 14.370000000000001, 14.375, 14.38, 14.385, 14.39, 14.395, 14.4, 14.405000000000001, 14.41, 14.415000000000001, 14.42, 14.425, 14.43, 14.435, 14.44, 14.445, 14.450000000000001, 14.455, 14.46, 14.465, 14.47, 14.475, 14.48, 14.485, 14.49, 14.495000000000001, 14.5, 14.505, 14.51, 14.515, 14.52, 14.525, 14.530000000000001, 14.535, 14.540000000000001, 14.545, 14.55, 14.555, 14.56, 14.565, 14.57, 14.575000000000001, 14.58, 14.585, 14.59, 14.595, 14.6, 14.605, 14.61, 14.615, 14.620000000000001, 14.625, 14.63, 14.635, 14.64, 14.645, 14.65, 14.655000000000001, 14.66, 14.665000000000001, 14.67, 14.675, 14.68, 14.685, 14.69, 14.695, 14.700000000000001, 14.705, 14.71, 14.715, 14.72, 14.725, 14.73, 14.735, 14.74, 14.745000000000001, 14.75, 14.755, 14.76, 14.765, 14.77, 14.775, 14.780000000000001, 14.785, 14.790000000000001, 14.795, 14.8, 14.805, 14.81, 14.815, 14.82, 14.825000000000001, 14.83, 14.835, 14.84, 14.845, 14.85, 14.855, 14.86, 14.865, 14.870000000000001, 14.875, 14.88, 14.885, 14.89, 14.895, 14.9, 14.905000000000001, 14.91, 14.915000000000001, 14.92, 14.925, 14.93, 14.935, 14.94, 14.945, 14.950000000000001, 14.955, 14.96, 14.965, 14.97, 14.975, 14.98, 14.985, 14.99, 14.995000000000001, 15.0, 15.005, 15.01, 15.015, 15.02, 15.025, 15.030000000000001, 15.035, 15.040000000000001, 15.045, 15.05, 15.055, 15.06, 15.065, 15.07, 15.075000000000001, 15.08, 15.085, 15.09, 15.095, 15.1, 15.105, 15.11, 15.115, 15.120000000000001, 15.125, 15.13, 15.135, 15.14, 15.145, 15.15, 15.155000000000001, 15.16, 15.165000000000001, 15.17, 15.175, 15.18, 15.185, 15.19, 15.195, 15.200000000000001, 15.205, 15.21, 15.215, 15.22, 15.225, 15.23, 15.235, 15.24, 15.245000000000001, 15.25, 15.255, 15.26, 15.265, 15.27, 15.275, 15.280000000000001, 15.285, 15.290000000000001, 15.295, 15.3, 15.305, 15.31, 15.315, 15.32, 15.325000000000001, 15.33, 15.335, 15.34, 15.345, 15.35, 15.355, 15.36, 15.365, 15.370000000000001, 15.375, 15.38, 15.385, 15.39, 15.395, 15.4, 15.405000000000001, 15.41, 15.415000000000001, 15.42, 15.425, 15.43, 15.435, 15.44, 15.445, 15.450000000000001, 15.455, 15.46, 15.465, 15.47, 15.475, 15.48, 15.485000000000001, 15.49, 15.495000000000001, 15.5, 15.505, 15.51, 15.515, 15.52, 15.525, 15.530000000000001, 15.535, 15.540000000000001, 15.545, 15.55, 15.555, 15.56, 15.565, 15.57, 15.575000000000001, 15.58, 15.585, 15.59, 15.595, 15.6, 15.605, 15.610000000000001, 15.615, 15.620000000000001, 15.625, 15.63, 15.635, 15.64, 15.645, 15.65, 15.655000000000001, 15.66, 15.665000000000001, 15.67, 15.675, 15.68, 15.685, 15.69, 15.695, 15.700000000000001, 15.705, 15.71, 15.715, 15.72, 15.725, 15.73, 15.735000000000001, 15.74, 15.745000000000001, 15.75, 15.755, 15.76, 15.765, 15.77, 15.775, 15.780000000000001, 15.785, 15.790000000000001, 15.795, 15.8, 15.805, 15.81, 15.815, 15.82, 15.825000000000001, 15.83, 15.835, 15.84, 15.845, 15.85, 15.855, 15.860000000000001, 15.865, 15.870000000000001, 15.875, 15.88, 15.885, 15.89, 15.895, 15.9, 15.905000000000001, 15.91, 15.915000000000001, 15.92, 15.925, 15.93, 15.935, 15.94, 15.945, 15.950000000000001, 15.955, 15.96, 15.965, 15.97, 15.975, 15.98, 15.985000000000001, 15.99, 15.995000000000001, 16.0, 16.005, 16.01, 16.015, 16.02, 16.025, 16.03, 16.035, 16.04, 16.045, 16.05, 16.055, 16.06, 16.065, 16.07, 16.075, 16.080000000000002, 16.085, 16.09, 16.095, 16.1, 16.105, 16.11, 16.115000000000002, 16.12, 16.125, 16.13, 16.135, 16.14, 16.145, 16.15, 16.155, 16.16, 16.165, 16.17, 16.175, 16.18, 16.185, 16.19, 16.195, 16.2, 16.205000000000002, 16.21, 16.215, 16.22, 16.225, 16.23, 16.235, 16.240000000000002, 16.245, 16.25, 16.255, 16.26, 16.265, 16.27, 16.275, 16.28, 16.285, 16.29, 16.295, 16.3, 16.305, 16.31, 16.315, 16.32, 16.325, 16.330000000000002, 16.335, 16.34, 16.345, 16.35, 16.355, 16.36, 16.365000000000002, 16.37, 16.375, 16.38, 16.385, 16.39, 16.395, 16.4, 16.405, 16.41, 16.415, 16.42, 16.425, 16.43, 16.435, 16.44, 16.445, 16.45, 16.455000000000002, 16.46, 16.465, 16.47, 16.475, 16.48, 16.485, 16.490000000000002, 16.495, 16.5, 16.505, 16.51, 16.515, 16.52, 16.525, 16.53, 16.535, 16.54, 16.545, 16.55, 16.555, 16.56, 16.565, 16.57, 16.575, 16.580000000000002, 16.585, 16.59, 16.595, 16.6, 16.605, 16.61, 16.615000000000002, 16.62, 16.625, 16.63, 16.635, 16.64, 16.645, 16.65, 16.655, 16.66, 16.665, 16.67, 16.675, 16.68, 16.685, 16.69, 16.695, 16.7, 16.705000000000002, 16.71, 16.715, 16.72, 16.725, 16.73, 16.735, 16.740000000000002, 16.745, 16.75, 16.755, 16.76, 16.765, 16.77, 16.775, 16.78, 16.785, 16.79, 16.795, 16.8, 16.805, 16.81, 16.815, 16.82, 16.825, 16.830000000000002, 16.835, 16.84, 16.845, 16.85, 16.855, 16.86, 16.865000000000002, 16.87, 16.875, 16.88, 16.885, 16.89, 16.895, 16.9, 16.905, 16.91, 16.915, 16.92, 16.925, 16.93, 16.935, 16.94, 16.945, 16.95, 16.955000000000002, 16.96, 16.965, 16.97, 16.975, 16.98, 16.985, 16.990000000000002, 16.995, 17.0, 17.005, 17.01, 17.015, 17.02, 17.025, 17.03, 17.035, 17.04, 17.045, 17.05, 17.055, 17.06, 17.065, 17.07, 17.075, 17.080000000000002, 17.085, 17.09, 17.095, 17.1, 17.105, 17.11, 17.115000000000002, 17.12, 17.125, 17.13, 17.135, 17.14, 17.145, 17.150000000000002, 17.155, 17.16, 17.165, 17.17, 17.175, 17.18, 17.185, 17.19, 17.195, 17.2, 17.205000000000002, 17.21, 17.215, 17.22, 17.225, 17.23, 17.235, 17.240000000000002, 17.245, 17.25, 17.255, 17.26, 17.265, 17.27, 17.275000000000002, 17.28, 17.285, 17.29, 17.295, 17.3, 17.305, 17.31, 17.315, 17.32, 17.325, 17.330000000000002, 17.335, 17.34, 17.345, 17.35, 17.355, 17.36, 17.365000000000002, 17.37, 17.375, 17.38, 17.385, 17.39, 17.395, 17.400000000000002, 17.405, 17.41, 17.415, 17.42, 17.425, 17.43, 17.435, 17.44, 17.445, 17.45, 17.455000000000002, 17.46, 17.465, 17.47, 17.475, 17.48, 17.485, 17.490000000000002, 17.495, 17.5, 17.505, 17.51, 17.515, 17.52, 17.525000000000002, 17.53, 17.535, 17.54, 17.545, 17.55, 17.555, 17.56, 17.565, 17.57, 17.575, 17.580000000000002, 17.585, 17.59, 17.595, 17.6, 17.605, 17.61, 17.615000000000002, 17.62, 17.625, 17.63, 17.635, 17.64, 17.645, 17.650000000000002, 17.655, 17.66, 17.665, 17.67, 17.675, 17.68, 17.685, 17.69, 17.695, 17.7, 17.705000000000002, 17.71, 17.715, 17.72, 17.725, 17.73, 17.735, 17.740000000000002, 17.745, 17.75, 17.755, 17.76, 17.765, 17.77, 17.775000000000002, 17.78, 17.785, 17.79, 17.795, 17.8, 17.805, 17.81, 17.815, 17.82, 17.825, 17.830000000000002, 17.835, 17.84, 17.845, 17.85, 17.855, 17.86, 17.865000000000002, 17.87, 17.875, 17.88, 17.885, 17.89, 17.895, 17.900000000000002, 17.905, 17.91, 17.915, 17.92, 17.925, 17.93, 17.935, 17.94, 17.945, 17.95, 17.955000000000002, 17.96, 17.965, 17.97, 17.975, 17.98, 17.985, 17.990000000000002, 17.995, 18.0, 18.005, 18.01, 18.015, 18.02, 18.025000000000002, 18.03, 18.035, 18.04, 18.045, 18.05, 18.055, 18.06, 18.065, 18.07, 18.075, 18.080000000000002, 18.085, 18.09, 18.095, 18.1, 18.105, 18.11, 18.115000000000002, 18.12, 18.125, 18.13, 18.135, 18.14, 18.145, 18.150000000000002, 18.155, 18.16, 18.165, 18.17, 18.175, 18.18, 18.185, 18.19, 18.195, 18.2, 18.205000000000002, 18.21, 18.215, 18.22, 18.225, 18.23, 18.235, 18.240000000000002, 18.245, 18.25, 18.255, 18.26, 18.265, 18.27, 18.275000000000002, 18.28, 18.285, 18.29, 18.295, 18.3, 18.305, 18.31, 18.315, 18.32, 18.325, 18.330000000000002, 18.335, 18.34, 18.345, 18.35, 18.355, 18.36, 18.365000000000002, 18.37, 18.375, 18.38, 18.385, 18.39, 18.395, 18.400000000000002, 18.405, 18.41, 18.415, 18.42, 18.425, 18.43, 18.435, 18.44, 18.445, 18.45, 18.455000000000002, 18.46, 18.465, 18.47, 18.475, 18.48, 18.485, 18.490000000000002, 18.495, 18.5, 18.505, 18.51, 18.515, 18.52, 18.525000000000002, 18.53, 18.535, 18.54, 18.545, 18.55, 18.555, 18.56, 18.565, 18.57, 18.575, 18.580000000000002, 18.585, 18.59, 18.595, 18.6, 18.605, 18.61, 18.615000000000002, 18.62, 18.625, 18.63, 18.635, 18.64, 18.645, 18.650000000000002, 18.655, 18.66, 18.665, 18.67, 18.675, 18.68, 18.685, 18.69, 18.695, 18.7, 18.705000000000002, 18.71, 18.715, 18.72, 18.725, 18.73, 18.735, 18.740000000000002, 18.745, 18.75, 18.755, 18.76, 18.765, 18.77, 18.775000000000002, 18.78, 18.785, 18.79, 18.795, 18.8, 18.805, 18.81, 18.815, 18.82, 18.825, 18.830000000000002, 18.835, 18.84, 18.845, 18.85, 18.855, 18.86, 18.865000000000002, 18.87, 18.875, 18.88, 18.885, 18.89, 18.895, 18.900000000000002, 18.905, 18.91, 18.915, 18.92, 18.925, 18.93, 18.935, 18.94, 18.945, 18.95, 18.955000000000002, 18.96, 18.965, 18.97, 18.975, 18.98, 18.985, 18.990000000000002, 18.995, 19.0, 19.005, 19.01, 19.015, 19.02, 19.025000000000002, 19.03, 19.035, 19.04, 19.045, 19.05, 19.055, 19.06, 19.065, 19.07, 19.075, 19.080000000000002, 19.085, 19.09, 19.095, 19.1, 19.105, 19.11, 19.115000000000002, 19.12, 19.125, 19.13, 19.135, 19.14, 19.145, 19.150000000000002, 19.155, 19.16, 19.165, 19.17, 19.175, 19.18, 19.185, 19.19, 19.195, 19.2, 19.205000000000002, 19.21, 19.215, 19.22, 19.225, 19.23, 19.235, 19.240000000000002, 19.245, 19.25, 19.255, 19.26, 19.265, 19.27, 19.275000000000002, 19.28, 19.285, 19.29, 19.295, 19.3, 19.305, 19.31, 19.315, 19.32, 19.325, 19.330000000000002, 19.335, 19.34, 19.345, 19.35, 19.355, 19.36, 19.365000000000002, 19.37, 19.375, 19.38, 19.385, 19.39, 19.395, 19.400000000000002, 19.405, 19.41, 19.415, 19.42, 19.425, 19.43, 19.435, 19.44, 19.445, 19.45, 19.455000000000002, 19.46, 19.465, 19.47, 19.475, 19.48, 19.485, 19.490000000000002, 19.495, 19.5, 19.505, 19.51, 19.515, 19.52, 19.525000000000002, 19.53, 19.535, 19.54, 19.545, 19.55, 19.555, 19.56, 19.565, 19.57, 19.575, 19.580000000000002, 19.585, 19.59, 19.595, 19.6, 19.605, 19.61, 19.615000000000002, 19.62, 19.625, 19.63, 19.635, 19.64, 19.645, 19.650000000000002, 19.655, 19.66, 19.665, 19.67, 19.675, 19.68, 19.685, 19.69, 19.695, 19.7, 19.705000000000002, 19.71, 19.715, 19.72, 19.725, 19.73, 19.735, 19.740000000000002, 19.745, 19.75, 19.755, 19.76, 19.765, 19.77, 19.775000000000002, 19.78, 19.785, 19.79, 19.795, 19.8, 19.805, 19.81, 19.815, 19.82, 19.825, 19.830000000000002, 19.835, 19.84, 19.845, 19.85, 19.855, 19.86, 19.865000000000002, 19.87, 19.875, 19.88, 19.885, 19.89, 19.895, 19.900000000000002, 19.905, 19.91, 19.915, 19.92, 19.925, 19.93, 19.935, 19.94, 19.945, 19.95, 19.955000000000002, 19.96, 19.965, 19.97, 19.975, 19.98, 19.985, 19.990000000000002, 19.995, 20.0, 20.005, 20.01, 20.015, 20.02, 20.025000000000002, 20.03, 20.035, 20.04, 20.045, 20.05, 20.055, 20.06, 20.065, 20.07, 20.075, 20.080000000000002, 20.085, 20.09, 20.095, 20.1, 20.105, 20.11, 20.115000000000002, 20.12, 20.125, 20.13, 20.135, 20.14, 20.145, 20.150000000000002, 20.155, 20.16, 20.165, 20.17, 20.175, 20.18, 20.185, 20.19, 20.195, 20.2, 20.205000000000002, 20.21, 20.215, 20.22, 20.225, 20.23, 20.235, 20.240000000000002, 20.245, 20.25, 20.255, 20.26, 20.265, 20.27, 20.275000000000002, 20.28, 20.285, 20.29, 20.295, 20.3, 20.305, 20.31, 20.315, 20.32, 20.325, 20.330000000000002, 20.335, 20.34, 20.345, 20.35, 20.355, 20.36, 20.365000000000002, 20.37, 20.375, 20.38, 20.385, 20.39, 20.395, 20.400000000000002, 20.405, 20.41, 20.415, 20.42, 20.425, 20.43, 20.435, 20.44, 20.445, 20.45, 20.455000000000002, 20.46, 20.465, 20.47, 20.475, 20.48, 20.485, 20.490000000000002, 20.495, 20.5, 20.505, 20.51, 20.515, 20.52, 20.525000000000002, 20.53, 20.535, 20.54, 20.545, 20.55, 20.555, 20.56, 20.565, 20.57, 20.575, 20.580000000000002, 20.585, 20.59, 20.595, 20.6, 20.605, 20.61, 20.615000000000002, 20.62, 20.625, 20.63, 20.635, 20.64, 20.645, 20.650000000000002, 20.655, 20.66, 20.665, 20.67, 20.675, 20.68, 20.685, 20.69, 20.695, 20.7, 20.705000000000002, 20.71, 20.715, 20.72, 20.725, 20.73, 20.735, 20.740000000000002, 20.745, 20.75, 20.755, 20.76, 20.765, 20.77, 20.775000000000002, 20.78, 20.785, 20.79, 20.795, 20.8, 20.805, 20.81, 20.815, 20.82, 20.825, 20.830000000000002, 20.835, 20.84, 20.845, 20.85, 20.855, 20.86, 20.865000000000002, 20.87, 20.875, 20.88, 20.885, 20.89, 20.895, 20.900000000000002, 20.905, 20.91, 20.915, 20.92, 20.925, 20.93, 20.935, 20.94, 20.945, 20.95, 20.955000000000002, 20.96, 20.965, 20.97, 20.975, 20.98, 20.985, 20.990000000000002, 20.995, 21.0, 21.005, 21.01, 21.015, 21.02, 21.025000000000002, 21.03, 21.035, 21.04, 21.045, 21.05, 21.055, 21.06, 21.065, 21.07, 21.075, 21.080000000000002, 21.085, 21.09, 21.095, 21.1, 21.105, 21.11, 21.115000000000002, 21.12, 21.125, 21.13, 21.135, 21.14, 21.145, 21.150000000000002, 21.155, 21.16, 21.165, 21.17, 21.175, 21.18, 21.185, 21.19, 21.195, 21.2, 21.205000000000002, 21.21, 21.215, 21.22, 21.225, 21.23, 21.235, 21.240000000000002, 21.245, 21.25, 21.255, 21.26, 21.265, 21.27, 21.275000000000002, 21.28, 21.285, 21.29, 21.295, 21.3, 21.305, 21.31, 21.315, 21.32, 21.325, 21.330000000000002, 21.335, 21.34, 21.345, 21.35, 21.355, 21.36, 21.365000000000002, 21.37, 21.375, 21.38, 21.385, 21.39, 21.395, 21.400000000000002, 21.405, 21.41, 21.415, 21.42, 21.425, 21.43, 21.435, 21.44, 21.445, 21.45, 21.455000000000002, 21.46, 21.465, 21.47, 21.475, 21.48, 21.485, 21.490000000000002, 21.495, 21.5, 21.505, 21.51, 21.515, 21.52, 21.525000000000002, 21.53, 21.535, 21.54, 21.545, 21.55, 21.555, 21.56, 21.565, 21.57, 21.575, 21.580000000000002, 21.585, 21.59, 21.595, 21.6, 21.605, 21.61, 21.615000000000002, 21.62, 21.625, 21.63, 21.635, 21.64, 21.645, 21.650000000000002, 21.655, 21.66, 21.665, 21.67, 21.675, 21.68, 21.685, 21.69, 21.695, 21.7, 21.705000000000002, 21.71, 21.715, 21.72, 21.725, 21.73, 21.735, 21.740000000000002, 21.745, 21.75, 21.755, 21.76, 21.765, 21.77, 21.775000000000002, 21.78, 21.785, 21.79, 21.795, 21.8, 21.805, 21.81, 21.815, 21.82, 21.825, 21.830000000000002, 21.835, 21.84, 21.845, 21.85, 21.855, 21.86, 21.865000000000002, 21.87, 21.875, 21.88, 21.885, 21.89, 21.895, 21.900000000000002, 21.905, 21.91, 21.915, 21.92, 21.925, 21.93, 21.935, 21.94, 21.945, 21.95, 21.955000000000002, 21.96, 21.965, 21.97, 21.975, 21.98, 21.985, 21.990000000000002, 21.995, 22.0, 22.005, 22.01, 22.015, 22.02, 22.025000000000002, 22.03, 22.035, 22.04, 22.045, 22.05, 22.055, 22.06, 22.065, 22.07, 22.075, 22.080000000000002, 22.085, 22.09, 22.095, 22.1, 22.105, 22.11, 22.115000000000002, 22.12, 22.125, 22.13, 22.135, 22.14, 22.145, 22.150000000000002, 22.155, 22.16, 22.165, 22.17, 22.175, 22.18, 22.185, 22.19, 22.195, 22.2, 22.205000000000002, 22.21, 22.215, 22.22, 22.225, 22.23, 22.235, 22.240000000000002, 22.245, 22.25, 22.255, 22.26, 22.265, 22.27, 22.275000000000002, 22.28, 22.285, 22.29, 22.295, 22.3, 22.305, 22.31, 22.315, 22.32, 22.325, 22.330000000000002, 22.335, 22.34, 22.345, 22.35, 22.355, 22.36, 22.365000000000002, 22.37, 22.375, 22.38, 22.385, 22.39, 22.395, 22.400000000000002, 22.405, 22.41, 22.415, 22.42, 22.425, 22.43, 22.435, 22.44, 22.445, 22.45, 22.455000000000002, 22.46, 22.465, 22.47, 22.475, 22.48, 22.485, 22.490000000000002, 22.495, 22.5, 22.505, 22.51, 22.515, 22.52, 22.525000000000002, 22.53, 22.535, 22.54, 22.545, 22.55, 22.555, 22.56, 22.565, 22.57, 22.575, 22.580000000000002, 22.585, 22.59, 22.595, 22.6, 22.605, 22.61, 22.615000000000002, 22.62, 22.625, 22.63, 22.635, 22.64, 22.645, 22.650000000000002, 22.655, 22.66, 22.665, 22.67, 22.675, 22.68, 22.685, 22.69, 22.695, 22.7, 22.705000000000002, 22.71, 22.715, 22.72, 22.725, 22.73, 22.735, 22.740000000000002, 22.745, 22.75, 22.755, 22.76, 22.765, 22.77, 22.775000000000002, 22.78, 22.785, 22.79, 22.795, 22.8, 22.805, 22.81, 22.815, 22.82, 22.825, 22.830000000000002, 22.835, 22.84, 22.845, 22.85, 22.855, 22.86, 22.865000000000002, 22.87, 22.875, 22.88, 22.885, 22.89, 22.895, 22.900000000000002, 22.905, 22.91, 22.915, 22.92, 22.925, 22.93, 22.935, 22.94, 22.945, 22.95, 22.955000000000002, 22.96, 22.965, 22.97, 22.975, 22.98, 22.985, 22.990000000000002, 22.995, 23.0, 23.005, 23.01, 23.015, 23.02, 23.025000000000002, 23.03, 23.035, 23.04, 23.045, 23.05, 23.055, 23.06, 23.065, 23.07, 23.075, 23.080000000000002, 23.085, 23.09, 23.095, 23.1, 23.105, 23.11, 23.115000000000002, 23.12, 23.125, 23.13, 23.135, 23.14, 23.145, 23.150000000000002, 23.155, 23.16, 23.165, 23.17, 23.175, 23.18, 23.185, 23.19, 23.195, 23.2, 23.205000000000002, 23.21, 23.215, 23.22, 23.225, 23.23, 23.235, 23.240000000000002, 23.245, 23.25, 23.255, 23.26, 23.265, 23.27, 23.275000000000002, 23.28, 23.285, 23.29, 23.295, 23.3, 23.305, 23.31, 23.315, 23.32, 23.325, 23.330000000000002, 23.335, 23.34, 23.345, 23.35, 23.355, 23.36, 23.365000000000002, 23.37, 23.375, 23.38, 23.385, 23.39, 23.395, 23.400000000000002, 23.405, 23.41, 23.415, 23.42, 23.425, 23.43, 23.435, 23.44, 23.445, 23.45, 23.455000000000002, 23.46, 23.465, 23.47, 23.475, 23.48, 23.485, 23.490000000000002, 23.495, 23.5, 23.505, 23.51, 23.515, 23.52, 23.525000000000002, 23.53, 23.535, 23.54, 23.545, 23.55, 23.555, 23.56, 23.565, 23.57, 23.575, 23.580000000000002, 23.585, 23.59, 23.595, 23.6, 23.605, 23.61, 23.615000000000002, 23.62, 23.625, 23.63, 23.635, 23.64, 23.645, 23.650000000000002, 23.655, 23.66, 23.665, 23.67, 23.675, 23.68, 23.685, 23.69, 23.695, 23.7, 23.705000000000002, 23.71, 23.715, 23.72, 23.725, 23.73, 23.735, 23.740000000000002, 23.745, 23.75, 23.755, 23.76, 23.765, 23.77, 23.775000000000002, 23.78, 23.785, 23.79, 23.795, 23.8, 23.805, 23.81, 23.815, 23.82, 23.825, 23.830000000000002, 23.835, 23.84, 23.845, 23.85, 23.855, 23.86, 23.865000000000002, 23.87, 23.875, 23.88, 23.885, 23.89, 23.895, 23.900000000000002, 23.905, 23.91, 23.915, 23.92, 23.925, 23.93, 23.935000000000002, 23.94, 23.945, 23.95, 23.955000000000002, 23.96, 23.965, 23.97, 23.975, 23.98, 23.985, 23.990000000000002, 23.995, 24.0, 24.005, 24.01, 24.015, 24.02, 24.025000000000002, 24.03, 24.035, 24.04, 24.045, 24.05, 24.055, 24.060000000000002, 24.065, 24.07, 24.075, 24.080000000000002, 24.085, 24.09, 24.095, 24.1, 24.105, 24.11, 24.115000000000002, 24.12, 24.125, 24.13, 24.135, 24.14, 24.145, 24.150000000000002, 24.155, 24.16, 24.165, 24.17, 24.175, 24.18, 24.185000000000002, 24.19, 24.195, 24.2, 24.205000000000002, 24.21, 24.215, 24.22, 24.225, 24.23, 24.235, 24.240000000000002, 24.245, 24.25, 24.255, 24.26, 24.265, 24.27, 24.275000000000002, 24.28, 24.285, 24.29, 24.295, 24.3, 24.305, 24.310000000000002, 24.315, 24.32, 24.325, 24.330000000000002, 24.335, 24.34, 24.345, 24.35, 24.355, 24.36, 24.365000000000002, 24.37, 24.375, 24.38, 24.385, 24.39, 24.395, 24.400000000000002, 24.405, 24.41, 24.415, 24.42, 24.425, 24.43, 24.435000000000002, 24.44, 24.445, 24.45, 24.455000000000002, 24.46, 24.465, 24.47, 24.475, 24.48, 24.485, 24.490000000000002, 24.495, 24.5, 24.505, 24.51, 24.515, 24.52, 24.525000000000002, 24.53, 24.535, 24.54, 24.545, 24.55, 24.555, 24.560000000000002, 24.565, 24.57, 24.575, 24.580000000000002, 24.585, 24.59, 24.595, 24.6, 24.605, 24.61, 24.615000000000002, 24.62, 24.625, 24.63, 24.635, 24.64, 24.645, 24.650000000000002, 24.655, 24.66, 24.665, 24.67, 24.675, 24.68, 24.685000000000002, 24.69, 24.695, 24.7, 24.705000000000002, 24.71, 24.715, 24.72, 24.725, 24.73, 24.735, 24.740000000000002, 24.745, 24.75, 24.755, 24.76, 24.765, 24.77, 24.775000000000002, 24.78, 24.785, 24.79, 24.795, 24.8, 24.805, 24.810000000000002, 24.815, 24.82, 24.825, 24.830000000000002, 24.835, 24.84, 24.845, 24.85, 24.855, 24.86, 24.865000000000002, 24.87, 24.875, 24.88, 24.885, 24.89, 24.895, 24.900000000000002, 24.905, 24.91, 24.915, 24.92, 24.925, 24.93, 24.935000000000002, 24.94, 24.945, 24.95, 24.955000000000002, 24.96, 24.965, 24.97, 24.975, 24.98, 24.985, 24.990000000000002, 24.995, 25.0, 25.005, 25.01, 25.015, 25.02, 25.025000000000002, 25.03, 25.035, 25.04, 25.045, 25.05, 25.055, 25.060000000000002, 25.065, 25.07, 25.075, 25.080000000000002, 25.085, 25.09, 25.095, 25.1, 25.105, 25.11, 25.115000000000002, 25.12, 25.125, 25.13, 25.135, 25.14, 25.145, 25.150000000000002, 25.155, 25.16, 25.165, 25.17, 25.175, 25.18, 25.185000000000002, 25.19, 25.195, 25.2, 25.205000000000002, 25.21, 25.215, 25.22, 25.225, 25.23, 25.235, 25.240000000000002, 25.245, 25.25, 25.255, 25.26, 25.265, 25.27, 25.275000000000002, 25.28, 25.285, 25.29, 25.295, 25.3, 25.305, 25.310000000000002, 25.315, 25.32, 25.325, 25.330000000000002, 25.335, 25.34, 25.345, 25.35, 25.355, 25.36, 25.365000000000002, 25.37, 25.375, 25.38, 25.385, 25.39, 25.395, 25.400000000000002, 25.405, 25.41, 25.415, 25.42, 25.425, 25.43, 25.435000000000002, 25.44, 25.445, 25.45, 25.455000000000002, 25.46, 25.465, 25.47, 25.475, 25.48, 25.485, 25.490000000000002, 25.495, 25.5, 25.505, 25.51, 25.515, 25.52, 25.525000000000002, 25.53, 25.535, 25.54, 25.545, 25.55, 25.555, 25.560000000000002, 25.565, 25.57, 25.575, 25.580000000000002, 25.585, 25.59, 25.595, 25.6, 25.605, 25.61, 25.615000000000002, 25.62, 25.625, 25.63, 25.635, 25.64, 25.645, 25.650000000000002, 25.655, 25.66, 25.665, 25.67, 25.675, 25.68, 25.685000000000002, 25.69, 25.695, 25.7, 25.705000000000002, 25.71, 25.715, 25.72, 25.725, 25.73, 25.735, 25.740000000000002, 25.745, 25.75, 25.755, 25.76, 25.765, 25.77, 25.775000000000002, 25.78, 25.785, 25.79, 25.795, 25.8, 25.805, 25.810000000000002, 25.815, 25.82, 25.825, 25.830000000000002, 25.835, 25.84, 25.845, 25.85, 25.855, 25.86, 25.865000000000002, 25.87, 25.875, 25.88, 25.885, 25.89, 25.895, 25.900000000000002, 25.905, 25.91, 25.915, 25.92, 25.925, 25.93, 25.935000000000002, 25.94, 25.945, 25.95, 25.955000000000002, 25.96, 25.965, 25.97, 25.975, 25.98, 25.985, 25.990000000000002, 25.995, 26.0, 26.005, 26.01, 26.015, 26.02, 26.025000000000002, 26.03, 26.035, 26.04, 26.045, 26.05, 26.055, 26.060000000000002, 26.065, 26.07, 26.075, 26.080000000000002, 26.085, 26.09, 26.095, 26.1, 26.105, 26.11, 26.115000000000002, 26.12, 26.125, 26.13, 26.135, 26.14, 26.145, 26.150000000000002, 26.155, 26.16, 26.165, 26.17, 26.175, 26.18, 26.185000000000002, 26.19, 26.195, 26.2, 26.205000000000002, 26.21, 26.215, 26.22, 26.225, 26.23, 26.235, 26.240000000000002, 26.245, 26.25, 26.255, 26.26, 26.265, 26.27, 26.275000000000002, 26.28, 26.285, 26.29, 26.295, 26.3, 26.305, 26.310000000000002, 26.315, 26.32, 26.325, 26.330000000000002, 26.335, 26.34, 26.345, 26.35, 26.355, 26.36, 26.365000000000002, 26.37, 26.375, 26.38, 26.385, 26.39, 26.395, 26.400000000000002, 26.405, 26.41, 26.415, 26.42, 26.425, 26.43, 26.435000000000002, 26.44, 26.445, 26.45, 26.455000000000002, 26.46, 26.465, 26.47, 26.475, 26.48, 26.485, 26.490000000000002, 26.495, 26.5, 26.505, 26.51, 26.515, 26.52, 26.525000000000002, 26.53, 26.535, 26.54, 26.545, 26.55, 26.555, 26.560000000000002, 26.565, 26.57, 26.575, 26.580000000000002, 26.585, 26.59, 26.595, 26.6, 26.605, 26.61, 26.615000000000002, 26.62, 26.625, 26.63, 26.635, 26.64, 26.645, 26.650000000000002, 26.655, 26.66, 26.665, 26.67, 26.675, 26.68, 26.685000000000002, 26.69, 26.695, 26.7, 26.705000000000002, 26.71, 26.715, 26.72, 26.725, 26.73, 26.735, 26.740000000000002, 26.745, 26.75, 26.755, 26.76, 26.765, 26.77, 26.775000000000002, 26.78, 26.785, 26.79, 26.795, 26.8, 26.805, 26.810000000000002, 26.815, 26.82, 26.825, 26.830000000000002, 26.835, 26.84, 26.845, 26.85, 26.855, 26.86, 26.865000000000002, 26.87, 26.875, 26.88, 26.885, 26.89, 26.895, 26.900000000000002, 26.905, 26.91, 26.915, 26.92, 26.925, 26.93, 26.935000000000002, 26.94, 26.945, 26.95, 26.955000000000002, 26.96, 26.965, 26.97, 26.975, 26.98, 26.985, 26.990000000000002, 26.995, 27.0, 27.005, 27.01, 27.015, 27.02, 27.025000000000002, 27.03, 27.035, 27.04, 27.045, 27.05, 27.055, 27.060000000000002, 27.065, 27.07, 27.075, 27.080000000000002, 27.085, 27.09, 27.095, 27.1, 27.105, 27.11, 27.115000000000002, 27.12, 27.125, 27.13, 27.135, 27.14, 27.145, 27.150000000000002, 27.155, 27.16, 27.165, 27.17, 27.175, 27.18, 27.185000000000002, 27.19, 27.195, 27.2, 27.205000000000002, 27.21, 27.215, 27.22, 27.225, 27.23, 27.235, 27.240000000000002, 27.245, 27.25, 27.255, 27.26, 27.265, 27.27, 27.275000000000002, 27.28, 27.285, 27.29, 27.295, 27.3, 27.305, 27.310000000000002, 27.315, 27.32, 27.325, 27.330000000000002, 27.335, 27.34, 27.345, 27.35, 27.355, 27.36, 27.365000000000002, 27.37, 27.375, 27.38, 27.385, 27.39, 27.395, 27.400000000000002, 27.405, 27.41, 27.415, 27.42, 27.425, 27.43, 27.435000000000002, 27.44, 27.445, 27.45, 27.455000000000002, 27.46, 27.465, 27.47, 27.475, 27.48, 27.485, 27.490000000000002, 27.495, 27.5, 27.505, 27.51, 27.515, 27.52, 27.525000000000002, 27.53, 27.535, 27.54, 27.545, 27.55, 27.555, 27.560000000000002, 27.565, 27.57, 27.575, 27.580000000000002, 27.585, 27.59, 27.595, 27.6, 27.605, 27.61, 27.615000000000002, 27.62, 27.625, 27.63, 27.635, 27.64, 27.645, 27.650000000000002, 27.655, 27.66, 27.665, 27.67, 27.675, 27.68, 27.685000000000002, 27.69, 27.695, 27.7, 27.705000000000002, 27.71, 27.715, 27.72, 27.725, 27.73, 27.735, 27.740000000000002, 27.745, 27.75, 27.755, 27.76, 27.765, 27.77, 27.775000000000002, 27.78, 27.785, 27.79, 27.795, 27.8, 27.805, 27.810000000000002, 27.815, 27.82, 27.825, 27.830000000000002, 27.835, 27.84, 27.845, 27.85, 27.855, 27.86, 27.865000000000002, 27.87, 27.875, 27.88, 27.885, 27.89, 27.895, 27.900000000000002, 27.905, 27.91, 27.915, 27.92, 27.925, 27.93, 27.935000000000002, 27.94, 27.945, 27.95, 27.955000000000002, 27.96, 27.965, 27.97, 27.975, 27.98, 27.985, 27.990000000000002, 27.995, 28.0, 28.005, 28.01, 28.015, 28.02, 28.025000000000002, 28.03, 28.035, 28.04, 28.045, 28.05, 28.055, 28.060000000000002, 28.065, 28.07, 28.075, 28.080000000000002, 28.085, 28.09, 28.095, 28.1, 28.105, 28.11, 28.115000000000002, 28.12, 28.125, 28.13, 28.135, 28.14, 28.145, 28.150000000000002, 28.155, 28.16, 28.165, 28.17, 28.175, 28.18, 28.185000000000002, 28.19, 28.195, 28.2, 28.205000000000002, 28.21, 28.215, 28.22, 28.225, 28.23, 28.235, 28.240000000000002, 28.245, 28.25, 28.255, 28.26, 28.265, 28.27, 28.275000000000002, 28.28, 28.285, 28.29, 28.295, 28.3, 28.305, 28.310000000000002, 28.315, 28.32, 28.325, 28.330000000000002, 28.335, 28.34, 28.345, 28.35, 28.355, 28.36, 28.365000000000002, 28.37, 28.375, 28.38, 28.385, 28.39, 28.395, 28.400000000000002, 28.405, 28.41, 28.415, 28.42, 28.425, 28.43, 28.435000000000002, 28.44, 28.445, 28.45, 28.455000000000002, 28.46, 28.465, 28.47, 28.475, 28.48, 28.485, 28.490000000000002, 28.495, 28.5, 28.505, 28.51, 28.515, 28.52, 28.525000000000002, 28.53, 28.535, 28.54, 28.545, 28.55, 28.555, 28.560000000000002, 28.565, 28.57, 28.575, 28.580000000000002, 28.585, 28.59, 28.595, 28.6, 28.605, 28.61, 28.615000000000002, 28.62, 28.625, 28.63, 28.635, 28.64, 28.645, 28.650000000000002, 28.655, 28.66, 28.665, 28.67, 28.675, 28.68, 28.685000000000002, 28.69, 28.695, 28.7, 28.705000000000002, 28.71, 28.715, 28.72, 28.725, 28.73, 28.735, 28.740000000000002, 28.745, 28.75, 28.755, 28.76, 28.765, 28.77, 28.775000000000002, 28.78, 28.785, 28.79, 28.795, 28.8, 28.805, 28.810000000000002, 28.815, 28.82, 28.825, 28.830000000000002, 28.835, 28.84, 28.845, 28.85, 28.855, 28.86, 28.865000000000002, 28.87, 28.875, 28.88, 28.885, 28.89, 28.895, 28.900000000000002, 28.905, 28.91, 28.915, 28.92, 28.925, 28.93, 28.935000000000002, 28.94, 28.945, 28.95, 28.955000000000002, 28.96, 28.965, 28.97, 28.975, 28.98, 28.985, 28.990000000000002, 28.995, 29.0, 29.005, 29.01, 29.015, 29.02, 29.025000000000002, 29.03, 29.035, 29.04, 29.045, 29.05, 29.055, 29.060000000000002, 29.065, 29.07, 29.075, 29.080000000000002, 29.085, 29.09, 29.095, 29.1, 29.105, 29.11, 29.115000000000002, 29.12, 29.125, 29.13, 29.135, 29.14, 29.145, 29.150000000000002, 29.155, 29.16, 29.165, 29.17, 29.175, 29.18, 29.185000000000002, 29.19, 29.195, 29.2, 29.205000000000002, 29.21, 29.215, 29.22, 29.225, 29.23, 29.235, 29.240000000000002, 29.245, 29.25, 29.255, 29.26, 29.265, 29.27, 29.275000000000002, 29.28, 29.285, 29.29, 29.295, 29.3, 29.305, 29.310000000000002, 29.315, 29.32, 29.325, 29.330000000000002, 29.335, 29.34, 29.345, 29.35, 29.355, 29.36, 29.365000000000002, 29.37, 29.375, 29.38, 29.385, 29.39, 29.395, 29.400000000000002, 29.405, 29.41, 29.415, 29.42, 29.425, 29.43, 29.435000000000002, 29.44, 29.445, 29.45, 29.455000000000002, 29.46, 29.465, 29.47, 29.475, 29.48, 29.485, 29.490000000000002, 29.495, 29.5, 29.505, 29.51, 29.515, 29.52, 29.525000000000002, 29.53, 29.535, 29.54, 29.545, 29.55, 29.555, 29.560000000000002, 29.565, 29.57, 29.575, 29.580000000000002, 29.585, 29.59, 29.595, 29.6, 29.605, 29.61, 29.615000000000002, 29.62, 29.625, 29.63, 29.635, 29.64, 29.645, 29.650000000000002, 29.655, 29.66, 29.665, 29.67, 29.675, 29.68, 29.685000000000002, 29.69, 29.695, 29.7, 29.705000000000002, 29.71, 29.715, 29.72, 29.725, 29.73, 29.735, 29.740000000000002, 29.745, 29.75, 29.755, 29.76, 29.765, 29.77, 29.775000000000002, 29.78, 29.785, 29.79, 29.795, 29.8, 29.805, 29.810000000000002, 29.815, 29.82, 29.825, 29.830000000000002, 29.835, 29.84, 29.845, 29.85, 29.855, 29.86, 29.865000000000002, 29.87, 29.875, 29.88, 29.885, 29.89, 29.895, 29.900000000000002, 29.905, 29.91, 29.915, 29.92, 29.925, 29.93, 29.935000000000002, 29.94, 29.945, 29.95, 29.955000000000002, 29.96, 29.965, 29.97, 29.975, 29.98, 29.985, 29.990000000000002, 29.995, 30.0, 30.005, 30.01, 30.015, 30.02, 30.025000000000002, 30.03, 30.035, 30.04, 30.045, 30.05, 30.055, 30.060000000000002, 30.065, 30.07, 30.075, 30.080000000000002, 30.085, 30.09, 30.095, 30.1, 30.105, 30.11, 30.115000000000002, 30.12, 30.125, 30.13, 30.135, 30.14, 30.145, 30.150000000000002, 30.155, 30.16, 30.165, 30.17, 30.175, 30.18, 30.185000000000002, 30.19, 30.195, 30.2, 30.205000000000002, 30.21, 30.215, 30.22, 30.225, 30.23, 30.235, 30.240000000000002, 30.245, 30.25, 30.255, 30.26, 30.265, 30.27, 30.275000000000002, 30.28, 30.285, 30.29, 30.295, 30.3, 30.305, 30.310000000000002, 30.315, 30.32, 30.325, 30.330000000000002, 30.335, 30.34, 30.345, 30.35, 30.355, 30.36, 30.365000000000002, 30.37, 30.375, 30.38, 30.385, 30.39, 30.395, 30.400000000000002, 30.405, 30.41, 30.415, 30.42, 30.425, 30.43, 30.435000000000002, 30.44, 30.445, 30.45, 30.455000000000002, 30.46, 30.465, 30.47, 30.475, 30.48, 30.485, 30.490000000000002, 30.495, 30.5, 30.505, 30.51, 30.515, 30.52, 30.525000000000002, 30.53, 30.535, 30.54, 30.545, 30.55, 30.555, 30.560000000000002, 30.565, 30.57, 30.575, 30.580000000000002, 30.585, 30.59, 30.595, 30.6, 30.605, 30.61, 30.615000000000002, 30.62, 30.625, 30.63, 30.635, 30.64, 30.645, 30.650000000000002, 30.655, 30.66, 30.665, 30.67, 30.675, 30.68, 30.685000000000002, 30.69, 30.695, 30.7, 30.705000000000002, 30.71, 30.715, 30.72, 30.725, 30.73, 30.735, 30.740000000000002, 30.745, 30.75, 30.755, 30.76, 30.765, 30.77, 30.775000000000002, 30.78, 30.785, 30.79, 30.795, 30.8, 30.805, 30.810000000000002, 30.815, 30.82, 30.825, 30.830000000000002, 30.835, 30.84, 30.845000000000002, 30.85, 30.855, 30.86, 30.865000000000002, 30.87, 30.875, 30.88, 30.885, 30.89, 30.895, 30.900000000000002, 30.905, 30.91, 30.915, 30.92, 30.925, 30.93, 30.935000000000002, 30.94, 30.945, 30.95, 30.955000000000002, 30.96, 30.965, 30.970000000000002, 30.975, 30.98, 30.985, 30.990000000000002, 30.995, 31.0, 31.005, 31.01, 31.015, 31.02, 31.025000000000002, 31.03, 31.035, 31.04, 31.045, 31.05, 31.055, 31.060000000000002, 31.065, 31.07, 31.075, 31.080000000000002, 31.085, 31.09, 31.095000000000002, 31.1, 31.105, 31.11, 31.115000000000002, 31.12, 31.125, 31.13, 31.135, 31.14, 31.145, 31.150000000000002, 31.155, 31.16, 31.165, 31.17, 31.175, 31.18, 31.185000000000002, 31.19, 31.195, 31.2, 31.205000000000002, 31.21, 31.215, 31.220000000000002, 31.225, 31.23, 31.235, 31.240000000000002, 31.245, 31.25, 31.255, 31.26, 31.265, 31.27, 31.275000000000002, 31.28, 31.285, 31.29, 31.295, 31.3, 31.305, 31.310000000000002, 31.315, 31.32, 31.325, 31.330000000000002, 31.335, 31.34, 31.345000000000002, 31.35, 31.355, 31.36, 31.365000000000002, 31.37, 31.375, 31.38, 31.385, 31.39, 31.395, 31.400000000000002, 31.405, 31.41, 31.415, 31.42, 31.425, 31.43, 31.435000000000002, 31.44, 31.445, 31.45, 31.455000000000002, 31.46, 31.465, 31.470000000000002, 31.475, 31.48, 31.485, 31.490000000000002, 31.495, 31.5, 31.505, 31.51, 31.515, 31.52, 31.525000000000002, 31.53, 31.535, 31.54, 31.545, 31.55, 31.555, 31.560000000000002, 31.565, 31.57, 31.575, 31.580000000000002, 31.585, 31.59, 31.595000000000002, 31.6, 31.605, 31.61, 31.615000000000002, 31.62, 31.625, 31.63, 31.635, 31.64, 31.645, 31.650000000000002, 31.655, 31.66, 31.665, 31.67, 31.675, 31.68, 31.685000000000002, 31.69, 31.695, 31.7, 31.705000000000002, 31.71, 31.715, 31.720000000000002, 31.725, 31.73, 31.735, 31.740000000000002, 31.745, 31.75, 31.755, 31.76, 31.765, 31.77, 31.775000000000002, 31.78, 31.785, 31.79, 31.795, 31.8, 31.805, 31.810000000000002, 31.815, 31.82, 31.825, 31.830000000000002, 31.835, 31.84, 31.845000000000002, 31.85, 31.855, 31.86, 31.865000000000002, 31.87, 31.875, 31.88, 31.885, 31.89, 31.895, 31.900000000000002, 31.905, 31.91, 31.915, 31.92, 31.925, 31.93, 31.935000000000002, 31.94, 31.945, 31.95, 31.955000000000002, 31.96, 31.965, 31.970000000000002, 31.975, 31.98, 31.985, 31.990000000000002, 31.995, 32.0, 32.005, 32.01, 32.015, 32.02, 32.025, 32.03, 32.035000000000004, 32.04, 32.045, 32.05, 32.055, 32.06, 32.065, 32.07, 32.075, 32.08, 32.085, 32.09, 32.095, 32.1, 32.105000000000004, 32.11, 32.115, 32.12, 32.125, 32.13, 32.135, 32.14, 32.145, 32.15, 32.155, 32.160000000000004, 32.165, 32.17, 32.175, 32.18, 32.185, 32.19, 32.195, 32.2, 32.205, 32.21, 32.215, 32.22, 32.225, 32.230000000000004, 32.235, 32.24, 32.245, 32.25, 32.255, 32.26, 32.265, 32.27, 32.275, 32.28, 32.285000000000004, 32.29, 32.295, 32.3, 32.305, 32.31, 32.315, 32.32, 32.325, 32.33, 32.335, 32.34, 32.345, 32.35, 32.355000000000004, 32.36, 32.365, 32.37, 32.375, 32.38, 32.385, 32.39, 32.395, 32.4, 32.405, 32.410000000000004, 32.415, 32.42, 32.425, 32.43, 32.435, 32.44, 32.445, 32.45, 32.455, 32.46, 32.465, 32.47, 32.475, 32.480000000000004, 32.485, 32.49, 32.495, 32.5, 32.505, 32.51, 32.515, 32.52, 32.525, 32.53, 32.535000000000004, 32.54, 32.545, 32.55, 32.555, 32.56, 32.565, 32.57, 32.575, 32.58, 32.585, 32.59, 32.595, 32.6, 32.605000000000004, 32.61, 32.615, 32.62, 32.625, 32.63, 32.635, 32.64, 32.645, 32.65, 32.655, 32.660000000000004, 32.665, 32.67, 32.675, 32.68, 32.685, 32.69, 32.695, 32.7, 32.705, 32.71, 32.715, 32.72, 32.725, 32.730000000000004, 32.735, 32.74, 32.745, 32.75, 32.755, 32.76, 32.765, 32.77, 32.775, 32.78, 32.785000000000004, 32.79, 32.795, 32.8, 32.805, 32.81, 32.815, 32.82, 32.825, 32.83, 32.835, 32.84, 32.845, 32.85, 32.855000000000004, 32.86, 32.865, 32.87, 32.875, 32.88, 32.885, 32.89, 32.895, 32.9, 32.905, 32.910000000000004, 32.915, 32.92, 32.925, 32.93, 32.935, 32.94, 32.945, 32.95, 32.955, 32.96, 32.965, 32.97, 32.975, 32.980000000000004, 32.985, 32.99, 32.995, 33.0, 33.005, 33.01, 33.015, 33.02, 33.025, 33.03, 33.035000000000004, 33.04, 33.045, 33.05, 33.055, 33.06, 33.065, 33.07, 33.075, 33.08, 33.085, 33.09, 33.095, 33.1, 33.105000000000004, 33.11, 33.115, 33.12, 33.125, 33.13, 33.135, 33.14, 33.145, 33.15, 33.155, 33.160000000000004, 33.165, 33.17, 33.175, 33.18, 33.185, 33.19, 33.195, 33.2, 33.205, 33.21, 33.215, 33.22, 33.225, 33.230000000000004, 33.235, 33.24, 33.245, 33.25, 33.255, 33.26, 33.265, 33.27, 33.275, 33.28, 33.285000000000004, 33.29, 33.295, 33.3, 33.305, 33.31, 33.315, 33.32, 33.325, 33.33, 33.335, 33.34, 33.345, 33.35, 33.355000000000004, 33.36, 33.365, 33.37, 33.375, 33.38, 33.385, 33.39, 33.395, 33.4, 33.405, 33.410000000000004, 33.415, 33.42, 33.425, 33.43, 33.435, 33.44, 33.445, 33.45, 33.455, 33.46, 33.465, 33.47, 33.475, 33.480000000000004, 33.485, 33.49, 33.495, 33.5, 33.505, 33.51, 33.515, 33.52, 33.525, 33.53, 33.535000000000004, 33.54, 33.545, 33.55, 33.555, 33.56, 33.565, 33.57, 33.575, 33.58, 33.585, 33.59, 33.595, 33.6, 33.605000000000004, 33.61, 33.615, 33.62, 33.625, 33.63, 33.635, 33.64, 33.645, 33.65, 33.655, 33.660000000000004, 33.665, 33.67, 33.675, 33.68, 33.685, 33.69, 33.695, 33.7, 33.705, 33.71, 33.715, 33.72, 33.725, 33.730000000000004, 33.735, 33.74, 33.745, 33.75, 33.755, 33.76, 33.765, 33.77, 33.775, 33.78, 33.785000000000004, 33.79, 33.795, 33.8, 33.805, 33.81, 33.815, 33.82, 33.825, 33.83, 33.835, 33.84, 33.845, 33.85, 33.855000000000004, 33.86, 33.865, 33.87, 33.875, 33.88, 33.885, 33.89, 33.895, 33.9, 33.905, 33.910000000000004, 33.915, 33.92, 33.925, 33.93, 33.935, 33.94, 33.945, 33.95, 33.955, 33.96, 33.965, 33.97, 33.975, 33.980000000000004, 33.985, 33.99, 33.995, 34.0, 34.005, 34.01, 34.015, 34.02, 34.025, 34.03, 34.035000000000004, 34.04, 34.045, 34.05, 34.055, 34.06, 34.065, 34.07, 34.075, 34.08, 34.085, 34.09, 34.095, 34.1, 34.105000000000004, 34.11, 34.115, 34.12, 34.125, 34.13, 34.135, 34.14, 34.145, 34.15, 34.155, 34.160000000000004, 34.165, 34.17, 34.175000000000004, 34.18, 34.185, 34.19, 34.195, 34.2, 34.205, 34.21, 34.215, 34.22, 34.225, 34.230000000000004, 34.235, 34.24, 34.245, 34.25, 34.255, 34.26, 34.265, 34.27, 34.275, 34.28, 34.285000000000004, 34.29, 34.295, 34.300000000000004, 34.305, 34.31, 34.315, 34.32, 34.325, 34.33, 34.335, 34.34, 34.345, 34.35, 34.355000000000004, 34.36, 34.365, 34.37, 34.375, 34.38, 34.385, 34.39, 34.395, 34.4, 34.405, 34.410000000000004, 34.415, 34.42, 34.425000000000004, 34.43, 34.435, 34.44, 34.445, 34.45, 34.455, 34.46, 34.465, 34.47, 34.475, 34.480000000000004, 34.485, 34.49, 34.495, 34.5, 34.505, 34.51, 34.515, 34.52, 34.525, 34.53, 34.535000000000004, 34.54, 34.545, 34.550000000000004, 34.555, 34.56, 34.565, 34.57, 34.575, 34.58, 34.585, 34.59, 34.595, 34.6, 34.605000000000004, 34.61, 34.615, 34.62, 34.625, 34.63, 34.635, 34.64, 34.645, 34.65, 34.655, 34.660000000000004, 34.665, 34.67, 34.675000000000004, 34.68, 34.685, 34.69, 34.695, 34.7, 34.705, 34.71, 34.715, 34.72, 34.725, 34.730000000000004, 34.735, 34.74, 34.745, 34.75, 34.755, 34.76, 34.765, 34.77, 34.775, 34.78, 34.785000000000004, 34.79, 34.795, 34.800000000000004, 34.805, 34.81, 34.815, 34.82, 34.825, 34.83, 34.835, 34.84, 34.845, 34.85, 34.855000000000004, 34.86, 34.865, 34.87, 34.875, 34.88, 34.885, 34.89, 34.895, 34.9, 34.905, 34.910000000000004, 34.915, 34.92, 34.925000000000004, 34.93, 34.935, 34.94, 34.945, 34.95, 34.955, 34.96, 34.965, 34.97, 34.975, 34.980000000000004, 34.985, 34.99, 34.995, 35.0, 35.005, 35.01, 35.015, 35.02, 35.025, 35.03, 35.035000000000004, 35.04, 35.045, 35.050000000000004, 35.055, 35.06, 35.065, 35.07, 35.075, 35.08, 35.085, 35.09, 35.095, 35.1, 35.105000000000004, 35.11, 35.115, 35.12, 35.125, 35.13, 35.135, 35.14, 35.145, 35.15, 35.155, 35.160000000000004, 35.165, 35.17, 35.175000000000004, 35.18, 35.185, 35.19, 35.195, 35.2, 35.205, 35.21, 35.215, 35.22, 35.225, 35.230000000000004, 35.235, 35.24, 35.245, 35.25, 35.255, 35.26, 35.265, 35.27, 35.275, 35.28, 35.285000000000004, 35.29, 35.295, 35.300000000000004, 35.305, 35.31, 35.315, 35.32, 35.325, 35.33, 35.335, 35.34, 35.345, 35.35, 35.355000000000004, 35.36, 35.365, 35.37, 35.375, 35.38, 35.385, 35.39, 35.395, 35.4, 35.405, 35.410000000000004, 35.415, 35.42, 35.425000000000004, 35.43, 35.435, 35.44, 35.445, 35.45, 35.455, 35.46, 35.465, 35.47, 35.475, 35.480000000000004, 35.485, 35.49, 35.495, 35.5, 35.505, 35.51, 35.515, 35.52, 35.525, 35.53, 35.535000000000004, 35.54, 35.545, 35.550000000000004, 35.555, 35.56, 35.565, 35.57, 35.575, 35.58, 35.585, 35.59, 35.595, 35.6, 35.605000000000004, 35.61, 35.615, 35.62, 35.625, 35.63, 35.635, 35.64, 35.645, 35.65, 35.655, 35.660000000000004, 35.665, 35.67, 35.675000000000004, 35.68, 35.685, 35.69, 35.695, 35.7, 35.705, 35.71, 35.715, 35.72, 35.725, 35.730000000000004, 35.735, 35.74, 35.745, 35.75, 35.755, 35.76, 35.765, 35.77, 35.775, 35.78, 35.785000000000004, 35.79, 35.795, 35.800000000000004, 35.805, 35.81, 35.815, 35.82, 35.825, 35.83, 35.835, 35.84, 35.845, 35.85, 35.855000000000004, 35.86, 35.865, 35.87, 35.875, 35.88, 35.885, 35.89, 35.895, 35.9, 35.905, 35.910000000000004, 35.915, 35.92, 35.925000000000004, 35.93, 35.935, 35.94, 35.945, 35.95, 35.955, 35.96, 35.965, 35.97, 35.975, 35.980000000000004, 35.985, 35.99, 35.995, 36.0, 36.005, 36.01, 36.015, 36.02, 36.025, 36.03, 36.035000000000004, 36.04, 36.045, 36.050000000000004, 36.055, 36.06, 36.065, 36.07, 36.075, 36.08, 36.085, 36.09, 36.095, 36.1, 36.105000000000004, 36.11, 36.115, 36.12, 36.125, 36.13, 36.135, 36.14, 36.145, 36.15, 36.155, 36.160000000000004, 36.165, 36.17, 36.175000000000004, 36.18, 36.185, 36.19, 36.195, 36.2, 36.205, 36.21, 36.215, 36.22, 36.225, 36.230000000000004, 36.235, 36.24, 36.245, 36.25, 36.255, 36.26, 36.265, 36.27, 36.275, 36.28, 36.285000000000004, 36.29, 36.295, 36.300000000000004, 36.305, 36.31, 36.315, 36.32, 36.325, 36.33, 36.335, 36.34, 36.345, 36.35, 36.355000000000004, 36.36, 36.365, 36.37, 36.375, 36.38, 36.385, 36.39, 36.395, 36.4, 36.405, 36.410000000000004, 36.415, 36.42, 36.425000000000004, 36.43, 36.435, 36.44, 36.445, 36.45, 36.455, 36.46, 36.465, 36.47, 36.475, 36.480000000000004, 36.485, 36.49, 36.495, 36.5, 36.505, 36.51, 36.515, 36.52, 36.525, 36.53, 36.535000000000004, 36.54, 36.545, 36.550000000000004, 36.555, 36.56, 36.565, 36.57, 36.575, 36.58, 36.585, 36.59, 36.595, 36.6, 36.605000000000004, 36.61, 36.615, 36.62, 36.625, 36.63, 36.635, 36.64, 36.645, 36.65, 36.655, 36.660000000000004, 36.665, 36.67, 36.675000000000004, 36.68, 36.685, 36.69, 36.695, 36.7, 36.705, 36.71, 36.715, 36.72, 36.725, 36.730000000000004, 36.735, 36.74, 36.745, 36.75, 36.755, 36.76, 36.765, 36.77, 36.775, 36.78, 36.785000000000004, 36.79, 36.795, 36.800000000000004, 36.805, 36.81, 36.815, 36.82, 36.825, 36.83, 36.835, 36.84, 36.845, 36.85, 36.855000000000004, 36.86, 36.865, 36.87, 36.875, 36.88, 36.885, 36.89, 36.895, 36.9, 36.905, 36.910000000000004, 36.915, 36.92, 36.925000000000004, 36.93, 36.935, 36.94, 36.945, 36.95, 36.955, 36.96, 36.965, 36.97, 36.975, 36.980000000000004, 36.985, 36.99, 36.995, 37.0, 37.005, 37.01, 37.015, 37.02, 37.025, 37.03, 37.035000000000004, 37.04, 37.045, 37.050000000000004, 37.055, 37.06, 37.065, 37.07, 37.075, 37.08, 37.085, 37.09, 37.095, 37.1, 37.105000000000004, 37.11, 37.115, 37.12, 37.125, 37.13, 37.135, 37.14, 37.145, 37.15, 37.155, 37.160000000000004, 37.165, 37.17, 37.175000000000004, 37.18, 37.185, 37.19, 37.195, 37.2, 37.205, 37.21, 37.215, 37.22, 37.225, 37.230000000000004, 37.235, 37.24, 37.245, 37.25, 37.255, 37.26, 37.265, 37.27, 37.275, 37.28, 37.285000000000004, 37.29, 37.295, 37.300000000000004, 37.305, 37.31, 37.315, 37.32, 37.325, 37.33, 37.335, 37.34, 37.345, 37.35, 37.355000000000004, 37.36, 37.365, 37.37, 37.375, 37.38, 37.385, 37.39, 37.395, 37.4, 37.405, 37.410000000000004, 37.415, 37.42, 37.425000000000004, 37.43, 37.435, 37.44, 37.445, 37.45, 37.455, 37.46, 37.465, 37.47, 37.475, 37.480000000000004, 37.485, 37.49, 37.495, 37.5, 37.505, 37.51, 37.515, 37.52, 37.525, 37.53, 37.535000000000004, 37.54, 37.545, 37.550000000000004, 37.555, 37.56, 37.565, 37.57, 37.575, 37.58, 37.585, 37.59, 37.595, 37.6, 37.605000000000004, 37.61, 37.615, 37.62, 37.625, 37.63, 37.635, 37.64, 37.645, 37.65, 37.655, 37.660000000000004, 37.665, 37.67, 37.675000000000004, 37.68, 37.685, 37.69, 37.695, 37.7, 37.705, 37.71, 37.715, 37.72, 37.725, 37.730000000000004, 37.735, 37.74, 37.745, 37.75, 37.755, 37.76, 37.765, 37.77, 37.775, 37.78, 37.785000000000004, 37.79, 37.795, 37.800000000000004, 37.805, 37.81, 37.815, 37.82, 37.825, 37.83, 37.835, 37.84, 37.845, 37.85, 37.855000000000004, 37.86, 37.865, 37.87, 37.875, 37.88, 37.885, 37.89, 37.895, 37.9, 37.905, 37.910000000000004, 37.915, 37.92, 37.925000000000004, 37.93, 37.935, 37.94, 37.945, 37.95, 37.955, 37.96, 37.965, 37.97, 37.975, 37.980000000000004, 37.985, 37.99, 37.995, 38.0, 38.005, 38.01, 38.015, 38.02, 38.025, 38.03, 38.035000000000004, 38.04, 38.045, 38.050000000000004, 38.055, 38.06, 38.065, 38.07, 38.075, 38.08, 38.085, 38.09, 38.095, 38.1, 38.105000000000004, 38.11, 38.115, 38.12, 38.125, 38.13, 38.135, 38.14, 38.145, 38.15, 38.155, 38.160000000000004, 38.165, 38.17, 38.175000000000004, 38.18, 38.185, 38.19, 38.195, 38.2, 38.205, 38.21, 38.215, 38.22, 38.225, 38.230000000000004, 38.235, 38.24, 38.245, 38.25, 38.255, 38.26, 38.265, 38.27, 38.275, 38.28, 38.285000000000004, 38.29, 38.295, 38.300000000000004, 38.305, 38.31, 38.315, 38.32, 38.325, 38.33, 38.335, 38.34, 38.345, 38.35, 38.355000000000004, 38.36, 38.365, 38.37, 38.375, 38.38, 38.385, 38.39, 38.395, 38.4, 38.405, 38.410000000000004, 38.415, 38.42, 38.425000000000004, 38.43, 38.435, 38.44, 38.445, 38.45, 38.455, 38.46, 38.465, 38.47, 38.475, 38.480000000000004, 38.485, 38.49, 38.495, 38.5, 38.505, 38.51, 38.515, 38.52, 38.525, 38.53, 38.535000000000004, 38.54, 38.545, 38.550000000000004, 38.555, 38.56, 38.565, 38.57, 38.575, 38.58, 38.585, 38.59, 38.595, 38.6, 38.605000000000004, 38.61, 38.615, 38.62, 38.625, 38.63, 38.635, 38.64, 38.645, 38.65, 38.655, 38.660000000000004, 38.665, 38.67, 38.675000000000004, 38.68, 38.685, 38.69, 38.695, 38.7, 38.705, 38.71, 38.715, 38.72, 38.725, 38.730000000000004, 38.735, 38.74, 38.745, 38.75, 38.755, 38.76, 38.765, 38.77, 38.775, 38.78, 38.785000000000004, 38.79, 38.795, 38.800000000000004, 38.805, 38.81, 38.815, 38.82, 38.825, 38.83, 38.835, 38.84, 38.845, 38.85, 38.855000000000004, 38.86, 38.865, 38.87, 38.875, 38.88, 38.885, 38.89, 38.895, 38.9, 38.905, 38.910000000000004, 38.915, 38.92, 38.925000000000004, 38.93, 38.935, 38.94, 38.945, 38.95, 38.955, 38.96, 38.965, 38.97, 38.975, 38.980000000000004, 38.985, 38.99, 38.995, 39.0, 39.005, 39.01, 39.015, 39.02, 39.025, 39.03, 39.035000000000004, 39.04, 39.045, 39.050000000000004, 39.055, 39.06, 39.065, 39.07, 39.075, 39.08, 39.085, 39.09, 39.095, 39.1, 39.105000000000004, 39.11, 39.115, 39.12, 39.125, 39.13, 39.135, 39.14, 39.145, 39.15, 39.155, 39.160000000000004, 39.165, 39.17, 39.175000000000004, 39.18, 39.185, 39.19, 39.195, 39.2, 39.205, 39.21, 39.215, 39.22, 39.225, 39.230000000000004, 39.235, 39.24, 39.245, 39.25, 39.255, 39.26, 39.265, 39.27, 39.275, 39.28, 39.285000000000004, 39.29, 39.295, 39.300000000000004, 39.305, 39.31, 39.315, 39.32, 39.325, 39.33, 39.335, 39.34, 39.345, 39.35, 39.355000000000004, 39.36, 39.365, 39.37, 39.375, 39.38, 39.385, 39.39, 39.395, 39.4, 39.405, 39.410000000000004, 39.415, 39.42, 39.425000000000004, 39.43, 39.435, 39.44, 39.445, 39.45, 39.455, 39.46, 39.465, 39.47, 39.475, 39.480000000000004, 39.485, 39.49, 39.495, 39.5, 39.505, 39.51, 39.515, 39.52, 39.525, 39.53, 39.535000000000004, 39.54, 39.545, 39.550000000000004, 39.555, 39.56, 39.565, 39.57, 39.575, 39.58, 39.585, 39.59, 39.595, 39.6, 39.605000000000004, 39.61, 39.615, 39.62, 39.625, 39.63, 39.635, 39.64, 39.645, 39.65, 39.655, 39.660000000000004, 39.665, 39.67, 39.675000000000004, 39.68, 39.685, 39.69, 39.695, 39.7, 39.705, 39.71, 39.715, 39.72, 39.725, 39.730000000000004, 39.735, 39.74, 39.745, 39.75, 39.755, 39.76, 39.765, 39.77, 39.775, 39.78, 39.785000000000004, 39.79, 39.795, 39.800000000000004, 39.805, 39.81, 39.815, 39.82, 39.825, 39.83, 39.835, 39.84, 39.845, 39.85, 39.855000000000004, 39.86, 39.865, 39.87, 39.875, 39.88, 39.885, 39.89, 39.895, 39.9, 39.905, 39.910000000000004, 39.915, 39.92, 39.925000000000004, 39.93, 39.935, 39.94, 39.945, 39.95, 39.955, 39.96, 39.965, 39.97, 39.975, 39.980000000000004, 39.985, 39.99, 39.995, 40.0, 40.005, 40.01, 40.015, 40.02, 40.025, 40.03, 40.035000000000004, 40.04, 40.045, 40.050000000000004, 40.055, 40.06, 40.065, 40.07, 40.075, 40.08, 40.085, 40.09, 40.095, 40.1, 40.105000000000004, 40.11, 40.115, 40.12, 40.125, 40.13, 40.135, 40.14, 40.145, 40.15, 40.155, 40.160000000000004, 40.165, 40.17, 40.175000000000004, 40.18, 40.185, 40.19, 40.195, 40.2, 40.205, 40.21, 40.215, 40.22, 40.225, 40.230000000000004, 40.235, 40.24, 40.245, 40.25, 40.255, 40.26, 40.265, 40.27, 40.275, 40.28, 40.285000000000004, 40.29, 40.295, 40.300000000000004, 40.305, 40.31, 40.315, 40.32, 40.325, 40.33, 40.335, 40.34, 40.345, 40.35, 40.355000000000004, 40.36, 40.365, 40.37, 40.375, 40.38, 40.385, 40.39, 40.395, 40.4, 40.405, 40.410000000000004, 40.415, 40.42, 40.425000000000004, 40.43, 40.435, 40.44, 40.445, 40.45, 40.455, 40.46, 40.465, 40.47, 40.475, 40.480000000000004, 40.485, 40.49, 40.495, 40.5, 40.505, 40.51, 40.515, 40.52, 40.525, 40.53, 40.535000000000004, 40.54, 40.545, 40.550000000000004, 40.555, 40.56, 40.565, 40.57, 40.575, 40.58, 40.585, 40.59, 40.595, 40.6, 40.605000000000004, 40.61, 40.615, 40.62, 40.625, 40.63, 40.635, 40.64, 40.645, 40.65, 40.655, 40.660000000000004, 40.665, 40.67, 40.675000000000004, 40.68, 40.685, 40.69, 40.695, 40.7, 40.705, 40.71, 40.715, 40.72, 40.725, 40.730000000000004, 40.735, 40.74, 40.745, 40.75, 40.755, 40.76, 40.765, 40.77, 40.775, 40.78, 40.785000000000004, 40.79, 40.795, 40.800000000000004, 40.805, 40.81, 40.815, 40.82, 40.825, 40.83, 40.835, 40.84, 40.845, 40.85, 40.855000000000004, 40.86, 40.865, 40.87, 40.875, 40.88, 40.885, 40.89, 40.895, 40.9, 40.905, 40.910000000000004, 40.915, 40.92, 40.925000000000004, 40.93, 40.935, 40.94, 40.945, 40.95, 40.955, 40.96, 40.965, 40.97, 40.975, 40.980000000000004, 40.985, 40.99, 40.995, 41.0, 41.005, 41.01, 41.015, 41.02, 41.025, 41.03, 41.035000000000004, 41.04, 41.045, 41.050000000000004, 41.055, 41.06, 41.065, 41.07, 41.075, 41.08, 41.085, 41.09, 41.095, 41.1, 41.105000000000004, 41.11, 41.115, 41.12, 41.125, 41.13, 41.135, 41.14, 41.145, 41.15, 41.155, 41.160000000000004, 41.165, 41.17, 41.175000000000004, 41.18, 41.185, 41.19, 41.195, 41.2, 41.205, 41.21, 41.215, 41.22, 41.225, 41.230000000000004, 41.235, 41.24, 41.245, 41.25, 41.255, 41.26, 41.265, 41.27, 41.275, 41.28, 41.285000000000004, 41.29, 41.295, 41.300000000000004, 41.305, 41.31, 41.315, 41.32, 41.325, 41.33, 41.335, 41.34, 41.345, 41.35, 41.355000000000004, 41.36, 41.365, 41.37, 41.375, 41.38, 41.385, 41.39, 41.395, 41.4, 41.405, 41.410000000000004, 41.415, 41.42, 41.425000000000004, 41.43, 41.435, 41.44, 41.445, 41.45, 41.455, 41.46, 41.465, 41.47, 41.475, 41.480000000000004, 41.485, 41.49, 41.495, 41.5, 41.505, 41.51, 41.515, 41.52, 41.525, 41.53, 41.535000000000004, 41.54, 41.545, 41.550000000000004, 41.555, 41.56, 41.565, 41.57, 41.575, 41.58, 41.585, 41.59, 41.595, 41.6, 41.605000000000004, 41.61, 41.615, 41.62, 41.625, 41.63, 41.635, 41.64, 41.645, 41.65, 41.655, 41.660000000000004, 41.665, 41.67, 41.675000000000004, 41.68, 41.685, 41.69, 41.695, 41.7, 41.705, 41.71, 41.715, 41.72, 41.725, 41.730000000000004, 41.735, 41.74, 41.745, 41.75, 41.755, 41.76, 41.765, 41.77, 41.775, 41.78, 41.785000000000004, 41.79, 41.795, 41.800000000000004, 41.805, 41.81, 41.815, 41.82, 41.825, 41.83, 41.835, 41.84, 41.845, 41.85, 41.855000000000004, 41.86, 41.865, 41.87, 41.875, 41.88, 41.885, 41.89, 41.895, 41.9, 41.905, 41.910000000000004, 41.915, 41.92, 41.925000000000004, 41.93, 41.935, 41.94, 41.945, 41.95, 41.955, 41.96, 41.965, 41.97, 41.975, 41.980000000000004, 41.985, 41.99, 41.995, 42.0, 42.005, 42.01, 42.015, 42.02, 42.025, 42.03, 42.035000000000004, 42.04, 42.045, 42.050000000000004, 42.055, 42.06, 42.065, 42.07, 42.075, 42.08, 42.085, 42.09, 42.095, 42.1, 42.105000000000004, 42.11, 42.115, 42.12, 42.125, 42.13, 42.135, 42.14, 42.145, 42.15, 42.155, 42.160000000000004, 42.165, 42.17, 42.175000000000004, 42.18, 42.185, 42.19, 42.195, 42.2, 42.205, 42.21, 42.215, 42.22, 42.225, 42.230000000000004, 42.235, 42.24, 42.245, 42.25, 42.255, 42.26, 42.265, 42.27, 42.275, 42.28, 42.285000000000004, 42.29, 42.295, 42.300000000000004, 42.305, 42.31, 42.315, 42.32, 42.325, 42.33, 42.335, 42.34, 42.345, 42.35, 42.355000000000004, 42.36, 42.365, 42.37, 42.375, 42.38, 42.385, 42.39, 42.395, 42.4, 42.405, 42.410000000000004, 42.415, 42.42, 42.425000000000004, 42.43, 42.435, 42.44, 42.445, 42.45, 42.455, 42.46, 42.465, 42.47, 42.475, 42.480000000000004, 42.485, 42.49, 42.495, 42.5, 42.505, 42.51, 42.515, 42.52, 42.525, 42.53, 42.535000000000004, 42.54, 42.545, 42.550000000000004, 42.555, 42.56, 42.565, 42.57, 42.575, 42.58, 42.585, 42.59, 42.595, 42.6, 42.605000000000004, 42.61, 42.615, 42.62, 42.625, 42.63, 42.635, 42.64, 42.645, 42.65, 42.655, 42.660000000000004, 42.665, 42.67, 42.675000000000004, 42.68, 42.685, 42.69, 42.695, 42.7, 42.705, 42.71, 42.715, 42.72, 42.725, 42.730000000000004, 42.735, 42.74, 42.745, 42.75, 42.755, 42.76, 42.765, 42.77, 42.775, 42.78, 42.785000000000004, 42.79, 42.795, 42.800000000000004, 42.805, 42.81, 42.815, 42.82, 42.825, 42.83, 42.835, 42.84, 42.845, 42.85, 42.855000000000004, 42.86, 42.865, 42.87, 42.875, 42.88, 42.885, 42.89, 42.895, 42.9, 42.905, 42.910000000000004, 42.915, 42.92, 42.925000000000004, 42.93, 42.935, 42.94, 42.945, 42.95, 42.955, 42.96, 42.965, 42.97, 42.975, 42.980000000000004, 42.985, 42.99, 42.995, 43.0, 43.005, 43.01, 43.015, 43.02, 43.025, 43.03, 43.035000000000004, 43.04, 43.045, 43.050000000000004, 43.055, 43.06, 43.065, 43.07, 43.075, 43.08, 43.085, 43.09, 43.095, 43.1, 43.105000000000004, 43.11, 43.115, 43.12, 43.125, 43.13, 43.135, 43.14, 43.145, 43.15, 43.155, 43.160000000000004, 43.165, 43.17, 43.175000000000004, 43.18, 43.185, 43.19, 43.195, 43.2, 43.205, 43.21, 43.215, 43.22, 43.225, 43.230000000000004, 43.235, 43.24, 43.245, 43.25, 43.255, 43.26, 43.265, 43.27, 43.275, 43.28, 43.285000000000004, 43.29, 43.295, 43.300000000000004, 43.305, 43.31, 43.315, 43.32, 43.325, 43.33, 43.335, 43.34, 43.345, 43.35, 43.355000000000004, 43.36, 43.365, 43.37, 43.375, 43.38, 43.385, 43.39, 43.395, 43.4, 43.405, 43.410000000000004, 43.415, 43.42, 43.425000000000004, 43.43, 43.435, 43.44, 43.445, 43.45, 43.455, 43.46, 43.465, 43.47, 43.475, 43.480000000000004, 43.485, 43.49, 43.495, 43.5, 43.505, 43.51, 43.515, 43.52, 43.525, 43.53, 43.535000000000004, 43.54, 43.545, 43.550000000000004, 43.555, 43.56, 43.565, 43.57, 43.575, 43.58, 43.585, 43.59, 43.595, 43.6, 43.605000000000004, 43.61, 43.615, 43.62, 43.625, 43.63, 43.635, 43.64, 43.645, 43.65, 43.655, 43.660000000000004, 43.665, 43.67, 43.675000000000004, 43.68, 43.685, 43.69, 43.695, 43.7, 43.705, 43.71, 43.715, 43.72, 43.725, 43.730000000000004, 43.735, 43.74, 43.745, 43.75, 43.755, 43.76, 43.765, 43.77, 43.775, 43.78, 43.785000000000004, 43.79, 43.795, 43.800000000000004, 43.805, 43.81, 43.815, 43.82, 43.825, 43.83, 43.835, 43.84, 43.845, 43.85, 43.855000000000004, 43.86, 43.865, 43.87, 43.875, 43.88, 43.885, 43.89, 43.895, 43.9, 43.905, 43.910000000000004, 43.915, 43.92, 43.925000000000004, 43.93, 43.935, 43.94, 43.945, 43.95, 43.955, 43.96, 43.965, 43.97, 43.975, 43.980000000000004, 43.985, 43.99, 43.995, 44.0, 44.005, 44.01, 44.015, 44.02, 44.025, 44.03, 44.035000000000004, 44.04, 44.045, 44.050000000000004, 44.055, 44.06, 44.065, 44.07, 44.075, 44.08, 44.085, 44.09, 44.095, 44.1, 44.105000000000004, 44.11, 44.115, 44.12, 44.125, 44.13, 44.135, 44.14, 44.145, 44.15, 44.155, 44.160000000000004, 44.165, 44.17, 44.175000000000004, 44.18, 44.185, 44.19, 44.195, 44.2, 44.205, 44.21, 44.215, 44.22, 44.225, 44.230000000000004, 44.235, 44.24, 44.245, 44.25, 44.255, 44.26, 44.265, 44.27, 44.275, 44.28, 44.285000000000004, 44.29, 44.295, 44.300000000000004, 44.305, 44.31, 44.315, 44.32, 44.325, 44.33, 44.335, 44.34, 44.345, 44.35, 44.355000000000004, 44.36, 44.365, 44.37, 44.375, 44.38, 44.385, 44.39, 44.395, 44.4, 44.405, 44.410000000000004, 44.415, 44.42, 44.425000000000004, 44.43, 44.435, 44.44, 44.445, 44.45, 44.455, 44.46, 44.465, 44.47, 44.475, 44.480000000000004, 44.485, 44.49, 44.495, 44.5, 44.505, 44.51, 44.515, 44.52, 44.525, 44.53, 44.535000000000004, 44.54, 44.545, 44.550000000000004, 44.555, 44.56, 44.565, 44.57, 44.575, 44.58, 44.585, 44.59, 44.595, 44.6, 44.605000000000004, 44.61, 44.615, 44.62, 44.625, 44.63, 44.635, 44.64, 44.645, 44.65, 44.655, 44.660000000000004, 44.665, 44.67, 44.675000000000004, 44.68, 44.685, 44.69, 44.695, 44.7, 44.705, 44.71, 44.715, 44.72, 44.725, 44.730000000000004, 44.735, 44.74, 44.745, 44.75, 44.755, 44.76, 44.765, 44.77, 44.775, 44.78, 44.785000000000004, 44.79, 44.795, 44.800000000000004, 44.805, 44.81, 44.815, 44.82, 44.825, 44.83, 44.835, 44.84, 44.845, 44.85, 44.855000000000004, 44.86, 44.865, 44.87, 44.875, 44.88, 44.885, 44.89, 44.895, 44.9, 44.905, 44.910000000000004, 44.915, 44.92, 44.925000000000004, 44.93, 44.935, 44.94, 44.945, 44.95, 44.955, 44.96, 44.965, 44.97, 44.975, 44.980000000000004, 44.985, 44.99, 44.995, 45.0, 45.005, 45.01, 45.015, 45.02, 45.025, 45.03, 45.035000000000004, 45.04, 45.045, 45.050000000000004, 45.055, 45.06, 45.065, 45.07, 45.075, 45.08, 45.085, 45.09, 45.095, 45.1, 45.105000000000004, 45.11, 45.115, 45.12, 45.125, 45.13, 45.135, 45.14, 45.145, 45.15, 45.155, 45.160000000000004, 45.165, 45.17, 45.175000000000004, 45.18, 45.185, 45.19, 45.195, 45.2, 45.205, 45.21, 45.215, 45.22, 45.225, 45.230000000000004, 45.235, 45.24, 45.245, 45.25, 45.255, 45.26, 45.265, 45.27, 45.275, 45.28, 45.285000000000004, 45.29, 45.295, 45.300000000000004, 45.305, 45.31, 45.315, 45.32, 45.325, 45.33, 45.335, 45.34, 45.345, 45.35, 45.355000000000004, 45.36, 45.365, 45.37, 45.375, 45.38, 45.385, 45.39, 45.395, 45.4, 45.405, 45.410000000000004, 45.415, 45.42, 45.425000000000004, 45.43, 45.435, 45.44, 45.445, 45.45, 45.455, 45.46, 45.465, 45.47, 45.475, 45.480000000000004, 45.485, 45.49, 45.495, 45.5, 45.505, 45.51, 45.515, 45.52, 45.525, 45.53, 45.535000000000004, 45.54, 45.545, 45.550000000000004, 45.555, 45.56, 45.565, 45.57, 45.575, 45.58, 45.585, 45.59, 45.595, 45.6, 45.605000000000004, 45.61, 45.615, 45.62, 45.625, 45.63, 45.635, 45.64, 45.645, 45.65, 45.655, 45.660000000000004, 45.665, 45.67, 45.675000000000004, 45.68, 45.685, 45.69, 45.695, 45.7, 45.705, 45.71, 45.715, 45.72, 45.725, 45.730000000000004, 45.735, 45.74, 45.745, 45.75, 45.755, 45.76, 45.765, 45.77, 45.775, 45.78, 45.785000000000004, 45.79, 45.795, 45.800000000000004, 45.805, 45.81, 45.815, 45.82, 45.825, 45.83, 45.835, 45.84, 45.845, 45.85, 45.855000000000004, 45.86, 45.865, 45.87, 45.875, 45.88, 45.885, 45.89, 45.895, 45.9, 45.905, 45.910000000000004, 45.915, 45.92, 45.925000000000004, 45.93, 45.935, 45.94, 45.945, 45.95, 45.955, 45.96, 45.965, 45.97, 45.975, 45.980000000000004, 45.985, 45.99, 45.995, 46.0, 46.005, 46.01, 46.015, 46.02, 46.025, 46.03, 46.035000000000004, 46.04, 46.045, 46.050000000000004, 46.055, 46.06, 46.065, 46.07, 46.075, 46.08, 46.085, 46.09, 46.095, 46.1, 46.105000000000004, 46.11, 46.115, 46.12, 46.125, 46.13, 46.135, 46.14, 46.145, 46.15, 46.155, 46.160000000000004, 46.165, 46.17, 46.175000000000004, 46.18, 46.185, 46.19, 46.195, 46.2, 46.205, 46.21, 46.215, 46.22, 46.225, 46.230000000000004, 46.235, 46.24, 46.245, 46.25, 46.255, 46.26, 46.265, 46.27, 46.275, 46.28, 46.285000000000004, 46.29, 46.295, 46.300000000000004, 46.305, 46.31, 46.315, 46.32, 46.325, 46.33, 46.335, 46.34, 46.345, 46.35, 46.355000000000004, 46.36, 46.365, 46.37, 46.375, 46.38, 46.385, 46.39, 46.395, 46.4, 46.405, 46.410000000000004, 46.415, 46.42, 46.425000000000004, 46.43, 46.435, 46.44, 46.445, 46.45, 46.455, 46.46, 46.465, 46.47, 46.475, 46.480000000000004, 46.485, 46.49, 46.495, 46.5, 46.505, 46.51, 46.515, 46.52, 46.525, 46.53, 46.535000000000004, 46.54, 46.545, 46.550000000000004, 46.555, 46.56, 46.565, 46.57, 46.575, 46.58, 46.585, 46.59, 46.595, 46.6, 46.605000000000004, 46.61, 46.615, 46.62, 46.625, 46.63, 46.635, 46.64, 46.645, 46.65, 46.655, 46.660000000000004, 46.665, 46.67, 46.675000000000004, 46.68, 46.685, 46.69, 46.695, 46.7, 46.705, 46.71, 46.715, 46.72, 46.725, 46.730000000000004, 46.735, 46.74, 46.745, 46.75, 46.755, 46.76, 46.765, 46.77, 46.775, 46.78, 46.785000000000004, 46.79, 46.795, 46.800000000000004, 46.805, 46.81, 46.815, 46.82, 46.825, 46.83, 46.835, 46.84, 46.845, 46.85, 46.855000000000004, 46.86, 46.865, 46.87, 46.875, 46.88, 46.885, 46.89, 46.895, 46.9, 46.905, 46.910000000000004, 46.915, 46.92, 46.925000000000004, 46.93, 46.935, 46.94, 46.945, 46.95, 46.955, 46.96, 46.965, 46.97, 46.975, 46.980000000000004, 46.985, 46.99, 46.995, 47.0, 47.005, 47.01, 47.015, 47.02, 47.025, 47.03, 47.035000000000004, 47.04, 47.045, 47.050000000000004, 47.055, 47.06, 47.065, 47.07, 47.075, 47.08, 47.085, 47.09, 47.095, 47.1, 47.105000000000004, 47.11, 47.115, 47.12, 47.125, 47.13, 47.135, 47.14, 47.145, 47.15, 47.155, 47.160000000000004, 47.165, 47.17, 47.175000000000004, 47.18, 47.185, 47.19, 47.195, 47.2, 47.205, 47.21, 47.215, 47.22, 47.225, 47.230000000000004, 47.235, 47.24, 47.245, 47.25, 47.255, 47.26, 47.265, 47.27, 47.275, 47.28, 47.285000000000004, 47.29, 47.295, 47.300000000000004, 47.305, 47.31, 47.315, 47.32, 47.325, 47.33, 47.335, 47.34, 47.345, 47.35, 47.355000000000004, 47.36, 47.365, 47.37, 47.375, 47.38, 47.385, 47.39, 47.395, 47.4, 47.405, 47.410000000000004, 47.415, 47.42, 47.425000000000004, 47.43, 47.435, 47.44, 47.445, 47.45, 47.455, 47.46, 47.465, 47.47, 47.475, 47.480000000000004, 47.485, 47.49, 47.495, 47.5, 47.505, 47.51, 47.515, 47.52, 47.525, 47.53, 47.535000000000004, 47.54, 47.545, 47.550000000000004, 47.555, 47.56, 47.565, 47.57, 47.575, 47.58, 47.585, 47.59, 47.595, 47.6, 47.605000000000004, 47.61, 47.615, 47.62, 47.625, 47.63, 47.635, 47.64, 47.645, 47.65, 47.655, 47.660000000000004, 47.665, 47.67, 47.675000000000004, 47.68, 47.685, 47.69, 47.695, 47.7, 47.705, 47.71, 47.715, 47.72, 47.725, 47.730000000000004, 47.735, 47.74, 47.745, 47.75, 47.755, 47.76, 47.765, 47.77, 47.775, 47.78, 47.785000000000004, 47.79, 47.795, 47.800000000000004, 47.805, 47.81, 47.815, 47.82, 47.825, 47.83, 47.835, 47.84, 47.845, 47.85, 47.855000000000004, 47.86, 47.865, 47.870000000000005, 47.875, 47.88, 47.885, 47.89, 47.895, 47.9, 47.905, 47.910000000000004, 47.915, 47.92, 47.925000000000004, 47.93, 47.935, 47.94, 47.945, 47.95, 47.955, 47.96, 47.965, 47.97, 47.975, 47.980000000000004, 47.985, 47.99, 47.995000000000005, 48.0, 48.005, 48.01, 48.015, 48.02, 48.025, 48.03, 48.035000000000004, 48.04, 48.045, 48.050000000000004, 48.055, 48.06, 48.065, 48.07, 48.075, 48.08, 48.085, 48.09, 48.095, 48.1, 48.105000000000004, 48.11, 48.115, 48.120000000000005, 48.125, 48.13, 48.135, 48.14, 48.145, 48.15, 48.155, 48.160000000000004, 48.165, 48.17, 48.175000000000004, 48.18, 48.185, 48.19, 48.195, 48.2, 48.205, 48.21, 48.215, 48.22, 48.225, 48.230000000000004, 48.235, 48.24, 48.245000000000005, 48.25, 48.255, 48.26, 48.265, 48.27, 48.275, 48.28, 48.285000000000004, 48.29, 48.295, 48.300000000000004, 48.305, 48.31, 48.315, 48.32, 48.325, 48.33, 48.335, 48.34, 48.345, 48.35, 48.355000000000004, 48.36, 48.365, 48.370000000000005, 48.375, 48.38, 48.385, 48.39, 48.395, 48.4, 48.405, 48.410000000000004, 48.415, 48.42, 48.425000000000004, 48.43, 48.435, 48.44, 48.445, 48.45, 48.455, 48.46, 48.465, 48.47, 48.475, 48.480000000000004, 48.485, 48.49, 48.495000000000005, 48.5, 48.505, 48.51, 48.515, 48.52, 48.525, 48.53, 48.535000000000004, 48.54, 48.545, 48.550000000000004, 48.555, 48.56, 48.565, 48.57, 48.575, 48.58, 48.585, 48.59, 48.595, 48.6, 48.605000000000004, 48.61, 48.615, 48.620000000000005, 48.625, 48.63, 48.635, 48.64, 48.645, 48.65, 48.655, 48.660000000000004, 48.665, 48.67, 48.675000000000004, 48.68, 48.685, 48.69, 48.695, 48.7, 48.705, 48.71, 48.715, 48.72, 48.725, 48.730000000000004, 48.735, 48.74, 48.745000000000005, 48.75, 48.755, 48.76, 48.765, 48.77, 48.775, 48.78, 48.785000000000004, 48.79, 48.795, 48.800000000000004, 48.805, 48.81, 48.815, 48.82, 48.825, 48.83, 48.835, 48.84, 48.845, 48.85, 48.855000000000004, 48.86, 48.865, 48.870000000000005, 48.875, 48.88, 48.885, 48.89, 48.895, 48.9, 48.905, 48.910000000000004, 48.915, 48.92, 48.925000000000004, 48.93, 48.935, 48.94, 48.945, 48.95, 48.955, 48.96, 48.965, 48.97, 48.975, 48.980000000000004, 48.985, 48.99, 48.995000000000005, 49.0, 49.005, 49.01, 49.015, 49.02, 49.025, 49.03, 49.035000000000004, 49.04, 49.045, 49.050000000000004, 49.055, 49.06, 49.065, 49.07, 49.075, 49.08, 49.085, 49.09, 49.095, 49.1, 49.105000000000004, 49.11, 49.115, 49.120000000000005, 49.125, 49.13, 49.135, 49.14, 49.145, 49.15, 49.155, 49.160000000000004, 49.165, 49.17, 49.175000000000004, 49.18, 49.185, 49.19, 49.195, 49.2, 49.205, 49.21, 49.215, 49.22, 49.225, 49.230000000000004, 49.235, 49.24, 49.245000000000005, 49.25, 49.255, 49.26, 49.265, 49.27, 49.275, 49.28, 49.285000000000004, 49.29, 49.295, 49.300000000000004, 49.305, 49.31, 49.315, 49.32, 49.325, 49.33, 49.335, 49.34, 49.345, 49.35, 49.355000000000004, 49.36, 49.365, 49.370000000000005, 49.375, 49.38, 49.385, 49.39, 49.395, 49.4, 49.405, 49.410000000000004, 49.415, 49.42, 49.425000000000004, 49.43, 49.435, 49.44, 49.445, 49.45, 49.455, 49.46, 49.465, 49.47, 49.475, 49.480000000000004, 49.485, 49.49, 49.495000000000005, 49.5, 49.505, 49.51, 49.515, 49.52, 49.525, 49.53, 49.535000000000004, 49.54, 49.545, 49.550000000000004, 49.555, 49.56, 49.565, 49.57, 49.575, 49.58, 49.585, 49.59, 49.595, 49.6, 49.605000000000004, 49.61, 49.615, 49.620000000000005, 49.625, 49.63, 49.635, 49.64, 49.645, 49.65, 49.655, 49.660000000000004, 49.665, 49.67, 49.675000000000004, 49.68, 49.685, 49.69, 49.695, 49.7, 49.705, 49.71, 49.715, 49.72, 49.725, 49.730000000000004, 49.735, 49.74, 49.745000000000005, 49.75, 49.755, 49.76, 49.765, 49.77, 49.775, 49.78, 49.785000000000004, 49.79, 49.795, 49.800000000000004, 49.805, 49.81, 49.815, 49.82, 49.825, 49.83, 49.835, 49.84, 49.845, 49.85, 49.855000000000004, 49.86, 49.865, 49.870000000000005, 49.875, 49.88, 49.885, 49.89, 49.895, 49.9, 49.905, 49.910000000000004, 49.915, 49.92, 49.925000000000004, 49.93, 49.935, 49.94, 49.945, 49.95, 49.955, 49.96, 49.965, 49.97, 49.975, 49.980000000000004, 49.985, 49.99, 49.995000000000005, 50.0, 50.005, 50.01, 50.015, 50.02, 50.025, 50.03, 50.035000000000004, 50.04, 50.045, 50.050000000000004, 50.055, 50.06, 50.065, 50.07, 50.075, 50.08, 50.085, 50.09, 50.095, 50.1, 50.105000000000004, 50.11, 50.115, 50.120000000000005, 50.125, 50.13, 50.135, 50.14, 50.145, 50.15, 50.155, 50.160000000000004, 50.165, 50.17, 50.175000000000004, 50.18, 50.185, 50.19, 50.195, 50.2, 50.205, 50.21, 50.215, 50.22, 50.225, 50.230000000000004, 50.235, 50.24, 50.245000000000005, 50.25, 50.255, 50.26, 50.265, 50.27, 50.275, 50.28, 50.285000000000004, 50.29, 50.295, 50.300000000000004, 50.305, 50.31, 50.315, 50.32, 50.325, 50.33, 50.335, 50.34, 50.345, 50.35, 50.355000000000004, 50.36, 50.365, 50.370000000000005, 50.375, 50.38, 50.385, 50.39, 50.395, 50.4, 50.405, 50.410000000000004, 50.415, 50.42, 50.425000000000004, 50.43, 50.435, 50.44, 50.445, 50.45, 50.455, 50.46, 50.465, 50.47, 50.475, 50.480000000000004, 50.485, 50.49, 50.495000000000005, 50.5, 50.505, 50.51, 50.515, 50.52, 50.525, 50.53, 50.535000000000004, 50.54, 50.545, 50.550000000000004, 50.555, 50.56, 50.565, 50.57, 50.575, 50.58, 50.585, 50.59, 50.595, 50.6, 50.605000000000004, 50.61, 50.615, 50.620000000000005, 50.625, 50.63, 50.635, 50.64, 50.645, 50.65, 50.655, 50.660000000000004, 50.665, 50.67, 50.675000000000004, 50.68, 50.685, 50.69, 50.695, 50.7, 50.705, 50.71, 50.715, 50.72, 50.725, 50.730000000000004, 50.735, 50.74, 50.745000000000005, 50.75, 50.755, 50.76, 50.765, 50.77, 50.775, 50.78, 50.785000000000004, 50.79, 50.795, 50.800000000000004, 50.805, 50.81, 50.815, 50.82, 50.825, 50.83, 50.835, 50.84, 50.845, 50.85, 50.855000000000004, 50.86, 50.865, 50.870000000000005, 50.875, 50.88, 50.885, 50.89, 50.895, 50.9, 50.905, 50.910000000000004, 50.915, 50.92, 50.925000000000004, 50.93, 50.935, 50.94, 50.945, 50.95, 50.955, 50.96, 50.965, 50.97, 50.975, 50.980000000000004, 50.985, 50.99, 50.995000000000005, 51.0, 51.005, 51.01, 51.015, 51.02, 51.025, 51.03, 51.035000000000004, 51.04, 51.045, 51.050000000000004, 51.055, 51.06, 51.065, 51.07, 51.075, 51.08, 51.085, 51.09, 51.095, 51.1, 51.105000000000004, 51.11, 51.115, 51.120000000000005, 51.125, 51.13, 51.135, 51.14, 51.145, 51.15, 51.155, 51.160000000000004, 51.165, 51.17, 51.175000000000004, 51.18, 51.185, 51.19, 51.195, 51.2, 51.205, 51.21, 51.215, 51.22, 51.225, 51.230000000000004, 51.235, 51.24, 51.245000000000005, 51.25, 51.255, 51.26, 51.265, 51.27, 51.275, 51.28, 51.285000000000004, 51.29, 51.295, 51.300000000000004, 51.305, 51.31, 51.315, 51.32, 51.325, 51.33, 51.335, 51.34, 51.345, 51.35, 51.355000000000004, 51.36, 51.365, 51.370000000000005, 51.375, 51.38, 51.385, 51.39, 51.395, 51.4, 51.405, 51.410000000000004, 51.415, 51.42, 51.425000000000004, 51.43, 51.435, 51.44, 51.445, 51.45, 51.455, 51.46, 51.465, 51.47, 51.475, 51.480000000000004, 51.485, 51.49, 51.495000000000005, 51.5, 51.505, 51.51, 51.515, 51.52, 51.525, 51.53, 51.535000000000004, 51.54, 51.545, 51.550000000000004, 51.555, 51.56, 51.565, 51.57, 51.575, 51.58, 51.585, 51.59, 51.595, 51.6, 51.605000000000004, 51.61, 51.615, 51.620000000000005, 51.625, 51.63, 51.635, 51.64, 51.645, 51.65, 51.655, 51.660000000000004, 51.665, 51.67, 51.675000000000004, 51.68, 51.685, 51.69, 51.695, 51.7, 51.705, 51.71, 51.715, 51.72, 51.725, 51.730000000000004, 51.735, 51.74, 51.745000000000005, 51.75, 51.755, 51.76, 51.765, 51.77, 51.775, 51.78, 51.785000000000004, 51.79, 51.795, 51.800000000000004, 51.805, 51.81, 51.815, 51.82, 51.825, 51.83, 51.835, 51.84, 51.845, 51.85, 51.855000000000004, 51.86, 51.865, 51.870000000000005, 51.875, 51.88, 51.885, 51.89, 51.895, 51.9, 51.905, 51.910000000000004, 51.915, 51.92, 51.925000000000004, 51.93, 51.935, 51.94, 51.945, 51.95, 51.955, 51.96, 51.965, 51.97, 51.975, 51.980000000000004, 51.985, 51.99, 51.995000000000005, 52.0, 52.005, 52.01, 52.015, 52.02, 52.025, 52.03, 52.035000000000004, 52.04, 52.045, 52.050000000000004, 52.055, 52.06, 52.065, 52.07, 52.075, 52.08, 52.085, 52.09, 52.095, 52.1, 52.105000000000004, 52.11, 52.115, 52.120000000000005, 52.125, 52.13, 52.135, 52.14, 52.145, 52.15, 52.155, 52.160000000000004, 52.165, 52.17, 52.175000000000004, 52.18, 52.185, 52.19, 52.195, 52.2, 52.205, 52.21, 52.215, 52.22, 52.225, 52.230000000000004, 52.235, 52.24, 52.245000000000005, 52.25, 52.255, 52.26, 52.265, 52.27, 52.275, 52.28, 52.285000000000004, 52.29, 52.295, 52.300000000000004, 52.305, 52.31, 52.315, 52.32, 52.325, 52.33, 52.335, 52.34, 52.345, 52.35, 52.355000000000004, 52.36, 52.365, 52.370000000000005, 52.375, 52.38, 52.385, 52.39, 52.395, 52.4, 52.405, 52.410000000000004, 52.415, 52.42, 52.425000000000004, 52.43, 52.435, 52.44, 52.445, 52.45, 52.455, 52.46, 52.465, 52.47, 52.475, 52.480000000000004, 52.485, 52.49, 52.495000000000005, 52.5, 52.505, 52.51, 52.515, 52.52, 52.525, 52.53, 52.535000000000004, 52.54, 52.545, 52.550000000000004, 52.555, 52.56, 52.565, 52.57, 52.575, 52.58, 52.585, 52.59, 52.595, 52.6, 52.605000000000004, 52.61, 52.615, 52.620000000000005, 52.625, 52.63, 52.635, 52.64, 52.645, 52.65, 52.655, 52.660000000000004, 52.665, 52.67, 52.675000000000004, 52.68, 52.685, 52.69, 52.695, 52.7, 52.705, 52.71, 52.715, 52.72, 52.725, 52.730000000000004, 52.735, 52.74, 52.745000000000005, 52.75, 52.755, 52.76, 52.765, 52.77, 52.775, 52.78, 52.785000000000004, 52.79, 52.795, 52.800000000000004, 52.805, 52.81, 52.815, 52.82, 52.825, 52.83, 52.835, 52.84, 52.845, 52.85, 52.855000000000004, 52.86, 52.865, 52.870000000000005, 52.875, 52.88, 52.885, 52.89, 52.895, 52.9, 52.905, 52.910000000000004, 52.915, 52.92, 52.925000000000004, 52.93, 52.935, 52.94, 52.945, 52.95, 52.955, 52.96, 52.965, 52.97, 52.975, 52.980000000000004, 52.985, 52.99, 52.995000000000005, 53.0, 53.005, 53.01, 53.015, 53.02, 53.025, 53.03, 53.035000000000004, 53.04, 53.045, 53.050000000000004, 53.055, 53.06, 53.065, 53.07, 53.075, 53.08, 53.085, 53.09, 53.095, 53.1, 53.105000000000004, 53.11, 53.115, 53.120000000000005, 53.125, 53.13, 53.135, 53.14, 53.145, 53.15, 53.155, 53.160000000000004, 53.165, 53.17, 53.175000000000004, 53.18, 53.185, 53.19, 53.195, 53.2, 53.205, 53.21, 53.215, 53.22, 53.225, 53.230000000000004, 53.235, 53.24, 53.245000000000005, 53.25, 53.255, 53.26, 53.265, 53.27, 53.275, 53.28, 53.285000000000004, 53.29, 53.295, 53.300000000000004, 53.305, 53.31, 53.315, 53.32, 53.325, 53.33, 53.335, 53.34, 53.345, 53.35, 53.355000000000004, 53.36, 53.365, 53.370000000000005, 53.375, 53.38, 53.385, 53.39, 53.395, 53.4, 53.405, 53.410000000000004, 53.415, 53.42, 53.425000000000004, 53.43, 53.435, 53.44, 53.445, 53.45, 53.455, 53.46, 53.465, 53.47, 53.475, 53.480000000000004, 53.485, 53.49, 53.495000000000005, 53.5, 53.505, 53.51, 53.515, 53.52, 53.525, 53.53, 53.535000000000004, 53.54, 53.545, 53.550000000000004, 53.555, 53.56, 53.565, 53.57, 53.575, 53.58, 53.585, 53.59, 53.595, 53.6, 53.605000000000004, 53.61, 53.615, 53.620000000000005, 53.625, 53.63, 53.635, 53.64, 53.645, 53.65, 53.655, 53.660000000000004, 53.665, 53.67, 53.675000000000004, 53.68, 53.685, 53.69, 53.695, 53.7, 53.705, 53.71, 53.715, 53.72, 53.725, 53.730000000000004, 53.735, 53.74, 53.745000000000005, 53.75, 53.755, 53.76, 53.765, 53.77, 53.775, 53.78, 53.785000000000004, 53.79, 53.795, 53.800000000000004, 53.805, 53.81, 53.815, 53.82, 53.825, 53.83, 53.835, 53.84, 53.845, 53.85, 53.855000000000004, 53.86, 53.865, 53.870000000000005, 53.875, 53.88, 53.885, 53.89, 53.895, 53.9, 53.905, 53.910000000000004, 53.915, 53.92, 53.925000000000004, 53.93, 53.935, 53.94, 53.945, 53.95, 53.955, 53.96, 53.965, 53.97, 53.975, 53.980000000000004, 53.985, 53.99, 53.995000000000005, 54.0, 54.005, 54.01, 54.015, 54.02, 54.025, 54.03, 54.035000000000004, 54.04, 54.045, 54.050000000000004, 54.055, 54.06, 54.065, 54.07, 54.075, 54.08, 54.085, 54.09, 54.095, 54.1, 54.105000000000004, 54.11, 54.115, 54.120000000000005, 54.125, 54.13, 54.135, 54.14, 54.145, 54.15, 54.155, 54.160000000000004, 54.165, 54.17, 54.175000000000004, 54.18, 54.185, 54.19, 54.195, 54.2, 54.205, 54.21, 54.215, 54.22, 54.225, 54.230000000000004, 54.235, 54.24, 54.245000000000005, 54.25, 54.255, 54.26, 54.265, 54.27, 54.275, 54.28, 54.285000000000004, 54.29, 54.295, 54.300000000000004, 54.305, 54.31, 54.315, 54.32, 54.325, 54.33, 54.335, 54.34, 54.345, 54.35, 54.355000000000004, 54.36, 54.365, 54.370000000000005, 54.375, 54.38, 54.385, 54.39, 54.395, 54.4, 54.405, 54.410000000000004, 54.415, 54.42, 54.425000000000004, 54.43, 54.435, 54.44, 54.445, 54.45, 54.455, 54.46, 54.465, 54.47, 54.475, 54.480000000000004, 54.485, 54.49, 54.495000000000005, 54.5, 54.505, 54.51, 54.515, 54.52, 54.525, 54.53, 54.535000000000004, 54.54, 54.545, 54.550000000000004, 54.555, 54.56, 54.565, 54.57, 54.575, 54.58, 54.585, 54.59, 54.595, 54.6, 54.605000000000004, 54.61, 54.615, 54.620000000000005, 54.625, 54.63, 54.635, 54.64, 54.645, 54.65, 54.655, 54.660000000000004, 54.665, 54.67, 54.675000000000004, 54.68, 54.685, 54.69, 54.695, 54.7, 54.705, 54.71, 54.715, 54.72, 54.725, 54.730000000000004, 54.735, 54.74, 54.745000000000005, 54.75, 54.755, 54.76, 54.765, 54.77, 54.775, 54.78, 54.785000000000004, 54.79, 54.795, 54.800000000000004, 54.805, 54.81, 54.815, 54.82, 54.825, 54.83, 54.835, 54.84, 54.845, 54.85, 54.855000000000004, 54.86, 54.865, 54.870000000000005, 54.875, 54.88, 54.885, 54.89, 54.895, 54.9, 54.905, 54.910000000000004, 54.915, 54.92, 54.925000000000004, 54.93, 54.935, 54.94, 54.945, 54.95, 54.955, 54.96, 54.965, 54.97, 54.975, 54.980000000000004, 54.985, 54.99, 54.995000000000005, 55.0, 55.005, 55.01, 55.015, 55.02, 55.025, 55.03, 55.035000000000004, 55.04, 55.045, 55.050000000000004, 55.055, 55.06, 55.065, 55.07, 55.075, 55.08, 55.085, 55.09, 55.095, 55.1, 55.105000000000004, 55.11, 55.115, 55.120000000000005, 55.125, 55.13, 55.135, 55.14, 55.145, 55.15, 55.155, 55.160000000000004, 55.165, 55.17, 55.175000000000004, 55.18, 55.185, 55.19, 55.195, 55.2, 55.205, 55.21, 55.215, 55.22, 55.225, 55.230000000000004, 55.235, 55.24, 55.245000000000005, 55.25, 55.255, 55.26, 55.265, 55.27, 55.275, 55.28, 55.285000000000004, 55.29, 55.295, 55.300000000000004, 55.305, 55.31, 55.315, 55.32, 55.325, 55.33, 55.335, 55.34, 55.345, 55.35, 55.355000000000004, 55.36, 55.365, 55.370000000000005, 55.375, 55.38, 55.385, 55.39, 55.395, 55.4, 55.405, 55.410000000000004, 55.415, 55.42, 55.425000000000004, 55.43, 55.435, 55.44, 55.445, 55.45, 55.455, 55.46, 55.465, 55.47, 55.475, 55.480000000000004, 55.485, 55.49, 55.495000000000005, 55.5, 55.505, 55.51, 55.515, 55.52, 55.525, 55.53, 55.535000000000004, 55.54, 55.545, 55.550000000000004, 55.555, 55.56, 55.565, 55.57, 55.575, 55.58, 55.585, 55.59, 55.595, 55.6, 55.605000000000004, 55.61, 55.615, 55.620000000000005, 55.625, 55.63, 55.635, 55.64, 55.645, 55.65, 55.655, 55.660000000000004, 55.665, 55.67, 55.675000000000004, 55.68, 55.685, 55.69, 55.695, 55.7, 55.705, 55.71, 55.715, 55.72, 55.725, 55.730000000000004, 55.735, 55.74, 55.745000000000005, 55.75, 55.755, 55.76, 55.765, 55.77, 55.775, 55.78, 55.785000000000004, 55.79, 55.795, 55.800000000000004, 55.805, 55.81, 55.815, 55.82, 55.825, 55.83, 55.835, 55.84, 55.845, 55.85, 55.855000000000004, 55.86, 55.865, 55.870000000000005, 55.875, 55.88, 55.885, 55.89, 55.895, 55.9, 55.905, 55.910000000000004, 55.915, 55.92, 55.925000000000004, 55.93, 55.935, 55.94, 55.945, 55.95, 55.955, 55.96, 55.965, 55.97, 55.975, 55.980000000000004, 55.985, 55.99, 55.995000000000005, 56.0, 56.005, 56.01, 56.015, 56.02, 56.025, 56.03, 56.035000000000004, 56.04, 56.045, 56.050000000000004, 56.055, 56.06, 56.065, 56.07, 56.075, 56.08, 56.085, 56.09, 56.095, 56.1, 56.105000000000004, 56.11, 56.115, 56.120000000000005, 56.125, 56.13, 56.135, 56.14, 56.145, 56.15, 56.155, 56.160000000000004, 56.165, 56.17, 56.175000000000004, 56.18, 56.185, 56.19, 56.195, 56.2, 56.205, 56.21, 56.215, 56.22, 56.225, 56.230000000000004, 56.235, 56.24, 56.245000000000005, 56.25, 56.255, 56.26, 56.265, 56.27, 56.275, 56.28, 56.285000000000004, 56.29, 56.295, 56.300000000000004, 56.305, 56.31, 56.315, 56.32, 56.325, 56.33, 56.335, 56.34, 56.345, 56.35, 56.355000000000004, 56.36, 56.365, 56.370000000000005, 56.375, 56.38, 56.385, 56.39, 56.395, 56.4, 56.405, 56.410000000000004, 56.415, 56.42, 56.425000000000004, 56.43, 56.435, 56.44, 56.445, 56.45, 56.455, 56.46, 56.465, 56.47, 56.475, 56.480000000000004, 56.485, 56.49, 56.495000000000005, 56.5, 56.505, 56.51, 56.515, 56.52, 56.525, 56.53, 56.535000000000004, 56.54, 56.545, 56.550000000000004, 56.555, 56.56, 56.565, 56.57, 56.575, 56.58, 56.585, 56.59, 56.595, 56.6, 56.605000000000004, 56.61, 56.615, 56.620000000000005, 56.625, 56.63, 56.635, 56.64, 56.645, 56.65, 56.655, 56.660000000000004, 56.665, 56.67, 56.675000000000004, 56.68, 56.685, 56.69, 56.695, 56.7, 56.705, 56.71, 56.715, 56.72, 56.725, 56.730000000000004, 56.735, 56.74, 56.745000000000005, 56.75, 56.755, 56.76, 56.765, 56.77, 56.775, 56.78, 56.785000000000004, 56.79, 56.795, 56.800000000000004, 56.805, 56.81, 56.815, 56.82, 56.825, 56.83, 56.835, 56.84, 56.845, 56.85, 56.855000000000004, 56.86, 56.865, 56.870000000000005, 56.875, 56.88, 56.885, 56.89, 56.895, 56.9, 56.905, 56.910000000000004, 56.915, 56.92, 56.925000000000004, 56.93, 56.935, 56.94, 56.945, 56.95, 56.955, 56.96, 56.965, 56.97, 56.975, 56.980000000000004, 56.985, 56.99, 56.995000000000005, 57.0, 57.005, 57.01, 57.015, 57.02, 57.025, 57.03, 57.035000000000004, 57.04, 57.045, 57.050000000000004, 57.055, 57.06, 57.065, 57.07, 57.075, 57.08, 57.085, 57.09, 57.095, 57.1, 57.105000000000004, 57.11, 57.115, 57.120000000000005, 57.125, 57.13, 57.135, 57.14, 57.145, 57.15, 57.155, 57.160000000000004, 57.165, 57.17, 57.175000000000004, 57.18, 57.185, 57.19, 57.195, 57.2, 57.205, 57.21, 57.215, 57.22, 57.225, 57.230000000000004, 57.235, 57.24, 57.245000000000005, 57.25, 57.255, 57.26, 57.265, 57.27, 57.275, 57.28, 57.285000000000004, 57.29, 57.295, 57.300000000000004, 57.305, 57.31, 57.315, 57.32, 57.325, 57.33, 57.335, 57.34, 57.345, 57.35, 57.355000000000004, 57.36, 57.365, 57.370000000000005, 57.375, 57.38, 57.385, 57.39, 57.395, 57.4, 57.405, 57.410000000000004, 57.415, 57.42, 57.425000000000004, 57.43, 57.435, 57.44, 57.445, 57.45, 57.455, 57.46, 57.465, 57.47, 57.475, 57.480000000000004, 57.485, 57.49, 57.495000000000005, 57.5, 57.505, 57.51, 57.515, 57.52, 57.525, 57.53, 57.535000000000004, 57.54, 57.545, 57.550000000000004, 57.555, 57.56, 57.565, 57.57, 57.575, 57.58, 57.585, 57.59, 57.595, 57.6, 57.605000000000004, 57.61, 57.615, 57.620000000000005, 57.625, 57.63, 57.635, 57.64, 57.645, 57.65, 57.655, 57.660000000000004, 57.665, 57.67, 57.675000000000004, 57.68, 57.685, 57.69, 57.695, 57.7, 57.705, 57.71, 57.715, 57.72, 57.725, 57.730000000000004, 57.735, 57.74, 57.745000000000005, 57.75, 57.755, 57.76, 57.765, 57.77, 57.775, 57.78, 57.785000000000004, 57.79, 57.795, 57.800000000000004, 57.805, 57.81, 57.815, 57.82, 57.825, 57.83, 57.835, 57.84, 57.845, 57.85, 57.855000000000004, 57.86, 57.865, 57.870000000000005, 57.875, 57.88, 57.885, 57.89, 57.895, 57.9, 57.905, 57.910000000000004, 57.915, 57.92, 57.925000000000004, 57.93, 57.935, 57.94, 57.945, 57.95, 57.955, 57.96, 57.965, 57.97, 57.975, 57.980000000000004, 57.985, 57.99, 57.995000000000005, 58.0, 58.005, 58.01, 58.015, 58.02, 58.025, 58.03, 58.035000000000004, 58.04, 58.045, 58.050000000000004, 58.055, 58.06, 58.065, 58.07, 58.075, 58.08, 58.085, 58.09, 58.095, 58.1, 58.105000000000004, 58.11, 58.115, 58.120000000000005, 58.125, 58.13, 58.135, 58.14, 58.145, 58.15, 58.155, 58.160000000000004, 58.165, 58.17, 58.175000000000004, 58.18, 58.185, 58.19, 58.195, 58.2, 58.205, 58.21, 58.215, 58.22, 58.225, 58.230000000000004, 58.235, 58.24, 58.245000000000005, 58.25, 58.255, 58.26, 58.265, 58.27, 58.275, 58.28, 58.285000000000004, 58.29, 58.295, 58.300000000000004, 58.305, 58.31, 58.315, 58.32, 58.325, 58.33, 58.335, 58.34, 58.345, 58.35, 58.355000000000004, 58.36, 58.365, 58.370000000000005, 58.375, 58.38, 58.385, 58.39, 58.395, 58.4, 58.405, 58.410000000000004, 58.415, 58.42, 58.425000000000004, 58.43, 58.435, 58.44, 58.445, 58.45, 58.455, 58.46, 58.465, 58.47, 58.475, 58.480000000000004, 58.485, 58.49, 58.495000000000005, 58.5, 58.505, 58.51, 58.515, 58.52, 58.525, 58.53, 58.535000000000004, 58.54, 58.545, 58.550000000000004, 58.555, 58.56, 58.565, 58.57, 58.575, 58.58, 58.585, 58.59, 58.595, 58.6, 58.605000000000004, 58.61, 58.615, 58.620000000000005, 58.625, 58.63, 58.635, 58.64, 58.645, 58.65, 58.655, 58.660000000000004, 58.665, 58.67, 58.675000000000004, 58.68, 58.685, 58.69, 58.695, 58.7, 58.705, 58.71, 58.715, 58.72, 58.725, 58.730000000000004, 58.735, 58.74, 58.745000000000005, 58.75, 58.755, 58.76, 58.765, 58.77, 58.775, 58.78, 58.785000000000004, 58.79, 58.795, 58.800000000000004, 58.805, 58.81, 58.815, 58.82, 58.825, 58.83, 58.835, 58.84, 58.845, 58.85, 58.855000000000004, 58.86, 58.865, 58.870000000000005, 58.875, 58.88, 58.885, 58.89, 58.895, 58.9, 58.905, 58.910000000000004, 58.915, 58.92, 58.925000000000004, 58.93, 58.935, 58.94, 58.945, 58.95, 58.955, 58.96, 58.965, 58.97, 58.975, 58.980000000000004, 58.985, 58.99, 58.995000000000005, 59.0, 59.005, 59.01, 59.015, 59.02, 59.025, 59.03, 59.035000000000004, 59.04, 59.045, 59.050000000000004, 59.055, 59.06, 59.065, 59.07, 59.075, 59.08, 59.085, 59.09, 59.095, 59.1, 59.105000000000004, 59.11, 59.115, 59.120000000000005, 59.125, 59.13, 59.135, 59.14, 59.145, 59.15, 59.155, 59.160000000000004, 59.165, 59.17, 59.175000000000004, 59.18, 59.185, 59.19, 59.195, 59.2, 59.205, 59.21, 59.215, 59.22, 59.225, 59.230000000000004, 59.235, 59.24, 59.245000000000005, 59.25, 59.255, 59.26, 59.265, 59.27, 59.275, 59.28, 59.285000000000004, 59.29, 59.295, 59.300000000000004, 59.305, 59.31, 59.315, 59.32, 59.325, 59.33, 59.335, 59.34, 59.345, 59.35, 59.355000000000004, 59.36, 59.365, 59.370000000000005, 59.375, 59.38, 59.385, 59.39, 59.395, 59.4, 59.405, 59.410000000000004, 59.415, 59.42, 59.425000000000004, 59.43, 59.435, 59.44, 59.445, 59.45, 59.455, 59.46, 59.465, 59.47, 59.475, 59.480000000000004, 59.485, 59.49, 59.495000000000005, 59.5, 59.505, 59.51, 59.515, 59.52, 59.525, 59.53, 59.535000000000004, 59.54, 59.545, 59.550000000000004, 59.555, 59.56, 59.565, 59.57, 59.575, 59.58, 59.585, 59.59, 59.595, 59.6, 59.605000000000004, 59.61, 59.615, 59.620000000000005, 59.625, 59.63, 59.635, 59.64, 59.645, 59.65, 59.655, 59.660000000000004, 59.665, 59.67, 59.675000000000004, 59.68, 59.685, 59.69, 59.695, 59.7, 59.705, 59.71, 59.715, 59.72, 59.725, 59.730000000000004, 59.735, 59.74, 59.745000000000005, 59.75, 59.755, 59.76, 59.765, 59.77, 59.775, 59.78, 59.785000000000004, 59.79, 59.795, 59.800000000000004, 59.805, 59.81, 59.815, 59.82, 59.825, 59.83, 59.835, 59.84, 59.845, 59.85, 59.855000000000004, 59.86, 59.865, 59.870000000000005, 59.875, 59.88, 59.885, 59.89, 59.895, 59.9, 59.905, 59.910000000000004, 59.915, 59.92, 59.925000000000004, 59.93, 59.935, 59.94, 59.945, 59.95, 59.955, 59.96, 59.965, 59.97, 59.975, 59.980000000000004, 59.985, 59.99, 59.995000000000005, 60.0, 60.005, 60.01, 60.015, 60.02, 60.025, 60.03, 60.035000000000004, 60.04, 60.045, 60.050000000000004, 60.055, 60.06, 60.065, 60.07, 60.075, 60.08, 60.085, 60.09, 60.095, 60.1, 60.105000000000004, 60.11, 60.115, 60.120000000000005, 60.125, 60.13, 60.135, 60.14, 60.145, 60.15, 60.155, 60.160000000000004, 60.165, 60.17, 60.175000000000004, 60.18, 60.185, 60.19, 60.195, 60.2, 60.205, 60.21, 60.215, 60.22, 60.225, 60.230000000000004, 60.235, 60.24, 60.245000000000005, 60.25, 60.255, 60.26, 60.265, 60.27, 60.275, 60.28, 60.285000000000004, 60.29, 60.295, 60.300000000000004, 60.305, 60.31, 60.315, 60.32, 60.325, 60.33, 60.335, 60.34, 60.345, 60.35, 60.355000000000004, 60.36, 60.365, 60.370000000000005, 60.375, 60.38, 60.385, 60.39, 60.395, 60.4, 60.405, 60.410000000000004, 60.415, 60.42, 60.425000000000004, 60.43, 60.435, 60.44, 60.445, 60.45, 60.455, 60.46, 60.465, 60.47, 60.475, 60.480000000000004, 60.485, 60.49, 60.495000000000005, 60.5, 60.505, 60.51, 60.515, 60.52, 60.525, 60.53, 60.535000000000004, 60.54, 60.545, 60.550000000000004, 60.555, 60.56, 60.565, 60.57, 60.575, 60.58, 60.585, 60.59, 60.595, 60.6, 60.605000000000004, 60.61, 60.615, 60.620000000000005, 60.625, 60.63, 60.635, 60.64, 60.645, 60.65, 60.655, 60.660000000000004, 60.665, 60.67, 60.675000000000004, 60.68, 60.685, 60.69, 60.695, 60.7, 60.705, 60.71, 60.715, 60.72, 60.725, 60.730000000000004, 60.735, 60.74, 60.745000000000005, 60.75, 60.755, 60.76, 60.765, 60.77, 60.775, 60.78, 60.785000000000004, 60.79, 60.795, 60.800000000000004, 60.805, 60.81, 60.815, 60.82, 60.825, 60.83, 60.835, 60.84, 60.845, 60.85, 60.855000000000004, 60.86, 60.865, 60.870000000000005, 60.875, 60.88, 60.885, 60.89, 60.895, 60.9, 60.905, 60.910000000000004, 60.915, 60.92, 60.925000000000004, 60.93, 60.935, 60.94, 60.945, 60.95, 60.955, 60.96, 60.965, 60.97, 60.975, 60.980000000000004, 60.985, 60.99, 60.995000000000005, 61.0, 61.005, 61.01, 61.015, 61.02, 61.025, 61.03, 61.035000000000004, 61.04, 61.045, 61.050000000000004, 61.055, 61.06, 61.065, 61.07, 61.075, 61.08, 61.085, 61.09, 61.095, 61.1, 61.105000000000004, 61.11, 61.115, 61.120000000000005, 61.125, 61.13, 61.135, 61.14, 61.145, 61.15, 61.155, 61.160000000000004, 61.165, 61.17, 61.175000000000004, 61.18, 61.185, 61.19, 61.195, 61.2, 61.205, 61.21, 61.215, 61.22, 61.225, 61.230000000000004, 61.235, 61.24, 61.245000000000005, 61.25, 61.255, 61.26, 61.265, 61.27, 61.275, 61.28, 61.285000000000004, 61.29, 61.295, 61.300000000000004, 61.305, 61.31, 61.315, 61.32, 61.325, 61.33, 61.335, 61.34, 61.345, 61.35, 61.355000000000004, 61.36, 61.365, 61.370000000000005, 61.375, 61.38, 61.385, 61.39, 61.395, 61.4, 61.405, 61.410000000000004, 61.415, 61.42, 61.425000000000004, 61.43, 61.435, 61.44, 61.445, 61.45, 61.455, 61.46, 61.465, 61.47, 61.475, 61.480000000000004, 61.485, 61.49, 61.495000000000005, 61.5, 61.505, 61.51, 61.515, 61.52, 61.525, 61.53, 61.535000000000004, 61.54, 61.545, 61.550000000000004, 61.555, 61.56, 61.565000000000005, 61.57, 61.575, 61.58, 61.585, 61.59, 61.595, 61.6, 61.605000000000004, 61.61, 61.615, 61.620000000000005, 61.625, 61.63, 61.635, 61.64, 61.645, 61.65, 61.655, 61.660000000000004, 61.665, 61.67, 61.675000000000004, 61.68, 61.685, 61.690000000000005, 61.695, 61.7, 61.705, 61.71, 61.715, 61.72, 61.725, 61.730000000000004, 61.735, 61.74, 61.745000000000005, 61.75, 61.755, 61.76, 61.765, 61.77, 61.775, 61.78, 61.785000000000004, 61.79, 61.795, 61.800000000000004, 61.805, 61.81, 61.815000000000005, 61.82, 61.825, 61.83, 61.835, 61.84, 61.845, 61.85, 61.855000000000004, 61.86, 61.865, 61.870000000000005, 61.875, 61.88, 61.885, 61.89, 61.895, 61.9, 61.905, 61.910000000000004, 61.915, 61.92, 61.925000000000004, 61.93, 61.935, 61.940000000000005, 61.945, 61.95, 61.955, 61.96, 61.965, 61.97, 61.975, 61.980000000000004, 61.985, 61.99, 61.995000000000005, 62.0, 62.005, 62.01, 62.015, 62.02, 62.025, 62.03, 62.035000000000004, 62.04, 62.045, 62.050000000000004, 62.055, 62.06, 62.065000000000005, 62.07, 62.075, 62.08, 62.085, 62.09, 62.095, 62.1, 62.105000000000004, 62.11, 62.115, 62.120000000000005, 62.125, 62.13, 62.135, 62.14, 62.145, 62.15, 62.155, 62.160000000000004, 62.165, 62.17, 62.175000000000004, 62.18, 62.185, 62.190000000000005, 62.195, 62.2, 62.205, 62.21, 62.215, 62.22, 62.225, 62.230000000000004, 62.235, 62.24, 62.245000000000005, 62.25, 62.255, 62.26, 62.265, 62.27, 62.275, 62.28, 62.285000000000004, 62.29, 62.295, 62.300000000000004, 62.305, 62.31, 62.315000000000005, 62.32, 62.325, 62.33, 62.335, 62.34, 62.345, 62.35, 62.355000000000004, 62.36, 62.365, 62.370000000000005, 62.375, 62.38, 62.385, 62.39, 62.395, 62.4, 62.405, 62.410000000000004, 62.415, 62.42, 62.425000000000004, 62.43, 62.435, 62.440000000000005, 62.445, 62.45, 62.455, 62.46, 62.465, 62.47, 62.475, 62.480000000000004, 62.485, 62.49, 62.495000000000005, 62.5, 62.505, 62.51, 62.515, 62.52, 62.525, 62.53, 62.535000000000004, 62.54, 62.545, 62.550000000000004, 62.555, 62.56, 62.565000000000005, 62.57, 62.575, 62.58, 62.585, 62.59, 62.595, 62.6, 62.605000000000004, 62.61, 62.615, 62.620000000000005, 62.625, 62.63, 62.635, 62.64, 62.645, 62.65, 62.655, 62.660000000000004, 62.665, 62.67, 62.675000000000004, 62.68, 62.685, 62.690000000000005, 62.695, 62.7, 62.705, 62.71, 62.715, 62.72, 62.725, 62.730000000000004, 62.735, 62.74, 62.745000000000005, 62.75, 62.755, 62.76, 62.765, 62.77, 62.775, 62.78, 62.785000000000004, 62.79, 62.795, 62.800000000000004, 62.805, 62.81, 62.815000000000005, 62.82, 62.825, 62.83, 62.835, 62.84, 62.845, 62.85, 62.855000000000004, 62.86, 62.865, 62.870000000000005, 62.875, 62.88, 62.885, 62.89, 62.895, 62.9, 62.905, 62.910000000000004, 62.915, 62.92, 62.925000000000004, 62.93, 62.935, 62.940000000000005, 62.945, 62.95, 62.955, 62.96, 62.965, 62.97, 62.975, 62.980000000000004, 62.985, 62.99, 62.995000000000005, 63.0, 63.005, 63.01, 63.015, 63.02, 63.025, 63.03, 63.035000000000004, 63.04, 63.045, 63.050000000000004, 63.055, 63.06, 63.065000000000005, 63.07, 63.075, 63.08, 63.085, 63.09, 63.095, 63.1, 63.105000000000004, 63.11, 63.115, 63.120000000000005, 63.125, 63.13, 63.135, 63.14, 63.145, 63.15, 63.155, 63.160000000000004, 63.165, 63.17, 63.175000000000004, 63.18, 63.185, 63.190000000000005, 63.195, 63.2, 63.205, 63.21, 63.215, 63.22, 63.225, 63.230000000000004, 63.235, 63.24, 63.245000000000005, 63.25, 63.255, 63.26, 63.265, 63.27, 63.275, 63.28, 63.285000000000004, 63.29, 63.295, 63.300000000000004, 63.305, 63.31, 63.315000000000005, 63.32, 63.325, 63.33, 63.335, 63.34, 63.345, 63.35, 63.355000000000004, 63.36, 63.365, 63.370000000000005, 63.375, 63.38, 63.385, 63.39, 63.395, 63.4, 63.405, 63.410000000000004, 63.415, 63.42, 63.425000000000004, 63.43, 63.435, 63.440000000000005, 63.445, 63.45, 63.455, 63.46, 63.465, 63.47, 63.475, 63.480000000000004, 63.485, 63.49, 63.495000000000005, 63.5, 63.505, 63.51, 63.515, 63.52, 63.525, 63.53, 63.535000000000004, 63.54, 63.545, 63.550000000000004, 63.555, 63.56, 63.565000000000005, 63.57, 63.575, 63.58, 63.585, 63.59, 63.595, 63.6, 63.605000000000004, 63.61, 63.615, 63.620000000000005, 63.625, 63.63, 63.635, 63.64, 63.645, 63.65, 63.655, 63.660000000000004, 63.665, 63.67, 63.675000000000004, 63.68, 63.685, 63.690000000000005, 63.695, 63.7, 63.705, 63.71, 63.715, 63.72, 63.725, 63.730000000000004, 63.735, 63.74, 63.745000000000005, 63.75, 63.755, 63.76, 63.765, 63.77, 63.775, 63.78, 63.785000000000004, 63.79, 63.795, 63.800000000000004, 63.805, 63.81, 63.815000000000005, 63.82, 63.825, 63.83, 63.835, 63.84, 63.845, 63.85, 63.855000000000004, 63.86, 63.865, 63.870000000000005, 63.875, 63.88, 63.885, 63.89, 63.895, 63.9, 63.905, 63.910000000000004, 63.915, 63.92, 63.925000000000004, 63.93, 63.935, 63.940000000000005, 63.945, 63.95, 63.955, 63.96, 63.965, 63.97, 63.975, 63.980000000000004, 63.985, 63.99, 63.995000000000005, 64.0, 64.005, 64.01, 64.015, 64.02, 64.025, 64.03, 64.035, 64.04, 64.045, 64.05, 64.055, 64.06, 64.065, 64.07000000000001, 64.075, 64.08, 64.08500000000001, 64.09, 64.095, 64.1, 64.105, 64.11, 64.115, 64.12, 64.125, 64.13, 64.135, 64.14, 64.145, 64.15, 64.155, 64.16, 64.165, 64.17, 64.175, 64.18, 64.185, 64.19, 64.19500000000001, 64.2, 64.205, 64.21000000000001, 64.215, 64.22, 64.225, 64.23, 64.235, 64.24, 64.245, 64.25, 64.255, 64.26, 64.265, 64.27, 64.275, 64.28, 64.285, 64.29, 64.295, 64.3, 64.305, 64.31, 64.315, 64.32000000000001, 64.325, 64.33, 64.33500000000001, 64.34, 64.345, 64.35, 64.355, 64.36, 64.365, 64.37, 64.375, 64.38, 64.385, 64.39, 64.395, 64.4, 64.405, 64.41, 64.415, 64.42, 64.425, 64.43, 64.435, 64.44, 64.44500000000001, 64.45, 64.455, 64.46000000000001, 64.465, 64.47, 64.475, 64.48, 64.485, 64.49, 64.495, 64.5, 64.505, 64.51, 64.515, 64.52, 64.525, 64.53, 64.535, 64.54, 64.545, 64.55, 64.555, 64.56, 64.565, 64.57000000000001, 64.575, 64.58, 64.58500000000001, 64.59, 64.595, 64.6, 64.605, 64.61, 64.615, 64.62, 64.625, 64.63, 64.635, 64.64, 64.645, 64.65, 64.655, 64.66, 64.665, 64.67, 64.675, 64.68, 64.685, 64.69, 64.69500000000001, 64.7, 64.705, 64.71000000000001, 64.715, 64.72, 64.725, 64.73, 64.735, 64.74, 64.745, 64.75, 64.755, 64.76, 64.765, 64.77, 64.775, 64.78, 64.785, 64.79, 64.795, 64.8, 64.805, 64.81, 64.815, 64.82000000000001, 64.825, 64.83, 64.83500000000001, 64.84, 64.845, 64.85, 64.855, 64.86, 64.865, 64.87, 64.875, 64.88, 64.885, 64.89, 64.895, 64.9, 64.905, 64.91, 64.915, 64.92, 64.925, 64.93, 64.935, 64.94, 64.94500000000001, 64.95, 64.955, 64.96000000000001, 64.965, 64.97, 64.975, 64.98, 64.985, 64.99, 64.995, 65.0, 65.005, 65.01, 65.015, 65.02, 65.025, 65.03, 65.035, 65.04, 65.045, 65.05, 65.055, 65.06, 65.065, 65.07000000000001, 65.075, 65.08, 65.08500000000001, 65.09, 65.095, 65.1, 65.105, 65.11, 65.115, 65.12, 65.125, 65.13, 65.135, 65.14, 65.145, 65.15, 65.155, 65.16, 65.165, 65.17, 65.175, 65.18, 65.185, 65.19, 65.19500000000001, 65.2, 65.205, 65.21000000000001, 65.215, 65.22, 65.225, 65.23, 65.235, 65.24, 65.245, 65.25, 65.255, 65.26, 65.265, 65.27, 65.275, 65.28, 65.285, 65.29, 65.295, 65.3, 65.305, 65.31, 65.315, 65.32000000000001, 65.325, 65.33, 65.33500000000001, 65.34, 65.345, 65.35, 65.355, 65.36, 65.365, 65.37, 65.375, 65.38, 65.385, 65.39, 65.395, 65.4, 65.405, 65.41, 65.415, 65.42, 65.425, 65.43, 65.435, 65.44, 65.44500000000001, 65.45, 65.455, 65.46000000000001, 65.465, 65.47, 65.475, 65.48, 65.485, 65.49, 65.495, 65.5, 65.505, 65.51, 65.515, 65.52, 65.525, 65.53, 65.535, 65.54, 65.545, 65.55, 65.555, 65.56, 65.565, 65.57000000000001, 65.575, 65.58, 65.58500000000001, 65.59, 65.595, 65.6, 65.605, 65.61, 65.615, 65.62, 65.625, 65.63, 65.635, 65.64, 65.645, 65.65, 65.655, 65.66, 65.665, 65.67, 65.675, 65.68, 65.685, 65.69, 65.69500000000001, 65.7, 65.705, 65.71000000000001, 65.715, 65.72, 65.725, 65.73, 65.735, 65.74, 65.745, 65.75, 65.755, 65.76, 65.765, 65.77, 65.775, 65.78, 65.785, 65.79, 65.795, 65.8, 65.805, 65.81, 65.815, 65.82000000000001, 65.825, 65.83, 65.83500000000001, 65.84, 65.845, 65.85, 65.855, 65.86, 65.865, 65.87, 65.875, 65.88, 65.885, 65.89, 65.895, 65.9, 65.905, 65.91, 65.915, 65.92, 65.925, 65.93, 65.935, 65.94, 65.94500000000001, 65.95, 65.955, 65.96000000000001, 65.965, 65.97, 65.975, 65.98, 65.985, 65.99, 65.995, 66.0, 66.005, 66.01, 66.015, 66.02, 66.025, 66.03, 66.035, 66.04, 66.045, 66.05, 66.055, 66.06, 66.065, 66.07000000000001, 66.075, 66.08, 66.08500000000001, 66.09, 66.095, 66.1, 66.105, 66.11, 66.115, 66.12, 66.125, 66.13, 66.135, 66.14, 66.145, 66.15, 66.155, 66.16, 66.165, 66.17, 66.175, 66.18, 66.185, 66.19, 66.19500000000001, 66.2, 66.205, 66.21000000000001, 66.215, 66.22, 66.225, 66.23, 66.235, 66.24, 66.245, 66.25, 66.255, 66.26, 66.265, 66.27, 66.275, 66.28, 66.285, 66.29, 66.295, 66.3, 66.305, 66.31, 66.315, 66.32000000000001, 66.325, 66.33, 66.33500000000001, 66.34, 66.345, 66.35, 66.355, 66.36, 66.365, 66.37, 66.375, 66.38, 66.385, 66.39, 66.395, 66.4, 66.405, 66.41, 66.415, 66.42, 66.425, 66.43, 66.435, 66.44, 66.44500000000001, 66.45, 66.455, 66.46000000000001, 66.465, 66.47, 66.475, 66.48, 66.485, 66.49, 66.495, 66.5, 66.505, 66.51, 66.515, 66.52, 66.525, 66.53, 66.535, 66.54, 66.545, 66.55, 66.555, 66.56, 66.565, 66.57000000000001, 66.575, 66.58, 66.58500000000001, 66.59, 66.595, 66.6, 66.605, 66.61, 66.615, 66.62, 66.625, 66.63, 66.635, 66.64, 66.645, 66.65, 66.655, 66.66, 66.665, 66.67, 66.675, 66.68, 66.685, 66.69, 66.69500000000001, 66.7, 66.705, 66.71000000000001, 66.715, 66.72, 66.725, 66.73, 66.735, 66.74, 66.745, 66.75, 66.755, 66.76, 66.765, 66.77, 66.775, 66.78, 66.785, 66.79, 66.795, 66.8, 66.805, 66.81, 66.815, 66.82000000000001, 66.825, 66.83, 66.83500000000001, 66.84, 66.845, 66.85, 66.855, 66.86, 66.865, 66.87, 66.875, 66.88, 66.885, 66.89, 66.895, 66.9, 66.905, 66.91, 66.915, 66.92, 66.925, 66.93, 66.935, 66.94, 66.94500000000001, 66.95, 66.955, 66.96000000000001, 66.965, 66.97, 66.975, 66.98, 66.985, 66.99, 66.995, 67.0, 67.005, 67.01, 67.015, 67.02, 67.025, 67.03, 67.035, 67.04, 67.045, 67.05, 67.055, 67.06, 67.065, 67.07000000000001, 67.075, 67.08, 67.08500000000001, 67.09, 67.095, 67.1, 67.105, 67.11, 67.115, 67.12, 67.125, 67.13, 67.135, 67.14, 67.145, 67.15, 67.155, 67.16, 67.165, 67.17, 67.175, 67.18, 67.185, 67.19, 67.19500000000001, 67.2, 67.205, 67.21000000000001, 67.215, 67.22, 67.225, 67.23, 67.235, 67.24, 67.245, 67.25, 67.255, 67.26, 67.265, 67.27, 67.275, 67.28, 67.285, 67.29, 67.295, 67.3, 67.305, 67.31, 67.315, 67.32000000000001, 67.325, 67.33, 67.33500000000001, 67.34, 67.345, 67.35, 67.355, 67.36, 67.365, 67.37, 67.375, 67.38, 67.385, 67.39, 67.395, 67.4, 67.405, 67.41, 67.415, 67.42, 67.425, 67.43, 67.435, 67.44, 67.44500000000001, 67.45, 67.455, 67.46000000000001, 67.465, 67.47, 67.475, 67.48, 67.485, 67.49, 67.495, 67.5, 67.505, 67.51, 67.515, 67.52, 67.525, 67.53, 67.535, 67.54, 67.545, 67.55, 67.555, 67.56, 67.565, 67.57000000000001, 67.575, 67.58, 67.58500000000001, 67.59, 67.595, 67.6, 67.605, 67.61, 67.615, 67.62, 67.625, 67.63, 67.635, 67.64, 67.645, 67.65, 67.655, 67.66, 67.665, 67.67, 67.675, 67.68, 67.685, 67.69, 67.69500000000001, 67.7, 67.705, 67.71000000000001, 67.715, 67.72, 67.725, 67.73, 67.735, 67.74, 67.745, 67.75, 67.755, 67.76, 67.765, 67.77, 67.775, 67.78, 67.785, 67.79, 67.795, 67.8, 67.805, 67.81, 67.815, 67.82000000000001, 67.825, 67.83, 67.83500000000001, 67.84, 67.845, 67.85, 67.855, 67.86, 67.865, 67.87, 67.875, 67.88, 67.885, 67.89, 67.895, 67.9, 67.905, 67.91, 67.915, 67.92, 67.925, 67.93, 67.935, 67.94, 67.94500000000001, 67.95, 67.955, 67.96000000000001, 67.965, 67.97, 67.975, 67.98, 67.985, 67.99, 67.995, 68.0, 68.005, 68.01, 68.015, 68.02, 68.025, 68.03, 68.035, 68.04, 68.045, 68.05, 68.055, 68.06, 68.065, 68.07000000000001, 68.075, 68.08, 68.08500000000001, 68.09, 68.095, 68.1, 68.105, 68.11, 68.115, 68.12, 68.125, 68.13, 68.135, 68.14, 68.145, 68.15, 68.155, 68.16, 68.165, 68.17, 68.175, 68.18, 68.185, 68.19, 68.19500000000001, 68.2, 68.205, 68.21000000000001, 68.215, 68.22, 68.225, 68.23, 68.235, 68.24, 68.245, 68.25, 68.255, 68.26, 68.265, 68.27, 68.275, 68.28, 68.285, 68.29, 68.295, 68.3, 68.305, 68.31, 68.315, 68.32000000000001, 68.325, 68.33, 68.33500000000001, 68.34, 68.345, 68.35000000000001, 68.355, 68.36, 68.365, 68.37, 68.375, 68.38, 68.385, 68.39, 68.395, 68.4, 68.405, 68.41, 68.415, 68.42, 68.425, 68.43, 68.435, 68.44, 68.44500000000001, 68.45, 68.455, 68.46000000000001, 68.465, 68.47, 68.47500000000001, 68.48, 68.485, 68.49, 68.495, 68.5, 68.505, 68.51, 68.515, 68.52, 68.525, 68.53, 68.535, 68.54, 68.545, 68.55, 68.555, 68.56, 68.565, 68.57000000000001, 68.575, 68.58, 68.58500000000001, 68.59, 68.595, 68.60000000000001, 68.605, 68.61, 68.615, 68.62, 68.625, 68.63, 68.635, 68.64, 68.645, 68.65, 68.655, 68.66, 68.665, 68.67, 68.675, 68.68, 68.685, 68.69, 68.69500000000001, 68.7, 68.705, 68.71000000000001, 68.715, 68.72, 68.72500000000001, 68.73, 68.735, 68.74, 68.745, 68.75, 68.755, 68.76, 68.765, 68.77, 68.775, 68.78, 68.785, 68.79, 68.795, 68.8, 68.805, 68.81, 68.815, 68.82000000000001, 68.825, 68.83, 68.83500000000001, 68.84, 68.845, 68.85000000000001, 68.855, 68.86, 68.865, 68.87, 68.875, 68.88, 68.885, 68.89, 68.895, 68.9, 68.905, 68.91, 68.915, 68.92, 68.925, 68.93, 68.935, 68.94, 68.94500000000001, 68.95, 68.955, 68.96000000000001, 68.965, 68.97, 68.97500000000001, 68.98, 68.985, 68.99, 68.995, 69.0, 69.005, 69.01, 69.015, 69.02, 69.025, 69.03, 69.035, 69.04, 69.045, 69.05, 69.055, 69.06, 69.065, 69.07000000000001, 69.075, 69.08, 69.08500000000001, 69.09, 69.095, 69.10000000000001, 69.105, 69.11, 69.115, 69.12, 69.125, 69.13, 69.135, 69.14, 69.145, 69.15, 69.155, 69.16, 69.165, 69.17, 69.175, 69.18, 69.185, 69.19, 69.19500000000001, 69.2, 69.205, 69.21000000000001, 69.215, 69.22, 69.22500000000001, 69.23, 69.235, 69.24, 69.245, 69.25, 69.255, 69.26, 69.265, 69.27, 69.275, 69.28, 69.285, 69.29, 69.295, 69.3, 69.305, 69.31, 69.315, 69.32000000000001, 69.325, 69.33, 69.33500000000001, 69.34, 69.345, 69.35000000000001, 69.355, 69.36, 69.365, 69.37, 69.375, 69.38, 69.385, 69.39, 69.395, 69.4, 69.405, 69.41, 69.415, 69.42, 69.425, 69.43, 69.435, 69.44, 69.44500000000001, 69.45, 69.455, 69.46000000000001, 69.465, 69.47, 69.47500000000001, 69.48, 69.485, 69.49, 69.495, 69.5, 69.505, 69.51, 69.515, 69.52, 69.525, 69.53, 69.535, 69.54, 69.545, 69.55, 69.555, 69.56, 69.565, 69.57000000000001, 69.575, 69.58, 69.58500000000001, 69.59, 69.595, 69.60000000000001, 69.605, 69.61, 69.615, 69.62, 69.625, 69.63, 69.635, 69.64, 69.645, 69.65, 69.655, 69.66, 69.665, 69.67, 69.675, 69.68, 69.685, 69.69, 69.69500000000001, 69.7, 69.705, 69.71000000000001, 69.715, 69.72, 69.72500000000001, 69.73, 69.735, 69.74, 69.745, 69.75, 69.755, 69.76, 69.765, 69.77, 69.775, 69.78, 69.785, 69.79, 69.795, 69.8, 69.805, 69.81, 69.815, 69.82000000000001, 69.825, 69.83, 69.83500000000001, 69.84, 69.845, 69.85000000000001, 69.855, 69.86, 69.865, 69.87, 69.875, 69.88, 69.885, 69.89, 69.895, 69.9, 69.905, 69.91, 69.915, 69.92, 69.925, 69.93, 69.935, 69.94, 69.94500000000001, 69.95, 69.955, 69.96000000000001, 69.965, 69.97, 69.97500000000001, 69.98, 69.985, 69.99, 69.995, 70.0, 70.005, 70.01, 70.015, 70.02, 70.025, 70.03, 70.035, 70.04, 70.045, 70.05, 70.055, 70.06, 70.065, 70.07000000000001, 70.075, 70.08, 70.08500000000001, 70.09, 70.095, 70.10000000000001, 70.105, 70.11, 70.115, 70.12, 70.125, 70.13, 70.135, 70.14, 70.145, 70.15, 70.155, 70.16, 70.165, 70.17, 70.175, 70.18, 70.185, 70.19, 70.19500000000001, 70.2, 70.205, 70.21000000000001, 70.215, 70.22, 70.22500000000001, 70.23, 70.235, 70.24, 70.245, 70.25, 70.255, 70.26, 70.265, 70.27, 70.275, 70.28, 70.285, 70.29, 70.295, 70.3, 70.305, 70.31, 70.315, 70.32000000000001, 70.325, 70.33, 70.33500000000001, 70.34, 70.345, 70.35000000000001, 70.355, 70.36, 70.365, 70.37, 70.375, 70.38, 70.385, 70.39, 70.395, 70.4, 70.405, 70.41, 70.415, 70.42, 70.425, 70.43, 70.435, 70.44, 70.44500000000001, 70.45, 70.455, 70.46000000000001, 70.465, 70.47, 70.47500000000001, 70.48, 70.485, 70.49, 70.495, 70.5, 70.505, 70.51, 70.515, 70.52, 70.525, 70.53, 70.535, 70.54, 70.545, 70.55, 70.555, 70.56, 70.565, 70.57000000000001, 70.575, 70.58, 70.58500000000001, 70.59, 70.595, 70.60000000000001, 70.605, 70.61, 70.615, 70.62, 70.625, 70.63, 70.635, 70.64, 70.645, 70.65, 70.655, 70.66, 70.665, 70.67, 70.675, 70.68, 70.685, 70.69, 70.69500000000001, 70.7, 70.705, 70.71000000000001, 70.715, 70.72, 70.72500000000001, 70.73, 70.735, 70.74, 70.745, 70.75, 70.755, 70.76, 70.765, 70.77, 70.775, 70.78, 70.785, 70.79, 70.795, 70.8, 70.805, 70.81, 70.815, 70.82000000000001, 70.825, 70.83, 70.83500000000001, 70.84, 70.845, 70.85000000000001, 70.855, 70.86, 70.865, 70.87, 70.875, 70.88, 70.885, 70.89, 70.895, 70.9, 70.905, 70.91, 70.915, 70.92, 70.925, 70.93, 70.935, 70.94, 70.94500000000001, 70.95, 70.955, 70.96000000000001, 70.965, 70.97, 70.97500000000001, 70.98, 70.985, 70.99, 70.995, 71.0, 71.005, 71.01, 71.015, 71.02, 71.025, 71.03, 71.035, 71.04, 71.045, 71.05, 71.055, 71.06, 71.065, 71.07000000000001, 71.075, 71.08, 71.08500000000001, 71.09, 71.095, 71.10000000000001, 71.105, 71.11, 71.115, 71.12, 71.125, 71.13, 71.135, 71.14, 71.145, 71.15, 71.155, 71.16, 71.165, 71.17, 71.175, 71.18, 71.185, 71.19, 71.19500000000001, 71.2, 71.205, 71.21000000000001, 71.215, 71.22, 71.22500000000001, 71.23, 71.235, 71.24, 71.245, 71.25, 71.255, 71.26, 71.265, 71.27, 71.275, 71.28, 71.285, 71.29, 71.295, 71.3, 71.305, 71.31, 71.315, 71.32000000000001, 71.325, 71.33, 71.33500000000001, 71.34, 71.345, 71.35000000000001, 71.355, 71.36, 71.365, 71.37, 71.375, 71.38, 71.385, 71.39, 71.395, 71.4, 71.405, 71.41, 71.415, 71.42, 71.425, 71.43, 71.435, 71.44, 71.44500000000001, 71.45, 71.455, 71.46000000000001, 71.465, 71.47, 71.47500000000001, 71.48, 71.485, 71.49, 71.495, 71.5, 71.505, 71.51, 71.515, 71.52, 71.525, 71.53, 71.535, 71.54, 71.545, 71.55, 71.555, 71.56, 71.565, 71.57000000000001, 71.575, 71.58, 71.58500000000001, 71.59, 71.595, 71.60000000000001, 71.605, 71.61, 71.615, 71.62, 71.625, 71.63, 71.635, 71.64, 71.645, 71.65, 71.655, 71.66, 71.665, 71.67, 71.675, 71.68, 71.685, 71.69, 71.69500000000001, 71.7, 71.705, 71.71000000000001, 71.715, 71.72, 71.72500000000001, 71.73, 71.735, 71.74, 71.745, 71.75, 71.755, 71.76, 71.765, 71.77, 71.775, 71.78, 71.785, 71.79, 71.795, 71.8, 71.805, 71.81, 71.815, 71.82000000000001, 71.825, 71.83, 71.83500000000001, 71.84, 71.845, 71.85000000000001, 71.855, 71.86, 71.865, 71.87, 71.875, 71.88, 71.885, 71.89, 71.895, 71.9, 71.905, 71.91, 71.915, 71.92, 71.925, 71.93, 71.935, 71.94, 71.94500000000001, 71.95, 71.955, 71.96000000000001, 71.965, 71.97, 71.97500000000001, 71.98, 71.985, 71.99, 71.995, 72.0, 72.005, 72.01, 72.015, 72.02, 72.025, 72.03, 72.035, 72.04, 72.045, 72.05, 72.055, 72.06, 72.065, 72.07000000000001, 72.075, 72.08, 72.08500000000001, 72.09, 72.095, 72.10000000000001, 72.105, 72.11, 72.115, 72.12, 72.125, 72.13, 72.135, 72.14, 72.145, 72.15, 72.155, 72.16, 72.165, 72.17, 72.175, 72.18, 72.185, 72.19, 72.19500000000001, 72.2, 72.205, 72.21000000000001, 72.215, 72.22, 72.22500000000001, 72.23, 72.235, 72.24, 72.245, 72.25, 72.255, 72.26, 72.265, 72.27, 72.275, 72.28, 72.285, 72.29, 72.295, 72.3, 72.305, 72.31, 72.315, 72.32000000000001, 72.325, 72.33, 72.33500000000001, 72.34, 72.345, 72.35000000000001, 72.355, 72.36, 72.365, 72.37, 72.375, 72.38, 72.385, 72.39, 72.395, 72.4, 72.405, 72.41, 72.415, 72.42, 72.425, 72.43, 72.435, 72.44, 72.44500000000001, 72.45, 72.455, 72.46000000000001, 72.465, 72.47, 72.47500000000001, 72.48, 72.485, 72.49, 72.495, 72.5, 72.505, 72.51, 72.515, 72.52, 72.525, 72.53, 72.535, 72.54, 72.545, 72.55, 72.555, 72.56, 72.565, 72.57000000000001, 72.575, 72.58, 72.58500000000001, 72.59, 72.595, 72.60000000000001, 72.605, 72.61, 72.615, 72.62, 72.625, 72.63, 72.635, 72.64, 72.645, 72.65, 72.655, 72.66, 72.665, 72.67, 72.675, 72.68, 72.685, 72.69, 72.69500000000001, 72.7, 72.705, 72.71000000000001, 72.715, 72.72, 72.72500000000001, 72.73, 72.735, 72.74, 72.745, 72.75, 72.755, 72.76, 72.765, 72.77, 72.775, 72.78, 72.785, 72.79, 72.795, 72.8, 72.805, 72.81, 72.815, 72.82000000000001, 72.825, 72.83, 72.83500000000001, 72.84, 72.845, 72.85000000000001, 72.855, 72.86, 72.865, 72.87, 72.875, 72.88, 72.885, 72.89, 72.895, 72.9, 72.905, 72.91, 72.915, 72.92, 72.925, 72.93, 72.935, 72.94, 72.94500000000001, 72.95, 72.955, 72.96000000000001, 72.965, 72.97, 72.97500000000001, 72.98, 72.985, 72.99, 72.995, 73.0, 73.005, 73.01, 73.015, 73.02, 73.025, 73.03, 73.035, 73.04, 73.045, 73.05, 73.055, 73.06, 73.065, 73.07000000000001, 73.075, 73.08, 73.08500000000001, 73.09, 73.095, 73.10000000000001, 73.105, 73.11, 73.115, 73.12, 73.125, 73.13, 73.135, 73.14, 73.145, 73.15, 73.155, 73.16, 73.165, 73.17, 73.175, 73.18, 73.185, 73.19, 73.19500000000001, 73.2, 73.205, 73.21000000000001, 73.215, 73.22, 73.22500000000001, 73.23, 73.235, 73.24, 73.245, 73.25, 73.255, 73.26, 73.265, 73.27, 73.275, 73.28, 73.285, 73.29, 73.295, 73.3, 73.305, 73.31, 73.315, 73.32000000000001, 73.325, 73.33, 73.33500000000001, 73.34, 73.345, 73.35000000000001, 73.355, 73.36, 73.365, 73.37, 73.375, 73.38, 73.385, 73.39, 73.395, 73.4, 73.405, 73.41, 73.415, 73.42, 73.425, 73.43, 73.435, 73.44, 73.44500000000001, 73.45, 73.455, 73.46000000000001, 73.465, 73.47, 73.47500000000001, 73.48, 73.485, 73.49, 73.495, 73.5, 73.505, 73.51, 73.515, 73.52, 73.525, 73.53, 73.535, 73.54, 73.545, 73.55, 73.555, 73.56, 73.565, 73.57000000000001, 73.575, 73.58, 73.58500000000001, 73.59, 73.595, 73.60000000000001, 73.605, 73.61, 73.615, 73.62, 73.625, 73.63, 73.635, 73.64, 73.645, 73.65, 73.655, 73.66, 73.665, 73.67, 73.675, 73.68, 73.685, 73.69, 73.69500000000001, 73.7, 73.705, 73.71000000000001, 73.715, 73.72, 73.72500000000001, 73.73, 73.735, 73.74, 73.745, 73.75, 73.755, 73.76, 73.765, 73.77, 73.775, 73.78, 73.785, 73.79, 73.795, 73.8, 73.805, 73.81, 73.815, 73.82000000000001, 73.825, 73.83, 73.83500000000001, 73.84, 73.845, 73.85000000000001, 73.855, 73.86, 73.865, 73.87, 73.875, 73.88, 73.885, 73.89, 73.895, 73.9, 73.905, 73.91, 73.915, 73.92, 73.925, 73.93, 73.935, 73.94, 73.94500000000001, 73.95, 73.955, 73.96000000000001, 73.965, 73.97, 73.97500000000001, 73.98, 73.985, 73.99, 73.995, 74.0, 74.005, 74.01, 74.015, 74.02, 74.025, 74.03, 74.035, 74.04, 74.045, 74.05, 74.055, 74.06, 74.065, 74.07000000000001, 74.075, 74.08, 74.08500000000001, 74.09, 74.095, 74.10000000000001, 74.105, 74.11, 74.115, 74.12, 74.125, 74.13, 74.135, 74.14, 74.145, 74.15, 74.155, 74.16, 74.165, 74.17, 74.175, 74.18, 74.185, 74.19, 74.19500000000001, 74.2, 74.205, 74.21000000000001, 74.215, 74.22, 74.22500000000001, 74.23, 74.235, 74.24, 74.245, 74.25, 74.255, 74.26, 74.265, 74.27, 74.275, 74.28, 74.285, 74.29, 74.295, 74.3, 74.305, 74.31, 74.315, 74.32000000000001, 74.325, 74.33, 74.33500000000001, 74.34, 74.345, 74.35000000000001, 74.355, 74.36, 74.365, 74.37, 74.375, 74.38, 74.385, 74.39, 74.395, 74.4, 74.405, 74.41, 74.415, 74.42, 74.425, 74.43, 74.435, 74.44, 74.44500000000001, 74.45, 74.455, 74.46000000000001, 74.465, 74.47, 74.47500000000001, 74.48, 74.485, 74.49, 74.495, 74.5, 74.505, 74.51, 74.515, 74.52, 74.525, 74.53, 74.535, 74.54, 74.545, 74.55, 74.555, 74.56, 74.565, 74.57000000000001, 74.575, 74.58, 74.58500000000001, 74.59, 74.595, 74.60000000000001, 74.605, 74.61, 74.615, 74.62, 74.625, 74.63, 74.635, 74.64, 74.645, 74.65, 74.655, 74.66, 74.665, 74.67, 74.675, 74.68, 74.685, 74.69, 74.69500000000001, 74.7, 74.705, 74.71000000000001, 74.715, 74.72, 74.72500000000001, 74.73, 74.735, 74.74, 74.745, 74.75, 74.755, 74.76, 74.765, 74.77, 74.775, 74.78, 74.785, 74.79, 74.795, 74.8, 74.805, 74.81, 74.815, 74.82000000000001, 74.825, 74.83, 74.83500000000001, 74.84, 74.845, 74.85000000000001, 74.855, 74.86, 74.865, 74.87, 74.875, 74.88, 74.885, 74.89, 74.895, 74.9, 74.905, 74.91, 74.915, 74.92, 74.925, 74.93, 74.935, 74.94, 74.94500000000001, 74.95, 74.955, 74.96000000000001, 74.965, 74.97, 74.97500000000001, 74.98, 74.985, 74.99, 74.995, 75.0, 75.005, 75.01, 75.015, 75.02, 75.025, 75.03, 75.035, 75.04, 75.045, 75.05, 75.055, 75.06, 75.065, 75.07000000000001, 75.075, 75.08, 75.08500000000001, 75.09, 75.095, 75.10000000000001, 75.105, 75.11, 75.115, 75.12, 75.125, 75.13, 75.135, 75.14, 75.145, 75.15, 75.155, 75.16, 75.165, 75.17, 75.175, 75.18, 75.185, 75.19, 75.19500000000001, 75.2, 75.205, 75.21000000000001, 75.215, 75.22, 75.22500000000001, 75.23, 75.235, 75.24, 75.245, 75.25, 75.255, 75.26, 75.265, 75.27, 75.275, 75.28, 75.285, 75.29, 75.295, 75.3, 75.305, 75.31, 75.315, 75.32000000000001, 75.325, 75.33, 75.33500000000001, 75.34, 75.345, 75.35000000000001, 75.355, 75.36, 75.365, 75.37, 75.375, 75.38, 75.385, 75.39, 75.395, 75.4, 75.405, 75.41, 75.415, 75.42, 75.425, 75.43, 75.435, 75.44, 75.44500000000001, 75.45, 75.455, 75.46000000000001, 75.465, 75.47, 75.47500000000001, 75.48, 75.485, 75.49, 75.495, 75.5, 75.505, 75.51, 75.515, 75.52, 75.525, 75.53, 75.535, 75.54, 75.545, 75.55, 75.555, 75.56, 75.565, 75.57000000000001, 75.575, 75.58, 75.58500000000001, 75.59, 75.595, 75.60000000000001, 75.605, 75.61, 75.615, 75.62, 75.625, 75.63, 75.635, 75.64, 75.645, 75.65, 75.655, 75.66, 75.665, 75.67, 75.675, 75.68, 75.685, 75.69, 75.69500000000001, 75.7, 75.705, 75.71000000000001, 75.715, 75.72, 75.72500000000001, 75.73, 75.735, 75.74, 75.745, 75.75, 75.755, 75.76, 75.765, 75.77, 75.775, 75.78, 75.785, 75.79, 75.795, 75.8, 75.805, 75.81, 75.815, 75.82000000000001, 75.825, 75.83, 75.83500000000001, 75.84, 75.845, 75.85000000000001, 75.855, 75.86, 75.865, 75.87, 75.875, 75.88, 75.885, 75.89, 75.895, 75.9, 75.905, 75.91, 75.915, 75.92, 75.925, 75.93, 75.935, 75.94, 75.94500000000001, 75.95, 75.955, 75.96000000000001, 75.965, 75.97, 75.97500000000001, 75.98, 75.985, 75.99, 75.995, 76.0, 76.005, 76.01, 76.015, 76.02, 76.025, 76.03, 76.035, 76.04, 76.045, 76.05, 76.055, 76.06, 76.065, 76.07000000000001, 76.075, 76.08, 76.08500000000001, 76.09, 76.095, 76.10000000000001, 76.105, 76.11, 76.115, 76.12, 76.125, 76.13, 76.135, 76.14, 76.145, 76.15, 76.155, 76.16, 76.165, 76.17, 76.175, 76.18, 76.185, 76.19, 76.19500000000001, 76.2, 76.205, 76.21000000000001, 76.215, 76.22, 76.22500000000001, 76.23, 76.235, 76.24, 76.245, 76.25, 76.255, 76.26, 76.265, 76.27, 76.275, 76.28, 76.285, 76.29, 76.295, 76.3, 76.305, 76.31, 76.315, 76.32000000000001, 76.325, 76.33, 76.33500000000001, 76.34, 76.345, 76.35000000000001, 76.355, 76.36, 76.365, 76.37, 76.375, 76.38, 76.385, 76.39, 76.395, 76.4, 76.405, 76.41, 76.415, 76.42, 76.425, 76.43, 76.435, 76.44, 76.44500000000001, 76.45, 76.455, 76.46000000000001, 76.465, 76.47, 76.47500000000001, 76.48, 76.485, 76.49, 76.495, 76.5, 76.505, 76.51, 76.515, 76.52, 76.525, 76.53, 76.535, 76.54, 76.545, 76.55, 76.555, 76.56, 76.565, 76.57000000000001, 76.575, 76.58, 76.58500000000001, 76.59, 76.595, 76.60000000000001, 76.605, 76.61, 76.615, 76.62, 76.625, 76.63, 76.635, 76.64, 76.645, 76.65, 76.655, 76.66, 76.665, 76.67, 76.675, 76.68, 76.685, 76.69, 76.69500000000001, 76.7, 76.705, 76.71000000000001, 76.715, 76.72, 76.72500000000001, 76.73, 76.735, 76.74, 76.745, 76.75, 76.755, 76.76, 76.765, 76.77, 76.775, 76.78, 76.785, 76.79, 76.795, 76.8, 76.805, 76.81, 76.815, 76.82000000000001, 76.825, 76.83, 76.83500000000001, 76.84, 76.845, 76.85000000000001, 76.855, 76.86, 76.865, 76.87, 76.875, 76.88, 76.885, 76.89, 76.895, 76.9, 76.905, 76.91, 76.915, 76.92, 76.925, 76.93, 76.935, 76.94, 76.94500000000001, 76.95, 76.955, 76.96000000000001, 76.965, 76.97, 76.97500000000001, 76.98, 76.985, 76.99, 76.995, 77.0, 77.005, 77.01, 77.015, 77.02, 77.025, 77.03, 77.035, 77.04, 77.045, 77.05, 77.055, 77.06, 77.065, 77.07000000000001, 77.075, 77.08, 77.08500000000001, 77.09, 77.095, 77.10000000000001, 77.105, 77.11, 77.115, 77.12, 77.125, 77.13, 77.135, 77.14, 77.145, 77.15, 77.155, 77.16, 77.165, 77.17, 77.175, 77.18, 77.185, 77.19, 77.19500000000001, 77.2, 77.205, 77.21000000000001, 77.215, 77.22, 77.22500000000001, 77.23, 77.235, 77.24, 77.245, 77.25, 77.255, 77.26, 77.265, 77.27, 77.275, 77.28, 77.285, 77.29, 77.295, 77.3, 77.305, 77.31, 77.315, 77.32000000000001, 77.325, 77.33, 77.33500000000001, 77.34, 77.345, 77.35000000000001, 77.355, 77.36, 77.365, 77.37, 77.375, 77.38, 77.385, 77.39, 77.395, 77.4, 77.405, 77.41, 77.415, 77.42, 77.425, 77.43, 77.435, 77.44, 77.44500000000001, 77.45, 77.455, 77.46000000000001, 77.465, 77.47, 77.47500000000001, 77.48, 77.485, 77.49, 77.495, 77.5, 77.505, 77.51, 77.515, 77.52, 77.525, 77.53, 77.535, 77.54, 77.545, 77.55, 77.555, 77.56, 77.565, 77.57000000000001, 77.575, 77.58, 77.58500000000001, 77.59, 77.595, 77.60000000000001, 77.605, 77.61, 77.615, 77.62, 77.625, 77.63, 77.635, 77.64, 77.645, 77.65, 77.655, 77.66, 77.665, 77.67, 77.675, 77.68, 77.685, 77.69, 77.69500000000001, 77.7, 77.705, 77.71000000000001, 77.715, 77.72, 77.72500000000001, 77.73, 77.735, 77.74, 77.745, 77.75, 77.755, 77.76, 77.765, 77.77, 77.775, 77.78, 77.785, 77.79, 77.795, 77.8, 77.805, 77.81, 77.815, 77.82000000000001, 77.825, 77.83, 77.83500000000001, 77.84, 77.845, 77.85000000000001, 77.855, 77.86, 77.865, 77.87, 77.875, 77.88, 77.885, 77.89, 77.895, 77.9, 77.905, 77.91, 77.915, 77.92, 77.925, 77.93, 77.935, 77.94, 77.94500000000001, 77.95, 77.955, 77.96000000000001, 77.965, 77.97, 77.97500000000001, 77.98, 77.985, 77.99, 77.995, 78.0, 78.005, 78.01, 78.015, 78.02, 78.025, 78.03, 78.035, 78.04, 78.045, 78.05, 78.055, 78.06, 78.065, 78.07000000000001, 78.075, 78.08, 78.08500000000001, 78.09, 78.095, 78.10000000000001, 78.105, 78.11, 78.115, 78.12, 78.125, 78.13, 78.135, 78.14, 78.145, 78.15, 78.155, 78.16, 78.165, 78.17, 78.175, 78.18, 78.185, 78.19, 78.19500000000001, 78.2, 78.205, 78.21000000000001, 78.215, 78.22, 78.22500000000001, 78.23, 78.235, 78.24, 78.245, 78.25, 78.255, 78.26, 78.265, 78.27, 78.275, 78.28, 78.285, 78.29, 78.295, 78.3, 78.305, 78.31, 78.315, 78.32000000000001, 78.325, 78.33, 78.33500000000001, 78.34, 78.345, 78.35000000000001, 78.355, 78.36, 78.365, 78.37, 78.375, 78.38, 78.385, 78.39, 78.395, 78.4, 78.405, 78.41, 78.415, 78.42, 78.425, 78.43, 78.435, 78.44, 78.44500000000001, 78.45, 78.455, 78.46000000000001, 78.465, 78.47, 78.47500000000001, 78.48, 78.485, 78.49, 78.495, 78.5, 78.505, 78.51, 78.515, 78.52, 78.525, 78.53, 78.535, 78.54, 78.545, 78.55, 78.555, 78.56, 78.565, 78.57000000000001, 78.575, 78.58, 78.58500000000001, 78.59, 78.595, 78.60000000000001, 78.605, 78.61, 78.615, 78.62, 78.625, 78.63, 78.635, 78.64, 78.645, 78.65, 78.655, 78.66, 78.665, 78.67, 78.675, 78.68, 78.685, 78.69, 78.69500000000001, 78.7, 78.705, 78.71000000000001, 78.715, 78.72, 78.72500000000001, 78.73, 78.735, 78.74, 78.745, 78.75, 78.755, 78.76, 78.765, 78.77, 78.775, 78.78, 78.785, 78.79, 78.795, 78.8, 78.805, 78.81, 78.815, 78.82000000000001, 78.825, 78.83, 78.83500000000001, 78.84, 78.845, 78.85000000000001, 78.855, 78.86, 78.865, 78.87, 78.875, 78.88, 78.885, 78.89, 78.895, 78.9, 78.905, 78.91, 78.915, 78.92, 78.925, 78.93, 78.935, 78.94, 78.94500000000001, 78.95, 78.955, 78.96000000000001, 78.965, 78.97, 78.97500000000001, 78.98, 78.985, 78.99, 78.995, 79.0, 79.005, 79.01, 79.015, 79.02, 79.025, 79.03, 79.035, 79.04, 79.045, 79.05, 79.055, 79.06, 79.065, 79.07000000000001, 79.075, 79.08, 79.08500000000001, 79.09, 79.095, 79.10000000000001, 79.105, 79.11, 79.115, 79.12, 79.125, 79.13, 79.135, 79.14, 79.145, 79.15, 79.155, 79.16, 79.165, 79.17, 79.175, 79.18, 79.185, 79.19, 79.19500000000001, 79.2, 79.205, 79.21000000000001, 79.215, 79.22, 79.22500000000001, 79.23, 79.235, 79.24, 79.245, 79.25, 79.255, 79.26, 79.265, 79.27, 79.275, 79.28, 79.285, 79.29, 79.295, 79.3, 79.305, 79.31, 79.315, 79.32000000000001, 79.325, 79.33, 79.33500000000001, 79.34, 79.345, 79.35000000000001, 79.355, 79.36, 79.365, 79.37, 79.375, 79.38, 79.385, 79.39, 79.395, 79.4, 79.405, 79.41, 79.415, 79.42, 79.425, 79.43, 79.435, 79.44, 79.44500000000001, 79.45, 79.455, 79.46000000000001, 79.465, 79.47, 79.47500000000001, 79.48, 79.485, 79.49, 79.495, 79.5, 79.505, 79.51, 79.515, 79.52, 79.525, 79.53, 79.535, 79.54, 79.545, 79.55, 79.555, 79.56, 79.565, 79.57000000000001, 79.575, 79.58, 79.58500000000001, 79.59, 79.595, 79.60000000000001, 79.605, 79.61, 79.615, 79.62, 79.625, 79.63, 79.635, 79.64, 79.645, 79.65, 79.655, 79.66, 79.665, 79.67, 79.675, 79.68, 79.685, 79.69, 79.69500000000001, 79.7, 79.705, 79.71000000000001, 79.715, 79.72, 79.72500000000001, 79.73, 79.735, 79.74, 79.745, 79.75, 79.755, 79.76, 79.765, 79.77, 79.775, 79.78, 79.785, 79.79, 79.795, 79.8, 79.805, 79.81, 79.815, 79.82000000000001, 79.825, 79.83, 79.83500000000001, 79.84, 79.845, 79.85000000000001, 79.855, 79.86, 79.865, 79.87, 79.875, 79.88, 79.885, 79.89, 79.895, 79.9, 79.905, 79.91, 79.915, 79.92, 79.925, 79.93, 79.935, 79.94, 79.94500000000001, 79.95, 79.955, 79.96000000000001, 79.965, 79.97, 79.97500000000001, 79.98, 79.985, 79.99, 79.995, 80.0, 80.005, 80.01, 80.015, 80.02, 80.025, 80.03, 80.035, 80.04, 80.045, 80.05, 80.055, 80.06, 80.065, 80.07000000000001, 80.075, 80.08, 80.08500000000001, 80.09, 80.095, 80.10000000000001, 80.105, 80.11, 80.115, 80.12, 80.125, 80.13, 80.135, 80.14, 80.145, 80.15, 80.155, 80.16, 80.165, 80.17, 80.175, 80.18, 80.185, 80.19, 80.19500000000001, 80.2, 80.205, 80.21000000000001, 80.215, 80.22, 80.22500000000001, 80.23, 80.235, 80.24, 80.245, 80.25, 80.255, 80.26, 80.265, 80.27, 80.275, 80.28, 80.285, 80.29, 80.295, 80.3, 80.305, 80.31, 80.315, 80.32000000000001, 80.325, 80.33, 80.33500000000001, 80.34, 80.345, 80.35000000000001, 80.355, 80.36, 80.365, 80.37, 80.375, 80.38, 80.385, 80.39, 80.395, 80.4, 80.405, 80.41, 80.415, 80.42, 80.425, 80.43, 80.435, 80.44, 80.44500000000001, 80.45, 80.455, 80.46000000000001, 80.465, 80.47, 80.47500000000001, 80.48, 80.485, 80.49, 80.495, 80.5, 80.505, 80.51, 80.515, 80.52, 80.525, 80.53, 80.535, 80.54, 80.545, 80.55, 80.555, 80.56, 80.565, 80.57000000000001, 80.575, 80.58, 80.58500000000001, 80.59, 80.595, 80.60000000000001, 80.605, 80.61, 80.615, 80.62, 80.625, 80.63, 80.635, 80.64, 80.645, 80.65, 80.655, 80.66, 80.665, 80.67, 80.675, 80.68, 80.685, 80.69, 80.69500000000001, 80.7, 80.705, 80.71000000000001, 80.715, 80.72, 80.72500000000001, 80.73, 80.735, 80.74, 80.745, 80.75, 80.755, 80.76, 80.765, 80.77, 80.775, 80.78, 80.785, 80.79, 80.795, 80.8, 80.805, 80.81, 80.815, 80.82000000000001, 80.825, 80.83, 80.83500000000001, 80.84, 80.845, 80.85000000000001, 80.855, 80.86, 80.865, 80.87, 80.875, 80.88, 80.885, 80.89, 80.895, 80.9, 80.905, 80.91, 80.915, 80.92, 80.925, 80.93, 80.935, 80.94, 80.94500000000001, 80.95, 80.955, 80.96000000000001, 80.965, 80.97, 80.97500000000001, 80.98, 80.985, 80.99, 80.995, 81.0, 81.005, 81.01, 81.015, 81.02, 81.025, 81.03, 81.035, 81.04, 81.045, 81.05, 81.055, 81.06, 81.065, 81.07000000000001, 81.075, 81.08, 81.08500000000001, 81.09, 81.095, 81.10000000000001, 81.105, 81.11, 81.115, 81.12, 81.125, 81.13, 81.135, 81.14, 81.145, 81.15, 81.155, 81.16, 81.165, 81.17, 81.175, 81.18, 81.185, 81.19, 81.19500000000001, 81.2, 81.205, 81.21000000000001, 81.215, 81.22, 81.22500000000001, 81.23, 81.235, 81.24, 81.245, 81.25, 81.255, 81.26, 81.265, 81.27, 81.275, 81.28, 81.285, 81.29, 81.295, 81.3, 81.305, 81.31, 81.315, 81.32000000000001, 81.325, 81.33, 81.33500000000001, 81.34, 81.345, 81.35000000000001, 81.355, 81.36, 81.365, 81.37, 81.375, 81.38, 81.385, 81.39, 81.395, 81.4, 81.405, 81.41, 81.415, 81.42, 81.425, 81.43, 81.435, 81.44, 81.44500000000001, 81.45, 81.455, 81.46000000000001, 81.465, 81.47, 81.47500000000001, 81.48, 81.485, 81.49, 81.495, 81.5, 81.505, 81.51, 81.515, 81.52, 81.525, 81.53, 81.535, 81.54, 81.545, 81.55, 81.555, 81.56, 81.565, 81.57000000000001, 81.575, 81.58, 81.58500000000001, 81.59, 81.595, 81.60000000000001, 81.605, 81.61, 81.615, 81.62, 81.625, 81.63, 81.635, 81.64, 81.645, 81.65, 81.655, 81.66, 81.665, 81.67, 81.675, 81.68, 81.685, 81.69, 81.69500000000001, 81.7, 81.705, 81.71000000000001, 81.715, 81.72, 81.72500000000001, 81.73, 81.735, 81.74, 81.745, 81.75, 81.755, 81.76, 81.765, 81.77, 81.775, 81.78, 81.785, 81.79, 81.795, 81.8, 81.805, 81.81, 81.815, 81.82000000000001, 81.825, 81.83, 81.83500000000001, 81.84, 81.845, 81.85000000000001, 81.855, 81.86, 81.865, 81.87, 81.875, 81.88, 81.885, 81.89, 81.895, 81.9, 81.905, 81.91, 81.915, 81.92, 81.925, 81.93, 81.935, 81.94, 81.94500000000001, 81.95, 81.955, 81.96000000000001, 81.965, 81.97, 81.97500000000001, 81.98, 81.985, 81.99, 81.995, 82.0, 82.005, 82.01, 82.015, 82.02, 82.025, 82.03, 82.035, 82.04, 82.045, 82.05, 82.055, 82.06, 82.065, 82.07000000000001, 82.075, 82.08, 82.08500000000001, 82.09, 82.095, 82.10000000000001, 82.105, 82.11, 82.115, 82.12, 82.125, 82.13, 82.135, 82.14, 82.145, 82.15, 82.155, 82.16, 82.165, 82.17, 82.175, 82.18, 82.185, 82.19, 82.19500000000001, 82.2, 82.205, 82.21000000000001, 82.215, 82.22, 82.22500000000001, 82.23, 82.235, 82.24, 82.245, 82.25, 82.255, 82.26, 82.265, 82.27, 82.275, 82.28, 82.285, 82.29, 82.295, 82.3, 82.305, 82.31, 82.315, 82.32000000000001, 82.325, 82.33, 82.33500000000001, 82.34, 82.345, 82.35000000000001, 82.355, 82.36, 82.365, 82.37, 82.375, 82.38, 82.385, 82.39, 82.395, 82.4, 82.405, 82.41, 82.415, 82.42, 82.425, 82.43, 82.435, 82.44, 82.44500000000001, 82.45, 82.455, 82.46000000000001, 82.465, 82.47, 82.47500000000001, 82.48, 82.485, 82.49, 82.495, 82.5, 82.505, 82.51, 82.515, 82.52, 82.525, 82.53, 82.535, 82.54, 82.545, 82.55, 82.555, 82.56, 82.565, 82.57000000000001, 82.575, 82.58, 82.58500000000001, 82.59, 82.595, 82.60000000000001, 82.605, 82.61, 82.615, 82.62, 82.625, 82.63, 82.635, 82.64, 82.645, 82.65, 82.655, 82.66, 82.665, 82.67, 82.675, 82.68, 82.685, 82.69, 82.69500000000001, 82.7, 82.705, 82.71000000000001, 82.715, 82.72, 82.72500000000001, 82.73, 82.735, 82.74, 82.745, 82.75, 82.755, 82.76, 82.765, 82.77, 82.775, 82.78, 82.785, 82.79, 82.795, 82.8, 82.805, 82.81, 82.815, 82.82000000000001, 82.825, 82.83, 82.83500000000001, 82.84, 82.845, 82.85000000000001, 82.855, 82.86, 82.865, 82.87, 82.875, 82.88, 82.885, 82.89, 82.895, 82.9, 82.905, 82.91, 82.915, 82.92, 82.925, 82.93, 82.935, 82.94, 82.94500000000001, 82.95, 82.955, 82.96000000000001, 82.965, 82.97, 82.97500000000001, 82.98, 82.985, 82.99, 82.995, 83.0, 83.005, 83.01, 83.015, 83.02, 83.025, 83.03, 83.035, 83.04, 83.045, 83.05, 83.055, 83.06, 83.065, 83.07000000000001, 83.075, 83.08, 83.08500000000001, 83.09, 83.095, 83.10000000000001, 83.105, 83.11, 83.115, 83.12, 83.125, 83.13, 83.135, 83.14, 83.145, 83.15, 83.155, 83.16, 83.165, 83.17, 83.175, 83.18, 83.185, 83.19, 83.19500000000001, 83.2, 83.205, 83.21000000000001, 83.215, 83.22, 83.22500000000001, 83.23, 83.235, 83.24, 83.245, 83.25, 83.255, 83.26, 83.265, 83.27, 83.275, 83.28, 83.285, 83.29, 83.295, 83.3, 83.305, 83.31, 83.315, 83.32000000000001, 83.325, 83.33, 83.33500000000001, 83.34, 83.345, 83.35000000000001, 83.355, 83.36, 83.365, 83.37, 83.375, 83.38, 83.385, 83.39, 83.395, 83.4, 83.405, 83.41, 83.415, 83.42, 83.425, 83.43, 83.435, 83.44, 83.44500000000001, 83.45, 83.455, 83.46000000000001, 83.465, 83.47, 83.47500000000001, 83.48, 83.485, 83.49, 83.495, 83.5, 83.505, 83.51, 83.515, 83.52, 83.525, 83.53, 83.535, 83.54, 83.545, 83.55, 83.555, 83.56, 83.565, 83.57000000000001, 83.575, 83.58, 83.58500000000001, 83.59, 83.595, 83.60000000000001, 83.605, 83.61, 83.615, 83.62, 83.625, 83.63, 83.635, 83.64, 83.645, 83.65, 83.655, 83.66, 83.665, 83.67, 83.675, 83.68, 83.685, 83.69, 83.69500000000001, 83.7, 83.705, 83.71000000000001, 83.715, 83.72, 83.72500000000001, 83.73, 83.735, 83.74, 83.745, 83.75, 83.755, 83.76, 83.765, 83.77, 83.775, 83.78, 83.785, 83.79, 83.795, 83.8, 83.805, 83.81, 83.815, 83.82000000000001, 83.825, 83.83, 83.83500000000001, 83.84, 83.845, 83.85000000000001, 83.855, 83.86, 83.865, 83.87, 83.875, 83.88, 83.885, 83.89, 83.895, 83.9, 83.905, 83.91, 83.915, 83.92, 83.925, 83.93, 83.935, 83.94, 83.94500000000001, 83.95, 83.955, 83.96000000000001, 83.965, 83.97, 83.97500000000001, 83.98, 83.985, 83.99, 83.995, 84.0, 84.005, 84.01, 84.015, 84.02, 84.025, 84.03, 84.035, 84.04, 84.045, 84.05, 84.055, 84.06, 84.065, 84.07000000000001, 84.075, 84.08, 84.08500000000001, 84.09, 84.095, 84.10000000000001, 84.105, 84.11, 84.115, 84.12, 84.125, 84.13, 84.135, 84.14, 84.145, 84.15, 84.155, 84.16, 84.165, 84.17, 84.175, 84.18, 84.185, 84.19, 84.19500000000001, 84.2, 84.205, 84.21000000000001, 84.215, 84.22, 84.22500000000001, 84.23, 84.235, 84.24, 84.245, 84.25, 84.255, 84.26, 84.265, 84.27, 84.275, 84.28, 84.285, 84.29, 84.295, 84.3, 84.305, 84.31, 84.315, 84.32000000000001, 84.325, 84.33, 84.33500000000001, 84.34, 84.345, 84.35000000000001, 84.355, 84.36, 84.365, 84.37, 84.375, 84.38, 84.385, 84.39, 84.395, 84.4, 84.405, 84.41, 84.415, 84.42, 84.425, 84.43, 84.435, 84.44, 84.44500000000001, 84.45, 84.455, 84.46000000000001, 84.465, 84.47, 84.47500000000001, 84.48, 84.485, 84.49, 84.495, 84.5, 84.505, 84.51, 84.515, 84.52, 84.525, 84.53, 84.535, 84.54, 84.545, 84.55, 84.555, 84.56, 84.565, 84.57000000000001, 84.575, 84.58, 84.58500000000001, 84.59, 84.595, 84.60000000000001, 84.605, 84.61, 84.615, 84.62, 84.625, 84.63, 84.635, 84.64, 84.645, 84.65, 84.655, 84.66, 84.665, 84.67, 84.675, 84.68, 84.685, 84.69, 84.69500000000001, 84.7, 84.705, 84.71000000000001, 84.715, 84.72, 84.72500000000001, 84.73, 84.735, 84.74, 84.745, 84.75, 84.755, 84.76, 84.765, 84.77, 84.775, 84.78, 84.785, 84.79, 84.795, 84.8, 84.805, 84.81, 84.815, 84.82000000000001, 84.825, 84.83, 84.83500000000001, 84.84, 84.845, 84.85000000000001, 84.855, 84.86, 84.865, 84.87, 84.875, 84.88, 84.885, 84.89, 84.895, 84.9, 84.905, 84.91, 84.915, 84.92, 84.925, 84.93, 84.935, 84.94, 84.94500000000001, 84.95, 84.955, 84.96000000000001, 84.965, 84.97, 84.97500000000001, 84.98, 84.985, 84.99, 84.995, 85.0, 85.005, 85.01, 85.015, 85.02, 85.025, 85.03, 85.035, 85.04, 85.045, 85.05, 85.055, 85.06, 85.065, 85.07000000000001, 85.075, 85.08, 85.08500000000001, 85.09, 85.095, 85.10000000000001, 85.105, 85.11, 85.115, 85.12, 85.125, 85.13, 85.135, 85.14, 85.145, 85.15, 85.155, 85.16, 85.165, 85.17, 85.175, 85.18, 85.185, 85.19, 85.19500000000001, 85.2, 85.205, 85.21000000000001, 85.215, 85.22, 85.22500000000001, 85.23, 85.235, 85.24, 85.245, 85.25, 85.255, 85.26, 85.265, 85.27, 85.275, 85.28, 85.285, 85.29, 85.295, 85.3, 85.305, 85.31, 85.315, 85.32000000000001, 85.325, 85.33, 85.33500000000001, 85.34, 85.345, 85.35000000000001, 85.355, 85.36, 85.365, 85.37, 85.375, 85.38, 85.385, 85.39, 85.395, 85.4, 85.405, 85.41, 85.415, 85.42, 85.425, 85.43, 85.435, 85.44, 85.44500000000001, 85.45, 85.455, 85.46000000000001, 85.465, 85.47, 85.47500000000001, 85.48, 85.485, 85.49, 85.495, 85.5, 85.505, 85.51, 85.515, 85.52, 85.525, 85.53, 85.535, 85.54, 85.545, 85.55, 85.555, 85.56, 85.565, 85.57000000000001, 85.575, 85.58, 85.58500000000001, 85.59, 85.595, 85.60000000000001, 85.605, 85.61, 85.615, 85.62, 85.625, 85.63, 85.635, 85.64, 85.645, 85.65, 85.655, 85.66, 85.665, 85.67, 85.675, 85.68, 85.685, 85.69, 85.69500000000001, 85.7, 85.705, 85.71000000000001, 85.715, 85.72, 85.72500000000001, 85.73, 85.735, 85.74, 85.745, 85.75, 85.755, 85.76, 85.765, 85.77, 85.775, 85.78, 85.785, 85.79, 85.795, 85.8, 85.805, 85.81, 85.815, 85.82000000000001, 85.825, 85.83, 85.83500000000001, 85.84, 85.845, 85.85000000000001, 85.855, 85.86, 85.865, 85.87, 85.875, 85.88, 85.885, 85.89, 85.895, 85.9, 85.905, 85.91, 85.915, 85.92, 85.925, 85.93, 85.935, 85.94, 85.94500000000001, 85.95, 85.955, 85.96000000000001, 85.965, 85.97, 85.97500000000001, 85.98, 85.985, 85.99, 85.995, 86.0, 86.005, 86.01, 86.015, 86.02, 86.025, 86.03, 86.035, 86.04, 86.045, 86.05, 86.055, 86.06, 86.065, 86.07000000000001, 86.075, 86.08, 86.08500000000001, 86.09, 86.095, 86.10000000000001, 86.105, 86.11, 86.115, 86.12, 86.125, 86.13, 86.135, 86.14, 86.145, 86.15, 86.155, 86.16, 86.165, 86.17, 86.175, 86.18, 86.185, 86.19, 86.19500000000001, 86.2, 86.205, 86.21000000000001, 86.215, 86.22, 86.22500000000001, 86.23, 86.235, 86.24, 86.245, 86.25, 86.255, 86.26, 86.265, 86.27, 86.275, 86.28, 86.285, 86.29, 86.295, 86.3, 86.305, 86.31, 86.315, 86.32000000000001, 86.325, 86.33, 86.33500000000001, 86.34, 86.345, 86.35000000000001, 86.355, 86.36, 86.365, 86.37, 86.375, 86.38, 86.385, 86.39, 86.395, 86.4, 86.405, 86.41, 86.415, 86.42, 86.425, 86.43, 86.435, 86.44, 86.44500000000001, 86.45, 86.455, 86.46000000000001, 86.465, 86.47, 86.47500000000001, 86.48, 86.485, 86.49, 86.495, 86.5, 86.505, 86.51, 86.515, 86.52, 86.525, 86.53, 86.535, 86.54, 86.545, 86.55, 86.555, 86.56, 86.565, 86.57000000000001, 86.575, 86.58, 86.58500000000001, 86.59, 86.595, 86.60000000000001, 86.605, 86.61, 86.615, 86.62, 86.625, 86.63, 86.635, 86.64, 86.645, 86.65, 86.655, 86.66, 86.665, 86.67, 86.675, 86.68, 86.685, 86.69, 86.69500000000001, 86.7, 86.705, 86.71000000000001, 86.715, 86.72, 86.72500000000001, 86.73, 86.735, 86.74, 86.745, 86.75, 86.755, 86.76, 86.765, 86.77, 86.775, 86.78, 86.785, 86.79, 86.795, 86.8, 86.805, 86.81, 86.815, 86.82000000000001, 86.825, 86.83, 86.83500000000001, 86.84, 86.845, 86.85000000000001, 86.855, 86.86, 86.865, 86.87, 86.875, 86.88, 86.885, 86.89, 86.895, 86.9, 86.905, 86.91, 86.915, 86.92, 86.925, 86.93, 86.935, 86.94, 86.94500000000001, 86.95, 86.955, 86.96000000000001, 86.965, 86.97, 86.97500000000001, 86.98, 86.985, 86.99, 86.995, 87.0, 87.005, 87.01, 87.015, 87.02, 87.025, 87.03, 87.035, 87.04, 87.045, 87.05, 87.055, 87.06, 87.065, 87.07000000000001, 87.075, 87.08, 87.08500000000001, 87.09, 87.095, 87.10000000000001, 87.105, 87.11, 87.115, 87.12, 87.125, 87.13, 87.135, 87.14, 87.145, 87.15, 87.155, 87.16, 87.165, 87.17, 87.175, 87.18, 87.185, 87.19, 87.19500000000001, 87.2, 87.205, 87.21000000000001, 87.215, 87.22, 87.22500000000001, 87.23, 87.235, 87.24, 87.245, 87.25, 87.255, 87.26, 87.265, 87.27, 87.275, 87.28, 87.285, 87.29, 87.295, 87.3, 87.305, 87.31, 87.315, 87.32000000000001, 87.325, 87.33, 87.33500000000001, 87.34, 87.345, 87.35000000000001, 87.355, 87.36, 87.365, 87.37, 87.375, 87.38, 87.385, 87.39, 87.395, 87.4, 87.405, 87.41, 87.415, 87.42, 87.425, 87.43, 87.435, 87.44, 87.44500000000001, 87.45, 87.455, 87.46000000000001, 87.465, 87.47, 87.47500000000001, 87.48, 87.485, 87.49, 87.495, 87.5, 87.505, 87.51, 87.515, 87.52, 87.525, 87.53, 87.535, 87.54, 87.545, 87.55, 87.555, 87.56, 87.565, 87.57000000000001, 87.575, 87.58, 87.58500000000001, 87.59, 87.595, 87.60000000000001, 87.605, 87.61, 87.615, 87.62, 87.625, 87.63, 87.635, 87.64, 87.645, 87.65, 87.655, 87.66, 87.665, 87.67, 87.675, 87.68, 87.685, 87.69, 87.69500000000001, 87.7, 87.705, 87.71000000000001, 87.715, 87.72, 87.72500000000001, 87.73, 87.735, 87.74, 87.745, 87.75, 87.755, 87.76, 87.765, 87.77, 87.775, 87.78, 87.785, 87.79, 87.795, 87.8, 87.805, 87.81, 87.815, 87.82000000000001, 87.825, 87.83, 87.83500000000001, 87.84, 87.845, 87.85000000000001, 87.855, 87.86, 87.865, 87.87, 87.875, 87.88, 87.885, 87.89, 87.895, 87.9, 87.905, 87.91, 87.915, 87.92, 87.925, 87.93, 87.935, 87.94, 87.94500000000001, 87.95, 87.955, 87.96000000000001, 87.965, 87.97, 87.97500000000001, 87.98, 87.985, 87.99, 87.995, 88.0, 88.005, 88.01, 88.015, 88.02, 88.025, 88.03, 88.035, 88.04, 88.045, 88.05, 88.055, 88.06, 88.065, 88.07000000000001, 88.075, 88.08, 88.08500000000001, 88.09, 88.095, 88.10000000000001, 88.105, 88.11, 88.115, 88.12, 88.125, 88.13, 88.135, 88.14, 88.145, 88.15, 88.155, 88.16, 88.165, 88.17, 88.175, 88.18, 88.185, 88.19, 88.19500000000001, 88.2, 88.205, 88.21000000000001, 88.215, 88.22, 88.22500000000001, 88.23, 88.235, 88.24, 88.245, 88.25, 88.255, 88.26, 88.265, 88.27, 88.275, 88.28, 88.285, 88.29, 88.295, 88.3, 88.305, 88.31, 88.315, 88.32000000000001, 88.325, 88.33, 88.33500000000001, 88.34, 88.345, 88.35000000000001, 88.355, 88.36, 88.365, 88.37, 88.375, 88.38, 88.385, 88.39, 88.395, 88.4, 88.405, 88.41, 88.415, 88.42, 88.425, 88.43, 88.435, 88.44, 88.44500000000001, 88.45, 88.455, 88.46000000000001, 88.465, 88.47, 88.47500000000001, 88.48, 88.485, 88.49, 88.495, 88.5, 88.505, 88.51, 88.515, 88.52, 88.525, 88.53, 88.535, 88.54, 88.545, 88.55, 88.555, 88.56, 88.565, 88.57000000000001, 88.575, 88.58, 88.58500000000001, 88.59, 88.595, 88.60000000000001, 88.605, 88.61, 88.615, 88.62, 88.625, 88.63, 88.635, 88.64, 88.645, 88.65, 88.655, 88.66, 88.665, 88.67, 88.675, 88.68, 88.685, 88.69, 88.69500000000001, 88.7, 88.705, 88.71000000000001, 88.715, 88.72, 88.72500000000001, 88.73, 88.735, 88.74, 88.745, 88.75, 88.755, 88.76, 88.765, 88.77, 88.775, 88.78, 88.785, 88.79, 88.795, 88.8, 88.805, 88.81, 88.815, 88.82000000000001, 88.825, 88.83, 88.83500000000001, 88.84, 88.845, 88.85000000000001, 88.855, 88.86, 88.865, 88.87, 88.875, 88.88, 88.885, 88.89, 88.895, 88.9, 88.905, 88.91, 88.915, 88.92, 88.925, 88.93, 88.935, 88.94, 88.94500000000001, 88.95, 88.955, 88.96000000000001, 88.965, 88.97, 88.97500000000001, 88.98, 88.985, 88.99, 88.995, 89.0, 89.005, 89.01, 89.015, 89.02, 89.025, 89.03, 89.035, 89.04, 89.045, 89.05, 89.055, 89.06, 89.065, 89.07000000000001, 89.075, 89.08, 89.08500000000001, 89.09, 89.095, 89.10000000000001, 89.105, 89.11, 89.115, 89.12, 89.125, 89.13, 89.135, 89.14, 89.145, 89.15, 89.155, 89.16, 89.165, 89.17, 89.175, 89.18, 89.185, 89.19, 89.19500000000001, 89.2, 89.205, 89.21000000000001, 89.215, 89.22, 89.22500000000001, 89.23, 89.235, 89.24, 89.245, 89.25, 89.255, 89.26, 89.265, 89.27, 89.275, 89.28, 89.285, 89.29, 89.295, 89.3, 89.305, 89.31, 89.315, 89.32000000000001, 89.325, 89.33, 89.33500000000001, 89.34, 89.345, 89.35000000000001, 89.355, 89.36, 89.365, 89.37, 89.375, 89.38, 89.385, 89.39, 89.395, 89.4, 89.405, 89.41, 89.415, 89.42, 89.425, 89.43, 89.435, 89.44, 89.44500000000001, 89.45, 89.455, 89.46000000000001, 89.465, 89.47, 89.47500000000001, 89.48, 89.485, 89.49, 89.495, 89.5, 89.505, 89.51, 89.515, 89.52, 89.525, 89.53, 89.535, 89.54, 89.545, 89.55, 89.555, 89.56, 89.565, 89.57000000000001, 89.575, 89.58, 89.58500000000001, 89.59, 89.595, 89.60000000000001, 89.605, 89.61, 89.615, 89.62, 89.625, 89.63, 89.635, 89.64, 89.645, 89.65, 89.655, 89.66, 89.665, 89.67, 89.675, 89.68, 89.685, 89.69, 89.69500000000001, 89.7, 89.705, 89.71000000000001, 89.715, 89.72, 89.72500000000001, 89.73, 89.735, 89.74, 89.745, 89.75, 89.755, 89.76, 89.765, 89.77, 89.775, 89.78, 89.785, 89.79, 89.795, 89.8, 89.805, 89.81, 89.815, 89.82000000000001, 89.825, 89.83, 89.83500000000001, 89.84, 89.845, 89.85000000000001, 89.855, 89.86, 89.865, 89.87, 89.875, 89.88, 89.885, 89.89, 89.895, 89.9, 89.905, 89.91, 89.915, 89.92, 89.925, 89.93, 89.935, 89.94, 89.94500000000001, 89.95, 89.955, 89.96000000000001, 89.965, 89.97, 89.97500000000001, 89.98, 89.985, 89.99, 89.995])
ops.groundMotion(1139, 'Plain', *['-accel', 1141], '-fact', 9806.65)
ops.imposedMotion(4, 1, 1139)
ops.imposedMotion(4, 2, 1139)
ops.imposedMotion(4, 3, 1139)
ops.constraints(*['Transformation'])
ops.integrator(*['Newmark', 0.5, 0.25])
ops.numberer(*['RCM'])
ops.system(*['BandSPD'])
ops.test(*['NormDispIncr', 9, 10, 0, 2])
ops.algorithm(*['Newton', False, False, False])
ops.analysis('Transient')
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.wipe()
ops.node(4, *(0.0, 0.0, 0.0))
ops.mass(4, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(9, *(0.0, 0.0, 1000.0))
ops.mass(9, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(9, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(11, *(0.0, 0.0, 2000.0))
ops.mass(11, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(11, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(13, *(0.0, 0.0, 3000.0))
ops.mass(13, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(13, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(15, *(0.0, 0.0, 4000.0))
ops.mass(15, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(15, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(17, *(0.0, 0.0, 5000.0))
ops.mass(17, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(17, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(19, *(0.0, 0.0, 6000.0))
ops.mass(19, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(19, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(21, *(0.0, 0.0, 7000.0))
ops.mass(21, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(21, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(23, *(0.0, 0.0, 8000.0))
ops.mass(23, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(23, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(25, *(0.0, 0.0, 9000.0))
ops.mass(25, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(25, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(6, *(0.0, 0.0, 10000.0))
ops.mass(6, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(4, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(64, *(0.0, 0.0, -2500.0))
ops.mass(64, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(64, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(66, *(0.0, 0.0, -5000.0))
ops.mass(66, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(66, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(68, *(0.0, 0.0, -7500.0))
ops.mass(68, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(68, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(70, *(0.0, 0.0, -10000.0))
ops.mass(70, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(70, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(72, *(0.0, 0.0, -12500.0))
ops.mass(72, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(72, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(74, *(0.0, 0.0, -15000.0))
ops.mass(74, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(74, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(76, *(0.0, 0.0, -17500.0))
ops.mass(76, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(76, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(78, *(0.0, 0.0, -20000.0))
ops.mass(78, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(78, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(80, *(0.0, 0.0, -22500.0))
ops.mass(80, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.mass(80, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.node(62, *(0.0, 0.0, -25000.0))
ops.mass(62, 9424777.960769378, 9424777.960769378, 9424777.960769378)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.node(135, *(-1001.0, 2999.0, -27001.0))
ops.node(134, *(-3001.0, 2999.0, -27001.0))
ops.node(132, *(-3001.0, 999.0, -27001.0))
ops.node(133, *(-1001.0, 999.0, -27001.0))
ops.node(142, *(-1001.0, 2999.0, -25001.0))
ops.node(140, *(-3001.0, 2999.0, -25001.0))
ops.node(136, *(-3001.0, 999.0, -25001.0))
ops.node(138, *(-1001.0, 999.0, -25001.0))
ops.node(150, *(-1001.0, 2999.0, -22501.0))
ops.node(148, *(-3001.0, 2999.0, -22501.0))
ops.node(144, *(-3001.0, 999.0, -22501.0))
ops.node(146, *(-1001.0, 999.0, -22501.0))
ops.node(158, *(-1001.0, 2999.0, -20001.0))
ops.node(156, *(-3001.0, 2999.0, -20001.0))
ops.node(152, *(-3001.0, 999.0, -20001.0))
ops.node(154, *(-1001.0, 999.0, -20001.0))
ops.node(166, *(-1001.0, 2999.0, -17501.0))
ops.node(164, *(-3001.0, 2999.0, -17501.0))
ops.node(160, *(-3001.0, 999.0, -17501.0))
ops.node(162, *(-1001.0, 999.0, -17501.0))
ops.node(174, *(-1001.0, 2999.0, -15001.0))
ops.node(172, *(-3001.0, 2999.0, -15001.0))
ops.node(168, *(-3001.0, 999.0, -15001.0))
ops.node(170, *(-1001.0, 999.0, -15001.0))
ops.node(182, *(-1001.0, 2999.0, -12500.999999999998))
ops.node(180, *(-3001.0, 2999.0, -12500.999999999998))
ops.node(176, *(-3001.0, 999.0, -12500.999999999998))
ops.node(178, *(-1001.0, 999.0, -12500.999999999998))
ops.node(190, *(-1001.0, 2999.0, -10001.0))
ops.node(188, *(-3001.0, 2999.0, -10001.0))
ops.node(184, *(-3001.0, 999.0, -10001.0))
ops.node(186, *(-1001.0, 999.0, -10001.0))
ops.node(198, *(-1001.0, 2999.0, -7501.0))
ops.node(196, *(-3001.0, 2999.0, -7501.0))
ops.node(192, *(-3001.0, 999.0, -7501.0))
ops.node(194, *(-1001.0, 999.0, -7501.0))
ops.node(206, *(-1001.0, 2999.0, -5001.0))
ops.node(204, *(-3001.0, 2999.0, -5001.0))
ops.node(200, *(-3001.0, 999.0, -5001.0))
ops.node(202, *(-1001.0, 999.0, -5001.0))
ops.node(214, *(-1001.0, 2999.0, -2501.0))
ops.node(212, *(-3001.0, 2999.0, -2501.0))
ops.node(208, *(-3001.0, 999.0, -2501.0))
ops.node(210, *(-1001.0, 999.0, -2501.0))
ops.node(219, *(-1001.0, 2999.0, -1.0))
ops.node(218, *(-3001.0, 2999.0, -1.0))
ops.node(216, *(-3001.0, 999.0, -1.0))
ops.node(217, *(-1001.0, 999.0, -1.0))
ops.node(245, *(-1001.0, -1.0, -27001.0))
ops.node(243, *(-3001.0, -1.0, -27001.0))
ops.node(241, *(-3001.0, -1001.0, -27001.0))
ops.node(242, *(-1001.0, -1001.0, -27001.0))
ops.node(253, *(-1001.0, -1.0, -25001.0))
ops.node(251, *(-3001.0, -1.0, -25001.0))
ops.node(247, *(-3001.0, -1001.0, -25001.0))
ops.node(249, *(-1001.0, -1001.0, -25001.0))
ops.node(261, *(-1001.0, -1.0, -22501.0))
ops.node(259, *(-3001.0, -1.0, -22501.0))
ops.node(255, *(-3001.0, -1001.0, -22501.0))
ops.node(257, *(-1001.0, -1001.0, -22501.0))
ops.node(269, *(-1001.0, -1.0, -20001.0))
ops.node(267, *(-3001.0, -1.0, -20001.0))
ops.node(263, *(-3001.0, -1001.0, -20001.0))
ops.node(265, *(-1001.0, -1001.0, -20001.0))
ops.node(277, *(-1001.0, -1.0, -17501.0))
ops.node(275, *(-3001.0, -1.0, -17501.0))
ops.node(271, *(-3001.0, -1001.0, -17501.0))
ops.node(273, *(-1001.0, -1001.0, -17501.0))
ops.node(285, *(-1001.0, -1.0, -15001.0))
ops.node(283, *(-3001.0, -1.0, -15001.0))
ops.node(279, *(-3001.0, -1001.0, -15001.0))
ops.node(281, *(-1001.0, -1001.0, -15001.0))
ops.node(293, *(-1001.0, -1.0, -12500.999999999998))
ops.node(291, *(-3001.0, -1.0, -12500.999999999998))
ops.node(287, *(-3001.0, -1001.0, -12500.999999999998))
ops.node(289, *(-1001.0, -1001.0, -12500.999999999998))
ops.node(301, *(-1001.0, -1.0, -10001.0))
ops.node(299, *(-3001.0, -1.0, -10001.0))
ops.node(295, *(-3001.0, -1001.0, -10001.0))
ops.node(297, *(-1001.0, -1001.0, -10001.0))
ops.node(309, *(-1001.0, -1.0, -7501.0))
ops.node(307, *(-3001.0, -1.0, -7501.0))
ops.node(303, *(-3001.0, -1001.0, -7501.0))
ops.node(305, *(-1001.0, -1001.0, -7501.0))
ops.node(317, *(-1001.0, -1.0, -5001.0))
ops.node(315, *(-3001.0, -1.0, -5001.0))
ops.node(311, *(-3001.0, -1001.0, -5001.0))
ops.node(313, *(-1001.0, -1001.0, -5001.0))
ops.node(325, *(-1001.0, -1.0, -2501.0))
ops.node(323, *(-3001.0, -1.0, -2501.0))
ops.node(319, *(-3001.0, -1001.0, -2501.0))
ops.node(321, *(-1001.0, -1001.0, -2501.0))
ops.node(331, *(-1001.0, -1.0, -1.0))
ops.node(329, *(-3001.0, -1.0, -1.0))
ops.node(327, *(-3001.0, -1001.0, -1.0))
ops.node(328, *(-1001.0, -1001.0, -1.0))
ops.node(364, *(-3001.0, -3001.0, -27001.0))
ops.node(365, *(-1001.0, -3001.0, -27001.0))
ops.node(366, *(-3001.0, -3001.0, -25001.0))
ops.node(368, *(-1001.0, -3001.0, -25001.0))
ops.node(370, *(-3001.0, -3001.0, -22501.0))
ops.node(372, *(-1001.0, -3001.0, -22501.0))
ops.node(374, *(-3001.0, -3001.0, -20001.0))
ops.node(376, *(-1001.0, -3001.0, -20001.0))
ops.node(378, *(-3001.0, -3001.0, -17501.0))
ops.node(380, *(-1001.0, -3001.0, -17501.0))
ops.node(382, *(-3001.0, -3001.0, -15001.0))
ops.node(384, *(-1001.0, -3001.0, -15001.0))
ops.node(386, *(-3001.0, -3001.0, -12500.999999999998))
ops.node(388, *(-1001.0, -3001.0, -12500.999999999998))
ops.node(390, *(-3001.0, -3001.0, -10001.0))
ops.node(392, *(-1001.0, -3001.0, -10001.0))
ops.node(394, *(-3001.0, -3001.0, -7501.0))
ops.node(396, *(-1001.0, -3001.0, -7501.0))
ops.node(398, *(-3001.0, -3001.0, -5001.0))
ops.node(400, *(-1001.0, -3001.0, -5001.0))
ops.node(402, *(-3001.0, -3001.0, -2501.0))
ops.node(404, *(-1001.0, -3001.0, -2501.0))
ops.node(406, *(-3001.0, -3001.0, -1.0))
ops.node(407, *(-1001.0, -3001.0, -1.0))
ops.node(431, *(-1.0, -1001.0, -27001.0))
ops.node(428, *(-1.0, -3001.0, -27001.0))
ops.node(438, *(-1.0, -1001.0, -25001.0))
ops.node(434, *(-1.0, -3001.0, -25001.0))
ops.node(446, *(-1.0, -1001.0, -22501.0))
ops.node(442, *(-1.0, -3001.0, -22501.0))
ops.node(454, *(-1.0, -1001.0, -20001.0))
ops.node(450, *(-1.0, -3001.0, -20001.0))
ops.node(462, *(-1.0, -1001.0, -17501.0))
ops.node(458, *(-1.0, -3001.0, -17501.0))
ops.node(470, *(-1.0, -1001.0, -15001.0))
ops.node(466, *(-1.0, -3001.0, -15001.0))
ops.node(478, *(-1.0, -1001.0, -12500.999999999998))
ops.node(474, *(-1.0, -3001.0, -12500.999999999998))
ops.node(486, *(-1.0, -1001.0, -10001.0))
ops.node(482, *(-1.0, -3001.0, -10001.0))
ops.node(494, *(-1.0, -1001.0, -7501.0))
ops.node(490, *(-1.0, -3001.0, -7501.0))
ops.node(502, *(-1.0, -1001.0, -5001.0))
ops.node(498, *(-1.0, -3001.0, -5001.0))
ops.node(510, *(-1.0, -1001.0, -2501.0))
ops.node(506, *(-1.0, -3001.0, -2501.0))
ops.node(517, *(-1.0, -1001.0, -1.0))
ops.node(514, *(-1.0, -3001.0, -1.0))
ops.node(433, *(999.0, -1001.0, -27001.0))
ops.node(430, *(999.0, -3001.0, -27001.0))
ops.node(440, *(999.0, -1001.0, -25001.0))
ops.node(436, *(999.0, -3001.0, -25001.0))
ops.node(448, *(999.0, -1001.0, -22501.0))
ops.node(444, *(999.0, -3001.0, -22501.0))
ops.node(456, *(999.0, -1001.0, -20001.0))
ops.node(452, *(999.0, -3001.0, -20001.0))
ops.node(464, *(999.0, -1001.0, -17501.0))
ops.node(460, *(999.0, -3001.0, -17501.0))
ops.node(472, *(999.0, -1001.0, -15001.0))
ops.node(468, *(999.0, -3001.0, -15001.0))
ops.node(480, *(999.0, -1001.0, -12500.999999999998))
ops.node(476, *(999.0, -3001.0, -12500.999999999998))
ops.node(488, *(999.0, -1001.0, -10001.0))
ops.node(484, *(999.0, -3001.0, -10001.0))
ops.node(496, *(999.0, -1001.0, -7501.0))
ops.node(492, *(999.0, -3001.0, -7501.0))
ops.node(504, *(999.0, -1001.0, -5001.0))
ops.node(500, *(999.0, -3001.0, -5001.0))
ops.node(512, *(999.0, -1001.0, -2501.0))
ops.node(508, *(999.0, -3001.0, -2501.0))
ops.node(519, *(999.0, -1001.0, -1.0))
ops.node(516, *(999.0, -3001.0, -1.0))
ops.node(552, *(2999.0, -1001.0, -27001.0))
ops.node(551, *(2999.0, -3001.0, -27001.0))
ops.node(555, *(2999.0, -1001.0, -25001.0))
ops.node(553, *(2999.0, -3001.0, -25001.0))
ops.node(559, *(2999.0, -1001.0, -22501.0))
ops.node(557, *(2999.0, -3001.0, -22501.0))
ops.node(563, *(2999.0, -1001.0, -20001.0))
ops.node(561, *(2999.0, -3001.0, -20001.0))
ops.node(567, *(2999.0, -1001.0, -17501.0))
ops.node(565, *(2999.0, -3001.0, -17501.0))
ops.node(571, *(2999.0, -1001.0, -15001.0))
ops.node(569, *(2999.0, -3001.0, -15001.0))
ops.node(575, *(2999.0, -1001.0, -12500.999999999998))
ops.node(573, *(2999.0, -3001.0, -12500.999999999998))
ops.node(579, *(2999.0, -1001.0, -10001.0))
ops.node(577, *(2999.0, -3001.0, -10001.0))
ops.node(583, *(2999.0, -1001.0, -7501.0))
ops.node(581, *(2999.0, -3001.0, -7501.0))
ops.node(587, *(2999.0, -1001.0, -5001.0))
ops.node(585, *(2999.0, -3001.0, -5001.0))
ops.node(591, *(2999.0, -1001.0, -2501.0))
ops.node(589, *(2999.0, -3001.0, -2501.0))
ops.node(594, *(2999.0, -1001.0, -1.0))
ops.node(593, *(2999.0, -3001.0, -1.0))
ops.node(617, *(2999.0, -1.0, -27001.0))
ops.node(615, *(999.0, -1.0, -27001.0))
ops.node(623, *(2999.0, -1.0, -25001.0))
ops.node(621, *(999.0, -1.0, -25001.0))
ops.node(631, *(2999.0, -1.0, -22501.0))
ops.node(629, *(999.0, -1.0, -22501.0))
ops.node(639, *(2999.0, -1.0, -20001.0))
ops.node(637, *(999.0, -1.0, -20001.0))
ops.node(647, *(2999.0, -1.0, -17501.0))
ops.node(645, *(999.0, -1.0, -17501.0))
ops.node(655, *(2999.0, -1.0, -15001.0))
ops.node(653, *(999.0, -1.0, -15001.0))
ops.node(663, *(2999.0, -1.0, -12500.999999999998))
ops.node(661, *(999.0, -1.0, -12500.999999999998))
ops.node(671, *(2999.0, -1.0, -10001.0))
ops.node(669, *(999.0, -1.0, -10001.0))
ops.node(679, *(2999.0, -1.0, -7501.0))
ops.node(677, *(999.0, -1.0, -7501.0))
ops.node(687, *(2999.0, -1.0, -5001.0))
ops.node(685, *(999.0, -1.0, -5001.0))
ops.node(695, *(2999.0, -1.0, -2501.0))
ops.node(693, *(999.0, -1.0, -2501.0))
ops.node(703, *(2999.0, -1.0, -1.0))
ops.node(701, *(999.0, -1.0, -1.0))
ops.node(620, *(2999.0, 999.0, -27001.0))
ops.node(619, *(999.0, 999.0, -27001.0))
ops.node(627, *(2999.0, 999.0, -25001.0))
ops.node(625, *(999.0, 999.0, -25001.0))
ops.node(635, *(2999.0, 999.0, -22501.0))
ops.node(633, *(999.0, 999.0, -22501.0))
ops.node(643, *(2999.0, 999.0, -20001.0))
ops.node(641, *(999.0, 999.0, -20001.0))
ops.node(651, *(2999.0, 999.0, -17501.0))
ops.node(649, *(999.0, 999.0, -17501.0))
ops.node(659, *(2999.0, 999.0, -15001.0))
ops.node(657, *(999.0, 999.0, -15001.0))
ops.node(667, *(2999.0, 999.0, -12500.999999999998))
ops.node(665, *(999.0, 999.0, -12500.999999999998))
ops.node(675, *(2999.0, 999.0, -10001.0))
ops.node(673, *(999.0, 999.0, -10001.0))
ops.node(683, *(2999.0, 999.0, -7501.0))
ops.node(681, *(999.0, 999.0, -7501.0))
ops.node(691, *(2999.0, 999.0, -5001.0))
ops.node(689, *(999.0, 999.0, -5001.0))
ops.node(699, *(2999.0, 999.0, -2501.0))
ops.node(697, *(999.0, 999.0, -2501.0))
ops.node(706, *(2999.0, 999.0, -1.0))
ops.node(705, *(999.0, 999.0, -1.0))
ops.node(739, *(2999.0, 2999.0, -27001.0))
ops.node(738, *(999.0, 2999.0, -27001.0))
ops.node(742, *(2999.0, 2999.0, -25001.0))
ops.node(740, *(999.0, 2999.0, -25001.0))
ops.node(746, *(2999.0, 2999.0, -22501.0))
ops.node(744, *(999.0, 2999.0, -22501.0))
ops.node(750, *(2999.0, 2999.0, -20001.0))
ops.node(748, *(999.0, 2999.0, -20001.0))
ops.node(754, *(2999.0, 2999.0, -17501.0))
ops.node(752, *(999.0, 2999.0, -17501.0))
ops.node(758, *(2999.0, 2999.0, -15001.0))
ops.node(756, *(999.0, 2999.0, -15001.0))
ops.node(762, *(2999.0, 2999.0, -12500.999999999998))
ops.node(760, *(999.0, 2999.0, -12500.999999999998))
ops.node(766, *(2999.0, 2999.0, -10001.0))
ops.node(764, *(999.0, 2999.0, -10001.0))
ops.node(770, *(2999.0, 2999.0, -7501.0))
ops.node(768, *(999.0, 2999.0, -7501.0))
ops.node(774, *(2999.0, 2999.0, -5001.0))
ops.node(772, *(999.0, 2999.0, -5001.0))
ops.node(778, *(2999.0, 2999.0, -2501.0))
ops.node(776, *(999.0, 2999.0, -2501.0))
ops.node(781, *(2999.0, 2999.0, -1.0))
ops.node(780, *(999.0, 2999.0, -1.0))
ops.node(796, *(-1.0, 2999.0, -27001.0))
ops.node(794, *(-1.0, 999.0, -27001.0))
ops.node(800, *(-1.0, 2999.0, -25001.0))
ops.node(798, *(-1.0, 999.0, -25001.0))
ops.node(804, *(-1.0, 2999.0, -22501.0))
ops.node(802, *(-1.0, 999.0, -22501.0))
ops.node(808, *(-1.0, 2999.0, -20001.0))
ops.node(806, *(-1.0, 999.0, -20001.0))
ops.node(812, *(-1.0, 2999.0, -17501.0))
ops.node(810, *(-1.0, 999.0, -17501.0))
ops.node(816, *(-1.0, 2999.0, -15001.0))
ops.node(814, *(-1.0, 999.0, -15001.0))
ops.node(820, *(-1.0, 2999.0, -12500.999999999998))
ops.node(818, *(-1.0, 999.0, -12500.999999999998))
ops.node(824, *(-1.0, 2999.0, -10001.0))
ops.node(822, *(-1.0, 999.0, -10001.0))
ops.node(828, *(-1.0, 2999.0, -7501.0))
ops.node(826, *(-1.0, 999.0, -7501.0))
ops.node(832, *(-1.0, 2999.0, -5001.0))
ops.node(830, *(-1.0, 999.0, -5001.0))
ops.node(836, *(-1.0, 2999.0, -2501.0))
ops.node(834, *(-1.0, 999.0, -2501.0))
ops.node(840, *(-1.0, 2999.0, -1.0))
ops.node(838, *(-1.0, 999.0, -1.0))
ops.node(865, *(-1.0, -1.0, -27001.0))
ops.node(867, *(-1.0, -1.0, -25001.0))
ops.node(869, *(-1.0, -1.0, -22501.0))
ops.node(871, *(-1.0, -1.0, -20001.0))
ops.node(873, *(-1.0, -1.0, -17501.0))
ops.node(875, *(-1.0, -1.0, -15001.0))
ops.node(877, *(-1.0, -1.0, -12500.999999999998))
ops.node(879, *(-1.0, -1.0, -10001.0))
ops.node(881, *(-1.0, -1.0, -7501.0))
ops.node(883, *(-1.0, -1.0, -5001.0))
ops.node(885, *(-1.0, -1.0, -2501.0))
ops.node(887, *(-1.0, -1.0, -1.0))
ops.fix(62, *[1, 1, 1, 1, 1, 1])
ops.uniaxialMaterial("PySimple1", 1098, 2, 221850000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1099, 2, 166041814.26043934, 166.66666666666666, c=0.0)
ops.fix(132, *[1, 1, 1, 1, 1, 1])
ops.fix(134, *[1, 1, 1, 1, 1, 1])
ops.fix(133, *[1, 1, 1, 1, 1, 1])
ops.fix(135, *[1, 1, 1, 1, 1, 1])
ops.fix(241, *[1, 1, 1, 1, 1, 1])
ops.fix(243, *[1, 1, 1, 1, 1, 1])
ops.fix(242, *[1, 1, 1, 1, 1, 1])
ops.fix(245, *[1, 1, 1, 1, 1, 1])
ops.fix(364, *[1, 1, 1, 1, 1, 1])
ops.fix(365, *[1, 1, 1, 1, 1, 1])
ops.fix(428, *[1, 1, 1, 1, 1, 1])
ops.fix(431, *[1, 1, 1, 1, 1, 1])
ops.fix(430, *[1, 1, 1, 1, 1, 1])
ops.fix(433, *[1, 1, 1, 1, 1, 1])
ops.fix(551, *[1, 1, 1, 1, 1, 1])
ops.fix(552, *[1, 1, 1, 1, 1, 1])
ops.fix(615, *[1, 1, 1, 1, 1, 1])
ops.fix(619, *[1, 1, 1, 1, 1, 1])
ops.fix(617, *[1, 1, 1, 1, 1, 1])
ops.fix(620, *[1, 1, 1, 1, 1, 1])
ops.fix(738, *[1, 1, 1, 1, 1, 1])
ops.fix(739, *[1, 1, 1, 1, 1, 1])
ops.fix(794, *[1, 1, 1, 1, 1, 1])
ops.fix(796, *[1, 1, 1, 1, 1, 1])
ops.fix(865, *[1, 1, 1, 1, 1, 1])
ops.equalDOF(140, 366, *[1, 2, 3])
ops.equalDOF(140, 742, *[1, 2, 3])
ops.equalDOF(366, 553, *[1, 2, 3])
ops.equalDOF(148, 370, *[1, 2, 3])
ops.equalDOF(148, 746, *[1, 2, 3])
ops.equalDOF(370, 557, *[1, 2, 3])
ops.equalDOF(156, 374, *[1, 2, 3])
ops.equalDOF(156, 750, *[1, 2, 3])
ops.equalDOF(374, 561, *[1, 2, 3])
ops.equalDOF(164, 378, *[1, 2, 3])
ops.equalDOF(164, 754, *[1, 2, 3])
ops.equalDOF(378, 565, *[1, 2, 3])
ops.equalDOF(172, 382, *[1, 2, 3])
ops.equalDOF(172, 758, *[1, 2, 3])
ops.equalDOF(382, 569, *[1, 2, 3])
ops.equalDOF(180, 386, *[1, 2, 3])
ops.equalDOF(180, 762, *[1, 2, 3])
ops.equalDOF(386, 573, *[1, 2, 3])
ops.equalDOF(188, 390, *[1, 2, 3])
ops.equalDOF(188, 766, *[1, 2, 3])
ops.equalDOF(390, 577, *[1, 2, 3])
ops.equalDOF(196, 394, *[1, 2, 3])
ops.equalDOF(196, 770, *[1, 2, 3])
ops.equalDOF(394, 581, *[1, 2, 3])
ops.equalDOF(204, 398, *[1, 2, 3])
ops.equalDOF(204, 774, *[1, 2, 3])
ops.equalDOF(398, 585, *[1, 2, 3])
ops.equalDOF(212, 402, *[1, 2, 3])
ops.equalDOF(212, 778, *[1, 2, 3])
ops.equalDOF(402, 589, *[1, 2, 3])
ops.equalDOF(218, 406, *[1, 2, 3])
ops.equalDOF(218, 781, *[1, 2, 3])
ops.equalDOF(406, 593, *[1, 2, 3])
ops.equalDOF(142, 368, *[1, 2, 3])
ops.equalDOF(150, 372, *[1, 2, 3])
ops.equalDOF(158, 376, *[1, 2, 3])
ops.equalDOF(166, 380, *[1, 2, 3])
ops.equalDOF(174, 384, *[1, 2, 3])
ops.equalDOF(182, 388, *[1, 2, 3])
ops.equalDOF(190, 392, *[1, 2, 3])
ops.equalDOF(198, 396, *[1, 2, 3])
ops.equalDOF(206, 400, *[1, 2, 3])
ops.equalDOF(214, 404, *[1, 2, 3])
ops.equalDOF(219, 407, *[1, 2, 3])
ops.equalDOF(800, 434, *[1, 2, 3])
ops.equalDOF(804, 442, *[1, 2, 3])
ops.equalDOF(808, 450, *[1, 2, 3])
ops.equalDOF(812, 458, *[1, 2, 3])
ops.equalDOF(816, 466, *[1, 2, 3])
ops.equalDOF(820, 474, *[1, 2, 3])
ops.equalDOF(824, 482, *[1, 2, 3])
ops.equalDOF(828, 490, *[1, 2, 3])
ops.equalDOF(832, 498, *[1, 2, 3])
ops.equalDOF(836, 506, *[1, 2, 3])
ops.equalDOF(840, 514, *[1, 2, 3])
ops.equalDOF(740, 436, *[1, 2, 3])
ops.equalDOF(744, 444, *[1, 2, 3])
ops.equalDOF(748, 452, *[1, 2, 3])
ops.equalDOF(752, 460, *[1, 2, 3])
ops.equalDOF(756, 468, *[1, 2, 3])
ops.equalDOF(760, 476, *[1, 2, 3])
ops.equalDOF(764, 484, *[1, 2, 3])
ops.equalDOF(768, 492, *[1, 2, 3])
ops.equalDOF(772, 500, *[1, 2, 3])
ops.equalDOF(776, 508, *[1, 2, 3])
ops.equalDOF(780, 516, *[1, 2, 3])
ops.equalDOF(742, 553, *[1, 2, 3])
ops.equalDOF(746, 557, *[1, 2, 3])
ops.equalDOF(750, 561, *[1, 2, 3])
ops.equalDOF(754, 565, *[1, 2, 3])
ops.equalDOF(758, 569, *[1, 2, 3])
ops.equalDOF(762, 573, *[1, 2, 3])
ops.equalDOF(766, 577, *[1, 2, 3])
ops.equalDOF(770, 581, *[1, 2, 3])
ops.equalDOF(774, 585, *[1, 2, 3])
ops.equalDOF(778, 589, *[1, 2, 3])
ops.equalDOF(781, 593, *[1, 2, 3])
ops.equalDOF(136, 627, *[1, 2, 3])
ops.equalDOF(144, 635, *[1, 2, 3])
ops.equalDOF(152, 643, *[1, 2, 3])
ops.equalDOF(160, 651, *[1, 2, 3])
ops.equalDOF(168, 659, *[1, 2, 3])
ops.equalDOF(176, 667, *[1, 2, 3])
ops.equalDOF(184, 675, *[1, 2, 3])
ops.equalDOF(192, 683, *[1, 2, 3])
ops.equalDOF(200, 691, *[1, 2, 3])
ops.equalDOF(208, 699, *[1, 2, 3])
ops.equalDOF(216, 706, *[1, 2, 3])
ops.equalDOF(247, 555, *[1, 2, 3])
ops.equalDOF(255, 559, *[1, 2, 3])
ops.equalDOF(263, 563, *[1, 2, 3])
ops.equalDOF(271, 567, *[1, 2, 3])
ops.equalDOF(279, 571, *[1, 2, 3])
ops.equalDOF(287, 575, *[1, 2, 3])
ops.equalDOF(295, 579, *[1, 2, 3])
ops.equalDOF(303, 583, *[1, 2, 3])
ops.equalDOF(311, 587, *[1, 2, 3])
ops.equalDOF(319, 591, *[1, 2, 3])
ops.equalDOF(327, 594, *[1, 2, 3])
ops.equalDOF(251, 623, *[1, 2, 3])
ops.equalDOF(259, 631, *[1, 2, 3])
ops.equalDOF(267, 639, *[1, 2, 3])
ops.equalDOF(275, 647, *[1, 2, 3])
ops.equalDOF(283, 655, *[1, 2, 3])
ops.equalDOF(291, 663, *[1, 2, 3])
ops.equalDOF(299, 671, *[1, 2, 3])
ops.equalDOF(307, 679, *[1, 2, 3])
ops.equalDOF(315, 687, *[1, 2, 3])
ops.equalDOF(323, 695, *[1, 2, 3])
ops.equalDOF(329, 703, *[1, 2, 3])
ops.equalDOF(62, 867, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1102, 2, 199665000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1103, 2, 149437632.83439538, 166.66666666666666, c=0.0)
ops.equalDOF(80, 869, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1106, 2, 177480000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1107, 2, 132833451.40835148, 166.66666666666666, c=0.0)
ops.equalDOF(78, 871, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1110, 2, 155295000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1111, 2, 116229269.98230754, 166.66666666666666, c=0.0)
ops.equalDOF(76, 873, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1114, 2, 133110000.00000003, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1115, 2, 99625088.55626363, 166.66666666666666, c=0.0)
ops.equalDOF(74, 875, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1118, 2, 110925000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1119, 2, 83020907.13021967, 166.66666666666666, c=0.0)
ops.equalDOF(72, 877, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1122, 2, 88740000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1123, 2, 66416725.70417574, 166.66666666666666, c=0.0)
ops.equalDOF(70, 879, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1126, 2, 66555000.000000015, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1127, 2, 49812544.27813181, 166.66666666666666, c=0.0)
ops.equalDOF(68, 881, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1130, 2, 44370000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1131, 2, 33208362.85208787, 166.66666666666666, c=0.0)
ops.equalDOF(66, 883, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1134, 2, 22185000.0, 5.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1135, 2, 16604181.426043935, 166.66666666666666, c=0.0)
ops.equalDOF(64, 885, *[1, 2, 3])
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.section("Fiber", 30, '-GJ', 9.572040116406401e+24)
ops.uniaxialMaterial("Steel02", 29, 370000000000.0, 200000000000000.0, 0.01, 15, 0.925, 0.15)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.uniaxialMaterial("Concrete02", 28, 31600000000.0, 0.0019446153846153847, 6320000000.0, 0.004, 0.1, -4740000000.0, -2370000000000.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.geomTransf("Linear", 32, *[-1.0, 0.0, 0.0])
ops.element("elasticBeamColumn", 33, 4, 9, 30, 32)
ops.section("Fiber", 34, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 36, 9, 11, 34, 32)
ops.section("Fiber", 37, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 39, 11, 13, 37, 32)
ops.section("Fiber", 40, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 42, 13, 15, 40, 32)
ops.section("Fiber", 43, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 45, 15, 17, 43, 32)
ops.section("Fiber", 46, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 48, 17, 19, 46, 32)
ops.section("Fiber", 49, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 51, 19, 21, 49, 32)
ops.section("Fiber", 52, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 54, 21, 23, 52, 32)
ops.section("Fiber", 55, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 57, 23, 25, 55, 32)
ops.section("Fiber", 58, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 490.9, 0, 0, 550.0)
ops.layer("circ", 29, 28, 490.9, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 60, 25, 6, 58, 32)
ops.section("Fiber", 83, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 85, 4, 64, 83, 32)
ops.section("Fiber", 86, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 88, 64, 66, 86, 32)
ops.section("Fiber", 89, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 91, 66, 68, 89, 32)
ops.section("Fiber", 92, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 94, 68, 70, 92, 32)
ops.section("Fiber", 95, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 97, 70, 72, 95, 32)
ops.section("Fiber", 98, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 100, 72, 74, 98, 32)
ops.section("Fiber", 101, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 103, 74, 76, 101, 32)
ops.section("Fiber", 104, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 106, 76, 78, 104, 32)
ops.section("Fiber", 107, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 109, 78, 80, 107, 32)
ops.section("Fiber", 110, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 112, 80, 62, 110, 32)
ops.element('zeroLength', 1101, 62, 62, '-mat', *[1098, 1098, 1099], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1105, 80, 80, '-mat', *[1102, 1102, 1103], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1109, 78, 78, '-mat', *[1106, 1106, 1107], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1113, 76, 76, '-mat', *[1110, 1110, 1111], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1117, 74, 74, '-mat', *[1114, 1114, 1115], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1121, 72, 72, '-mat', *[1118, 1118, 1119], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1125, 70, 70, '-mat', *[1122, 1122, 1123], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1129, 68, 68, '-mat', *[1126, 1126, 1127], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1133, 66, 66, '-mat', *[1130, 1130, 1131], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1137, 64, 64, '-mat', *[1134, 1134, 1135], '-dir', *[1, 2, 3])
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.nDMaterial("PressureDependMultiYield", 220, 3, 0.017, 55000000000.0, 150000000000.0, 29, 0.1, 80000000.0, 0.5, 29, 0.21, *[0, 0], *[10000000.0, 0.02, 1])
ops.element("stdBrick", 221, *[135, 134, 132, 133, 142, 140, 136, 138], 220)
ops.element("stdBrick", 222, *[142, 140, 136, 138, 150, 148, 144, 146], 220)
ops.element("stdBrick", 223, *[150, 148, 144, 146, 158, 156, 152, 154], 220)
ops.element("stdBrick", 224, *[158, 156, 152, 154, 166, 164, 160, 162], 220)
ops.element("stdBrick", 225, *[166, 164, 160, 162, 174, 172, 168, 170], 220)
ops.element("stdBrick", 226, *[174, 172, 168, 170, 182, 180, 176, 178], 220)
ops.element("stdBrick", 227, *[182, 180, 176, 178, 190, 188, 184, 186], 220)
ops.element("stdBrick", 228, *[190, 188, 184, 186, 198, 196, 192, 194], 220)
ops.element("stdBrick", 229, *[198, 196, 192, 194, 206, 204, 200, 202], 220)
ops.element("stdBrick", 230, *[206, 204, 200, 202, 214, 212, 208, 210], 220)
ops.element("stdBrick", 231, *[214, 212, 208, 210, 219, 218, 216, 217], 220)
ops.element("stdBrick", 333, *[245, 243, 241, 242, 253, 251, 247, 249], 220)
ops.element("stdBrick", 334, *[253, 251, 247, 249, 261, 259, 255, 257], 220)
ops.element("stdBrick", 335, *[261, 259, 255, 257, 269, 267, 263, 265], 220)
ops.element("stdBrick", 336, *[269, 267, 263, 265, 277, 275, 271, 273], 220)
ops.element("stdBrick", 337, *[277, 275, 271, 273, 285, 283, 279, 281], 220)
ops.element("stdBrick", 338, *[285, 283, 279, 281, 293, 291, 287, 289], 220)
ops.element("stdBrick", 339, *[293, 291, 287, 289, 301, 299, 295, 297], 220)
ops.element("stdBrick", 340, *[301, 299, 295, 297, 309, 307, 303, 305], 220)
ops.element("stdBrick", 341, *[309, 307, 303, 305, 317, 315, 311, 313], 220)
ops.element("stdBrick", 342, *[317, 315, 311, 313, 325, 323, 319, 321], 220)
ops.element("stdBrick", 343, *[325, 323, 319, 321, 331, 329, 327, 328], 220)
ops.element("stdBrick", 344, *[133, 132, 243, 245, 138, 136, 251, 253], 220)
ops.element("stdBrick", 345, *[138, 136, 251, 253, 146, 144, 259, 261], 220)
ops.element("stdBrick", 346, *[146, 144, 259, 261, 154, 152, 267, 269], 220)
ops.element("stdBrick", 347, *[154, 152, 267, 269, 162, 160, 275, 277], 220)
ops.element("stdBrick", 348, *[162, 160, 275, 277, 170, 168, 283, 285], 220)
ops.element("stdBrick", 349, *[170, 168, 283, 285, 178, 176, 291, 293], 220)
ops.element("stdBrick", 350, *[178, 176, 291, 293, 186, 184, 299, 301], 220)
ops.element("stdBrick", 351, *[186, 184, 299, 301, 194, 192, 307, 309], 220)
ops.element("stdBrick", 352, *[194, 192, 307, 309, 202, 200, 315, 317], 220)
ops.element("stdBrick", 353, *[202, 200, 315, 317, 210, 208, 323, 325], 220)
ops.element("stdBrick", 354, *[210, 208, 323, 325, 217, 216, 329, 331], 220)
ops.element("stdBrick", 408, *[242, 241, 364, 365, 249, 247, 366, 368], 220)
ops.element("stdBrick", 409, *[249, 247, 366, 368, 257, 255, 370, 372], 220)
ops.element("stdBrick", 410, *[257, 255, 370, 372, 265, 263, 374, 376], 220)
ops.element("stdBrick", 411, *[265, 263, 374, 376, 273, 271, 378, 380], 220)
ops.element("stdBrick", 412, *[273, 271, 378, 380, 281, 279, 382, 384], 220)
ops.element("stdBrick", 413, *[281, 279, 382, 384, 289, 287, 386, 388], 220)
ops.element("stdBrick", 414, *[289, 287, 386, 388, 297, 295, 390, 392], 220)
ops.element("stdBrick", 415, *[297, 295, 390, 392, 305, 303, 394, 396], 220)
ops.element("stdBrick", 416, *[305, 303, 394, 396, 313, 311, 398, 400], 220)
ops.element("stdBrick", 417, *[313, 311, 398, 400, 321, 319, 402, 404], 220)
ops.element("stdBrick", 418, *[321, 319, 402, 404, 328, 327, 406, 407], 220)
ops.element("stdBrick", 520, *[431, 242, 365, 428, 438, 249, 368, 434], 220)
ops.element("stdBrick", 521, *[438, 249, 368, 434, 446, 257, 372, 442], 220)
ops.element("stdBrick", 522, *[446, 257, 372, 442, 454, 265, 376, 450], 220)
ops.element("stdBrick", 523, *[454, 265, 376, 450, 462, 273, 380, 458], 220)
ops.element("stdBrick", 524, *[462, 273, 380, 458, 470, 281, 384, 466], 220)
ops.element("stdBrick", 525, *[470, 281, 384, 466, 478, 289, 388, 474], 220)
ops.element("stdBrick", 526, *[478, 289, 388, 474, 486, 297, 392, 482], 220)
ops.element("stdBrick", 527, *[486, 297, 392, 482, 494, 305, 396, 490], 220)
ops.element("stdBrick", 528, *[494, 305, 396, 490, 502, 313, 400, 498], 220)
ops.element("stdBrick", 529, *[502, 313, 400, 498, 510, 321, 404, 506], 220)
ops.element("stdBrick", 530, *[510, 321, 404, 506, 517, 328, 407, 514], 220)
ops.element("stdBrick", 531, *[433, 431, 428, 430, 440, 438, 434, 436], 220)
ops.element("stdBrick", 532, *[440, 438, 434, 436, 448, 446, 442, 444], 220)
ops.element("stdBrick", 533, *[448, 446, 442, 444, 456, 454, 450, 452], 220)
ops.element("stdBrick", 534, *[456, 454, 450, 452, 464, 462, 458, 460], 220)
ops.element("stdBrick", 535, *[464, 462, 458, 460, 472, 470, 466, 468], 220)
ops.element("stdBrick", 536, *[472, 470, 466, 468, 480, 478, 474, 476], 220)
ops.element("stdBrick", 537, *[480, 478, 474, 476, 488, 486, 482, 484], 220)
ops.element("stdBrick", 538, *[488, 486, 482, 484, 496, 494, 490, 492], 220)
ops.element("stdBrick", 539, *[496, 494, 490, 492, 504, 502, 498, 500], 220)
ops.element("stdBrick", 540, *[504, 502, 498, 500, 512, 510, 506, 508], 220)
ops.element("stdBrick", 541, *[512, 510, 506, 508, 519, 517, 514, 516], 220)
ops.element("stdBrick", 595, *[552, 433, 430, 551, 555, 440, 436, 553], 220)
ops.element("stdBrick", 596, *[555, 440, 436, 553, 559, 448, 444, 557], 220)
ops.element("stdBrick", 597, *[559, 448, 444, 557, 563, 456, 452, 561], 220)
ops.element("stdBrick", 598, *[563, 456, 452, 561, 567, 464, 460, 565], 220)
ops.element("stdBrick", 599, *[567, 464, 460, 565, 571, 472, 468, 569], 220)
ops.element("stdBrick", 600, *[571, 472, 468, 569, 575, 480, 476, 573], 220)
ops.element("stdBrick", 601, *[575, 480, 476, 573, 579, 488, 484, 577], 220)
ops.element("stdBrick", 602, *[579, 488, 484, 577, 583, 496, 492, 581], 220)
ops.element("stdBrick", 603, *[583, 496, 492, 581, 587, 504, 500, 585], 220)
ops.element("stdBrick", 604, *[587, 504, 500, 585, 591, 512, 508, 589], 220)
ops.element("stdBrick", 605, *[591, 512, 508, 589, 594, 519, 516, 593], 220)
ops.element("stdBrick", 707, *[617, 615, 433, 552, 623, 621, 440, 555], 220)
ops.element("stdBrick", 708, *[623, 621, 440, 555, 631, 629, 448, 559], 220)
ops.element("stdBrick", 709, *[631, 629, 448, 559, 639, 637, 456, 563], 220)
ops.element("stdBrick", 710, *[639, 637, 456, 563, 647, 645, 464, 567], 220)
ops.element("stdBrick", 711, *[647, 645, 464, 567, 655, 653, 472, 571], 220)
ops.element("stdBrick", 712, *[655, 653, 472, 571, 663, 661, 480, 575], 220)
ops.element("stdBrick", 713, *[663, 661, 480, 575, 671, 669, 488, 579], 220)
ops.element("stdBrick", 714, *[671, 669, 488, 579, 679, 677, 496, 583], 220)
ops.element("stdBrick", 715, *[679, 677, 496, 583, 687, 685, 504, 587], 220)
ops.element("stdBrick", 716, *[687, 685, 504, 587, 695, 693, 512, 591], 220)
ops.element("stdBrick", 717, *[695, 693, 512, 591, 703, 701, 519, 594], 220)
ops.element("stdBrick", 718, *[620, 619, 615, 617, 627, 625, 621, 623], 220)
ops.element("stdBrick", 719, *[627, 625, 621, 623, 635, 633, 629, 631], 220)
ops.element("stdBrick", 720, *[635, 633, 629, 631, 643, 641, 637, 639], 220)
ops.element("stdBrick", 721, *[643, 641, 637, 639, 651, 649, 645, 647], 220)
ops.element("stdBrick", 722, *[651, 649, 645, 647, 659, 657, 653, 655], 220)
ops.element("stdBrick", 723, *[659, 657, 653, 655, 667, 665, 661, 663], 220)
ops.element("stdBrick", 724, *[667, 665, 661, 663, 675, 673, 669, 671], 220)
ops.element("stdBrick", 725, *[675, 673, 669, 671, 683, 681, 677, 679], 220)
ops.element("stdBrick", 726, *[683, 681, 677, 679, 691, 689, 685, 687], 220)
ops.element("stdBrick", 727, *[691, 689, 685, 687, 699, 697, 693, 695], 220)
ops.element("stdBrick", 728, *[699, 697, 693, 695, 706, 705, 701, 703], 220)
ops.element("stdBrick", 782, *[739, 738, 619, 620, 742, 740, 625, 627], 220)
ops.element("stdBrick", 783, *[742, 740, 625, 627, 746, 744, 633, 635], 220)
ops.element("stdBrick", 784, *[746, 744, 633, 635, 750, 748, 641, 643], 220)
ops.element("stdBrick", 785, *[750, 748, 641, 643, 754, 752, 649, 651], 220)
ops.element("stdBrick", 786, *[754, 752, 649, 651, 758, 756, 657, 659], 220)
ops.element("stdBrick", 787, *[758, 756, 657, 659, 762, 760, 665, 667], 220)
ops.element("stdBrick", 788, *[762, 760, 665, 667, 766, 764, 673, 675], 220)
ops.element("stdBrick", 789, *[766, 764, 673, 675, 770, 768, 681, 683], 220)
ops.element("stdBrick", 790, *[770, 768, 681, 683, 774, 772, 689, 691], 220)
ops.element("stdBrick", 791, *[774, 772, 689, 691, 778, 776, 697, 699], 220)
ops.element("stdBrick", 792, *[778, 776, 697, 699, 781, 780, 705, 706], 220)
ops.element("stdBrick", 842, *[796, 135, 133, 794, 800, 142, 138, 798], 220)
ops.element("stdBrick", 843, *[800, 142, 138, 798, 804, 150, 146, 802], 220)
ops.element("stdBrick", 844, *[804, 150, 146, 802, 808, 158, 154, 806], 220)
ops.element("stdBrick", 845, *[808, 158, 154, 806, 812, 166, 162, 810], 220)
ops.element("stdBrick", 846, *[812, 166, 162, 810, 816, 174, 170, 814], 220)
ops.element("stdBrick", 847, *[816, 174, 170, 814, 820, 182, 178, 818], 220)
ops.element("stdBrick", 848, *[820, 182, 178, 818, 824, 190, 186, 822], 220)
ops.element("stdBrick", 849, *[824, 190, 186, 822, 828, 198, 194, 826], 220)
ops.element("stdBrick", 850, *[828, 198, 194, 826, 832, 206, 202, 830], 220)
ops.element("stdBrick", 851, *[832, 206, 202, 830, 836, 214, 210, 834], 220)
ops.element("stdBrick", 852, *[836, 214, 210, 834, 840, 219, 217, 838], 220)
ops.element("stdBrick", 853, *[738, 796, 794, 619, 740, 800, 798, 625], 220)
ops.element("stdBrick", 854, *[740, 800, 798, 625, 744, 804, 802, 633], 220)
ops.element("stdBrick", 855, *[744, 804, 802, 633, 748, 808, 806, 641], 220)
ops.element("stdBrick", 856, *[748, 808, 806, 641, 752, 812, 810, 649], 220)
ops.element("stdBrick", 857, *[752, 812, 810, 649, 756, 816, 814, 657], 220)
ops.element("stdBrick", 858, *[756, 816, 814, 657, 760, 820, 818, 665], 220)
ops.element("stdBrick", 859, *[760, 820, 818, 665, 764, 824, 822, 673], 220)
ops.element("stdBrick", 860, *[764, 824, 822, 673, 768, 828, 826, 681], 220)
ops.element("stdBrick", 861, *[768, 828, 826, 681, 772, 832, 830, 689], 220)
ops.element("stdBrick", 862, *[772, 832, 830, 689, 776, 836, 834, 697], 220)
ops.element("stdBrick", 863, *[776, 836, 834, 697, 780, 840, 838, 705], 220)
ops.element("stdBrick", 889, *[865, 245, 242, 431, 867, 253, 249, 438], 220)
ops.element("stdBrick", 890, *[867, 253, 249, 438, 869, 261, 257, 446], 220)
ops.element("stdBrick", 891, *[869, 261, 257, 446, 871, 269, 265, 454], 220)
ops.element("stdBrick", 892, *[871, 269, 265, 454, 873, 277, 273, 462], 220)
ops.element("stdBrick", 893, *[873, 277, 273, 462, 875, 285, 281, 470], 220)
ops.element("stdBrick", 894, *[875, 285, 281, 470, 877, 293, 289, 478], 220)
ops.element("stdBrick", 895, *[877, 293, 289, 478, 879, 301, 297, 486], 220)
ops.element("stdBrick", 896, *[879, 301, 297, 486, 881, 309, 305, 494], 220)
ops.element("stdBrick", 897, *[881, 309, 305, 494, 883, 317, 313, 502], 220)
ops.element("stdBrick", 898, *[883, 317, 313, 502, 885, 325, 321, 510], 220)
ops.element("stdBrick", 899, *[885, 325, 321, 510, 887, 331, 328, 517], 220)
ops.element("stdBrick", 900, *[794, 133, 245, 865, 798, 138, 253, 867], 220)
ops.element("stdBrick", 901, *[798, 138, 253, 867, 802, 146, 261, 869], 220)
ops.element("stdBrick", 902, *[802, 146, 261, 869, 806, 154, 269, 871], 220)
ops.element("stdBrick", 903, *[806, 154, 269, 871, 810, 162, 277, 873], 220)
ops.element("stdBrick", 904, *[810, 162, 277, 873, 814, 170, 285, 875], 220)
ops.element("stdBrick", 905, *[814, 170, 285, 875, 818, 178, 293, 877], 220)
ops.element("stdBrick", 906, *[818, 178, 293, 877, 822, 186, 301, 879], 220)
ops.element("stdBrick", 907, *[822, 186, 301, 879, 826, 194, 309, 881], 220)
ops.element("stdBrick", 908, *[826, 194, 309, 881, 830, 202, 317, 883], 220)
ops.element("stdBrick", 909, *[830, 202, 317, 883, 834, 210, 325, 885], 220)
ops.element("stdBrick", 910, *[834, 210, 325, 885, 838, 217, 331, 887], 220)
ops.element("stdBrick", 911, *[615, 865, 431, 433, 621, 867, 438, 440], 220)
ops.element("stdBrick", 912, *[621, 867, 438, 440, 629, 869, 446, 448], 220)
ops.element("stdBrick", 913, *[629, 869, 446, 448, 637, 871, 454, 456], 220)
ops.element("stdBrick", 914, *[637, 871, 454, 456, 645, 873, 462, 464], 220)
ops.element("stdBrick", 915, *[645, 873, 462, 464, 653, 875, 470, 472], 220)
ops.element("stdBrick", 916, *[653, 875, 470, 472, 661, 877, 478, 480], 220)
ops.element("stdBrick", 917, *[661, 877, 478, 480, 669, 879, 486, 488], 220)
ops.element("stdBrick", 918, *[669, 879, 486, 488, 677, 881, 494, 496], 220)
ops.element("stdBrick", 919, *[677, 881, 494, 496, 685, 883, 502, 504], 220)
ops.element("stdBrick", 920, *[685, 883, 502, 504, 693, 885, 510, 512], 220)
ops.element("stdBrick", 921, *[693, 885, 510, 512, 701, 887, 517, 519], 220)
ops.element("stdBrick", 922, *[619, 794, 865, 615, 625, 798, 867, 621], 220)
ops.element("stdBrick", 923, *[625, 798, 867, 621, 633, 802, 869, 629], 220)
ops.element("stdBrick", 924, *[633, 802, 869, 629, 641, 806, 871, 637], 220)
ops.element("stdBrick", 925, *[641, 806, 871, 637, 649, 810, 873, 645], 220)
ops.element("stdBrick", 926, *[649, 810, 873, 645, 657, 814, 875, 653], 220)
ops.element("stdBrick", 927, *[657, 814, 875, 653, 665, 818, 877, 661], 220)
ops.element("stdBrick", 928, *[665, 818, 877, 661, 673, 822, 879, 669], 220)
ops.element("stdBrick", 929, *[673, 822, 879, 669, 681, 826, 881, 677], 220)
ops.element("stdBrick", 930, *[681, 826, 881, 677, 689, 830, 883, 685], 220)
ops.element("stdBrick", 931, *[689, 830, 883, 685, 697, 834, 885, 693], 220)
ops.element("stdBrick", 932, *[697, 834, 885, 693, 705, 838, 887, 701], 220)
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.wipeAnalysis()
ops.loadConst('-time', 0.0)
ops.timeSeries('Linear', 1)
ops.pattern('Plain', 2, 1)
ops.eleLoad('-ele', *[33], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[36], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[39], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[42], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[45], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[48], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[51], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[54], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[57], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[60], '-type', '-beamUniform', 0.0, -55455299.2733874, 0.0)
ops.eleLoad('-ele', *[85], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[88], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[91], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[94], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[97], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[100], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[103], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[106], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[109], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.eleLoad('-ele', *[112], '-type', '-beamUniform', 0.0, -73940399.03118321, 0.0)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.load(132, *[0, 0, -166713050000.0])
ops.load(136, *[0, 0, -208391312500.0])
ops.load(144, *[0, 0, -208391312500.0])
ops.load(152, *[0, 0, -208391312500.0])
ops.load(160, *[0, 0, -208391312500.0])
ops.load(168, *[0, 0, -208391312500.0])
ops.load(176, *[0, 0, -208391312500.0])
ops.load(184, *[0, 0, -208391312500.0])
ops.load(192, *[0, 0, -208391312500.0])
ops.load(200, *[0, 0, -208391312500.0])
ops.load(208, *[0, 0, -208391312500.0])
ops.load(216, *[0, 0, -208391312500.0])
ops.load(134, *[0, 0, -166713050000.0])
ops.load(140, *[0, 0, -208391312500.0])
ops.load(148, *[0, 0, -208391312500.0])
ops.load(156, *[0, 0, -208391312500.0])
ops.load(164, *[0, 0, -208391312500.0])
ops.load(172, *[0, 0, -208391312500.0])
ops.load(180, *[0, 0, -208391312500.0])
ops.load(188, *[0, 0, -208391312500.0])
ops.load(196, *[0, 0, -208391312500.0])
ops.load(204, *[0, 0, -208391312500.0])
ops.load(212, *[0, 0, -208391312500.0])
ops.load(218, *[0, 0, -208391312500.0])
ops.load(133, *[0, 0, -166713050000.0])
ops.load(138, *[0, 0, -208391312500.0])
ops.load(146, *[0, 0, -208391312500.0])
ops.load(154, *[0, 0, -208391312500.0])
ops.load(162, *[0, 0, -208391312500.0])
ops.load(170, *[0, 0, -208391312500.0])
ops.load(178, *[0, 0, -208391312500.0])
ops.load(186, *[0, 0, -208391312500.0])
ops.load(194, *[0, 0, -208391312500.0])
ops.load(202, *[0, 0, -208391312500.0])
ops.load(210, *[0, 0, -208391312500.0])
ops.load(217, *[0, 0, -208391312500.0])
ops.load(135, *[0, 0, -166713050000.0])
ops.load(142, *[0, 0, -208391312500.0])
ops.load(150, *[0, 0, -208391312500.0])
ops.load(158, *[0, 0, -208391312500.0])
ops.load(166, *[0, 0, -208391312500.0])
ops.load(174, *[0, 0, -208391312500.0])
ops.load(182, *[0, 0, -208391312500.0])
ops.load(190, *[0, 0, -208391312500.0])
ops.load(198, *[0, 0, -208391312500.0])
ops.load(206, *[0, 0, -208391312500.0])
ops.load(214, *[0, 0, -208391312500.0])
ops.load(219, *[0, 0, -208391312500.0])
ops.load(241, *[0, 0, -83356525000.0])
ops.load(247, *[0, 0, -104195656250.0])
ops.load(255, *[0, 0, -104195656250.0])
ops.load(263, *[0, 0, -104195656250.0])
ops.load(271, *[0, 0, -104195656250.0])
ops.load(279, *[0, 0, -104195656250.0])
ops.load(287, *[0, 0, -104195656250.0])
ops.load(295, *[0, 0, -104195656250.0])
ops.load(303, *[0, 0, -104195656250.0])
ops.load(311, *[0, 0, -104195656250.0])
ops.load(319, *[0, 0, -104195656250.0])
ops.load(327, *[0, 0, -104195656250.0])
ops.load(243, *[0, 0, -83356525000.0])
ops.load(251, *[0, 0, -104195656250.0])
ops.load(259, *[0, 0, -104195656250.0])
ops.load(267, *[0, 0, -104195656250.0])
ops.load(275, *[0, 0, -104195656250.0])
ops.load(283, *[0, 0, -104195656250.0])
ops.load(291, *[0, 0, -104195656250.0])
ops.load(299, *[0, 0, -104195656250.0])
ops.load(307, *[0, 0, -104195656250.0])
ops.load(315, *[0, 0, -104195656250.0])
ops.load(323, *[0, 0, -104195656250.0])
ops.load(329, *[0, 0, -104195656250.0])
ops.load(132, *[0, 0, -83356525000.0])
ops.load(136, *[0, 0, -104195656250.0])
ops.load(144, *[0, 0, -104195656250.0])
ops.load(152, *[0, 0, -104195656250.0])
ops.load(160, *[0, 0, -104195656250.0])
ops.load(168, *[0, 0, -104195656250.0])
ops.load(176, *[0, 0, -104195656250.0])
ops.load(184, *[0, 0, -104195656250.0])
ops.load(192, *[0, 0, -104195656250.0])
ops.load(200, *[0, 0, -104195656250.0])
ops.load(208, *[0, 0, -104195656250.0])
ops.load(216, *[0, 0, -104195656250.0])
ops.load(242, *[0, 0, -83356525000.0])
ops.load(249, *[0, 0, -104195656250.0])
ops.load(257, *[0, 0, -104195656250.0])
ops.load(265, *[0, 0, -104195656250.0])
ops.load(273, *[0, 0, -104195656250.0])
ops.load(281, *[0, 0, -104195656250.0])
ops.load(289, *[0, 0, -104195656250.0])
ops.load(297, *[0, 0, -104195656250.0])
ops.load(305, *[0, 0, -104195656250.0])
ops.load(313, *[0, 0, -104195656250.0])
ops.load(321, *[0, 0, -104195656250.0])
ops.load(328, *[0, 0, -104195656250.0])
ops.load(245, *[0, 0, -83356525000.0])
ops.load(253, *[0, 0, -104195656250.0])
ops.load(261, *[0, 0, -104195656250.0])
ops.load(269, *[0, 0, -104195656250.0])
ops.load(277, *[0, 0, -104195656250.0])
ops.load(285, *[0, 0, -104195656250.0])
ops.load(293, *[0, 0, -104195656250.0])
ops.load(301, *[0, 0, -104195656250.0])
ops.load(309, *[0, 0, -104195656250.0])
ops.load(317, *[0, 0, -104195656250.0])
ops.load(325, *[0, 0, -104195656250.0])
ops.load(331, *[0, 0, -104195656250.0])
ops.load(133, *[0, 0, -83356525000.0])
ops.load(138, *[0, 0, -104195656250.0])
ops.load(146, *[0, 0, -104195656250.0])
ops.load(154, *[0, 0, -104195656250.0])
ops.load(162, *[0, 0, -104195656250.0])
ops.load(170, *[0, 0, -104195656250.0])
ops.load(178, *[0, 0, -104195656250.0])
ops.load(186, *[0, 0, -104195656250.0])
ops.load(194, *[0, 0, -104195656250.0])
ops.load(202, *[0, 0, -104195656250.0])
ops.load(210, *[0, 0, -104195656250.0])
ops.load(217, *[0, 0, -104195656250.0])
ops.load(364, *[0, 0, -166713050000.0])
ops.load(366, *[0, 0, -208391312500.0])
ops.load(370, *[0, 0, -208391312500.0])
ops.load(374, *[0, 0, -208391312500.0])
ops.load(378, *[0, 0, -208391312500.0])
ops.load(382, *[0, 0, -208391312500.0])
ops.load(386, *[0, 0, -208391312500.0])
ops.load(390, *[0, 0, -208391312500.0])
ops.load(394, *[0, 0, -208391312500.0])
ops.load(398, *[0, 0, -208391312500.0])
ops.load(402, *[0, 0, -208391312500.0])
ops.load(406, *[0, 0, -208391312500.0])
ops.load(241, *[0, 0, -166713050000.0])
ops.load(247, *[0, 0, -208391312500.0])
ops.load(255, *[0, 0, -208391312500.0])
ops.load(263, *[0, 0, -208391312500.0])
ops.load(271, *[0, 0, -208391312500.0])
ops.load(279, *[0, 0, -208391312500.0])
ops.load(287, *[0, 0, -208391312500.0])
ops.load(295, *[0, 0, -208391312500.0])
ops.load(303, *[0, 0, -208391312500.0])
ops.load(311, *[0, 0, -208391312500.0])
ops.load(319, *[0, 0, -208391312500.0])
ops.load(327, *[0, 0, -208391312500.0])
ops.load(365, *[0, 0, -166713050000.0])
ops.load(368, *[0, 0, -208391312500.0])
ops.load(372, *[0, 0, -208391312500.0])
ops.load(376, *[0, 0, -208391312500.0])
ops.load(380, *[0, 0, -208391312500.0])
ops.load(384, *[0, 0, -208391312500.0])
ops.load(388, *[0, 0, -208391312500.0])
ops.load(392, *[0, 0, -208391312500.0])
ops.load(396, *[0, 0, -208391312500.0])
ops.load(400, *[0, 0, -208391312500.0])
ops.load(404, *[0, 0, -208391312500.0])
ops.load(407, *[0, 0, -208391312500.0])
ops.load(242, *[0, 0, -166713050000.0])
ops.load(249, *[0, 0, -208391312500.0])
ops.load(257, *[0, 0, -208391312500.0])
ops.load(265, *[0, 0, -208391312500.0])
ops.load(273, *[0, 0, -208391312500.0])
ops.load(281, *[0, 0, -208391312500.0])
ops.load(289, *[0, 0, -208391312500.0])
ops.load(297, *[0, 0, -208391312500.0])
ops.load(305, *[0, 0, -208391312500.0])
ops.load(313, *[0, 0, -208391312500.0])
ops.load(321, *[0, 0, -208391312500.0])
ops.load(328, *[0, 0, -208391312500.0])
ops.load(365, *[0, 0, -83356525000.0])
ops.load(368, *[0, 0, -104195656250.0])
ops.load(372, *[0, 0, -104195656250.0])
ops.load(376, *[0, 0, -104195656250.0])
ops.load(380, *[0, 0, -104195656250.0])
ops.load(384, *[0, 0, -104195656250.0])
ops.load(388, *[0, 0, -104195656250.0])
ops.load(392, *[0, 0, -104195656250.0])
ops.load(396, *[0, 0, -104195656250.0])
ops.load(400, *[0, 0, -104195656250.0])
ops.load(404, *[0, 0, -104195656250.0])
ops.load(407, *[0, 0, -104195656250.0])
ops.load(242, *[0, 0, -83356525000.0])
ops.load(249, *[0, 0, -104195656250.0])
ops.load(257, *[0, 0, -104195656250.0])
ops.load(265, *[0, 0, -104195656250.0])
ops.load(273, *[0, 0, -104195656250.0])
ops.load(281, *[0, 0, -104195656250.0])
ops.load(289, *[0, 0, -104195656250.0])
ops.load(297, *[0, 0, -104195656250.0])
ops.load(305, *[0, 0, -104195656250.0])
ops.load(313, *[0, 0, -104195656250.0])
ops.load(321, *[0, 0, -104195656250.0])
ops.load(328, *[0, 0, -104195656250.0])
ops.load(428, *[0, 0, -83356525000.0])
ops.load(434, *[0, 0, -104195656250.0])
ops.load(442, *[0, 0, -104195656250.0])
ops.load(450, *[0, 0, -104195656250.0])
ops.load(458, *[0, 0, -104195656250.0])
ops.load(466, *[0, 0, -104195656250.0])
ops.load(474, *[0, 0, -104195656250.0])
ops.load(482, *[0, 0, -104195656250.0])
ops.load(490, *[0, 0, -104195656250.0])
ops.load(498, *[0, 0, -104195656250.0])
ops.load(506, *[0, 0, -104195656250.0])
ops.load(514, *[0, 0, -104195656250.0])
ops.load(431, *[0, 0, -83356525000.0])
ops.load(438, *[0, 0, -104195656250.0])
ops.load(446, *[0, 0, -104195656250.0])
ops.load(454, *[0, 0, -104195656250.0])
ops.load(462, *[0, 0, -104195656250.0])
ops.load(470, *[0, 0, -104195656250.0])
ops.load(478, *[0, 0, -104195656250.0])
ops.load(486, *[0, 0, -104195656250.0])
ops.load(494, *[0, 0, -104195656250.0])
ops.load(502, *[0, 0, -104195656250.0])
ops.load(510, *[0, 0, -104195656250.0])
ops.load(517, *[0, 0, -104195656250.0])
ops.load(430, *[0, 0, -83356525000.0])
ops.load(436, *[0, 0, -104195656250.0])
ops.load(444, *[0, 0, -104195656250.0])
ops.load(452, *[0, 0, -104195656250.0])
ops.load(460, *[0, 0, -104195656250.0])
ops.load(468, *[0, 0, -104195656250.0])
ops.load(476, *[0, 0, -104195656250.0])
ops.load(484, *[0, 0, -104195656250.0])
ops.load(492, *[0, 0, -104195656250.0])
ops.load(500, *[0, 0, -104195656250.0])
ops.load(508, *[0, 0, -104195656250.0])
ops.load(516, *[0, 0, -104195656250.0])
ops.load(433, *[0, 0, -83356525000.0])
ops.load(440, *[0, 0, -104195656250.0])
ops.load(448, *[0, 0, -104195656250.0])
ops.load(456, *[0, 0, -104195656250.0])
ops.load(464, *[0, 0, -104195656250.0])
ops.load(472, *[0, 0, -104195656250.0])
ops.load(480, *[0, 0, -104195656250.0])
ops.load(488, *[0, 0, -104195656250.0])
ops.load(496, *[0, 0, -104195656250.0])
ops.load(504, *[0, 0, -104195656250.0])
ops.load(512, *[0, 0, -104195656250.0])
ops.load(519, *[0, 0, -104195656250.0])
ops.load(430, *[0, 0, -166713050000.0])
ops.load(436, *[0, 0, -208391312500.0])
ops.load(444, *[0, 0, -208391312500.0])
ops.load(452, *[0, 0, -208391312500.0])
ops.load(460, *[0, 0, -208391312500.0])
ops.load(468, *[0, 0, -208391312500.0])
ops.load(476, *[0, 0, -208391312500.0])
ops.load(484, *[0, 0, -208391312500.0])
ops.load(492, *[0, 0, -208391312500.0])
ops.load(500, *[0, 0, -208391312500.0])
ops.load(508, *[0, 0, -208391312500.0])
ops.load(516, *[0, 0, -208391312500.0])
ops.load(433, *[0, 0, -166713050000.0])
ops.load(440, *[0, 0, -208391312500.0])
ops.load(448, *[0, 0, -208391312500.0])
ops.load(456, *[0, 0, -208391312500.0])
ops.load(464, *[0, 0, -208391312500.0])
ops.load(472, *[0, 0, -208391312500.0])
ops.load(480, *[0, 0, -208391312500.0])
ops.load(488, *[0, 0, -208391312500.0])
ops.load(496, *[0, 0, -208391312500.0])
ops.load(504, *[0, 0, -208391312500.0])
ops.load(512, *[0, 0, -208391312500.0])
ops.load(519, *[0, 0, -208391312500.0])
ops.load(551, *[0, 0, -166713050000.0])
ops.load(553, *[0, 0, -208391312500.0])
ops.load(557, *[0, 0, -208391312500.0])
ops.load(561, *[0, 0, -208391312500.0])
ops.load(565, *[0, 0, -208391312500.0])
ops.load(569, *[0, 0, -208391312500.0])
ops.load(573, *[0, 0, -208391312500.0])
ops.load(577, *[0, 0, -208391312500.0])
ops.load(581, *[0, 0, -208391312500.0])
ops.load(585, *[0, 0, -208391312500.0])
ops.load(589, *[0, 0, -208391312500.0])
ops.load(593, *[0, 0, -208391312500.0])
ops.load(552, *[0, 0, -166713050000.0])
ops.load(555, *[0, 0, -208391312500.0])
ops.load(559, *[0, 0, -208391312500.0])
ops.load(563, *[0, 0, -208391312500.0])
ops.load(567, *[0, 0, -208391312500.0])
ops.load(571, *[0, 0, -208391312500.0])
ops.load(575, *[0, 0, -208391312500.0])
ops.load(579, *[0, 0, -208391312500.0])
ops.load(583, *[0, 0, -208391312500.0])
ops.load(587, *[0, 0, -208391312500.0])
ops.load(591, *[0, 0, -208391312500.0])
ops.load(594, *[0, 0, -208391312500.0])
ops.load(433, *[0, 0, -83356525000.0])
ops.load(440, *[0, 0, -104195656250.0])
ops.load(448, *[0, 0, -104195656250.0])
ops.load(456, *[0, 0, -104195656250.0])
ops.load(464, *[0, 0, -104195656250.0])
ops.load(472, *[0, 0, -104195656250.0])
ops.load(480, *[0, 0, -104195656250.0])
ops.load(488, *[0, 0, -104195656250.0])
ops.load(496, *[0, 0, -104195656250.0])
ops.load(504, *[0, 0, -104195656250.0])
ops.load(512, *[0, 0, -104195656250.0])
ops.load(519, *[0, 0, -104195656250.0])
ops.load(615, *[0, 0, -83356525000.0])
ops.load(621, *[0, 0, -104195656250.0])
ops.load(629, *[0, 0, -104195656250.0])
ops.load(637, *[0, 0, -104195656250.0])
ops.load(645, *[0, 0, -104195656250.0])
ops.load(653, *[0, 0, -104195656250.0])
ops.load(661, *[0, 0, -104195656250.0])
ops.load(669, *[0, 0, -104195656250.0])
ops.load(677, *[0, 0, -104195656250.0])
ops.load(685, *[0, 0, -104195656250.0])
ops.load(693, *[0, 0, -104195656250.0])
ops.load(701, *[0, 0, -104195656250.0])
ops.load(619, *[0, 0, -83356525000.0])
ops.load(625, *[0, 0, -104195656250.0])
ops.load(633, *[0, 0, -104195656250.0])
ops.load(641, *[0, 0, -104195656250.0])
ops.load(649, *[0, 0, -104195656250.0])
ops.load(657, *[0, 0, -104195656250.0])
ops.load(665, *[0, 0, -104195656250.0])
ops.load(673, *[0, 0, -104195656250.0])
ops.load(681, *[0, 0, -104195656250.0])
ops.load(689, *[0, 0, -104195656250.0])
ops.load(697, *[0, 0, -104195656250.0])
ops.load(705, *[0, 0, -104195656250.0])
ops.load(552, *[0, 0, -83356525000.0])
ops.load(555, *[0, 0, -104195656250.0])
ops.load(559, *[0, 0, -104195656250.0])
ops.load(563, *[0, 0, -104195656250.0])
ops.load(567, *[0, 0, -104195656250.0])
ops.load(571, *[0, 0, -104195656250.0])
ops.load(575, *[0, 0, -104195656250.0])
ops.load(579, *[0, 0, -104195656250.0])
ops.load(583, *[0, 0, -104195656250.0])
ops.load(587, *[0, 0, -104195656250.0])
ops.load(591, *[0, 0, -104195656250.0])
ops.load(594, *[0, 0, -104195656250.0])
ops.load(617, *[0, 0, -83356525000.0])
ops.load(623, *[0, 0, -104195656250.0])
ops.load(631, *[0, 0, -104195656250.0])
ops.load(639, *[0, 0, -104195656250.0])
ops.load(647, *[0, 0, -104195656250.0])
ops.load(655, *[0, 0, -104195656250.0])
ops.load(663, *[0, 0, -104195656250.0])
ops.load(671, *[0, 0, -104195656250.0])
ops.load(679, *[0, 0, -104195656250.0])
ops.load(687, *[0, 0, -104195656250.0])
ops.load(695, *[0, 0, -104195656250.0])
ops.load(703, *[0, 0, -104195656250.0])
ops.load(620, *[0, 0, -83356525000.0])
ops.load(627, *[0, 0, -104195656250.0])
ops.load(635, *[0, 0, -104195656250.0])
ops.load(643, *[0, 0, -104195656250.0])
ops.load(651, *[0, 0, -104195656250.0])
ops.load(659, *[0, 0, -104195656250.0])
ops.load(667, *[0, 0, -104195656250.0])
ops.load(675, *[0, 0, -104195656250.0])
ops.load(683, *[0, 0, -104195656250.0])
ops.load(691, *[0, 0, -104195656250.0])
ops.load(699, *[0, 0, -104195656250.0])
ops.load(706, *[0, 0, -104195656250.0])
ops.load(619, *[0, 0, -166713050000.0])
ops.load(625, *[0, 0, -208391312500.0])
ops.load(633, *[0, 0, -208391312500.0])
ops.load(641, *[0, 0, -208391312500.0])
ops.load(649, *[0, 0, -208391312500.0])
ops.load(657, *[0, 0, -208391312500.0])
ops.load(665, *[0, 0, -208391312500.0])
ops.load(673, *[0, 0, -208391312500.0])
ops.load(681, *[0, 0, -208391312500.0])
ops.load(689, *[0, 0, -208391312500.0])
ops.load(697, *[0, 0, -208391312500.0])
ops.load(705, *[0, 0, -208391312500.0])
ops.load(738, *[0, 0, -166713050000.0])
ops.load(740, *[0, 0, -208391312500.0])
ops.load(744, *[0, 0, -208391312500.0])
ops.load(748, *[0, 0, -208391312500.0])
ops.load(752, *[0, 0, -208391312500.0])
ops.load(756, *[0, 0, -208391312500.0])
ops.load(760, *[0, 0, -208391312500.0])
ops.load(764, *[0, 0, -208391312500.0])
ops.load(768, *[0, 0, -208391312500.0])
ops.load(772, *[0, 0, -208391312500.0])
ops.load(776, *[0, 0, -208391312500.0])
ops.load(780, *[0, 0, -208391312500.0])
ops.load(620, *[0, 0, -166713050000.0])
ops.load(627, *[0, 0, -208391312500.0])
ops.load(635, *[0, 0, -208391312500.0])
ops.load(643, *[0, 0, -208391312500.0])
ops.load(651, *[0, 0, -208391312500.0])
ops.load(659, *[0, 0, -208391312500.0])
ops.load(667, *[0, 0, -208391312500.0])
ops.load(675, *[0, 0, -208391312500.0])
ops.load(683, *[0, 0, -208391312500.0])
ops.load(691, *[0, 0, -208391312500.0])
ops.load(699, *[0, 0, -208391312500.0])
ops.load(706, *[0, 0, -208391312500.0])
ops.load(739, *[0, 0, -166713050000.0])
ops.load(742, *[0, 0, -208391312500.0])
ops.load(746, *[0, 0, -208391312500.0])
ops.load(750, *[0, 0, -208391312500.0])
ops.load(754, *[0, 0, -208391312500.0])
ops.load(758, *[0, 0, -208391312500.0])
ops.load(762, *[0, 0, -208391312500.0])
ops.load(766, *[0, 0, -208391312500.0])
ops.load(770, *[0, 0, -208391312500.0])
ops.load(774, *[0, 0, -208391312500.0])
ops.load(778, *[0, 0, -208391312500.0])
ops.load(781, *[0, 0, -208391312500.0])
ops.load(133, *[0, 0, -83356525000.0])
ops.load(138, *[0, 0, -104195656250.0])
ops.load(146, *[0, 0, -104195656250.0])
ops.load(154, *[0, 0, -104195656250.0])
ops.load(162, *[0, 0, -104195656250.0])
ops.load(170, *[0, 0, -104195656250.0])
ops.load(178, *[0, 0, -104195656250.0])
ops.load(186, *[0, 0, -104195656250.0])
ops.load(194, *[0, 0, -104195656250.0])
ops.load(202, *[0, 0, -104195656250.0])
ops.load(210, *[0, 0, -104195656250.0])
ops.load(217, *[0, 0, -104195656250.0])
ops.load(135, *[0, 0, -83356525000.0])
ops.load(142, *[0, 0, -104195656250.0])
ops.load(150, *[0, 0, -104195656250.0])
ops.load(158, *[0, 0, -104195656250.0])
ops.load(166, *[0, 0, -104195656250.0])
ops.load(174, *[0, 0, -104195656250.0])
ops.load(182, *[0, 0, -104195656250.0])
ops.load(190, *[0, 0, -104195656250.0])
ops.load(198, *[0, 0, -104195656250.0])
ops.load(206, *[0, 0, -104195656250.0])
ops.load(214, *[0, 0, -104195656250.0])
ops.load(219, *[0, 0, -104195656250.0])
ops.load(794, *[0, 0, -83356525000.0])
ops.load(798, *[0, 0, -104195656250.0])
ops.load(802, *[0, 0, -104195656250.0])
ops.load(806, *[0, 0, -104195656250.0])
ops.load(810, *[0, 0, -104195656250.0])
ops.load(814, *[0, 0, -104195656250.0])
ops.load(818, *[0, 0, -104195656250.0])
ops.load(822, *[0, 0, -104195656250.0])
ops.load(826, *[0, 0, -104195656250.0])
ops.load(830, *[0, 0, -104195656250.0])
ops.load(834, *[0, 0, -104195656250.0])
ops.load(838, *[0, 0, -104195656250.0])
ops.load(796, *[0, 0, -83356525000.0])
ops.load(800, *[0, 0, -104195656250.0])
ops.load(804, *[0, 0, -104195656250.0])
ops.load(808, *[0, 0, -104195656250.0])
ops.load(812, *[0, 0, -104195656250.0])
ops.load(816, *[0, 0, -104195656250.0])
ops.load(820, *[0, 0, -104195656250.0])
ops.load(824, *[0, 0, -104195656250.0])
ops.load(828, *[0, 0, -104195656250.0])
ops.load(832, *[0, 0, -104195656250.0])
ops.load(836, *[0, 0, -104195656250.0])
ops.load(840, *[0, 0, -104195656250.0])
ops.load(619, *[0, 0, -83356525000.0])
ops.load(625, *[0, 0, -104195656250.0])
ops.load(633, *[0, 0, -104195656250.0])
ops.load(641, *[0, 0, -104195656250.0])
ops.load(649, *[0, 0, -104195656250.0])
ops.load(657, *[0, 0, -104195656250.0])
ops.load(665, *[0, 0, -104195656250.0])
ops.load(673, *[0, 0, -104195656250.0])
ops.load(681, *[0, 0, -104195656250.0])
ops.load(689, *[0, 0, -104195656250.0])
ops.load(697, *[0, 0, -104195656250.0])
ops.load(705, *[0, 0, -104195656250.0])
ops.load(738, *[0, 0, -83356525000.0])
ops.load(740, *[0, 0, -104195656250.0])
ops.load(744, *[0, 0, -104195656250.0])
ops.load(748, *[0, 0, -104195656250.0])
ops.load(752, *[0, 0, -104195656250.0])
ops.load(756, *[0, 0, -104195656250.0])
ops.load(760, *[0, 0, -104195656250.0])
ops.load(764, *[0, 0, -104195656250.0])
ops.load(768, *[0, 0, -104195656250.0])
ops.load(772, *[0, 0, -104195656250.0])
ops.load(776, *[0, 0, -104195656250.0])
ops.load(780, *[0, 0, -104195656250.0])
ops.load(242, *[0, 0, -41678262500.0])
ops.load(249, *[0, 0, -52097828125.0])
ops.load(257, *[0, 0, -52097828125.0])
ops.load(265, *[0, 0, -52097828125.0])
ops.load(273, *[0, 0, -52097828125.0])
ops.load(281, *[0, 0, -52097828125.0])
ops.load(289, *[0, 0, -52097828125.0])
ops.load(297, *[0, 0, -52097828125.0])
ops.load(305, *[0, 0, -52097828125.0])
ops.load(313, *[0, 0, -52097828125.0])
ops.load(321, *[0, 0, -52097828125.0])
ops.load(328, *[0, 0, -52097828125.0])
ops.load(245, *[0, 0, -41678262500.0])
ops.load(253, *[0, 0, -52097828125.0])
ops.load(261, *[0, 0, -52097828125.0])
ops.load(269, *[0, 0, -52097828125.0])
ops.load(277, *[0, 0, -52097828125.0])
ops.load(285, *[0, 0, -52097828125.0])
ops.load(293, *[0, 0, -52097828125.0])
ops.load(301, *[0, 0, -52097828125.0])
ops.load(309, *[0, 0, -52097828125.0])
ops.load(317, *[0, 0, -52097828125.0])
ops.load(325, *[0, 0, -52097828125.0])
ops.load(331, *[0, 0, -52097828125.0])
ops.load(133, *[0, 0, -41678262500.0])
ops.load(138, *[0, 0, -52097828125.0])
ops.load(146, *[0, 0, -52097828125.0])
ops.load(154, *[0, 0, -52097828125.0])
ops.load(162, *[0, 0, -52097828125.0])
ops.load(170, *[0, 0, -52097828125.0])
ops.load(178, *[0, 0, -52097828125.0])
ops.load(186, *[0, 0, -52097828125.0])
ops.load(194, *[0, 0, -52097828125.0])
ops.load(202, *[0, 0, -52097828125.0])
ops.load(210, *[0, 0, -52097828125.0])
ops.load(217, *[0, 0, -52097828125.0])
ops.load(431, *[0, 0, -41678262500.0])
ops.load(438, *[0, 0, -52097828125.0])
ops.load(446, *[0, 0, -52097828125.0])
ops.load(454, *[0, 0, -52097828125.0])
ops.load(462, *[0, 0, -52097828125.0])
ops.load(470, *[0, 0, -52097828125.0])
ops.load(478, *[0, 0, -52097828125.0])
ops.load(486, *[0, 0, -52097828125.0])
ops.load(494, *[0, 0, -52097828125.0])
ops.load(502, *[0, 0, -52097828125.0])
ops.load(510, *[0, 0, -52097828125.0])
ops.load(517, *[0, 0, -52097828125.0])
ops.load(865, *[0, 0, -41678262500.0])
ops.load(867, *[0, 0, -52097828125.0])
ops.load(869, *[0, 0, -52097828125.0])
ops.load(871, *[0, 0, -52097828125.0])
ops.load(873, *[0, 0, -52097828125.0])
ops.load(875, *[0, 0, -52097828125.0])
ops.load(877, *[0, 0, -52097828125.0])
ops.load(879, *[0, 0, -52097828125.0])
ops.load(881, *[0, 0, -52097828125.0])
ops.load(883, *[0, 0, -52097828125.0])
ops.load(885, *[0, 0, -52097828125.0])
ops.load(887, *[0, 0, -52097828125.0])
ops.load(794, *[0, 0, -41678262500.0])
ops.load(798, *[0, 0, -52097828125.0])
ops.load(802, *[0, 0, -52097828125.0])
ops.load(806, *[0, 0, -52097828125.0])
ops.load(810, *[0, 0, -52097828125.0])
ops.load(814, *[0, 0, -52097828125.0])
ops.load(818, *[0, 0, -52097828125.0])
ops.load(822, *[0, 0, -52097828125.0])
ops.load(826, *[0, 0, -52097828125.0])
ops.load(830, *[0, 0, -52097828125.0])
ops.load(834, *[0, 0, -52097828125.0])
ops.load(838, *[0, 0, -52097828125.0])
ops.load(433, *[0, 0, -41678262500.0])
ops.load(440, *[0, 0, -52097828125.0])
ops.load(448, *[0, 0, -52097828125.0])
ops.load(456, *[0, 0, -52097828125.0])
ops.load(464, *[0, 0, -52097828125.0])
ops.load(472, *[0, 0, -52097828125.0])
ops.load(480, *[0, 0, -52097828125.0])
ops.load(488, *[0, 0, -52097828125.0])
ops.load(496, *[0, 0, -52097828125.0])
ops.load(504, *[0, 0, -52097828125.0])
ops.load(512, *[0, 0, -52097828125.0])
ops.load(519, *[0, 0, -52097828125.0])
ops.load(615, *[0, 0, -41678262500.0])
ops.load(621, *[0, 0, -52097828125.0])
ops.load(629, *[0, 0, -52097828125.0])
ops.load(637, *[0, 0, -52097828125.0])
ops.load(645, *[0, 0, -52097828125.0])
ops.load(653, *[0, 0, -52097828125.0])
ops.load(661, *[0, 0, -52097828125.0])
ops.load(669, *[0, 0, -52097828125.0])
ops.load(677, *[0, 0, -52097828125.0])
ops.load(685, *[0, 0, -52097828125.0])
ops.load(693, *[0, 0, -52097828125.0])
ops.load(701, *[0, 0, -52097828125.0])
ops.load(619, *[0, 0, -41678262500.0])
ops.load(625, *[0, 0, -52097828125.0])
ops.load(633, *[0, 0, -52097828125.0])
ops.load(641, *[0, 0, -52097828125.0])
ops.load(649, *[0, 0, -52097828125.0])
ops.load(657, *[0, 0, -52097828125.0])
ops.load(665, *[0, 0, -52097828125.0])
ops.load(673, *[0, 0, -52097828125.0])
ops.load(681, *[0, 0, -52097828125.0])
ops.load(689, *[0, 0, -52097828125.0])
ops.load(697, *[0, 0, -52097828125.0])
ops.load(705, *[0, 0, -52097828125.0])
ops.constraints(*['Transformation'])
ops.integrator(*['LoadControl', 0.01])
ops.numberer(*['RCM'])
ops.system(*['BandSPD'])
ops.test(*['NormDispIncr', 6, 10, 0, 2])
ops.algorithm(*['Newton', False, False, False])
ops.analysis('Static')
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.analyze(*[1, 0.1])
ops.getTime()
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.wipeAnalysis()
ops.loadConst('-time', 0.0)
ops.pattern('MultipleSupport', 3)
ops.timeSeries('Path', 1141, '-values', *[-7.071413165249396e-06, -7.072057087498251e-06, -7.075131179590244e-06, -7.079821898514638e-06, -7.087962785590207e-06, -7.097879915818339e-06, -7.109475973265944e-06, -7.12160090188263e-06, -7.13234294380527e-06, -7.1401709647034295e-06, -7.144301889638882e-06, -7.145928066165652e-06, -7.145508789108135e-06, -7.142205049603945e-06, -7.13661120244069e-06, -7.129821824491955e-06, -7.126534910639748e-06, -7.13182498657261e-06, -7.149722023314098e-06, -7.180226020864211e-06, -7.217926849989453e-06, -7.2526599979028106e-06, -7.274928975675721e-06, -7.2764719334372785e-06, -7.259904123202432e-06, -7.236295914481161e-06, -7.224857199616963e-06, -7.246072073030518e-06, -7.318622920138296e-06, -7.447833922924474e-06, -7.61740602683858e-06, -7.798027581884526e-06, -7.956136869324837e-06, -8.063564564508852e-06, -8.111665920296218e-06, -8.107387657219078e-06, -8.075641744653694e-06, -8.040788088692352e-06, -8.017233994905837e-06, -8.002449249033816e-06, -7.984725016285665e-06, -7.948670827317983e-06, -7.872752576076891e-06, -7.761142114759423e-06, -7.645813639101107e-06, -7.5464381552592386e-06, -7.467204795830185e-06, -7.409154932247475e-06, -7.368324077106081e-06, -7.339814146689605e-06, -7.3293540481245145e-06, -7.339056082855677e-06, -7.360512881859904e-06, -7.372812888206681e-06, -7.358642960753059e-06, -7.319211817957694e-06, -7.263740826601861e-06, -7.187603841884993e-06, -7.0702581069781445e-06, -6.910328920639586e-06, -6.738860065524932e-06, -6.621254215133376e-06, -6.6145012169727124e-06, -6.738552201568382e-06, -6.968857178435428e-06, -7.243953859870089e-06, -7.495829777326435e-06, -7.668370017199777e-06, -7.727389856881928e-06, -7.683616786380298e-06, -7.587757863802835e-06, -7.512266165576875e-06, -7.473272034985712e-06, -7.428442131640622e-06, -7.331752840400441e-06, -7.150464170990745e-06, -6.893184036016464e-06, -6.6346237872494385e-06, -6.4881851358222775e-06, -6.534798103530193e-06, -6.792095973651158e-06, -7.208666829683352e-06, -7.65980439609848e-06, -8.003828952496406e-06, -8.152852387866005e-06, -8.108790098049212e-06, -7.900013770267833e-06, -7.581100817333208e-06, -7.231607924040873e-06, -6.969681180635234e-06, -6.9349221121228766e-06, -7.191360964498017e-06, -7.658244612684939e-06, -8.154943316185381e-06, -8.50035394250881e-06, -8.544218871975318e-06, -8.2612441474339e-06, -7.797427315381356e-06, -7.324977104872232e-06, -6.920373834873317e-06, -6.582786227227189e-06, -6.292648777161958e-06, -6.0400620895961765e-06, -5.895944013900589e-06, -5.947440968157025e-06, -6.225126981007634e-06, -6.697650860587601e-06, -7.299081062228652e-06, -7.977753739396576e-06, -8.722944585315417e-06, -9.561799743096344e-06, -1.0450129593664315e-05, -1.1179679859196767e-05, -1.1440790331107564e-05, -1.0944590030703694e-05, -9.67969299381366e-06, -7.958986316225491e-06, -6.191622105689021e-06, -4.682484814111376e-06, -3.5877710615750402e-06, -2.959259973067674e-06, -2.7779460651800036e-06, -2.9939189971628366e-06, -3.5781720271188533e-06, -4.513432941166684e-06, -5.7701640798768494e-06, -7.269322850333992e-06, -8.943556167650968e-06, -1.0605540410324465e-05, -1.1864380212500691e-05, -1.2358400454104412e-05, -1.195465029013576e-05, -1.096400956157595e-05, -9.88658666756237e-06, -9.125705219048541e-06, -8.85393819771707e-06, -8.99674432730535e-06, -9.402720934303943e-06, -9.914978363667615e-06, -1.0445080079080071e-05, -1.0982829735439736e-05, -1.1564879969228059e-05, -1.2219269592605997e-05, -1.2979309758520685e-05, -1.3725990356761031e-05, -1.4095309779804666e-05, -1.3538829989556689e-05, -1.1705190445354674e-05, -8.814917237032205e-06, -5.644872999255313e-06, -3.2101190754474374e-06, -2.284748916281387e-06, -2.986269009852549e-06, -4.722803168988321e-06, -6.612821835005889e-06, -7.792034011799842e-06, -7.656759407836944e-06, -6.136272986623226e-06, -3.747376013052417e-06, -1.2794760095857782e-06, 4.282975112346321e-07, 6.039994104867219e-07, -1.1647009614534909e-06, -4.700007139035733e-06, -9.50419416767545e-06, -1.4931810255802702e-05, -2.0182620573905297e-05, -2.4442340873065405e-05, -2.6871139198192395e-05, -2.6950130632030778e-05, -2.484284050296992e-05, -2.1243720766506158e-05, -1.6908299585338682e-05, -1.2477010386646725e-05, -8.466677172691561e-06, -5.129535111336736e-06, -2.6399870876048226e-06, -1.1081790489697596e-06, -5.307352921590791e-07, -7.69169616887666e-07, -1.305411956309399e-06, -1.4972180224503973e-06, -1.10552196019853e-06, -3.600366937916988e-07, 4.813391001334821e-07, 1.2141759953010478e-06, 1.5050710544528556e-06, 1.040746951730398e-06, -2.1906120650783123e-07, -2.070584059765679e-06, -3.903854121745098e-06, -4.8343049456889275e-06, -4.2898032006633e-06, -2.1923190161032835e-06, 1.2686119816862629e-06, 5.854567007190781e-06, 1.1184540198883042e-05, 1.62642500072252e-05, 1.965591036423575e-05, 2.0078719899174757e-05, 1.6865169527591206e-05, 1.033847001963295e-05, 1.473596967116464e-06, -8.36858725961065e-06, -1.7829750504461117e-05, -2.5595349143259227e-05, -3.0372410037671216e-05, -3.1424438930116594e-05, -2.9055030609015375e-05, -2.3999980840017088e-05, -1.729040923237335e-05, -1.0349829608458094e-05, -4.5063138713885564e-06, -2.743821880812902e-07, 2.2876890852785436e-06, 3.0887649700162e-06, 2.4238161131506786e-06, 1.0949570423690602e-06, -1.448527058300897e-07, -1.2898519798909547e-06, -3.1107720133149996e-06, -6.43309113002033e-06, -1.1373969755368307e-05, -1.7247459254576825e-05, -2.3020440494292416e-05, -2.7489189960760996e-05, -2.9770229957648553e-05, -2.9572769562946633e-05, -2.6988460376742296e-05, -2.2585680198972113e-05, -1.7190959624713287e-05, -1.1631519555521663e-05, -6.254282197915018e-06, -1.0380730373071856e-06, 4.001731213065796e-06, 8.327406249009073e-06, 1.0598630069580395e-05, 9.718258297652937e-06, 5.468881226988742e-06, -1.5983049479473266e-06, -1.0198629752267152e-05, -1.8190099581261165e-05, -2.3405069441650994e-05, -2.4916800612118095e-05, -2.282880996062886e-05, -1.800012068997603e-05, -1.1774510312534403e-05, -5.714347935281694e-06, -7.926890930320951e-07, 2.5449930944887456e-06, 3.807406073974562e-06, 2.874666961361072e-06, 2.096366955584017e-07, -3.2374409784097224e-06, -6.349650902848225e-06, -8.318378604599275e-06, -8.967864232545253e-06, -8.727404747332912e-06, -8.127602086460683e-06, -7.870909030316398e-06, -8.346704817085993e-06, -9.673074600868858e-06, -1.246108968189219e-05, -1.721935041132383e-05, -2.362272971367929e-05, -3.087530058110133e-05, -3.810066118603572e-05, -4.4031690777046606e-05, -4.758454088005237e-05, -4.830937905353494e-05, -4.6388639020733535e-05, -4.285218892619014e-05, -3.876031041727401e-05, -3.4741049603326246e-05, -3.089051824645139e-05, -2.697222043934744e-05, -2.2458680177805945e-05, -1.712252924335189e-05, -1.149338004324818e-05, -6.621507054660469e-06, -3.3862379495985806e-06, -2.3374439024337335e-06, -4.046762114739977e-06, -8.78072933119256e-06, -1.5836460079299286e-05, -2.374715950281825e-05, -3.113334969384596e-05, -3.696989006130025e-05, -4.0260638343170285e-05, -4.038301995024085e-05, -3.7265130231389776e-05, -3.128220123471692e-05, -2.363916064496152e-05, -1.6177329598576762e-05, -1.065205015038373e-05, -8.209772204281762e-06, -9.037098607223015e-06, -1.2743170373141766e-05, -1.810646972444374e-05, -2.344648055441212e-05, -2.6908750442089513e-05, -2.719702933973167e-05, -2.3620750653208233e-05, -1.6323470845236443e-05, -7.189481948444154e-06, 1.2905940138807637e-06, 7.080468094500247e-06, 9.019636308948975e-06, 6.750387910869904e-06, 5.435350090010616e-07, -8.745529157749843e-06, -1.9495439119054936e-05, -2.9744980565737933e-05, -3.79012999474071e-05, -4.266214091330767e-05, -4.34900211985223e-05, -4.032436845591292e-05, -3.372599167050794e-05, -2.5037070372491144e-05, -1.5943609469104558e-05, -8.496233022015076e-06, -4.9331561058352236e-06, -7.32311900719651e-06, -1.617207999515813e-05, -2.9477980206138454e-05, -4.321235974202864e-05, -5.299639087752439e-05, -5.664413038175553e-05, -5.452111872727983e-05, -4.826454824069515e-05, -3.931683022528887e-05, -2.8828919312218204e-05, -1.798607081582304e-05, -7.825778993719723e-06, 2.0029330016768654e-07, 4.46692320110742e-06, 3.6694150367111433e-06, -1.924004891407094e-06, -1.0183330232393928e-05, -1.8353650375502184e-05, -2.4321900127688423e-05, -2.7184449209016748e-05, -2.6931180400424637e-05, -2.4269800633192062e-05, -2.0209910871926695e-05, -1.6022819181671366e-05, -1.2860779861512128e-05, -1.1634590009634849e-05, -1.2940179658471607e-05, -1.7501630281913094e-05, -2.5477960662101395e-05, -3.6283989174989983e-05, -4.858553074882366e-05, -5.956348104518838e-05, -6.555703293997794e-05, -6.466206104960293e-05, -5.801597944810055e-05, -4.767057907884009e-05, -3.530022149789147e-05, -2.1608080714941025e-05, -7.379005182883702e-06, 6.356803169182967e-06, 1.8221720893052407e-05, 2.6675290428102016e-05, 2.989787026308477e-05, 2.690638939384371e-05, 1.8722079403232783e-05, 7.843166713428218e-06, -3.0191549740266055e-06, -1.1807949704234488e-05, -1.7188460333272815e-05, -1.818788041418884e-05, -1.3483039765560534e-05, -2.686695097509073e-06, 1.2900490219180938e-05, 3.0530030926456675e-05, 4.768605867866427e-05, 6.278127693803981e-05, 7.521860243286937e-05, 8.531592175131664e-05, 9.385670273331925e-05, 0.00010118269710801542, 0.00010745110193965957, 0.00011270139657426625, 0.00011705190263455734, 0.00012089929805370048, 0.00012402409629430622, 0.0001252485963050276, 0.0001232015056302771, 0.00011694659770000726, 0.00010666390153346583, 9.426930773770437e-05, 8.171042281901464e-05, 6.966859655221924e-05, 5.834542025695555e-05, 4.7849080146988854e-05, 3.853176167467609e-05, 3.101877882727422e-05, 2.5449540771660395e-05, 1.9916189557989128e-05, 1.233711009263061e-05, 2.50354310082912e-06, -7.920356438262388e-06, -1.6863610653672367e-05, -2.2136939151096158e-05, -2.1595060388790444e-05, -1.4333930266730022e-05, -1.836539013311267e-06, 1.1191030353074893e-05, 2.0184639652143233e-05, 2.255828985653352e-05, 1.764941043802537e-05, 6.514210781460861e-06, -8.405533662880771e-06, -2.302406937815249e-05, -3.2733278203522786e-05, -3.5285880585433915e-05, -3.190439019817859e-05, -2.576197039161343e-05, -1.9378539946046658e-05, -1.4023299627297092e-05, -1.0048729564005043e-05, -7.232570169435348e-06, -5.2726350077136885e-06, -3.5734049106395105e-06, -1.8158930288336705e-06, -6.730195991622168e-07, -1.3686519650946138e-06, -4.4600319597520865e-06, -8.925314432417508e-06, -1.2828239960072096e-05, -1.5461089788004756e-05, -1.7852609744295478e-05, -2.07271605177084e-05, -2.268484968226403e-05, -2.0509169189608656e-05, -1.159587009169627e-05, 4.601016826200066e-06, 2.531653990445193e-05, 4.477287075133063e-05, 5.698636960005388e-05, 5.822754974360578e-05, 4.874973092228174e-05, 3.188525079167448e-05, 1.1898790035047568e-05, -7.380904207821004e-06, -2.2741680368199013e-05, -3.2260501029668376e-05, -3.5961078538093716e-05, -3.349890175741166e-05, -2.3547039745608345e-05, -6.636480065935757e-06, 1.331704970652936e-05, 2.9760229153907858e-05, 3.6179950257064775e-05, 2.794917054416146e-05, 4.90818683829275e-06, -2.7275909815216437e-05, -5.847276042914018e-05, -7.79090914875269e-05, -7.945310790091753e-05, -6.30563372396864e-05, -3.491696043056436e-05, -3.002842049681931e-06, 2.6037110728793778e-05, 4.7687550249975175e-05, 5.9001449699280784e-05, 5.854917981196195e-05, 4.749923027702607e-05, 2.953172952402383e-05, 1.0383840162830893e-05, -3.1855859106144635e-06, -6.808576927141985e-06, -8.50315416300873e-07, 9.976764886232559e-06, 1.8930029909824952e-05, 2.1053230739198625e-05, 1.549736043671146e-05, 4.729688953375444e-06, -7.327344974328298e-06, -1.7751559425960295e-05, -2.555522951297462e-05, -3.191229916410521e-05, -3.929395825252868e-05, -4.864928996539675e-05, -5.867025174666196e-05, -6.740514072589576e-05, -7.355138950515538e-05, -7.63849529903382e-05, -7.447251846315339e-05, -6.735274655511603e-05, -5.637286085402593e-05, -4.348303991719149e-05, -3.020977965206839e-05, -1.663859984546434e-05, -2.853090109056211e-06, 1.0604940143821295e-05, 2.178965041821357e-05, 2.824735020112712e-05, 2.9132239433238283e-05, 2.4707289412617683e-05, 1.6505040548508987e-05, 7.704890776949469e-06, 1.5702770497227903e-06, -7.013409799583314e-07, 2.3824699724173115e-07, 1.8310510085939313e-06, 1.7659369859757135e-06, -7.375683139798639e-07, -5.111926839163061e-06, -9.818238140724134e-06, -1.2770819921570364e-05, -1.2376760423649102e-05, -9.769521057023667e-06, -6.960562132007908e-06, -5.209300070418976e-06, -5.867846994078718e-06, -8.50649485073518e-06, -1.1644309779512696e-05, -1.389046974509256e-05, -1.3287640285852831e-05, -7.499810180888744e-06, 3.390196980035398e-06, 1.4148699847282842e-05, 1.8265969629283063e-05, 1.1183719834662043e-05, -7.535745226050494e-06, -3.418327105464414e-05, -6.291773752309382e-05, -8.824822725728154e-05, -0.000106486797449179, -0.00011539120168890804, -0.00011400719813536853, -0.00010351419768994674, -8.590859943069518e-05, -6.217714690137655e-05, -3.3547639759490266e-05, -2.0959230369044235e-06, 2.807000964821782e-05, 5.231031900621019e-05, 6.70812078169547e-05, 7.03677287674509e-05, 6.258750363485888e-05, 4.669513873523101e-05, 2.693433089007158e-05, 7.075775101839099e-06, -1.0508450031920802e-05, -2.4123450202750973e-05, -3.2519550586584955e-05, -3.5431010473985225e-05, -3.405498864594847e-05, -2.9647550036315806e-05, -2.2688160242978483e-05, -1.2912610145576764e-05, -1.7363089455102454e-06, 7.4422518991923425e-06, 1.142607015935937e-05, 8.674947821418755e-06, 4.913314910481859e-07, -8.100701961666346e-06, -1.0728679626481608e-05, -4.216492015984841e-06, 8.892779987945687e-06, 2.238827983092051e-05, 3.14752796839457e-05, 3.4563010558485985e-05, 3.321760959806852e-05, 3.106578878941946e-05, 3.195851968484931e-05, 3.656828994280659e-05, 4.250705023878254e-05, 4.774787157657556e-05, 5.189485818846151e-05, 5.4648189689032733e-05, 5.4462041589431465e-05, 5.031489854445681e-05, 4.284422175260261e-05, 3.359066977282055e-05, 2.410142042208463e-05, 1.706516013655346e-05, 1.7898710211738944e-05, 3.1356401450466365e-05, 5.5760978284524754e-05, 8.440959209110588e-05, 0.00010957309859804809, 0.00012634749873541296, 0.00013348989887163043, 0.00013309880159795284, 0.00012845010496675968, 0.00012081680324627087, 0.00011030150199076161, 9.607434185454622e-05, 7.799114246154204e-05, 5.7539131375961006e-05, 3.7293928471626714e-05, 2.0060590031789616e-05, 9.3890530479257e-06, 7.82763436291134e-06, 1.4261029718909413e-05, 2.373692041146569e-05, 3.0045779567444697e-05, 2.9001930670347065e-05, 1.906323086586781e-05, 5.158839826435724e-07, -2.3736149159958586e-05, -4.963907122146338e-05, -7.182968693086877e-05, -8.591890218667686e-05, -9.081311145564541e-05, -8.74931865837425e-05, -7.882931095082313e-05, -6.817450775997713e-05, -5.9146201238036156e-05, -5.612850145553239e-05, -6.276489148149267e-05, -8.004788833204657e-05, -0.00010345099872210994, -0.00012643399531953037, -0.00014239440497476608, -0.00014648509386461228, -0.00013909410336054862, -0.00012367090675979853, -0.00010510189895285293, -8.604385220678523e-05, -6.672449671896175e-05, -4.766873098560609e-05, -3.0514969694195315e-05, -2.0230259906384163e-05, -2.3288750526262447e-05, -4.286715920898132e-05, -7.58438982302323e-05, -0.00011434200132498518, -0.00014854190521873534, -0.00016919340123422444, -0.00017077640222851187, -0.00015195869491435587, -0.00011579620331758633, -6.937753641977906e-05, -2.3438480639015324e-05, 1.034834986057831e-05, 2.429844971629791e-05, 1.6932919606915675e-05, -9.063845936907455e-06, -4.7066401748452336e-05, -8.774422167334706e-05, -0.00012261170195415616, -0.00014586909674108028, -0.00015696209447924048, -0.00016028160462155938, -0.0001603918062755838, -0.00015806680312380195, -0.00015148750389926136, -0.00013850840332452208, -0.00011739529873011634, -9.043866157298908e-05, -6.447858322644606e-05, -4.5365439291344956e-05, -3.532120899762958e-05, -3.467779970378615e-05, -4.3151070713065565e-05, -5.994827006361447e-05, -8.362977678189054e-05, -0.00011090900079580024, -0.00013663880235981196, -0.00015305560373235494, -0.00015301389794331044, -0.00013720570132136345, -0.00011556810204638168, -9.880823199637234e-05, -9.232910088030621e-05, -9.542689076624811e-05, -0.00010317889973521233, -0.00010904230293817818, -0.00010731859947554767, -9.744244016474113e-05, -8.190300286514685e-05, -6.38523415545933e-05, -4.552569953375496e-05, -2.8886830477858894e-05, -1.3877330275136046e-05, 1.1164900115545606e-07, 1.345136024610838e-05, 2.753398075583391e-05, 4.456548049347475e-05, 6.678768841084093e-05, 9.270748705603182e-05, 0.00011787519906647503, 0.00013723279698751867, 0.0001492907031206414, 0.00015716379857622087, 0.0001654165971558541, 0.0001772505056578666, 0.00019110400171484798, 0.00020379699708428234, 0.0002140475990017876, 0.00022115350293461233, 0.00022398239525500685, 0.00022365970653481781, 0.00022466179507318884, 0.00023076719662640244, 0.00024138459411915392, 0.0002512854989618063, 0.0002550797944422811, 0.0002508409961592406, 0.00024029069754760712, 0.0002273956051794812, 0.00021695939358323812, 0.0002117296971846372, 0.00021036059479229152, 0.00020949910685885698, 0.00020622920419555157, 0.00020017310453113168, 0.00019331810472067446, 0.00018960969464387745, 0.0001915658067446202, 0.0001983263937290758, 0.00020708709780592471, 0.00021392649796325713, 0.00021575120626948774, 0.00021200970513746142, 0.00020437959756236523, 0.0001954655017470941, 0.00018563629419077188, 0.00016919159679673612, 0.00014076479419600219, 0.00010032470163423568, 5.3058491175761446e-05, 6.869875051052077e-06, -3.105158975813538e-05, -5.551756112254225e-05, -6.49189532850869e-05, -6.0247421060921624e-05, -4.337614882388152e-05, -1.5891779185039923e-05, 1.8631630155141465e-05, 5.1591010560514405e-05, 7.156823266996071e-05, 6.999266042839736e-05, 4.51114792667795e-05, 2.839607077476103e-06, -4.514764077612199e-05, -8.718515891814604e-05, -0.00011893719783984125, -0.0001401547051500529, -0.00015108680236153305, -0.00015238650667015463, -0.00014477809600066394, -0.00013085799582768232, -0.00011470149911474437, -0.00010059319902211428, -9.252649761037901e-05, -9.203523950418457e-05, -9.724230039864779e-05, -0.00010518090130062774, -0.00011326999810989946, -0.00011724780051736161, -0.0001134491030825302, -0.00010186310100834817, -8.615379920229316e-05, -7.320600707316771e-05, -7.243086292874068e-05, -9.009803034132347e-05, -0.0001248857006430626, -0.00016771949594840407, -0.00020614049572031945, -0.00023113269708119333, -0.0002380478981649503, -0.0002258361055282876, -0.0001959094952326268, -0.00015236259787343442, -0.00010114790347870439, -4.970641020918265e-05, -4.865661139774602e-06, 2.8513819415820763e-05, 4.7931211156537756e-05, 5.3596191719407216e-05, 4.8191839596256614e-05, 3.668495992315002e-05, 2.2465670554083772e-05, 5.405548108683433e-06, -1.5107099898159504e-05, -3.7953890569042414e-05, -6.086844950914383e-05, -8.23832378955558e-05, -0.00010136039782082662, -0.00011534120130818337, -0.00012150200200267136, -0.00011983310105279088, -0.00011085189908044413, -9.399023838341236e-05, -6.971624679863453e-05, -4.067604095325805e-05, -1.0189380191150121e-05, 1.7136509995907545e-05, 3.4559820051072165e-05, 3.75265117327217e-05, 2.6684410840971395e-05, 4.565873041428858e-06, -2.7446320018498227e-05, -6.635714089497924e-05, -0.00010574080079095438, -0.00013854970165994018, -0.0001608099992154166, -0.00017188259516842663, -0.0001749379007378593, -0.00017460349772591144, -0.0001765057968441397, -0.00018519340665079653, -0.0001987649011425674, -0.0002092755021294579, -0.00020944149582646787, -0.00019922939827665687, -0.0001836697047110647, -0.00017031710012815893, -0.00016421730106230825, -0.00016566310659982264, -0.00017107039457187057, -0.00017467989528086036, -0.0001714649988571182, -0.00015792039630468935, -0.00013407789811026305, -0.00010378989827586338, -7.363557233475149e-05, -4.876506864093244e-05, -3.171397838741541e-05, -2.3585749659105204e-05, -2.4265440515591763e-05, -3.267147985752672e-05, -4.5955890527693555e-05, -6.118226883700117e-05, -7.345052290474996e-05, -7.760785229038447e-05, -7.282746082637459e-05, -6.0400230722734705e-05, -4.303361856727861e-05, -2.4467730327160098e-05, -1.0466759704286233e-05, -6.741779998264974e-06, -1.6046789824031293e-05, -3.7563921068795025e-05, -6.570341065526009e-05, -9.262368985218927e-05, -0.00011053300113417208, -0.0001133245968958363, -9.787182352738455e-05, -6.74353213980794e-05, -3.065579949179664e-05, 4.766141046275152e-06, 3.6180539609631523e-05, 6.550111720571294e-05, 9.519128070678562e-05, 0.00012564500502776355, 0.00015243689995259047, 0.00016975239850580692, 0.00017560800188221037, 0.00017225320334546268, 0.00016325399337802082, 0.00015131810505408794, 0.00014013370673637837, 0.0001339799928246066, 0.0001368472003377974, 0.00014980969717726111, 0.00017005880363285542, 0.0001918555935844779, 0.00021228620607871562, 0.00023278310254681855, 0.00025466099032200873, 0.0002753860899247229, 0.00029041070956736803, 0.0002987692132592201, 0.0003021674056071788, 0.0003024000907316804, 0.00030214869184419513, 0.0003049061924684793, 0.0003143961075693369, 0.00033245590748265386, 0.00035751648829318583, 0.00038513680920004845, 0.0004077153862453997, 0.0004170403117313981, 0.0004088834102731198, 0.00038548960583284497, 0.0003543169004842639, 0.0003239797952119261, 0.00030103541212156415, 0.00028708280296996236, 0.00027992879040539265, 0.00027887040050700307, 0.00028525650850497186, 0.0003006455081049353, 0.0003243128885515034, 0.0003506478969939053, 0.00037232349859550595, 0.00038135069189593196, 0.0003706734860315919, 0.0003374110965523869, 0.000284462992567569, 0.00022115980391390622, 0.0001614976063137874, 0.0001188276000902988, 0.00010075909813167527, 0.00010806410136865452, 0.00013602249964606017, 0.00017656630370765924, 0.00021836129599250853, 0.00024978190776892006, 0.00026308800443075597, 0.0002569642965681851, 0.0002358844067202881, 0.00020712599507533014, 0.00017903589468915015, 0.00015823029389139265, 0.0001467456022510305, 0.00014282450138125569, 0.00014116060629021376, 0.00013449109974317253, 0.00011713179992511868, 8.734964649192989e-05, 4.802579860552214e-05, 5.360891009331681e-06, -3.536358053679578e-05, -7.185361027950421e-05, -0.00010267949983244762, -0.00012788000458385795, -0.00014875989290885627, -0.00016809170483611524, -0.0001885110978037119, -0.00021169580577407032, -0.00023861259978730232, -0.00027008631150238216, -0.000304548186250031, -0.00033902080031111836, -0.00037149019772186875, -0.0004005504888482392, -0.00042570970254018903, -0.0004462079086806625, -0.00046324459253810346, -0.0004807020886801183, -0.000502032577060163, -0.0005278508760966361, -0.000556478975340724, -0.0005844174884259701, -0.0006056324928067625, -0.0006130675901658833, -0.0006040572770871222, -0.000582690117880702, -0.0005560169229283929, -0.0005305851227603853, -0.0005102931754663587, -0.0004977834760211408, -0.0004932957817800343, -0.0004954506875947118, -0.0005019932286813855, -0.0005072287749499083, -0.0005048912134952843, -0.0004900709027424455, -0.0004624346038326621, -0.00042665109504014254, -0.00039138610009104013, -0.0003645610122475773, -0.0003493113908916712, -0.0003439417923800647, -0.00034509951365180314, -0.00035081501118838787, -0.0003598341136239469, -0.0003713869082275778, -0.0003823357983492315, -0.0003854690003208816, -0.00037232390604913235, -0.00033826951403170824, -0.00028462859336286783, -0.00021673970331903547, -0.00014229769294615835, -6.932872929610312e-05, -5.273715032672044e-06, 4.555236955638975e-05, 8.226866339100525e-05, 0.00010422590275993571, 0.00011213830293854699, 0.00010791920067276806, 9.353273344459012e-05, 7.26505895727314e-05, 4.985972918802872e-05, 3.161250060657039e-05, 2.5341489163110964e-05, 3.522323095239699e-05, 5.988697012071498e-05, 9.366282756673172e-05, 0.00012891610094811767, 0.0001572939072502777, 0.00017415320326108485, 0.00018101869500242174, 0.0001844057987909764, 0.00019190189777873456, 0.00020771230629179627, 0.00023247780336532742, 0.0002629747032187879, 0.00029270511004142463, 0.00031292688800022006, 0.00031626661075279117, 0.00029931560857221484, 0.00026406950200907886, 0.0002182019961765036, 0.00017187140474561602, 0.00013166719872970134, 9.792346827453002e-05, 6.869166099932045e-05, 4.288946001906879e-05, 1.8503109458833933e-05, -7.221924988698447e-06, -3.511035174597055e-05, -6.43240418867208e-05, -9.150661207968369e-05, -0.00011241479660384357, -0.00012306610005907714, -0.0001221687998622656, -0.00011109709885204211, -9.220314677804708e-05, -6.942940672161058e-05, -4.6246710553532466e-05, -2.58581403613789e-05, -1.102659007301554e-05, -3.914909029845148e-06, -5.641104053211166e-06, -1.6661959307384677e-05, -3.507854125928134e-05, -5.601737939286977e-05, -7.305751205421984e-05, -8.051109034568071e-05, -7.421610644087195e-05, -5.189365037949756e-05, -1.4601439943362493e-05, 3.093473060289398e-05, 7.35656576580368e-05, 0.00010569860023679212, 0.00012419330596458167, 0.0001289706997340545, 0.00012299249647185206, 0.00011115709639852867, 0.00010076350008603185, 9.895410039462149e-05, 0.00010947880218736827, 0.00013392149412538856, 0.0001721042935969308, 0.000222597096581012, 0.000282185705145821, 0.00034556310856714845, 0.00040656881174072623, 0.0004590963071677834, 0.0005005347193218768, 0.0005333618028089404, 0.0005636591813527048, 0.0005970501806586981, 0.000632563722319901, 0.0006653873715549707, 0.0006910146912559867, 0.0007080279174260795, 0.0007178300875239074, 0.0007237130776047707, 0.0007282844162546098, 0.0007298719137907028, 0.0007256760145537555, 0.0007150131277740002, 0.0006987014785408974, 0.000677581992931664, 0.0006524436175823212, 0.0006246673874557018, 0.0005941131967119873, 0.0005581977893598378, 0.0005175396800041199, 0.0004767364007420838, 0.00044236669782549143, 0.00042105140164494514, 0.00041609370964579284, 0.00042418891098350286, 0.0004355924902483821, 0.00044165580766275525, 0.0004374329000711441, 0.0004226510936859995, 0.0004015731974504888, 0.00038107309956103563, 0.0003657586930785328, 0.00035302271135151386, 0.0003363598953001201, 0.0003101323964074254, 0.0002741253993008286, 0.00023284630151465535, 0.00019297930703032762, 0.00016022070485632867, 0.0001380064059048891, 0.0001292233937419951, 0.00013405679783318192, 0.0001476520992582664, 0.00016178849909920245, 0.00016834199777804315, 0.0001624767028260976, 0.0001445817033527419, 0.00011874699703184888, 8.944355795392767e-05, 5.989622150082141e-05, 3.0839139071758837e-05, 3.0338239866978256e-06, -2.13329003599938e-05, -3.90203385904897e-05, -4.704823004431091e-05, -4.4066440750611946e-05, -3.011875924130436e-05, -7.4336448960821144e-06, 2.043256063188892e-05, 4.913963857688941e-05, 7.678355905227363e-05, 0.00010527319682296365, 0.00013931159628555179, 0.00018218539480585605, 0.00023252780374605209, 0.0002859153028111905, 0.0003367670869920403, 0.0003803212021011859, 0.00041511451127007604, 0.0004427740932442248, 0.00046662590466439724, 0.0004896821919828653, 0.0005129153723828495, 0.0005359326023608446, 0.0005582558223977685, 0.00057869782904163, 0.0005960802081972361, 0.0006102964980527759, 0.0006230453145690262, 0.0006380907725542784, 0.0006569739198312163, 0.0006740412209182978, 0.0006818887777626514, 0.0006759361131116748, 0.0006560548790730536, 0.0006262214737944305, 0.0005933251231908798, 0.0005644524935632944, 0.0005435100756585598, 0.000531370984390378, 0.0005256002186797559, 0.0005238556186668575, 0.0005249459063634276, 0.0005276968004181981, 0.0005279429024085402, 0.0005170573713257909, 0.00048465150757692754, 0.0004217464884277433, 0.00032568018650636077, 0.0002000600943574682, 5.393104947870597e-05, -9.965558274416253e-05, -0.0002477176021784544, -0.0003809074987657368, -0.0004977795761078596, -0.0005998951965011656, -0.0006877683917991817, -0.0007590338937006891, -0.0008121266146190464, -0.0008496724767610431, -0.000878186197951436, -0.0009087644284591079, -0.0009533920092508197, -0.0010199419921264052, -0.0011103230062872171, -0.0012193250004202127, -0.0013365329941734672, -0.0014505749568343163, -0.0015511009842157364, -0.0016309759812429547, -0.001687707961536944, -0.0017249929951503873, -0.0017496809596195817, -0.0017651430098339915, -0.0017712060362100601, -0.0017682570032775402, -0.001755272038280964, -0.001730127027258277, -0.0016907339449971914, -0.001638539950363338, -0.0015802140114828944, -0.0015220210188999772, -0.0014680499443784356, -0.001422874047420919, -0.0013916910393163562, -0.0013766189804300666, -0.00137523899320513, -0.001382029033266008, -0.0013920279452577233, -0.0013992500025779009, -0.001394285005517304, -0.001366300042718649, -0.0013097230112180114, -0.001229017972946167, -0.0011351179564371705, -0.001039988943375647, -0.0009512538090348244, -0.0008754730806685984, -0.0008187341154552996, -0.0007819823804311454, -0.0007594642229378223, -0.0007461959030479193, -0.0007407930097542703, -0.0007389814709313214, -0.0007316662813536823, -0.0007088761194609106, -0.0006631637224927545, -0.0005905847065150738, -0.0004936439800076187, -0.0003797908138949424, -0.00025698699755594134, -0.00013026449596509337, -8.174981189768005e-07, 0.00013190250319894403, 0.00026927300496026874, 0.0004087623965460807, 0.0005418339278548956, 0.0006608287803828716, 0.0007641467964276671, 0.000853896199259907, 0.0009332306799478829, 0.0010061670327559114, 0.0010760079603642225, 0.0011443969560787082, 0.0012095089768990874, 0.0012685939436778426, 0.0013207360170781612, 0.0013658240204676986, 0.0014044080162420869, 0.0014372050063684583, 0.0014655960258096457, 0.0014902539551258087, 0.001512052956968546, 0.001530113979242742, 0.0015404210425913334, 0.001538212993182242, 0.0015188719844445586, 0.0014802459627389908, 0.0014221760211512446, 0.0013442330528050661, 0.0012485269689932466, 0.0011417530477046967, 0.0010351620148867369, 0.0009421947179362178, 0.000871450116392225, 0.0008237113943323493, 0.0007952793966978788, 0.0007812432013452053, 0.0007751196972094476, 0.0007702952716499567, 0.0007599545060656965, 0.0007358448929153383, 0.0006906709168106318, 0.0006217805203050375, 0.0005332776927389205, 0.0004344652988947928, 0.000336386205162853, 0.00024847910390235484, 0.00017591859796084464, 0.00011810199794126675, 6.82933023199439e-05, 1.8198059478891082e-05, -3.7834728573216125e-05, -0.0001013665969367139, -0.00016885279910638928, -0.00023243800387717783, -0.0002839560038410127, -0.00032084560371004045, -0.0003489163937047124, -0.000377176096662879, -0.00040924400673247874, -0.00044190831249579787, -0.00046734779607504606, -0.0004778571892529726, -0.00047299391007982194, -0.0004603650013450533, -0.0004508602141868323, -0.00045289850095286965, -0.0004693618102464825, -0.0004980702069588006, -0.0005329038831405342, -0.000566438480746001, -0.0005938794929534197, -0.0006126501248218119, -0.0006232355954125524, -0.0006274871993809938, -0.0006288046715781093, -0.0006285543786361814, -0.0006263577961362898, -0.0006251428858377039, -0.0006291820900514722, -0.0006413151859305799, -0.0006607635878026485, -0.0006827214965596795, -0.0007001681951805949, -0.0007071049767546356, -0.0006992619019001722, -0.000673141679726541, -0.0006270689773373306, -0.0005615212139673531, -0.00048364000394940376, -0.00041024701204150915, -0.0003628749109338969, -0.0003570283006411046, -0.00039459861000068486, -0.0004667635075747967, -0.000559319625608623, -0.0006575150764547288, -0.0007508639828301966, -0.0008371917065232992, -0.0009162579081021249, -0.0009827445028349757, -0.0010272510116919875, -0.0010417030425742269, -0.001024566008709371, -0.0009832961950451136, -0.0009313179180026054, -0.0008815288892947137, -0.0008427838911302388, -0.0008207550272345543, -0.0008186735794879496, -0.0008391597075387836, -0.0008830719161778688, -0.0009471296216361225, -0.0010223359568044543, -0.0010962940286844969, -0.00115360994823277, -0.0011794030433520675, -0.0011678660521283746, -0.0011250339448451996, -0.001063987030647695, -0.0009992541745305061, -0.0009441720903851092, -0.0009079372975975275, -0.0008940263069234788, -0.0009004352032206953, -0.0009221470099873841, -0.0009541952749714255, -0.000991225941106677, -0.0010257209651172161, -0.0010489169508218765, -0.0010540829971432686, -0.0010406440123915672, -0.0010151939932256937, -0.0009865444153547287, -0.0009603698854334652, -0.0009369265753775835, -0.0009136836160905659, -0.0008866597781889141, -0.0008523770957253873, -0.0008081264095380902, -0.0007527443813160062, -0.000688435509800911, -0.0006203412776812911, -0.0005570818902924657, -0.0005057139787822962, -0.0004684670129790902, -0.0004426538944244385, -0.00042190568638034165, -0.00040118981269188225, -0.0003775313089136034, -0.0003505614004097879, -0.00032220399589277804, -0.0002960698038805276, -0.0002731856075115502, -0.0002505666925571859, -0.00022693299979437143, -0.00020371979917399585, -0.00018295939662493765, -0.0001640286936890334, -0.00014324650692287832, -0.00011782469664467499, -8.772736327955499e-05, -5.6760858569759876e-05, -2.7819549359264784e-05, 1.0080259471578756e-06, 3.426484909141436e-05, 7.566346903331578e-05, 0.00012474939285311848, 0.00017715789726935327, 0.000229789104196243, 0.00028555819881148636, 0.0003499212034512311, 0.00042490489431656897, 0.0005071288906037807, 0.0005892154877074063, 0.0006654917960986495, 0.0007345494232140481, 0.0007987719727680087, 0.000863872526679188, 0.0009366393205709755, 0.0010185879655182362, 0.0011060379911214113, 0.001194717944599688, 0.0012817590031772852, 0.0013643370475620031, 0.0014367339899763465, 0.001490799942985177, 0.001517434953711927, 0.0015127500519156456, 0.0014815069735050201, 0.0014366050017997622, 0.0013939590426161885, 0.0013667469611391425, 0.0013622860424220562, 0.001379486988298595, 0.0014110079500824213, 0.0014488969463855028, 0.0014879649970680475, 0.0015240319771692157, 0.0015520659508183599, 0.0015673780580982566, 0.0015653329901397228, 0.0015430189669132233, 0.0014993329532444477, 0.0014354869490489364, 0.001356731983833015, 0.0012714510085061193, 0.0011885239509865642, 0.0011131770443171263, 0.0010466160019859672, 0.0009890826186165214, 0.000941067177336663, 0.0008990346104837954, 0.0008544714073650539, 0.0008002190734259784, 0.0007345550111494958, 0.000658681383356452, 0.0005768814007751644, 0.0004966466804035008, 0.00042402901453897357, 0.00036107891355641186, 0.0003081923059653491, 0.0002645383938215673, 0.00022498759790323675, 0.00018075949628837407, 0.0001242987927980721, 5.323249934008345e-05, -2.9388449547695927e-05, -0.00011791590077336878, -0.00020692740508820862, -0.0002902112901210785, -0.00035883928649127483, -0.0004042297077830881, -0.00042468481115065515, -0.00042823029798455536, -0.0004258583066985011, -0.0004267829062882811, -0.00043491649557836354, -0.0004463208024390042, -0.0004514965112321079, -0.00044172510388307273, -0.0004161641118116677, -0.0003807368048001081, -0.0003413601079955697, -0.0003002859011758119, -0.00025715879746712744, -0.00021120079327374697, -0.00016227280138991773, -0.00011032020120183006, -5.729318945668638e-05, -1.0481679964868817e-05, 2.1971989554003812e-05, 3.626375109888613e-05, 3.3123400498880073e-05, 1.5119509953365196e-05, -1.2414569937391207e-05, -4.203886055620387e-05, -6.805564771639183e-05, -8.443272963631898e-05, -8.29847194836475e-05, -5.7459110394120216e-05, -1.0198929885518737e-05, 4.5854369091102853e-05, 9.325647260993719e-05, 0.00011870940215885639, 0.00011798909690696746, 9.521460742689669e-05, 5.930889892624691e-05, 1.9340150174684823e-05, -1.9752989828702994e-05, -5.830873851664364e-05, -0.00010110220318892971, -0.0001529870933154598, -0.00021681739599443972, -0.000292167387669906, -0.00037619000067934394, -0.00046385658788494766, -0.0005495935911312699, -0.0006305545102804899, -0.0007038628100417554, -0.0007661149138584733, -0.000813505903352052, -0.0008422195096500218, -0.0008493867935612798, -0.000831915414892137, -0.0007871593115851283, -0.0007138500805012882, -0.0006163857760839164, -0.0005057741072960198, -0.00039549829671159387, -0.00029844208620488644, -0.0002239599998574704, -0.000177466994500719, -0.00016042409697547555, -0.00017233409744221717, -0.00021158030722290277, -0.00027271610451862216, -0.00034718308597803116, -0.00042209180537611246, -0.00048312029684893787, -0.0005187222850508988, -0.0005229528760537505, -0.000495920074172318, -0.00044574099592864513, -0.00038621851126663387, -0.0003292892943136394, -0.0002826914133038372, -0.0002500280097592622, -0.0002328057016711682, -0.00023233940009959042, -0.00024834691430442035, -0.0002797739871311933, -0.0003250582085456699, -0.00038110199966467917, -0.0004433811118360609, -0.0005063766147941351, -0.0005646360805258155, -0.0006157113239169121, -0.0006620322819799185, -0.0007075584726408124, -0.0007546949200332165, -0.000802727707196027, -0.000849397387355566, -0.0008910857723094523, -0.000922820414416492, -0.0009424035088159144, -0.0009546927758492529, -0.0009686707053333521, -0.0009940707823261619, -0.0010379799641668797, -0.0011024180566892028, -0.0011834190227091312, -0.0012715300545096397, -0.001354873995296657, -0.0014248290099203587, -0.001479370053857565, -0.0015191619750112295, -0.0015423629665747285, -0.0015458980342373252, -0.0015275459736585617, -0.0014888349687680602, -0.0014354990562424064, -0.001374782994389534, -0.001314411056227982, -0.0012623489601537585, -0.0012256089830771089, -0.0012064280454069376, -0.001200595055706799, -0.001198382000438869, -0.0011893659830093384, -0.00116796197835356, -0.0011344420490786433, -0.0010916480096057057, -0.0010435800068080425, -0.0009924237383529544, -0.0009380021947436035, -0.0008792589069344103, -0.0008170228102244437, -0.000753222790081054, -0.0006885792827233672, -0.0006209051935002208, -0.0005460387910716236, -0.00046103779459372163, -0.0003658487112261355, -0.00026162838912568986, -0.000151008294778876, -3.673918035929091e-05, 7.820891914889216e-05, 0.00018715079932007939, 0.00028359508723951876, 0.0003660797083284706, 0.0004354219126980752, 0.000489381025545299, 0.0005287629901431501, 0.0005598647985607386, 0.0005916359950788319, 0.0006332860211841762, 0.0006882190937176347, 0.0007561622769571841, 0.0008364706882275641, 0.0009271139279007912, 0.0010222259443253279, 0.0011124740121886134, 0.0011868519941344857, 0.0012352829799056053, 0.0012513219844549894, 0.001232270966283977, 0.0011791669530794024, 0.001098194974474609, 0.0010014999425038695, 0.0009023571037687361, 0.0008116404060274363, 0.0007381130126304924, 0.0006858194246888161, 0.0006514415144920349, 0.0006266960990615189, 0.0006042267195880413, 0.0005821248050779104, 0.0005632336251437664, 0.0005518313846550882, 0.0005485606961883605, 0.0005492334021255374, 0.0005471677286550403, 0.0005344764795154333, 0.0005064653232693672, 0.00046504000783897936, 0.00041643710574135184, 0.00036792480386793613, 0.0003281384997535497, 0.00030449300538748503, 0.00030030691414140165, 0.00031316481181420386, 0.0003373732033651322, 0.00036503191222436726, 0.00038913870230317116, 0.0004055626050103456, 0.000414605310652405, 0.000420390599174425, 0.00042915219091810286, 0.00044536020141094923, 0.00046859908616170287, 0.0004962342791259289, 0.0005247655790299177, 0.0005513317883014679, 0.0005732367280870676, 0.0005863658734597266, 0.0005875767092220485, 0.0005752114811912179, 0.0005509565817192197, 0.0005216419231146574, 0.000498904671985656, 0.0004943523090332747, 0.0005141216097399592, 0.0005590853979811072, 0.0006265525007620454, 0.000713436515070498, 0.0008158109267242253, 0.0009308845037594438, 0.0010569320293143392, 0.0011911250185221434, 0.0013279230333864689, 0.0014561460120603442, 0.0015653519658371806, 0.0016517960466444492, 0.001719256048090756, 0.001775686047039926, 0.0018278149655088782, 0.0018791219918057323, 0.0019266209565103054, 0.001962766982614994, 0.00197804206982255, 0.001968159107491374, 0.0019383380422368646, 0.0018990619573742151, 0.0018606840167194605, 0.0018268900457769632, 0.001791295944713056, 0.0017404980026185513, 0.0016613430343568325, 0.0015463420422747731, 0.0013954939786344767, 0.001216348959133029, 0.001021194038912654, 0.0008227957878261805, 0.0006336400983855128, 0.0004635381046682596, 0.0003176144964527339, 0.00019698070536833256, 9.861052240012214e-05, 1.5979780073394068e-05, -5.7004221162060276e-05, -0.00012471269292291254, -0.0001930542930494994, -0.0002696033916436136, -0.00035976231447421014, -0.00046412411029450595, -0.0005784552777186036, -0.0006952970870770514, -0.0008080170955508947, -0.0009166023228317499, -0.001025561010465026, -0.0011380099458619952, -0.0012528769439086318, -0.0013656850205734372, -0.001470691990107298, -0.001562761957757175, -0.0016407619696110487, -0.0017045310232788324, -0.0017512580379843712, -0.0017767969984561205, -0.0017792360158637166, -0.001762900035828352, -0.0017352709546685219, -0.0017044730484485626, -0.0016775690019130707, -0.001657527987845242, -0.0016423390479758382, -0.0016270369524136186, -0.001605366007424891, -0.0015725289704278111, -0.001526530017144978, -0.0014680969761684537, -0.0014018700458109379, -0.001333483960479498, -0.0012651319848373532, -0.0011950109619647264, -0.0011185100302100182, -0.001028807950206101, -0.0009196113096550107, -0.0007938224007375538, -0.000664968101773411, -0.0005462854169309139, -0.0004467557882890105, -0.00036975290277041495, -0.0003125469957012683, -0.00026857529883272946, -0.00023266150674317032, -0.00020072849292773753, -0.00016857169975992292, -0.0001328786020167172, -9.064839105121791e-05, -3.9925071178004146e-05, 1.9859180611092597e-05, 8.539416739949957e-05, 0.0001490988943260163, 0.0002003599947784096, 0.0002286430972162634, 0.00022581960365641862, 0.00019035580044146627, 0.00012761949619743973, 4.747508864966221e-05, -3.65167397831101e-05, -0.000109251202957239, -0.00015550589887425303, -0.00016500790661666542, -0.00013779870641883463, -8.407727000303566e-05, -1.83067204488907e-05, 4.413818896864541e-05, 8.858228829922155e-05, 0.00010408760135760531, 8.65043475641869e-05, 3.869934880640358e-05, -3.0470770070678554e-05, -0.00010900790221057832, -0.00018538380390964448, -0.00024861301062628627, -0.00029045340488664806, -0.0003067688085138798, -0.0002993087109643966, -0.00027104929904453456, -0.00022335069661494344, -0.00015577230078633875, -6.928019865881652e-05, 3.1851159292273223e-05, 0.0001414340949850157, 0.000249471195274964, 0.0003473302931524813, 0.0004328454961068928, 0.0005105765885673463, 0.0005881058750674129, 0.0006717587821185589, 0.0007644505240023136, 0.0008639381849206984, 0.0009658777271397412, 0.0010643129935488105, 0.0011533299693837762, 0.0012276240158826113, 0.0012829770566895604, 0.0013169440208002925, 0.00132822897285223, 0.0013188329758122563, 0.001293475041165948, 0.0012572050327435136, 0.0012173070572316647, 0.0011834939941763878, 0.0011644959449768066, 0.0011643710313364863, 0.0011823669774457812, 0.0012154929572716355, 0.001261934987269342, 0.0013200549874454737, 0.0013852929696440697, 0.0014503409620374441, 0.0015082809841260314, 0.0015561030013486743, 0.0015938800061121583, 0.0016201860271394253, 0.00163078005425632, 0.001625137054361403, 0.0016100589418783784, 0.0015967460349202156, 0.0015931579982861876, 0.0015999709721654654, 0.0016133739845827222, 0.0016288369661197066, 0.0016427220543846488, 0.0016520239878445864, 0.0016530669527128339, 0.0016439859755337238, 0.0016254830406978726, 0.0015991399995982647, 0.001565273036248982, 0.0015250210417434573, 0.0014792470028623939, 0.0014298929600045085, 0.0013813730329275131, 0.0013401659671217203, 0.001312374952249229, 0.00130132504273206, 0.0013070639688521624, 0.0013255079975351691, 0.001350497012026608, 0.001375259947963059, 0.0013936200411990285, 0.0014005700359120965, 0.0013921919744461775, 0.0013646000297740102, 0.001312042004428804, 0.001229549990966916, 0.0011160180438309908, 0.0009742805850692093, 0.0008083818247541785, 0.0006200040807016194, 0.0004116786003578454, 0.00019006150250788778, -3.299371019238606e-05, -0.000242780995904468, -0.0004259693087078631, -0.0005724822985939682, -0.0006782594718970358, -0.0007429667166434228, -0.000770997372455895, -0.0007711520884186029, -0.0007570083253085613, -0.0007457120227627456, -0.0007531270966865122, -0.0007881054189056158, -0.0008501298143528402, -0.0009330133907496929, -0.00102680001873523, -0.0011203560279682279, -0.001201402978040278, -0.0012588989920914173, -0.0012881429865956306, -0.0012877159751951694, -0.0012598959729075432, -0.0012104699853807688, -0.00114913797006011, -0.0010902700014412403, -0.0010515439789742231, -0.001048285048455, -0.001086427946574986, -0.001163588953204453, -0.001271352986805141, -0.0013974850298836827, -0.001529559027403593, -0.0016558150527998805, -0.0017665489576756954, -0.0018525189952924848, -0.001904024975374341, -0.0019151639426127076, -0.001888287952169776, -0.0018345549469813704, -0.0017679339507594705, -0.001701770001091063, -0.001645948039367795, -0.0016059869667515159, -0.0015817000530660152, -0.0015673099551349878, -0.00155223801266402, -0.0015240299981087446, -0.0014729889808222651, -0.0013943769736215472, -0.001288097002543509, -0.0011611999943852425, -0.0010244420263916254, -0.0008878327789716423, -0.0007584610139019787, -0.0006385755841620266, -0.0005270538968034089, -0.0004242869035806507, -0.0003354717919137329, -0.0002653498959261924, -0.00021305399422999471, -0.000172400294104591, -0.00013548429706133902, -9.650040738051757e-05, -5.5477659770986065e-05, -1.816002986743115e-05, 1.0326880328648258e-05, 2.9878179702791385e-05, 4.684440136770718e-05, 7.182129775173962e-05, 0.00011514440120663494, 0.00018273679597768933, 0.00026991849881596863, 0.000364636885933578, 0.000455259985756129, 0.000534110120497644, 0.0005981053109280765, 0.0006496639107353985, 0.0006936215795576572, 0.0007311351946555078, 0.0007600350072607398, 0.0007768375216983259, 0.0007801029132679105, 0.0007713498780503869, 0.0007553758914582431, 0.0007374904816970229, 0.0007194699719548225, 0.0007032352732494473, 0.0006913089891895652, 0.0006866832845844328, 0.0006926393252797425, 0.0007128592114895582, 0.0007476483006030321, 0.0007918315241113305, 0.0008372085285373032, 0.0008736684103496373, 0.0008933076751418412, 0.0008931205957196653, 0.0008748866966925561, 0.0008449613815173507, 0.000811736099421978, 0.0007800168823450804, 0.0007491359137929976, 0.0007159645901992917, 0.0006773374043405056, 0.0006327629089355469, 0.0005839579971507192, 0.0005348980776034296, 0.0004901775973848999, 0.0004548215074464679, 0.00043438069405965507, 0.0004290957876946777, 0.0004309414071030915, 0.0004288294003345072, 0.0004133318143431097, 0.000381804711651057, 0.00033562429598532617, 0.0002790357102639973, 0.000216626503970474, 0.0001490839058533311, 7.606775034219027e-05, 3.888829951392836e-07, -7.361207099165767e-05, -0.0001437306054867804, -0.00020906080317217857, -0.00026941660325974226, -0.0003230478905607015, -0.0003659391077235341, -0.0003942188050132245, -0.000405581813538447, -0.0003977351007051766, -0.00036931890645064414, -0.0003231996961403638, -0.0002687558007892221, -0.00021604759967885911, -0.00016927199612837285, -0.0001263409067178145, -8.23542577563785e-05, -3.2303269108524546e-05, 2.722077988437377e-05, 9.337985829915851e-05, 0.00015735060151200742, 0.0002086291933665052, 0.00024128760560415685, 0.0002548221964389086, 0.00025369899231009185, 0.00024676680914126337, 0.00024396739900112152, 0.00025164600810967386, 0.00026994329527951777, 0.00029482541140168905, 0.0003206272085662931, 0.00034322019200772047, 0.0003610267012845725, 0.00037335880915634334, 0.000379036704543978, 0.0003787236928474158, 0.0003754291101358831, 0.00036986079066991806, 0.00035777530865743756, 0.00033700550557114184, 0.00030894350493326783, 0.00027549860533326864, 0.00023727960069663823, 0.000196908600628376, 0.00015953229740262032, 0.0001303643948631361, 0.00011179110151715577, 0.00010468540131114423, 0.00010981880041072145, 0.00012448820052668452, 0.00014290980470832437, 0.0001592467015143484, 0.00016733059601392597, 0.00016127449634950608, 0.00013992239837534726, 0.00010760690202005208, 7.042757351882756e-05, 3.2708889193600044e-05, -2.44290004047798e-06, -3.36358389176894e-05, -6.247692363103852e-05, -9.107126243179664e-05, -0.00012111329851904884, -0.0001514947070972994, -0.00017732659762259573, -0.0001898579066619277, -0.00018166650261264294, -0.00015149109822232276, -0.00010351410310249776, -4.892101060249843e-05, -7.163874897742062e-07, 3.1753901566844434e-05, 4.462166180019267e-05, 3.926160934497602e-05, 2.0206880435580388e-05, -6.803004907851573e-06, -3.719633969012648e-05, -6.714346091030166e-05, -9.419147681910545e-05, -0.0001177594022010453, -0.00013604060222860426, -0.00014601490693166852, -0.00014583830488845706, -0.0001383417984470725, -0.00012930319644510746, -0.0001227829052368179, -0.00011992619693046436, -0.00011921839904971421, -0.00011920819815713912, -0.00012033840175718069, -0.00012619930203072727, -0.00014104010188020766, -0.0001665861054789275, -0.00020278070587664843, -0.00024913749075494707, -0.00030261260690167546, -0.0003572870045900345, -0.00040824819006957114, -0.00045293220318853855, -0.0004884001100435853, -0.0005121345166116953, -0.0005216164281591773, -0.0005150752840563655, -0.00049183628289029, -0.00045466801384463906, -0.00040736570372246206, -0.0003534005954861641, -0.0002976988034788519, -0.0002458849048707634, -0.00020447210408747196, -0.00017950139590539038, -0.00017549250333104283, -0.0001936982007464394, -0.00023230729857459664, -0.0002834922925103456, -0.00033546920167282224, -0.00037840180448256433, -0.00040539068868383765, -0.0004166720900684595, -0.00041922880336642265, -0.000421129196183756, -0.00042708340333774686, -0.00043820569408126175, -0.00045341430814005435, -0.00046780798584222794, -0.00047260618885047734, -0.0004602115077432245, -0.00042820858652703464, -0.00037998100742697716, -0.0003205290122423321, -0.0002540588902775198, -0.00018381049449089915, -0.00011315120354993269, -4.5456941734300926e-05, 1.5848689145059325e-05, 6.638289778493345e-05, 0.00010337160347262397, 0.00012711199815385044, 0.00014093739446252584, 0.00014747880049981177, 0.00014678449952043593, 0.00013837890583090484, 0.00012298699584789574, 0.00010389539966126904, 8.802019146969542e-05, 8.269085810752586e-05, 8.934752258937806e-05, 0.00010195629874942824, 0.00011133970110677183, 0.00011024260311387479, 9.488200885243714e-05, 6.648353155469522e-05, 2.945559026557021e-05, -1.1943459867325146e-05, -5.460244938149117e-05, -9.776712249731645e-05, -0.00014336399908643216, -0.00019397240248508751, -0.0002508678880985826, -0.00031406921334564686, -0.00038387280073948205, -0.00045910890912637115, -0.0005349668208509684, -0.0006061248132027686, -0.0006704857805743814, -0.0007270142086781561, -0.0007753035170026124, -0.0008156087133102119, -0.0008470481843687594, -0.0008685900829732418, -0.0008818937931209803, -0.0008913591736927629, -0.0009031667141243815, -0.0009218946797773242, -0.0009474955732002854, -0.0009763228008523583, -0.001003416022285819, -0.0010236790403723717, -0.0010318659478798509, -0.0010248159524053335, -0.0010033630533143878, -0.0009689796133898199, -0.0009221744257956743, -0.0008617111016064882, -0.0007859520264901221, -0.0006946790963411331, -0.000592840020544827, -0.0004936850164085627, -0.0004132367903366685, -0.00036186640500091016, -0.00034259509993717074, -0.00035344139905646443, -0.0003888788924086839, -0.0004421763005666435, -0.000506626209244132, -0.0005754873272962868, -0.0006391929928213358, -0.0006837231921963394, -0.0006947777001187205, -0.0006625435198657215, -0.0005840928060933948, -0.0004657809913624078, -0.00031963299261406064, -0.00015990500105544925, 1.1892219617948285e-06, 0.00015454420645255595, 0.00029138728859834373, 0.0004029338888358325, 0.0004814256972167641, 0.0005256058066152036, 0.0005403045215643942, 0.0005343772936612368, 0.0005183733883313835, 0.0004994110204279423, 0.00048068829346448183, 0.0004650015907827765, 0.00045664049685001373, 0.00045868189772590995, 0.0004715700924862176, 0.000494214182253927, 0.0005264516221359372, 0.000567203271202743, 0.0006104637286625803, 0.0006468915962614119, 0.0006694396724924445, 0.0006761502008885145, 0.0006681531085632741, 0.000645495078060776, 0.0006080046878196299, 0.0005565698957070708, 0.0004932237206958234, 0.0004221929993946105, 0.0003489706141408533, 0.00027956400299444795, 0.00021685629326384515, 0.00015987560618668795, 0.00010411239782115445, 4.6108110836939886e-05, -1.4028530131326988e-05, -7.633480709046125e-05, -0.00014376940089277923, -0.0002220838941866532, -0.0003158070903737098, -0.0004262999864295125, -0.0005504500004462898, -0.0006823656731285155, -0.0008163884049281478, -0.0009469966171309352, -0.00107096997089684, -0.0011865870328620076, -0.001289566047489643, -0.0013719010166823864, -0.0014243409968912601, -0.001438237028196454, -0.001406347961165011, -0.00132651103194803, -0.001203989959321916, -0.001051530009135604, -0.0008899404783733189, -0.0007413430721499026, -0.0006232361774891615, -0.0005454493802972138, -0.0005083535215817392, -0.0005060879047960043, -0.0005287015810608864, -0.000564918911550194, -0.0006023250753059983, -0.0006290004239417613, -0.0006381077109836042, -0.0006278317887336016, -0.0005962650757282972, -0.0005415905034169555, -0.0004641049890778959, -0.0003683835966512561, -0.0002641436003614217, -0.00016373379912693053, -7.839142926968634e-05, -1.1758250366256107e-05, 4.0370930946664885e-05, 8.570707723265514e-05, 0.00013230140029918402, 0.00018659490160644054, 0.0002489098988007754, 0.00031649108859710395, 0.00038617709651589394, 0.0004556037893053144, 0.0005219975137151778, 0.0005821305094286799, 0.0006309421150945127, 0.0006617917097173631, 0.0006700978265143931, 0.0006557510932907462, 0.0006240499787963927, 0.0005816586199216545, 0.0005352199077606201, 0.000489953497890383, 0.00045008279266767204, 0.00041720439912751317, 0.00038923879037611187, 0.00036210360121913254, 0.00033117301063612103, 0.0002954385126940906, 0.0002583758032415062, 0.0002246548974653706, 0.00019702650024555624, 0.00017079009558074176, 0.00013719640264753252, 8.89176080818288e-05, 2.5718820324982516e-05, -4.615488069248386e-05, -0.00011833690223284066, -0.0001843508071033284, -0.0002421160024823621, -0.00029364199144765735, -0.00034341320861130953, -0.00039348480640910566, -0.0004392105038277805, -0.0004704651073552668, -0.00047692880616523325, -0.00045290039270184934, -0.0003979757020715624, -0.0003189166891388595, -0.00023036569473333657, -0.00014852560707367957, -8.367069676751271e-05, -3.9723490772303194e-05, -1.4428879694605712e-05, -7.505840926569363e-07, 9.660206160333473e-06, 2.417212090222165e-05, 4.7102090320549905e-05, 7.807101792423055e-05, 0.00011433669715188444, 0.0001519901998108253, 0.00018950180674437433, 0.00022968670236878097, 0.0002771473955363035, 0.0003338610986247659, 0.0003986562951467931, 0.0004677466058637947, 0.0005343515076674521, 0.0005911394255235791, 0.000634420313872397, 0.0006654280005022883, 0.0006900171865709126, 0.0007156101055443287, 0.0007472378201782703, 0.0007877346943132579, 0.0008366642287001014, 0.0008869637968018651, 0.0009252203744836152, 0.0009390030172653496, 0.0009225750109180808, 0.0008799794013611972, 0.0008222899050451815, 0.0007627524901181459, 0.0007123267278075218, 0.0006762549164704978, 0.0006546758231706917, 0.0006417090771719813, 0.0006283249822445214, 0.0006064549088478088, 0.0005722715286538005, 0.0005278523894958198, 0.00048017941298894584, 0.00043923238990828395, 0.00041437079198658466, 0.0004114201874472201, 0.0004298053099773824, 0.0004613214114215225, 0.0004947750712744892, 0.000520664791110903, 0.0005333452136255801, 0.0005311043933033943, 0.0005132487858645618, 0.00047916319454088807, 0.0004287601914256811, 0.00036212700069881976, 0.00028215680504217744, 0.0001946694974321872, 0.00010641250264598057, 2.426564969937317e-05, -4.6639470383524895e-05, -0.00010139300138689578, -0.0001378207962261513, -0.00016009710088837892, -0.00017358410696033388, -0.0001833317946875468, -0.00019233599596191198, -0.00019897180027328432, -0.00019666469597723335, -0.00017693899280857295, -0.00013638449308928102, -7.918424671515822e-05, -1.1636179806373548e-05, 6.073609984014183e-05, 0.00013270600175019354, 0.00019766429613810033, 0.00024868210311979055, 0.0002785178949125111, 0.00028262700652703643, 0.0002620313025545329, 0.0002248897944809869, 0.00018534960690885782, 0.000157449598191306, 0.00015112600522115827, 0.00016737690020818263, 0.00020188509370200336, 0.0002495991066098213, 0.0003049277001991868, 0.00036300410283729434, 0.0004190276958979666, 0.00046774960355833173, 0.0005054274224676192, 0.0005302862846292555, 0.0005410655867308378, 0.000538550375495106, 0.000524756673257798, 0.0005003978149034083, 0.0004669349000323564, 0.0004271102952770889, 0.0003827108012046665, 0.00033385519054718316, 0.0002817035128828138, 0.00023012940073385835, 0.00018418139370623976, 0.0001459774939576164, 0.00011304380313958973, 8.200861338991672e-05, 5.307063111104071e-05, 3.225283944630064e-05, 2.5268869649153203e-05, 3.169400952174328e-05, 4.973847171640955e-05, 7.73503998061642e-05, 0.00010965260298689827, 0.00014211679808795452, 0.00017425209807697684, 0.00020842179947067052, 0.0002474019129294902, 0.00029162169084884226, 0.0003410473873373121, 0.0003966173098888248, 0.000461512798210606, 0.000538629072252661, 0.000623692583758384, 0.0007070775027386844, 0.0007768053910695016, 0.0008235372952185571, 0.00084354990394786, 0.0008396998164243996, 0.0008198270807042718, 0.000792484381236136, 0.0007649922044947743, 0.0007423852803185582, 0.0007270019850693643, 0.0007148127187974751, 0.0006970650865696371, 0.0006689102156087756, 0.0006307394942268729, 0.000585948524530977, 0.0005396861233748496, 0.0004943201201967895, 0.000445629091700539, 0.0003876657865475863, 0.0003157664032187313, 0.000226123898755759, 0.0001198683021357283, 3.1433698950422695e-06, -0.0001153838966274634, -0.00022803009778726846, -0.00033055461244657636, -0.0004253133956808597, -0.0005214589182287455, -0.0006262966780923307, -0.0007392126717604697, -0.0008520116098225117, -0.000955834926571697, -0.0010452100541442633, -0.0011194919934496284, -0.0011823589447885752, -0.0012379740364849567, -0.0012871259823441505, -0.0013273980002850294, -0.0013567289570346475, -0.0013745409669354558, -0.001383148948661983, -0.0013867999659851193, -0.0013901849742978811, -0.0013980569783598185, -0.0014113859506323934, -0.0014269109815359116, -0.001442042994312942, -0.0014546130551025271, -0.0014610439538955688, -0.0014564819866791368, -0.0014366500545293093, -0.0013984240358695388, -0.0013428200036287308, -0.001276210998184979, -0.0012049729702994227, -0.0011310289846733212, -0.0010511280270293355, -0.0009604949154891074, -0.0008570008794777095, -0.0007447152165696025, -0.0006341856205835938, -0.0005356675828807056, -0.0004528299905359745, -0.00038289499934762716, -0.0003197896876372397, -0.0002570773067418486, -0.00019259970576968044, -0.0001306852063862607, -7.725688919890672e-05, -3.360061964485794e-05, 4.085619821125874e-06, 4.251412974554114e-05, 8.765356324147433e-05, 0.00014350000128615648, 0.00021442670549731702, 0.0003044499026145786, 0.00041301059536635876, 0.0005345555837266147, 0.0006609532865695655, 0.000782801304012537, 0.0008914825157262385, 0.0009816032834351063, 0.001052386942319572, 0.0011066349688917398, 0.001147228991612792, 0.0011746040545403957, 0.0011874879710376263, 0.0011844780528917909, 0.001168080954812467, 0.0011423990363255143, 0.0011106040328741074, 0.0010751240188255906, 0.0010370520176365972, 0.0009975516004487872, 0.0009558586752973497, 0.0009088426013477147, 0.0008528552716597915, 0.0007861931808292866, 0.0007129019941203296, 0.0006390149937942624, 0.000571739801671356, 0.0005179141880944371, 0.00047948129940778017, 0.000454056600574404, 0.0004368149093352258, 0.00042034030775539577, 0.0003981440095230937, 0.0003663914103526622, 0.0003231125883758068, 0.00026962620904669166, 0.00021055599790997803, 0.0001509556022938341, 9.556711302138865e-05, 4.6393979573622346e-05, 2.2341430394590134e-06, -3.763478161999956e-05, -7.035458838799968e-05, -8.862760296324268e-05, -8.44916794449091e-05, -5.470206087920815e-05, -1.944298901435104e-06, 6.614442827412859e-05, 0.00013796970597468317, 0.00020120250701438636, 0.00024704300449229777, 0.00027214980218559504, 0.0002792880986817181, 0.00027550029335543513, 0.00027011509519070387, 0.00027112659881822765, 0.00028009130619466305, 0.00029558729147538543, 0.0003139715117868036, 0.0003276508941780776, 0.0003298354858998209, 0.00031824730103835464, 0.0002965677995234728, 0.00027305580442771316, 0.0002586746122688055, 0.00026490099844522774, 0.0003015540132764727, 0.00037488600355573, 0.0004866931994911283, 0.0006319158710539341, 0.0007974358159117401, 0.00096632179338485, 0.001124404021538794, 0.0012624009978026152, 0.0013758509885519743, 0.0014645470073446631, 0.001531671965494752, 0.0015812950441613793, 0.0016181019600480795, 0.0016466829692944884, 0.001669366960413754, 0.0016861390322446823, 0.0016956259496510029, 0.0016954640159383416, 0.0016842179466038942, 0.0016618820372968912, 0.001626807963475585, 0.0015737720532342792, 0.0014999370323494077, 0.0014081139815971255, 0.0013048399705439806, 0.0011992730433121324, 0.0011019610101357102, 0.0010194870410487056, 0.0009498735889792442, 0.0008876466890797019, 0.0008268483798019588, 0.0007642019190825522, 0.0006983298226259649, 0.0006262570968829095, 0.0005431331228464842, 0.00044733480899594724, 0.00034185589174740016, 0.00023239929578267038, 0.0001256456016562879, 2.6123560019186698e-05, -6.225176912266761e-05, -0.0001367305958410725, -0.00019865170179400593, -0.0002513343933969736, -0.000295824691420421, -0.00033038630499504507, -0.00035316860885359347, -0.00036533380625769496, -0.0003711793979164213, -0.00037742240238003433, -0.00039009639294818044, -0.0004128105938434601, -0.0004476727917790413, -0.0004969210713170469, -0.0005632442771457136, -0.0006457972922362387, -0.0007390921236947179, -0.000834914215374738, -0.0009238289785571396, -0.0009961287723854184, -0.0010433739516884089, -0.0010608700104057789, -0.0010454549919813871, -0.000994182308204472, -0.0009060692973434925, -0.0007864260114729404, -0.0006505876081064343, -0.0005172244273126125, -0.0004021227068733424, -0.0003128104144707322, -0.0002495736989658326, -0.00020771590061485767, -0.0001781798928277567, -0.00015076229465194046, -0.00011384169920347631, -5.944440999883227e-05, 1.0232270142296329e-05, 8.795302710495889e-05, 0.00016551009321119636, 0.0002368082059547305, 0.0003012708912137896, 0.00035979971289634705, 0.00041424931259825826, 0.00046740210382267833, 0.0005218929727561772, 0.0005804823013022542, 0.0006434426177293062, 0.0007057375041767955, 0.0007571931928396225, 0.000787263794336468, 0.0007922713994048536, 0.0007758288993500173, 0.0007454432779923081, 0.0007089534192346036, 0.0006692755850963295, 0.000625109882093966, 0.0005710106925107539, 0.0005008911830373108, 0.0004109363944735378, 0.00029995921067893505, 0.0001691448997007683, 1.9840050299535505e-05, -0.0001464727974962443, -0.00032702001044526696, -0.0005129952915012836, -0.0006915840785950422, -0.0008506120066158473, -0.00098010478541255, -0.0010759140131995082, -0.0011383979581296444, -0.0011718620080500841, -0.001184634049423039, -0.0011859240476042032, -0.0011836879421025515, -0.001181571977213025, -0.0011776420287787914, -0.001164486980997026, -0.0011338359909132123, -0.0010831990512087941, -0.0010111170122399926, -0.0009145305957645178, -0.0007909446721896529, -0.0006398119148798287, -0.0004645092994906008, -0.00027428180328570306, -8.082309068413451e-05, 0.00010460490011610091, 0.00027447010506875813, 0.0004264898889232427, 0.0005616900161840022, 0.000682230107486248, 0.00078889838187024, 0.000882440188433975, 0.0009655613102950156, 0.001043834025040269, 0.0011251169489696622, 0.0012158669997006655, 0.0013170959427952766, 0.0014236080460250378, 0.0015255489852279425, 0.001614477951079607, 0.0016884070355445147, 0.0017505900468677282, 0.001805383013561368, 0.0018568569794297218, 0.0019079430494457483, 0.0019628629088401794, 0.002026681089773774, 0.002102561993524432, 0.0021902350708842278, 0.002284891903400421, 0.0023800861090421677, 0.0024695659521967173, 0.0025455099530518055, 0.0025984710082411766, 0.0026165670715272427, 0.002588283969089389, 0.0025073010474443436, 0.0023760648909956217, 0.0022032600827515125, 0.0019996738992631435, 0.0017771970015019178, 0.001545647974126041, 0.001313467975705862, 0.00108698895201087, 0.0008672592812217772, 0.0006514915730804205, 0.0004367576912045479, 0.00022234530479181558, 1.0437939636176452e-05, -0.00019323709420859814, -0.0003812180075328797, -0.0005481931730173528, -0.0006909485091455281, -0.0008061780827119946, -0.0008893624763004482, -0.000934598792809993, -0.0009356820955872536, -0.0008922741981223226, -0.0008139032870531082, -0.0007140933885239065, -0.0006056465208530426, -0.0004990901215933263, -0.00040161630022339523, -0.00031896779546514153, -0.0002569278876762837, -0.00021859370463062078, -0.00020419030624907464, -0.00021197370369918644, -0.00023532840714324266, -0.0002632910036481917, -0.0002837369975168258, -0.00028662479599006474, -0.00026526639703661203, -0.00021753530018031597, -0.00014655580162070692, -5.571529982262291e-05, 5.341587893781252e-05, 0.00017806660616770387, 0.00031293221400119364, 0.0004527198907453567, 0.0005933665088377893, 0.0007308963104151189, 0.0008624790934845805, 0.0009854446398094296, 0.001093789003789425, 0.0011787839466705918, 0.0012335809879004955, 0.0012588270474225283, 0.0012639079941436648, 0.0012621659552678466, 0.00126628705766052, 0.0012870749924331903, 0.0013290089555084705, 0.001386774005368352, 0.001450521987862885, 0.0015112810069695115, 0.0015677310293540359, 0.0016252710483968258, 0.0016912199789658189, 0.0017700400203466415, 0.0018585469806566834, 0.0019497249741107225, 0.0020350900012999773, 0.0021087690256536007, 0.0021688949782401323, 0.0022151849698275328, 0.0022488210815936327, 0.0022704889997839928, 0.0022802678868174553, 0.0022755530662834644, 0.0022526539396494627, 0.0022089609410613775, 0.002143709920346737, 0.002058961894363165, 0.0019599581137299538, 0.0018536599818617105, 0.0017459969967603683, 0.0016402410110458732, 0.001537322998046875, 0.0014330450212582946, 0.0013186390278860927, 0.0011870160233229399, 0.0010360049782320857, 0.0008667224901728332, 0.0006828323821537197, 0.0004918241174891591, 0.00030282430816441774, 0.00012454019451979548, -3.798881152761169e-05, -0.000183414900675416, -0.0003082942857872695, -0.00040550061385147274, -0.00046822690637782216, -0.0004958899808116257, -0.000496429274789989, -0.00048281010822393, -0.00046819710405543447, -0.0004630943003576249, -0.0004725349135696888, -0.0004946484114043415, -0.0005239772144705057, -0.0005511114723049104, -0.000565060880035162, -0.0005577611154876649, -0.0005275344010442495, -0.0004815015126951039, -0.00043068171362392604, -0.00038567750016227365, -0.0003529161913320422, -0.0003355683002155274, -0.0003333860950078815, -0.00034357179538346827, -0.00036208401434123516, -0.00038521859096363187, -0.00041067099664360285, -0.0004373429110273719, -0.0004654410877265036, -0.0004939840873703361, -0.0005196426063776016, -0.000537548097781837, -0.0005428909207694232, -0.0005318291950970888, -0.0005015042261220515, -0.0004534810141194612, -0.00039702479261904955, -0.0003467726055532694, -0.00031456220312975347, -0.0003044196928385645, -0.0003109755052719265, -0.0003230618021916598, -0.00033054559025913477, -0.0003294810885563493, -0.00032131740590557456, -0.00031175740878097713, -0.00030861940467730165, -0.00032054539769887924, -0.00035410100826993585, -0.0004117350035812706, -0.0004928847192786634, -0.0005929954932071269, -0.0007034286973066628, -0.00081416848115623, -0.0009149935212917626, -0.0009966748766601086, -0.0010526649421080947, -0.0010825080098584294, -0.0010925199603661895, -0.001093655009754002, -0.0010960500221699476, -0.0011062000412493944, -0.0011246720096096396, -0.0011467289878055453, -0.0011666619684547186, -0.0011806039838120341, -0.001188409049063921, -0.0011919779935851693, -0.001194723998196423, -0.0012001469731330872, -0.0012107460061088204, -0.0012291229795664549, -0.0012563109630718827, -0.001289358944632113, -0.0013233580393716693, -0.0013550319708883762, -0.001382671995088458, -0.0014049039455130696, -0.0014237579889595509, -0.00144472299143672, -0.0014692960539832711, -0.0014899390516802669, -0.00149051402695477, -0.001453935052268207, -0.001368541968986392, -0.0012319970410317183, -0.0010518749477341771, -0.0008447826257906854, -0.000634513096883893, -0.00044890970457345247, -0.0003096289874520153, -0.0002247144002467394, -0.00018847039609681815, -0.00018571640248410404, -0.00019825970230158418, -0.00020935549400746822, -0.0002056741068372503, -0.00017793590086512268, -0.0001206520973937586, -3.281711906311102e-05, 8.249885286204517e-05, 0.00021806090080644935, 0.0003622705116868019, 0.0004994219052605331, 0.0006104353233240545, 0.0006783332210034132, 0.0006934229750186205, 0.000655913318041712, 0.0005743950023315847, 0.00046136739547364414, 0.0003313239139970392, 0.00019910170522052795, 7.875299343140796e-05, -2.2040110707166605e-05, -0.00010411380208097398, -0.00016781530575826764, -0.000206552300369367, -0.00021065700275357813, -0.00017234659753739834, -9.025335020851344e-05, 2.9126160370651633e-05, 0.0001707974006421864, 0.00031689461320638657, 0.00045417388901114464, 0.0005754097946919501, 0.0006794232758693397, 0.0007689502090215683, 0.0008449049200862646, 0.0009038652060553432, 0.0009439103887416422, 0.0009683900279924273, 0.0009842382278293371, 0.0009960411116480827, 0.001004862948320806, 0.0010127919958904386, 0.001023179036565125, 0.0010392169933766127, 0.0010633040219545364, 0.0010943040251731873, 0.0011258419835940003, 0.0011459849774837494, 0.0011419879738241434, 0.0011078650131821632, 0.0010475900489836931, 0.0009728210279718041, 0.0008970306953415275, 0.0008320009219460189, 0.000786328106187284, 0.0007641061092726886, 0.0007653608918190002, 0.000786679913289845, 0.0008245253120549023, 0.0008778747287578881, 0.0009447279153391719, 0.00101839704439044, 0.0010905100498348475, 0.001153178047388792, 0.0012017369735985994, 0.0012367439921945333, 0.001262048026546836, 0.0012819640105590224, 0.0012969759991392493, 0.0013024560175836086, 0.0012923020403832197, 0.0012626009993255138, 0.00121474196203053, 0.0011545580346137285, 0.0010897800093516707, 0.0010299179702997208, 0.000983617384918034, 0.0009567976812832057, 0.0009489586809650064, 0.0009513234836049378, 0.0009517946746200323, 0.0009396453970111907, 0.0009081158204935491, 0.0008544753072783351, 0.0007782885222695768, 0.0006823358125984669, 0.000569998228456825, 0.0004418920143507421, 0.0002990140928886831, 0.00014387740520760417, -2.0560970369842835e-05, -0.00018864420417230576, -0.000353464885847643, -0.0005103665753267705, -0.0006566246156580746, -0.0007945480174385011, -0.0009321615798398852, -0.0010776700219139457, -0.001236859941855073, -0.0014104190049692988, -0.001594268949702382, -0.0017793929437175393, -0.0019517740001901984, -0.0020992690697312355, -0.0022176310885697603, -0.0023115859366953373, -0.0023889539297670126, -0.002457842929288745, -0.002526935888454318, -0.0026007189881056547, -0.0026755989529192448, -0.0027411379851400852, -0.0027871939819306135, -0.002808409044519067, -0.002802330069243908, -0.0027650310657918453, -0.0026908109430223703, -0.0025770149659365416, -0.00242978404276073, -0.0022664950229227543, -0.002110718982294202, -0.0019855389837175608, -0.0019121549557894468, -0.0019068090477958322, -0.0019775310065597296, -0.0021203169599175453, -0.0023193340748548508, -0.0025522441137582064, -0.002794597065076232, -0.003022765973582864, -0.0032131040934473276, -0.0033450850751250982, -0.00340835889801383, -0.0034027099609375, -0.003334897104650736, -0.0032173190265893936, -0.0030658480245620012, -0.0028961729258298874, -0.002721887081861496, -0.0025512289721518755, -0.002382277976721525, -0.002205523895099759, -0.0020088190212845802, -0.0017814389429986477, -0.0015169359976425767, -0.001216538017615676, -0.0008882951224222779, -0.0005423534894362092, -0.00018892450316343457, 0.0001615034998394549, 0.0004993787733837962, 0.000815986713860184, 0.0011038649827241898, 0.0013576969504356384, 0.0015739209484308958, 0.0017498249653726816, 0.0018849499756470323, 0.001981307053938508, 0.0020437759812921286, 0.002078430028632283, 0.002092663897201419, 0.0020948240999132395, 0.0020929130259901285, 0.00209237402305007, 0.002093113958835602, 0.002091015921905637, 0.0020796549506485462, 0.002051400952041149, 0.002002368913963437, 0.0019327850313857198, 0.0018468309426680207, 0.0017526430310681462, 0.0016594480257481337, 0.0015750189777463675, 0.0015014909440651536, 0.0014348450349643826, 0.0013689600164070725, 0.0012977420119568706, 0.0012137610465288162, 0.0011075399816036224, 0.0009718009969219565, 0.0008041938999667764, 0.0006080192979425192, 0.0003931031096726656, 0.00017565330199431628, -2.5459579774178565e-05, -0.00019304369925521314, -0.00031456779106520116, -0.00038689348730258644, -0.0004142393881920725, -0.00040648059803061187, -0.00037549439002759755, -0.00033155170967802405, -0.00027971650706604123, -0.00021954230032861233, -0.00014877860667183995, -6.557284359587356e-05, 2.948807923530694e-05, 0.0001334964035777375, 0.00023893230536486953, 0.00033401369000785053, 0.0004070136055815965, 0.00044782200711779296, 0.000450549996457994, 0.0004143436090089381, 0.00034391749068163335, 0.000247069401666522, 0.00013099009811412543, 2.697097897907952e-06, -0.00013269559713080525, -0.00027162808692082763, -0.0004111622110940516, -0.0005470113828778267, -0.0006722675170749426, -0.0007780250743962824, -0.0008556811953894794, -0.0008990570204332471, -0.0009061460150405765, -0.0008835952030494809, -0.000845614995341748, -0.0008076183148659766, -0.0007811635150574148, -0.000773733772803098, -0.0007861243793740869, -0.0008104671724140644, -0.0008324523805640638, -0.0008395552285946906, -0.0008241113973781466, -0.0007820167811587453, -0.0007131114252842963, -0.0006208621198311448, -0.0005114789819344878, -0.0003912078100256622, -0.0002659921010490507, -0.00014021640527062118, -1.4668090443592519e-05, 0.0001115413979277946, 0.00023634849640075117, 0.0003528463130351156, 0.0004527500132098794, 0.0005282043130137026, 0.000574579811654985, 0.0005902362172491848, 0.0005766673712059855, 0.0005368309211917222, 0.0004750535008497536, 0.0003980426990892738, 0.00031388920615427196, 0.0002311488933628425, 0.00015911819355096668, 0.00010694080265238881, 8.233748667407781e-05, 9.11518291104585e-05, 0.0001341618044534698, 0.0002027964947046712, 0.0002833681064657867, 0.00035983530688099563, 0.00041872909059748054, 0.0004520589136518538, 0.00045658991439267993, 0.0004326986090745777, 0.0003827165928669274, 0.00031071470584720373, 0.0002192406973335892, 0.00010645340080372989, -2.905549990828149e-05, -0.00018015819659922272, -0.0003328587918076664, -0.0004727584891952574, -0.000587373913731426, -0.0006699673249386251, -0.0007193997153081, -0.0007368826773017645, -0.0007276264950633049, -0.0006983287748880684, -0.0006548804230988026, -0.0006015487015247345, -0.0005418782238848507, -0.0004792239051312208, -0.00041966591379605234, -0.0003744116984307766, -0.00035642649163492024, -0.00037346911267377436, -0.0004240474954713136, -0.0004995047929696739, -0.0005880063981749117, -0.0006785215809941292, -0.0007620570249855518, -0.0008319459739141166, -0.0008846108103170991, -0.0009205415262840688, -0.0009432992083020508, -0.0009567185188643634, -0.0009641313808970153, -0.0009676516056060791, -0.0009670634171925485, -0.0009612289723008871, -0.0009466347983106971, -0.0009175498853437603, -0.0008675028802827001, -0.0007909446721896529, -0.0006871892837807536, -0.0005632186075672507, -0.00043077970622107387, -0.0002995549002662301, -0.0001742134045343846, -5.804804095532745e-05, 4.759497824124992e-05, 0.0001455947058275342, 0.00024388039309997112, 0.00035115060745738447, 0.0004698474076576531, 0.0005976642132736742, 0.0007282817969098687, 0.0008532323990948498, 0.0009606116218492389, 0.0010323210153728724, 0.0010474870214238763, 0.0009866913314908743, 0.0008374929893761873, 0.0005997198168188334, 0.00028762250440195203, -7.246388850035146e-05, -0.00044812800479121506, -0.0008040792890824378, -0.0011066009756177664, -0.0013273650547489524, -0.0014454950578510761, -0.0014498409582301974, -0.0013415219727903605, -0.0011358909541741014, -0.0008612027741037309, -0.0005562945734709501, -0.0002640718885231763, -2.552085970819462e-05, 0.00012861780123785138, 0.00017962510173674673, 0.0001179230966954492, -5.136480831424706e-05, -0.00030619269818998873, -0.0006118380115367472, -0.0009288929868489504, -0.001222515944391489, -0.0014684259658679366, -0.0016567090060561895, -0.0017896420322358608, -0.0018787230364978313, -0.0019381040474399924, -0.001979920081794262, -0.0020150020718574524, -0.0020534340292215347, -0.0021016369573771954, -0.0021625300869345665, -0.00223716301843524, -0.0023236959241330624, -0.0024167438969016075, -0.0025104740634560585, -0.0026022770907729864, -0.0026908759027719498, -0.0027743480168282986, -0.0028507988899946213, -0.0029163178987801075, -0.0029639611020684242, -0.0029856350738555193, -0.002974345115944743, -0.00292574311606586, -0.0028365401085466146, -0.002704811980947852, -0.002533863065764308, -0.0023356089368462563, -0.0021288800053298473, -0.0019351179944351315, -0.0017728309612721205, -0.0016546309925615788, -0.0015855790115892887, -0.0015597169985994697, -0.0015610350528731942, -0.001566583989188075, -0.0015535580459982157, -0.0015088190557435155, -0.0014270750107243657, -0.001306738005951047, -0.0011510159820318222, -0.0009702639072202146, -0.0007810412207618356, -0.0006026303744874895, -0.0004533535975497216, -0.0003468449867796153, -0.0002901357947848737, -0.0002817432105075568, -0.0003135779988951981, -0.0003751326003111899, -0.0004535866028163582, -0.0005318776238709688, -0.0005914730136282742, -0.0006161748897284269, -0.0005955399828962982, -0.0005297713214531541, -0.00043080339673906565, -0.00031891430262476206, -0.00022045770310796797, -0.0001599178067408502, -0.00015345719293691218, -0.0002075418015010655, -0.00032073669717647135, -0.00048546871403232217, -0.0006873512174934149, -0.0009088731021620333, -0.0011334510054439306, -0.0013456769520416856, -0.001529844943434, -0.0016733109951019287, -0.0017690049717202783, -0.0018130550161004066, -0.0018047059420496225, -0.0017471989849582314, -0.0016486779786646366, -0.0015185970114544034, -0.0013658460229635239, -0.0011996510438621044, -0.001031395047903061, -0.0008731252164579928, -0.0007349600200541317, -0.0006244555115699768, -0.0005428817821666598, -0.00048271811101585627, -0.00042912669596262276, -0.00036718009505420923, -0.0002886395959649235, -0.00019114630413241684, -7.847519009374082e-05, 3.978360109613277e-05, 0.00015385460574179888, 0.0002592676901258528, 0.00035853200824931264, 0.00045719920308329165, 0.0005613479879684746, 0.0006757649825885892, 0.0008027144940569997, 0.0009382839198224247, 0.0010708540212363005, 0.0011842449894174933, 0.0012619179906323552, 0.0012913000537082553, 0.0012668089475482702, 0.0011916039511561394, 0.0010765519691631198, 0.0009352738852612674, 0.0007830471149645746, 0.0006350089097395539, 0.0005029792082495987, 0.0003969868121203035, 0.00032652198569849133, 0.0003013366076629609, 0.00032696890411898494, 0.00040182878728955984, 0.0005194778786972165, 0.0006699736113660038, 0.0008380134822800756, 0.0010027439566329122, 0.0011463180417194963, 0.0012581689516082406, 0.0013350070221349597, 0.001377742039039731, 0.0013900420162826777, 0.0013765309704467654, 0.0013378079747781157, 0.0012694579781964421, 0.0011654780246317387, 0.001023510005325079, 0.0008448470034636557, 0.0006343802087940276, 0.00040252460166811943, 0.00016272469656541944, -6.850084173493087e-05, -0.00027094490360468626, -0.0004243922885507345, -0.0005167489871382713, -0.0005508121103048325, -0.0005407824064604938, -0.0005090191261842847, -0.000480807910207659, -0.0004791306855622679, -0.0005196878919377923, -0.0006079126033000648, -0.000738701201044023, -0.0008966514724306762, -0.0010574229527264833, -0.0011902609840035439, -0.0012649260461330414, -0.0012595070293173194, -0.001163588953204453, -0.0009803371503949165, -0.0007258941768668592, -0.0004264063900336623, -0.00011397070193197578, 0.00017904670676216483, 0.00042429970926605165, 0.0006000198191031814, 0.0006928971270099282, 0.0007020886987447739, 0.0006392861250787973, 0.0005236442084424198, 0.00037558309850282967, 0.0002128453052137047, 5.355820030672476e-05, -8.132340735755861e-05, -0.00017455990018788725, -0.0002195864071836695, -0.0002218417066615075, -0.0001963515969691798, -0.0001619339018361643, -0.00013683880388271064, -0.00013502560614142567, -0.00016608690202701837, -0.00023217429406940937, -0.0003263264079578221, -0.0004358454898465425, -0.0005462361150421202, -0.0006409200141206384, -0.0007014037109911442, -0.000711681495886296, -0.0006644303794018924, -0.0005615773261524737, -0.0004124412953387946, -0.00023395610332954675, -4.437397001311183e-05, 0.00014006100536789745, 0.00030376770882867277, 0.00043358991388231516, 0.0005193090182729065, 0.0005555506213568151, 0.0005431990139186382, 0.0004905745154246688, 0.0004119205113966018, 0.0003192296135239303, 0.00021913780074100941, 0.00011232629913138226, -3.3155990877276054e-06, -0.00013066020619589835, -0.0002707242965698242, -0.00041669310303404927, -0.0005548606859520078, -0.0006699573714286089, -0.0007505055982619524, -0.0007889054249972105, -0.000783541880082339, -0.0007440883200615644, -0.0006856115069240332, -0.0006214188179001212, -0.0005591781227849424, -0.0004992788890376687, -0.00043571958667598665, -0.0003609439008869231, -0.00027198309544473886, -0.00016865860379766673, -5.251296897768043e-05, 7.516778714489192e-05, 0.00021574880520347506, 0.0003705667913891375, 0.0005361774237826467, 0.0007055398891679943, 0.0008718182216398418, 0.0010291229700669646, 0.0011744239600375295, 0.0013069550041109324, 0.0014265900244936347, 0.0015323429834097624, 0.0016174359479919076, 0.00167135801166296, 0.0016852630069479346, 0.0016591340536251664, 0.0016014729626476765, 0.0015235119499266148, 0.0014355520252138376, 0.0013428189558908343, 0.0012474879622459412, 0.0011505379807204008, 0.00105329102370888, 0.0009600076009519398, 0.0008791215950623155, 0.0008222907199524343, 0.000801721413154155, 0.000825977826025337, 0.0008958064136095345, 0.00100149295758456, 0.0011286139488220215, 0.0012623330112546682, 0.0013895990559831262, 0.0015007370384410024, 0.0015906690387055278, 0.001656898995861411, 0.0016972919693216681, 0.0017137640388682485, 0.001712752040475607, 0.0017017399659380317, 0.0016848179511725903, 0.0016627879813313484, 0.0016331180231645703, 0.0015916830161586404, 0.0015353510389104486, 0.0014659330481663346, 0.001392193022184074, 0.0013259670231491327, 0.0012749989982694387, 0.00123831897508353, 0.0012056860141456127, 0.0011657599825412035, 0.001111202989704907, 0.0010402309708297253, 0.0009585068910382688, 0.0008742681820876896, 0.0007938559865579009, 0.0007204260909929872, 0.0006527361110784113, 0.0005877393996343017, 0.0005215192795731127, 0.000447197409812361, 0.000358177610905841, 0.0002530924102757126, 0.00013710699568036944, 1.9822269678115845e-05, -8.818950300337747e-05, -0.00017769519763533026, -0.00024064960598479956, -0.0002713467110879719, -0.0002711414999794215, -0.0002494252985343337, -0.0002186919009545818, -0.00019391070236451924, -0.0001901674986584112, -0.00021684900275431573, -0.0002737194881774485, -0.00035135250072926283, -0.00043649229337461293, -0.0005176680278964341, -0.0005905557190999389, -0.0006548573728650808, -0.0007118582725524902, -0.000768209109082818, -0.0008330551208928227, -0.0009099323069676757, -0.0009952452965080738, -0.0010798670118674636, -0.0011515930527821183, -0.0011994210071861744, -0.0012172299902886152, -0.0012089409865438938, -0.0011875319760292768, -0.0011682109907269478, -0.0011602339800447226, -0.001163142966106534, -0.001168085029348731, -0.0011620080331340432, -0.0011311050038784742, -0.001062712981365621, -0.0009519098093733191, -0.0008057701052166522, -0.0006382392020896077, -0.00046524550998583436, -0.00030131739913485944, -0.00015957749565131962, -4.919827915728092e-05, 2.529063931433484e-05, 6.264002149691805e-05, 6.373102951329201e-05, 2.97562492050929e-05, -3.597123941290192e-05, -0.00012754219642374665, -0.00023633020464330912, -0.00035016750916838646, -0.00045459289685823023, -0.0005367550766095519, -0.0005887855077162385, -0.0006056592101231217, -0.0005852854228578508, -0.0005301011842675507, -0.00044641148997470737, -0.0003440348955336958, -0.00023199559655040503, -0.0001167012014775537, -2.3327650069404626e-06, 0.00010621979890856892, 0.00020175229292362928, 0.00027804001001641154, 0.0003327383892610669, 0.0003677938075270504, 0.00038639610284008086, 0.000391685200156644, 0.00038546440191566944, 0.0003712981997523457, 0.0003551444096956402, 0.0003427125921007246, 0.00033998480648733675, 0.0003518222947604954, 0.0003817832039203495, 0.0004286481998860836, 0.0004848336102440953, 0.0005431203753687441, 0.0005991096841171384, 0.0006524752825498581, 0.0007070287247188389, 0.0007692669751122594, 0.0008467664010822773, 0.0009464151808060706, 0.0010716370306909084, 0.0012188779655843973, 0.0013789150398224592, 0.001541387988254428, 0.0016975620528683066, 0.0018408099422231317, 0.0019650340545922518, 0.0020659680012613535, 0.0021430549677461386, 0.002197488909587264, 0.002228931989520788, 0.0022370500955730677, 0.002225280972197652, 0.0021981028839945793, 0.0021563570480793715, 0.002099056029692292, 0.0020260571036487818, 0.0019381180172786117, 0.0018343989504501224, 0.00171268405392766, 0.0015717330388724804, 0.0014155659591779113, 0.0012519529554992914, 0.0010908209951594472, 0.0009430943173356354, 0.0008162030717357993, 0.0007117831846699119, 0.0006231984007172287, 0.0005395180778577924, 0.00044851680286228657, 0.00033833389170467854, 0.00020268770458642393, 4.165006976108998e-05, -0.00013811769895255566, -0.00032337679294869304, -0.0004982845857739449, -0.0006496366113424301, -0.0007740071159787476, -0.0008799554198049009, -0.0009830802446231246, -0.0010983790270984173, -0.0012346080038696527, -0.0013909509871155024, -0.0015569919487461448, -0.0017185109900310636, -0.00186190998647362, -0.0019782669842243195, -0.0020633370149880648, -0.0021177208982408047, -0.0021487229969352484, -0.002164758974686265, -0.002169146900996566, -0.002158197108656168, -0.002125407103449106, -0.002064407104626298, -0.001973364967852831, -0.0018568179802969098, -0.001722277025692165, -0.0015791900223121047, -0.001435016980394721, -0.0012952269753441215, -0.0011658519506454468, -0.0010547270067036152, -0.0009704479016363621, -0.0009171628043986857, -0.0008933371864259243, -0.0008946378948166966, -0.0009154565050266683, -0.0009493280085735023, -0.0009897862328216434, -0.0010292979422956705, -0.0010578640503808856, -0.0010665419977158308, -0.0010498800547793508, -0.0010026809759438038, -0.0009203706867992878, -0.000802937604021281, -0.0006561169284395874, -0.00048804760444909334, -0.0003056752902921289, -0.00011571269715204835, 7.389640086330473e-05, 0.00025507970713078976, 0.00042150169610977173, 0.0005711205885745585, 0.0007047703838907182, 0.0008223255863413215, 0.0009208176052197814, 0.000999466166831553, 0.0010642949491739273, 0.001127387979067862, 0.0012011020444333553, 0.0012927260249853134, 0.0014042219845578074, 0.0015314619522541761, 0.001667274977080524, 0.0018024840392172337, 0.0019269220065325499, 0.0020331658888608217, 0.00211845594458282, 0.0021831479389220476, 0.0022282819263637066, 0.00225480692461133, 0.002262627938762307, 0.0022513919975608587, 0.002221327042207122, 0.002175966976210475, 0.002123716054484248, 0.0020770670380443335, 0.002048447960987687, 0.002045671921223402, 0.002071223920211196, 0.002122042002156377, 0.0021920991130173206, 0.002271929057314992, 0.0023467130959033966, 0.0024012639187276363, 0.002428570995107293, 0.002434907015413046, 0.00243612308986485, 0.0024530079681426287, 0.002505426062270999, 0.002605979098007083, 0.002757072914391756, 0.002946974942460656, 0.0031555190216749907, 0.003359158057719469, 0.0035370970144867897, 0.0036751350853592157, 0.0037661809474229813, 0.003808004083111882, 0.00379724008962512, 0.003729823976755142, 0.0036056959070265293, 0.0034323320724070072, 0.0032253870740532875, 0.003001492004841566, 0.0027748250868171453, 0.0025586560368537903, 0.002366680884733796, 0.0022117970511317253, 0.0021014490630477667, 0.0020347218960523605, 0.0020026599522680044, 0.0019903790671378374, 0.0019822109024971724, 0.0019652689807116985, 0.001929517020471394, 0.0018672270234674215, 0.001771230949088931, 0.0016342060407623649, 0.0014473899500444531, 0.0012023360468447208, 0.0008959788247011602, 0.0005332023720256984, 0.0001259895070688799, -0.0003073310072068125, -0.0007428969838656485, -0.0011541680432856083, -0.0015211240388453007, -0.0018358660163357854, -0.002097710967063904, -0.0023102129343897104, -0.00247908104211092, -0.0026088228914886713, -0.002700560027733445, -0.002752705942839384, -0.0027624950744211674, -0.0027300259098410606, -0.0026631790678948164, -0.0025730179622769356, -0.0024674308951944113, -0.0023485668934881687, -0.002216652035713196, -0.002071406925097108, -0.0019142860546708107, -0.0017468889709562063, -0.0015702820383012295, -0.0013879790203645825, -0.001204770989716053, -0.0010261599672958255, -0.0008579317945986986, -0.0007066412945277989, -0.0005755535094067454, -0.00046217278577387333, -0.00035730638774111867, -0.0002463090931996703, -0.00011563809675863013, 3.989351898781024e-05, 0.00021629099501296878, 0.0004046717949677259, 0.0005957554094493389, 0.0007822447223588824, 0.0009602598147466779, 0.0011282910127192736, 0.0012866329634562135, 0.0014368420233950019, 0.001580214942805469, 0.0017158440314233303, 0.0018407580209895968, 0.0019526970572769642, 0.002050539944320917, 0.0021335850469768047, 0.002199856098741293, 0.0022438031155616045, 0.002258111024275422, 0.0022352309897542, 0.0021673510782420635, 0.002051982097327709, 0.0018938829889521003, 0.001701466040685773, 0.0014860349474474788, 0.001259922981262207, 0.0010367119684815407, 0.0008309949189424515, 0.0006570718251168728, 0.0005252892151474953, 0.00043820528662763536, 0.00039159960579127073, 0.0003761055995710194, 0.0003818485129158944, 0.0003972889971919358, 0.0004088688874617219, 0.0004034136945847422, 0.00037102081114426255, 0.0003059724986087531, 0.0002037679951172322, 6.112117989687249e-05, -0.00012092830002075061, -0.0003397784021217376, -0.0005930776824243367, -0.0008792845183052123, -0.0011950100306421518, -0.0015305590350180864, -0.0018698700005188584, -0.0021960700396448374, -0.0024938140995800495, -0.00275065703317523, -0.0029608700424432755, -0.0031234899070113897, -0.0032371440902352333, -0.0032988348975777626, -0.0033076039981096983, -0.003268249100074172, -0.003189424052834511, -0.0030813131015747786, -0.002956551034003496, -0.0028293870855122805, -0.0027124190237373114, -0.0026176508981734514, -0.002554209902882576, -0.0025250690523535013, -0.002527188044041395, -0.0025511060375720263, -0.0025820808950811625, -0.0026037280913442373, -0.0026005960535258055, -0.0025612199679017067, -0.0024805429857224226, -0.002358274068683386, -0.0022006630897521973, -0.002016776939854026, -0.0018123290501534939, -0.001590498024597764, -0.0013525449903681874, -0.0010997309582307935, -0.0008347939001396298, -0.0005600915173999965, -0.0002780315116979182, 6.177008799568284e-06, 0.0002871197066269815, 0.0005627573118545115, 0.0008341684006154537, 0.0011052440386265516, 0.001379534020088613, 0.001657675951719284, 0.0019362079910933971, 0.0022056710440665483, 0.002451172098517418, 0.002658768091350794, 0.0028221909888088703, 0.0029446189291775227, 0.0030332570895552635, 0.003096702042967081, 0.003140450920909643, 0.0031639710068702698, 0.003164184046909213, 0.0031386620830744505, 0.0030868060421198606, 0.0030083449091762304, 0.0029046270065009594, 0.00277877994813025, 0.0026348840910941362, 0.002475281013175845, 0.002296704100444913, 0.0020961000118404627, 0.0018767319852486253, 0.0016467149835079908, 0.0014160240534693003, 0.0011945440201088786, 0.0009915103437379003, 0.0008129628258757293, 0.0006611517164856195, 0.0005344690289348364, 0.00042799211223609746, 0.00033189350506290793, 0.00023354140284936875, 0.00012357129890006036, -1.335747015218658e-06, -0.00013612759357783943, -0.0002714935108087957, -0.0003977011947426945, -0.0005091439816169441, -0.0006057210266590118, -0.0006903506000526249, -0.0007688842015340924, -0.0008455489878542721, -0.0009197596809826791, -0.0009874384850263596, -0.0010452379938215017, -0.0010952240554615855, -0.0011434439802542329, -0.0011973329819738865, -0.0012631589779630303, -0.0013448350364342332, -0.0014437480131164193, -0.0015547149814665318, -0.001665450050495565, -0.0017609780188649893, -0.0018304820405319333, -0.0018710989970713854, -0.0018819889519363642, -0.0018603099742904305, -0.0018048109486699104, -0.0017179310088977218, -0.0016075540333986282, -0.0014870919985696673, -0.0013726509641855955, -0.0012772480258718133, -0.0012072400422766805, -0.0011610840447247028, -0.0011307180393487215, -0.0011049900203943253, -0.0010710180504247546, -0.0010181680554524064, -0.0009422170114703476, -0.0008469205931760371, -0.0007407325902022421, -0.000633156974799931, -0.0005332896835170686, -0.0004463540099095553, -0.00037158268969506025, -0.0003022307937499136, -0.0002281104971189052, -0.0001375206047669053, -1.7245449271285906e-05, 0.00014601049770135432, 0.00036192729021422565, 0.0006319452077150345, 0.0009485805057920516, 0.0012959339655935764, 0.001652113045565784, 0.0019912479910999537, 0.0022894490975886583, 0.002529042074456811, 0.0027015109080821276, 0.0028086560778319836, 0.002860046923160553, 0.0028683310374617577, 0.002844512928277254, 0.0027962320018559694, 0.0027256030589342117, 0.002632156014442444, 0.0025161278899759054, 0.0023806989192962646, 0.002231951104477048, 0.0020779080223292112, 0.0019255980150774121, 0.0017752180574461818, 0.001619643997400999, 0.00144693604670465, 0.0012460829457268119, 0.0010117259807884693, 0.0007460956112481654, 0.0004563101101666689, 0.0001504442043369636, -0.00016255950322374701, -0.00047532859025523067, -0.0007836589938960969, -0.001084072981029749, -0.0013713960070163012, -0.0016407599905505776, -0.001889407983981073, -0.0021183479111641645, -0.002330969087779522, -0.002532576909288764, -0.0027266410179436207, -0.0029116570949554443, -0.003084493102505803, -0.003244082909077406, -0.0033902660943567753, -0.003523360937833786, -0.0036468070466071367, -0.003766352077946067, -0.003888272913172841, -0.004015511833131313, -0.004146679770201445, -0.004276713822036982, -0.004399226047098637, -0.004509117919951677, -0.004602614790201187, -0.004675066098570824, -0.004721614066511393, -0.004736479837447405, -0.004716787952929735, -0.004664374981075525, -0.004581662826240063, -0.004472624976187944, -0.004342768806964159, -0.004196629859507084, -0.004036160185933113, -0.003861933946609497, -0.0036742750089615583, -0.0034747279714792967, -0.0032678639981895685, -0.0030596700962632895, -0.0028574299067258835, -0.002666749060153961, -0.002490225015208125, -0.0023254340048879385, -0.002162930089980364, -0.0019906999077647924, -0.0017991369822993875, -0.0015849519986659288, -0.0013496680185198784, -0.0010969899594783783, -0.0008326303213834763, -0.0005657090223394334, -0.00030660349875688553, -6.171502900542691e-05, 0.00016738810518290848, 0.00038498599315062165, 0.0005975082749500871, 0.0008107019821181893, 0.0010301369475200772, 0.0012591569684445858, 0.0014978729886934161, 0.0017417189665138721, 0.0019824409391731024, 0.0022113919258117676, 0.0024190940894186497, 0.0025950120761990547, 0.002730448031798005, 0.002818379085510969, 0.002852350939065218, 0.0028283570427447557, 0.0027458439581096172, 0.0026114110369235277, 0.002437555929645896, 0.0022371390368789434, 0.002025661990046501, 0.001821603043936193, 0.0016430510440841317, 0.0015001690480858088, 0.0013889239635318518, 0.0012986590154469013, 0.001218824996612966, 0.0011439899681136012, 0.0010754979448392987, 0.0010160079691559076, 0.0009679659269750118, 0.0009328736923635006, 0.0009097842848859727, 0.0008949487237259746, 0.0008815203909762204, 0.0008609705255366862, 0.0008241881732828915, 0.0007657899986952543, 0.0006876441184431314, 0.0005965869058854878, 0.0005010081804357469, 0.00040828698547556996, 0.00032428180566057563, 0.00025344471214339137, 0.00019614030316006392, 0.0001486984983785078, 0.0001084496034309268, 7.596726209158078e-05, 5.5800741392886266e-05, 5.471543045132421e-05, 7.847329106880352e-05, 0.0001274051028303802, 0.00019263039575889707, 0.0002613771939650178, 0.0003218121128156781, 0.0003668208955787122, 0.0003967277880292386, 0.0004170787869952619, 0.0004358156002126634, 0.0004628509923350066, 0.0005101874121464789, 0.000587618793360889, 0.0006971855764277279, 0.000833313271868974, 0.0009840041166171432, 0.001132918056100607, 0.001264333026483655, 0.0013672830536961555, 0.0014395919861271977, 0.0014840669464319944, 0.0015037859557196498, 0.0015018719714134932, 0.0014783500228077173, 0.0014298750320449471, 0.00135509402025491, 0.0012549960520118475, 0.0011339030461385846, 0.0010023500071838498, 0.0008742036879993975, 0.0007611744804307818, 0.0006703775725327432, 0.0006024552858434618, 0.0005534887895919383, 0.0005218225996941328, 0.000509750796481967, 0.0005212576943449676, 0.0005599349969998002, 0.0006252651801332831, 0.0007110012229532003, 0.0008037614170461893, 0.0008851098245941103, 0.0009348980966024101, 0.0009374152286909521, 0.0008868572767823935, 0.0007897727773524821, 0.0006620096974074841, 0.0005230295937508345, 0.00039376888889819384, 0.000293487188173458, 0.0002360975049668923, 0.0002286100061610341, 0.00026977641391567886, 0.0003514502022881061, 0.00046159850899130106, 0.0005864084232598543, 0.0007097232155501842, 0.0008165491162799299, 0.0008963639265857637, 0.0009456287953071296, 0.000969869492109865, 0.000982919940724969, 0.0010022730566561222, 0.0010399490129202604, 0.0010961269726976752, 0.0011620339937508106, 0.0012236320180818439, 0.001268360996618867, 0.0012884100433439016, 0.0012800820404663682, 0.0012422569561749697, 0.001175106968730688, 0.0010805450147017837, 0.0009631142020225525, 0.0008305938099510968, 0.0006915248814038932, 0.0005522806895896792, 0.00041764919296838343, 0.00028921099146828055, 0.00016648649761918932, 4.903920125798322e-05, -6.214647874003276e-05, -0.00016484969819430262, -0.00025616950006224215, -0.00033171309041790664, -0.00038791311089880764, -0.00042492488864809275, -0.0004468821862246841, -0.0004625573055818677, -0.0004833019047509879, -0.0005157553241588175, -0.000560204905923456, -0.0006169643020257354, -0.0006867442280054092, -0.0007678173715248704, -0.0008556853281334043, -0.0009440261055715382, -0.0010233860230073333, -0.0010821899631991982, -0.0011113689979538321, -0.0011057589435949922, -0.0010640770196914673, -0.0009888106724247336, -0.0008840655791573226, -0.0007575136260129511, -0.000617543701082468, -0.00047241381253115833, -0.0003330307954456657, -0.00021044739696662873, -0.00011429510050220415, -5.0854028813773766e-05, -2.4580309400334954e-05, -3.675658081192523e-05, -8.469520980725065e-05, -0.00016169169975910336, -0.0002581205917522311, -0.00036352479946799576, -0.00046615200699307024, -0.0005537444958463311, -0.0006152249989099801, -0.0006473928224295378, -0.0006572838174179196, -0.0006585770752280951, -0.0006671114242635667, -0.0006978792953304946, -0.000761847011744976, -0.0008638811996206641, -0.001000317046418786, -0.0011601339792832732, -0.0013279160484671593, -0.0014868739526718855, -0.0016233649803325534, -0.0017300850013270974, -0.0018066520569846034, -0.0018579380121082067, -0.0018948980141431093, -0.0019317000405862927, -0.0019820239394903183, -0.0020565090235322714, -0.0021613389253616333, -0.0022974188905209303, -0.002456354908645153, -0.002623734064400196, -0.0027816470246762037, -0.0029120598919689655, -0.002998840995132923, -0.0030319830402731895, -0.003010964021086693, -0.0029427779372781515, -0.002840061904862523, -0.0027158919256180525, -0.002581849927082658, -0.0024472461082041264, -0.0023200209252536297, -0.0022094598971307278, -0.0021244268864393234, -0.0020710269454866648, -0.0020483280532062054, -0.002044813008978963, -0.0020421789959073067, -0.0020204458851367235, -0.001962054055184126, -0.0018559599993750453, -0.0016992120072245598, -0.0014963160501793027, -0.0012611269485205412, -0.0010154149495065212, -0.000781106820795685, -0.0005751635180786252, -0.0004065886896569282, -0.00027501030126586556, -0.0001729085051920265, -8.887262811185792e-05, -7.977789209689945e-06, 8.266093209385872e-05, 0.00018602820637170225, 0.00029932500910945237, 0.00041601588600315154, 0.0005267923115752637, 0.0006248129066079855, 0.0007050855201669037, 0.0007631607004441321, 0.000797045009676367, 0.0008084396831691265, 0.0008024962735362351, 0.0007875084993429482, 0.0007706983014941216, 0.0007518312777392566, 0.0007252878858707845, 0.0006851973012089729, 0.0006285398849286139, 0.0005564467865042388, 0.0004751766100525856, 0.0003946876968257129, 0.00032549790921621025, 0.0002772694861050695, 0.000259008607827127, 0.0002763461961876601, 0.0003287545114289969, 0.00040918460581451654, 0.0005079766851849854, 0.0006134756258688867, 0.0007137954817153513, 0.0008011005120351911, 0.0008714402792975307, 0.0009193497244268656, 0.0009348489111289382, 0.000908733403775841, 0.0008379481150768697, 0.0007235215744003654, 0.0005698685999959707, 0.00038764681085012853, 0.0001915343018481508, -6.153582035040017e-06, -0.00019741810683626682, -0.0003768005990423262, -0.0005406017880886793, -0.000684914703015238, -0.0008055226062424481, -0.0009029117063619196, -0.0009825609158724546, -0.0010521740186959505, -0.0011210970114916563, -0.0011956170201301575, -0.0012759800301864743, -0.001358908019028604, -0.0014405379770323634, -0.0015160540351644158, -0.0015813990030437708, -0.0016363549511879683, -0.001682150992564857, -0.0017189380014315248, -0.0017446390120312572, -0.0017558879917487502, -0.001751153962686658, -0.0017314429860562086, -0.0017004429828375578, -0.0016616559587419033, -0.001620942959561944, -0.0015898819547146559, -0.001580541953444481, -0.001600653980858624, -0.0016511189751327038, -0.001725386013276875, -0.00181312405038625, -0.0019051600247621536, -0.001993299927562475, -0.002071365946903825, -0.0021369359456002712, -0.0021899319253861904, -0.002231067046523094, -0.0022601280361413956, -0.0022766690235584974, -0.0022802839521318674, -0.0022705181036144495, -0.0022479600738734007, -0.0022118149790912867, -0.0021592089906334877, -0.002087427070364356, -0.001998073887079954, -0.001896618981845677, -0.0017906019929796457, -0.0016867320518940687, -0.0015897629782557487, -0.0015016760444268584, -0.0014208010397851467, -0.0013433489948511124, -0.001266050967387855, -0.0011888189474120736, -0.0011138259433209896, -0.0010440560290589929, -0.0009799620602279902, -0.0009171618730761111, -0.0008497245144098997, -0.0007732249796390533, -0.0006864427123218775, -0.0005926078883931041, -0.0004969473811797798, -0.00040391000220552087, -0.00031441598548553884, -0.00022520939819514751, -0.00013114360626786947, -3.0239780244301073e-05, 7.501828076783568e-05, 0.00018129519594367594, 0.0002852586912922561, 0.0003837475087493658, 0.00047237551189027727, 0.0005479885148815811, 0.0006096035940572619, 0.000657973694615066, 0.0006970326066948473, 0.0007339188014157116, 0.0007793112890794873, 0.0008431968162767589, 0.0009282398968935013, 0.00103062205016613, 0.0011443640105426311, 0.001264033024199307, 0.0013858400052413344, 0.0015072179958224297, 0.0016238070093095303, 0.0017276050057262182, 0.0018114789854735136, 0.0018725449917837977, 0.0019139789510518312, 0.0019450959516689181, 0.001977552892640233, 0.002019863110035658, 0.0020758449099957943, 0.0021451120264828205, 0.002225222997367382, 0.0023117640521377325, 0.002396439900621772, 0.00246933801099658, 0.0025199430529028177, 0.0025375760160386562, 0.002514821942895651, 0.002450921107083559, 0.0023511280305683613, 0.0022277471143752337, 0.0020989279728382826, 0.001983274007216096, 0.0018952389946207404, 0.0018454990349709988, 0.0018391950288787484, 0.0018726950511336327, 0.0019320229766890407, 0.001997539075091481, 0.0020514819771051407, 0.002083434024825692, 0.002091513015329838, 0.002080023055896163, 0.002054309006780386, 0.0020186700858175755, 0.001977191073819995, 0.0019330809591338038, 0.001888897968456149, 0.0018475389806553721, 0.001811132999137044, 0.0017780240159481764, 0.0017405679682269692, 0.0016896160086616874, 0.001621649949811399, 0.0015425479505211115, 0.0014669590163975954, 0.0014146859757602215, 0.0014012890169396996, 0.0014300550101324916, 0.0014960940461605787, 0.0015906529733911157, 0.0017020499799400568, 0.001818323042243719, 0.0019282969878986478, 0.0020216929260641336, 0.0020918180234730244, 0.0021374321077018976, 0.0021622790955007076, 0.002176044974476099, 0.002193413907662034, 0.00223059905692935, 0.0023002170491963625, 0.002409430919215083, 0.0025604579132050276, 0.002748070051893592, 0.002961430000141263, 0.0031858859583735466, 0.0034075051080435514, 0.003615668974816799, 0.0038025870453566313, 0.003964104223996401, 0.004098927136510611, 0.004211930092424154, 0.004314232151955366, 0.004417866934090853, 0.004531695041805506, 0.004658701829612255, 0.004795977845788002, 0.0049338131211698055, 0.0050572678446769714, 0.005150318145751953, 0.005198421888053417, 0.005192139185965061, 0.005131238140165806, 0.005024596117436886, 0.004883996210992336, 0.004722146783024073, 0.004551799967885017, 0.004384077154099941, 0.004225437995046377, 0.004076763987541199, 0.003936208784580231, 0.003799852915108204, 0.003662083065137267, 0.0035136379301548004, 0.003345897886902094, 0.0031538179609924555, 0.002935986965894699, 0.002695753937587142, 0.0024408779572695494, 0.002180584007874131, 0.0019216010114178061, 0.0016668230528011918, 0.001416380051523447, 0.0011698839953169227, 0.0009282786049880087, 0.0006972287083044648, 0.00048548670019954443, 0.00030012550996616483, 0.00014487920270767063, 1.7910100723383948e-05, -8.690205868333578e-05, -0.00017912790644913912, -0.0002681681071408093, -0.0003612597065512091, -0.00046404459862969816, -0.0005793292075395584, -0.0007065547979436815, -0.0008439581724815071, -0.000992066808976233, -0.0011513440404087305, -0.0013192760525271297, -0.001492809969931841, -0.0016688379691913724, -0.0018464319873601198, -0.0020266540814191103, -0.0022101670037955046, -0.0023963290732353926, -0.002581836888566613, -0.002760350937023759, -0.0029249279759824276, -0.003071347950026393, -0.0031991449650377035, -0.003312238957732916, -0.0034165331162512302, -0.003519400954246521, -0.003629629034548998, -0.003756105899810791, -0.003906590864062309, -0.004082521889358759, -0.0042772372253239155, -0.004478240851312876, -0.00467131519690156, -0.004844184033572674, -0.004985955078154802, -0.005085621029138565, -0.0051344819366931915, -0.0051293810829520226, -0.005069965962320566, -0.004955905955284834, -0.004788408987224102, -0.004572949837893248, -0.004322046879678965, -0.0040549528785049915, -0.0037910249084234238, -0.003542887046933174, -0.003313510911539197, -0.003098075045272708, -0.0028893828857690096, -0.002679168013855815, -0.0024576690047979355, -0.002214841078966856, -0.0019418320152908564, -0.001635286957025528, -0.001297031994909048, -0.0009298846125602722, -0.0005348692066036165, -0.00011174249812029302, 0.0003383625007700175, 0.000810622819699347, 0.0012949099764227867, 0.0017773889703676105, 0.0022434641141444445, 0.0026774948928505182, 0.003061650088056922, 0.0033792450558394194, 0.0036185740027576685, 0.003776618978008628, 0.0038596689701080322, 0.0038827750831842422, 0.0038665449246764183, 0.0038321660831570625, 0.003798969089984894, 0.0037818809505552053, 0.0037901978939771652, 0.0038257550913840532, 0.003882460994645953, 0.003945670090615749, 0.003995717968791723, 0.004011696204543114, 0.003976458217948675, 0.003879325930029154, 0.0037142690271139145, 0.0034776299726217985, 0.0031707279849797487, 0.0027994029223918915, 0.0023722329642623663, 0.001903280965052545, 0.001411890028975904, 0.0009204300004057586, 0.0004498501948546618, 1.6336280168616213e-05, -0.00037047031219117343, -0.0007081982912495732, -0.0009999804897233844, -0.001252969028428197, -0.0014776280149817467, -0.0016868480015546083, -0.001894269953481853, -0.0021119790617376566, -0.0023458770010620356, -0.0025941019412130117, -0.002848088974133134, -0.0030942929442971945, -0.003318147035315633, -0.0035084648989140987, -0.003658361965790391, -0.003765365108847618, -0.0038300510495901108, -0.003856122028082609, -0.00384857808239758, -0.00381092494353652, -0.0037465558853000402, -0.0036600849125534296, -0.0035578529350459576, -0.0034480870235711336, -0.003341339062899351, -0.0032514079939574003, -0.0031921688932925463, -0.0031726809684187174, -0.003193018026649952, -0.0032457190100103617, -0.0033164010383188725, -0.003385073971003294, -0.003431915072724223, -0.0034448460210114717, -0.0034242530819028616, -0.0033792490139603615, -0.0033246399834752083, -0.0032757380977272987, -0.0032450358849018812, -0.0032427150290459394, -0.0032766959629952908, -0.0033503130543977022, -0.003461696906015277, -0.0036022430285811424, -0.0037588980048894882, -0.003918316215276718, -0.0040708570741117, -0.004210446961224079, -0.0043329838663339615, -0.004436879884451628, -0.004523843992501497, -0.004598577972501516, -0.004665683954954147, -0.004724462050944567, -0.004766012076288462, -0.004776660818606615, -0.004744675010442734, -0.004665980115532875, -0.0045464481227099895, -0.004397176206111908, -0.0042301020585000515, -0.00405433913692832, -0.0038732169196009636, -0.0036863989662379026, -0.0034916140139102936, -0.003284754930064082, -0.0030631551053375006, -0.0028270299080759287, -0.0025801709853112698, -0.00233366503380239, -0.0021047419868409634, -0.001909328973852098, -0.0017586459871381521, -0.0016579310176894069, -0.0016025969525799155, -0.0015806240262463689, -0.001577220973558724, -0.0015766529832035303, -0.0015658850315958261, -0.0015372990164905787, -0.001488563953898847, -0.0014231790555641055, -0.0013489510165527463, -0.0012697819620370865, -0.0011818789644166827, -0.0010780870215967298, -0.0009500739979557693, -0.0007921889191493392, -0.0006031569209881127, -0.00038709360524080694, -0.0001523430983070284, 9.16932913241908e-05, 0.00033633181010372937, 0.0005761992069892585, 0.000811010308098048, 0.0010452340357005596, 0.0012852340005338192, 0.0015343469567596912, 0.0017882529646158218, 0.0020350769627839327, 0.0022588069550693035, 0.002442643977701664, 0.0025722880382090807, 0.0026378300972282887, 0.002632956951856613, 0.0025527379475533962, 0.0023982441052794456, 0.0021829719189554453, 0.0019308760529384017, 0.0016717249527573586, 0.0014365119859576225, 0.001249313005246222, 0.0011199209839105606, 0.001047985046170652, 0.0010277279652655125, 0.0010498999617993832, 0.001101379981264472, 0.0011664419434964657, 0.0012304079718887806, 0.0012823910219594836, 0.0013155860360711813, 0.0013284779852256179, 0.001327101024799049, 0.0013230020413175225, 0.001330130035057664, 0.0013606500579044223, 0.0014235300477594137, 0.0015212070429697633, 0.0016491779824718833, 0.0018006230238825083, 0.0019684000872075558, 0.0021461080759763718, 0.002328665927052498, 0.0025143350940197706, 0.0027026960160583258, 0.00289426208473742, 0.003092946019023657, 0.0033034069929271936, 0.003527678083628416, 0.0037625839468091726, 0.004001793917268515, 0.004236170090734959, 0.004455246962606907, 0.004649376031011343, 0.004812994971871376, 0.004945314023643732, 0.005047652870416641, 0.0051241060718894005, 0.005178647115826607, 0.005210749804973602, 0.005218372214585543, 0.005199134815484285, 0.005150720942765474, 0.005069771781563759, 0.004954826086759567, 0.004808945115655661, 0.004638118203729391, 0.004448383115231991, 0.004244654905050993, 0.0040296101942658424, 0.0038004189264029264, 0.0035499949008226395, 0.00327501492574811, 0.002979100914672017, 0.002670333022251725, 0.0023595390375703573, 0.0020561639685183764, 0.0017676970455795527, 0.0015005309833213687, 0.0012582909548655152, 0.0010425460059195757, 0.0008513223729096353, 0.0006757347146049142, 0.0005036151851527393, 0.00032391789136454463, 0.00012885169417131692, -8.450649329461157e-05, -0.0003115014114882797, -0.0005405358970165253, -0.0007551274029538035, -0.0009377407841384411, -0.001071559963747859, -0.0011448819423094392, -0.0011572380317375064, -0.0011210850207135081, -0.0010540620423853397, -0.0009735235944390297, -0.0008944591972976923, -0.000826990813948214, -0.0007786236237734556, -0.0007534588221460581, -0.0007496292237192392, -0.0007600265089422464, -0.0007734369137324393, -0.0007780113955959678, -0.0007653777138330042, -0.0007325074984692037, -0.0006815216038376093, -0.0006174910231493413, -0.0005469074822030962, -0.00047529040602967143, -0.0004039524937979877, -0.0003293977933935821, -0.0002444651909172535, -0.00014250210369937122, -2.1051200747024268e-05, 0.00011945409642066807, 0.00027812301414087415, 0.0004540905065368861, 0.0006451687077060342, 0.0008455606875941157, 0.0010444530053064227, 0.001230034977197647, 0.0013917130418121815, 0.0015201079659163952, 0.0016072579892352223, 0.0016467149835079908, 0.0016400739550590515, 0.0015984210185706615, 0.0015403579454869032, 0.0014870420563966036, 0.0014554460067301989, 0.0014541830169036984, 0.001482093008235097, 0.0015311939641833305, 0.0015908279456198215, 0.001649903948418796, 0.0016965699614956975, 0.0017200859729200602, 0.001711979042738676, 0.001667437027208507, 0.00158654002007097, 0.0014704209752380848, 0.0013186499709263444, 0.0011318669421598315, 0.0009143155766651034, 0.0006750766769982874, 0.0004266730975359678, 0.00018203939544036984, -4.836649895878509e-05, -0.0002565713948570192, -0.000440100091509521, -0.0006036531995050609, -0.0007558231009170413, -0.0009079729206860065, -0.0010726329637691379, -0.0012607560493052006, -0.0014770219568163157, -0.0017195469699800014, -0.0019768800120800734, -0.002228498924523592, -0.0024516680277884007, -0.00262584094889462, -0.0027375840581953526, -0.002783786039799452, -0.002769713057205081, -0.002706924919039011, -0.0026087670121341944, -0.0024860911071300507, -0.0023477959912270308, -0.0022012239787727594, -0.002049514092504978, -0.0018902439624071121, -0.0017166699981316924, -0.0015211900463327765, -0.0012989239767193794, -0.001050711958669126, -0.0007838094024918973, -0.0005136379040777683, -0.0002601678133942187, -4.293541132938117e-05, 0.00012335620704106987, 0.00023002870148047805, 0.0002734613080974668, 0.0002558118139859289, 0.00018508460198063403, 7.400350295938551e-05, -6.0261831094976515e-05, -0.0001982676039915532, -0.0003231475129723549, -0.0004234065127093345, -0.0004932013107463717, -0.0005299319745972753, -0.0005349909770302474, -0.000513544597197324, -0.0004715824034065008, -0.00041588940075598657, -0.0003543485945556313, -0.0002970822970382869, -0.0002564151945989579, -0.00024611869594082236, -0.00027873789076693356, -0.00036239190376363695, -0.0004964653053320944, -0.0006722848047502339, -0.00087792391423136, -0.0011017610086128116, -0.0013369519729167223, -0.0015829140320420265, -0.0018400759436190128, -0.002106847008690238, -0.0023785019293427467, -0.002648944966495037, -0.002913110889494419, -0.003165144007652998, -0.0033967660274356604, -0.0035985009744763374, -0.003763512009754777, -0.0038877190090715885, -0.0039713080041110516, -0.004021549131721258, -0.004051040858030319, -0.004076092038303614, -0.004112468101084232, -0.0041721579618752, -0.004262187983840704, -0.004385462962090969, -0.004537574015557766, -0.004706989973783493, -0.004878638777881861, -0.005036922171711922, -0.005167808849364519, -0.0052611990831792355, -0.005312213208526373, -0.005320331081748009, -0.005288373213261366, -0.005221640225499868, -0.005129239987581968, -0.005023525096476078, -0.004915720783174038, -0.004808786790817976, -0.004698249977082014, -0.004575077909976244, -0.004429817199707031, -0.004256951157003641, -0.00405847979709506, -0.0038427431136369705, -0.0036214140709489584, -0.0034052219707518816, -0.0032000429928302765, -0.003006181912496686, -0.002818579087033868, -0.0026271590031683445, -0.002423078054562211, -0.0022049429826438427, -0.001976554049178958, -0.0017452819738537073, -0.0015193830477073789, -0.0013039129553362727, -0.0011010660091415048, -0.0009149310062639415, -0.0007524637039750814, -0.0006226508994586766, -0.0005327999242581427, -0.00048353068996220827, -0.00046809628838673234, -0.0004767974023707211, -0.0005016727955080569, -0.0005386212142184377, -0.0005869134911336005, -0.0006471829256042838, -0.0007192955235950649, -0.0007984741241671145, -0.0008788944105617702, -0.0009560766047798097, -0.00102747802156955, -0.0010884649818763137, -0.0011320309713482857, -0.0011535970261320472, -0.0011524129658937454, -0.001132132951170206, -0.0010988370049744844, -0.0010576910572126508, -0.0010113780153915286, -0.0009606651728972793, -0.0009054215042851865, -0.0008427667780779302, -0.0007671496132388711, -0.0006698835059069097, -0.0005425220006145537, -0.00037881769821979105, -0.0001789719972293824, 4.8315450840163976e-05, 0.0002911076880991459, 0.0005388780846260488, 0.0007822837796993554, 0.0010128830326721072, 0.0012243749806657434, 0.0014120859559625387, 0.0015701729571446776, 0.0016917870379984379, 0.0017702860059216619, 0.001802906976081431, 0.0017920229583978653, 0.001744949957355857, 0.0016733199590817094, 0.0015891790390014648, 0.001503390958532691, 0.0014259150484576821, 0.0013632680056616664, 0.0013164370320737362, 0.0012795489747077227, 0.0012406460009515285, 0.0011856330092996359, 0.0011018819641321898, 0.0009821688290685415, 0.0008271466940641403, 0.0006441671284846961, 0.00044423999497666955, 0.0002415274066152051, 5.356694964575581e-05, -0.00010146379645448178, -0.00021178029419388622, -0.0002749247069004923, -0.00029909430304542184, -0.00030070520006120205, -0.00030123008764348924, -0.0003226303088013083, -0.0003832895017694682, -0.0004935290780849755, -0.0006540914764627814, -0.000855219375807792, -0.0010765560436993837, -0.0012960199965164065, -0.001500174985267222, -0.0016847529914230108, -0.0018505200278013945, -0.0020004950929433107, -0.002137593924999237, -0.00226154294796288, -0.002368031069636345, -0.002449149964377284, -0.0024960068985819817, -0.002502277959138155, -0.0024627400562167168, -0.0023731249384582043, -0.002228924073278904, -0.0020267849322408438, -0.001767260953783989, -0.001456064055673778, -0.0011024270206689835, -0.0007206492009572685, -0.0003336833033245057, 3.122431007795967e-05, 0.00034776408574543893, 0.0005978567060083151, 0.000777103123255074, 0.0008936948725022376, 0.0009652309236116707, 0.0010146190179511905, 0.001064877025783062, 0.0011350440327078104, 0.001235336996614933, 0.0013672129716724157, 0.0015235600294545293, 0.0016923650400713086, 0.0018592070555314422, 0.002008948940783739, 0.002126422943547368, 0.0021977019496262074, 0.0022142690140753984, 0.0021723241079598665, 0.0020735689904540777, 0.0019248389871791005, 0.0017401400255039334, 0.001540158991701901, 0.0013480669585987926, 0.001183627056889236, 0.001058851950801909, 0.0009773188503459096, 0.0009328055894002318, 0.0009112533880397677, 0.0008934094803407788, 0.0008586824988014996, 0.0007894738810136914, 0.0006765046273358166, 0.0005226469947956502, 0.00034177990164607763, 0.00015509680088143796, -1.545172926853411e-05, -0.0001551888999529183, -0.00025809291400946677, -0.00032686381018720567, -0.0003721791144926101, -0.00041045190300792456, -0.00046022748574614525, -0.0005374758038669825, -0.0006523085758090019, -0.0008085548761300743, -0.0010043550282716751, -0.0012304040137678385, -0.001473836018703878, -0.0017216249834746122, -0.0019584898836910725, -0.0021671210415661335, -0.0023317160084843636, -0.002443575067445636, -0.0025019580498337746, -0.0025142740923911333, -0.002494867891073227, -0.0024655379820615053, -0.0024513478856533766, -0.0024725969415158033, -0.002539160894230008, -0.0026465889532119036, -0.0027803070843219757, -0.002918455982580781, -0.0030354668851941824, -0.0031079109758138657, -0.0031207529827952385, -0.0030665479134768248, -0.0029440370853990316, -0.0027608759701251984, -0.0025345711037516594, -0.002287226030603051, -0.0020431510638445616, -0.001824449049308896, -0.0016426059883087873, -0.0014943480491638184, -0.001368319964967668, -0.001247728941962123, -0.0011120110284537077, -0.0009410487255081534, -0.0007217347156256437, -0.0004524017858784646, -0.00014099449617788196, 0.00019800559675786644, 0.0005462851258926094, 0.0008846177952364087, 0.0011994770029559731, 0.0014890170423313975, 0.0017624220345169306, 0.0020357139874249697, 0.002324292901903391, 0.0026391390711069107, 0.0029858509078621864, 0.003362484974786639, 0.0037605699617415667, 0.0041672708466649055, 0.004568508826196194, 0.004949252121150494, 0.005294770002365112, 0.005591366905719042, 0.00582893006503582, 0.006006369832903147, 0.006132869049906731, 0.006225410848855972, 0.006302728783339262, 0.0063804988749325275, 0.006470569875091314, 0.006578221917152405, 0.006701274774968624, 0.00683262012898922, 0.006962546147406101, 0.007082472089678049, 0.007186857983469963, 0.0072714779525995255, 0.007329113781452179, 0.007350251078605652, 0.007324484176933765, 0.007244572043418884, 0.00711017195135355, 0.006926131900399923, 0.006697736214846373, 0.006429087836295366, 0.006127743050456047, 0.005804658867418766, 0.005468035116791725, 0.005122299771755934, 0.004767858888953924, 0.004401364829391241, 0.004019367042928934, 0.003621897893026471, 0.0032140109688043594, 0.0028048621024936438, 0.002405507955700159, 0.0020237730350345373, 0.0016633890336379409, 0.0013258600374683738, 0.0010121819796040654, 0.0007212844793684781, 0.0004498767957556993, 0.00019275369413662702, -5.368763959268108e-05, -0.00028857740107923746, -0.0005055608926340938, -0.0006931109237484634, -0.0008398647187277675, -0.0009420004789717495, -0.0010053260484710336, -0.0010447680251672864, -0.0010788829531520605, -0.0011242530308663845, -0.001192064955830574, -0.0012875270331278443, -0.0014092379715293646, -0.0015495390398427844, -0.0016943119699135423, -0.0018239800119772553, -0.0019205049611628056, -0.001972832949832082, -0.0019805049523711205, -0.0019515339517965913, -0.001898122951388359, -0.001829931978136301, -0.0017523779533803463, -0.0016702349530532956, -0.0015866579487919807, -0.0015013329684734344, -0.0014102599816396832, -0.001310323947109282, -0.0012015049578621984, -0.001084742951206863, -0.0009602038189768791, -0.0008304098737426102, -0.0007021905039437115, -0.0005832944880239666, -0.0004801586037501693, -0.00039935510721988976, -0.000346337998053059, -0.0003223275125492364, -0.0003230021975468844, -0.0003400559944566339, -0.00036343460669741035, -0.0003837709955405444, -0.00039251489215530455, -0.00038311429671011865, -0.0003517635923344642, -0.0003034932888112962, -0.00025536189787089825, -0.00022883540077600628, -0.00024261609360110015, -0.0003071351093240082, -0.00042404470150358975, -0.0005855074268765748, -0.0007764332112856209, -0.0009765105205588043, -0.0011620779987424612, -0.0013101770309731364, -0.0014005450066179037, -0.0014194080140441656, -0.0013658959651365876, -0.0012513509718701243, -0.0010937460465356708, -0.0009129390818998218, -0.0007289734203368425, -0.0005606302875094116, -0.0004246557946316898, -0.00033350239391438663, -0.0002930130867753178, -0.00030433578649535775, -0.00036436470691114664, -0.000467408390250057, -0.0006043780012987554, -0.0007624098216183484, -0.0009254678152501583, -0.001078363973647356, -0.0012073939433321357, -0.0013019850011914968, -0.0013616960495710373, -0.0013972900342196226, -0.001425268012098968, -0.0014615310356020927, -0.0015175800072029233, -0.0015972580295056105, -0.0016972559969872236, -0.0018092429963871837, -0.0019216729560866952, -0.0020225499756634235, -0.0021019699051976204, -0.0021535248961299658, -0.002173776039853692, -0.0021620579063892365, -0.002119330922141671, -0.0020473299082368612, -0.0019500410417094827, -0.0018358000088483095, -0.0017126289894804358, -0.0015853779623284936, -0.0014561070129275322, -0.0013272790238261223, -0.001200504950247705, -0.0010751719819381833, -0.0009514614939689636, -0.0008303874055854976, -0.0007147429860197008, -0.0006086889770813286, -0.0005172098753973842, -0.0004453352012205869, -0.00039690101402811706, -0.00037054860149510205, -0.00035767239751294255, -0.0003438178973738104, -0.0003100965986959636, -0.00023529530153609812, -9.902363672154024e-05, 0.00011447299766587093, 0.0004125201085116714, 0.0007889685221016407, 0.0012191570131108165, 0.0016654989449307323, 0.0020858619827777147, 0.002442781114950776, 0.0027115109842270613, 0.002880532993003726, 0.002952289069071412, 0.0029456319753080606, 0.0028913840651512146, 0.00282582500949502, 0.002783054020255804, 0.0027898310218006372, 0.002859981032088399, 0.002992491004988551, 0.00317252310924232, 0.0033757761120796204, 0.003570025088265538, 0.003719140077009797, 0.003793105948716402, 0.0037738990504294634, 0.0036589358933269978, 0.003461217973381281, 0.003206169931218028, 0.0029246180783957243, 0.002643887884914875, 0.0023827520199120045, 0.002148651983588934, 0.0019400139572098851, 0.0017487299628555775, 0.0015614910516887903, 0.001362015027552843, 0.0011373480083420873, 0.0008810862200334668, 0.0005931567284278572, 0.0002812886086758226, -4.103652827325277e-05, -0.0003575554001145065, -0.0006539021851494908, -0.0009199646883644164, -0.001149612944573164, -0.0013411079999059439, -0.0014966450398787856, -0.0016219010576605797, -0.0017245300114154816, -0.0018139679450541735, -0.0019009140087291598, -0.0019951879512518644, -0.0021020660642534494, -0.0022217980585992336, -0.002352037001401186, -0.0024866480380296707, -0.002616221085190773, -0.002729845931753516, -0.0028194100596010685, -0.002884299959987402, -0.002929368056356907, -0.0029635459650307894, -0.0029988850001245737, -0.0030487109906971455, -0.0031237569637596607, -0.0032253488898277283, -0.003342566080391407, -0.0034546880051493645, -0.003536387113854289, -0.0035630168858915567, -0.003515251912176609, -0.0033811458852142096, -0.003158740932121873, -0.0028557979967445135, -0.002487370977178216, -0.002076151082292199, -0.0016505729872733355, -0.0012355060316622257, -0.0008470797911286354, -0.0004927433910779655, -0.00017020439554471523, 0.00013075830065645278, 0.00042217219015583396, 0.0007155319908633828, 0.001022389973513782, 0.0013532160082831979, 0.001714952988550067, 0.0021082249004393816, 0.0025258390232920647, 0.002950680907815695, 0.0033583389595150948, 0.0037221258971840143, 0.0040220278315246105, 0.0042486959137022495, 0.004404181148856878, 0.0045013269409537315, 0.004560274071991444, 0.004604692105203867, 0.004655222874134779, 0.00472575519233942, 0.004823809023946524, 0.004950587172061205, 0.005101691000163555, 0.005267233122140169, 0.005432241130620241, 0.005579088814556599, 0.005689182784408331, 0.0057466221041977406, 0.005742774810642004, 0.005678420886397362, 0.005561706144362688, 0.005405798088759184, 0.005225268192589283, 0.005033488851040602, 0.004841262940317392, 0.004654833115637302, 0.004478168208152056, 0.004312202800065279, 0.004150888882577419, 0.0039802901446819305, 0.003783178050071001, 0.003544829087331891, 0.0032567279413342476, 0.002917109988629818, 0.002529816934838891, 0.0021026700269430876, 0.0016456219600513577, 0.0011725099757313728, 0.0007007236126810312, 0.000248128199018538, -0.0001688050979282707, -0.0005367604899220169, -0.0008483533747494221, -0.0011014649644494057, -0.0012980500468984246, -0.001443085027858615, -0.0015470229554921389, -0.001622923999093473, -0.0016853930428624153, -0.0017477889778092504, -0.001820283941924572, -0.0019076550379395485, -0.0020083009731024504, -0.0021138109732419252, -0.002213496947661042, -0.0023005360271781683, -0.0023749780375510454, -0.002440383890643716, -0.0024986390490084887, -0.002546716947108507, -0.0025771199725568295, -0.0025793490931391716, -0.0025447579100728035, -0.002473024884238839, -0.002371137961745262, -0.0022487530950456858, -0.002115112030878663, -0.0019785920158028603, -0.001847121980972588, -0.0017291719559580088, -0.0016308859921991825, -0.0015544360503554344, -0.001498386962339282, -0.001457893056795001, -0.00142530701123178, -0.001390520017594099, -0.001344737014733255, -0.0012819350231438875, -0.0012003500014543533, -0.001100894995033741, -0.0009848858462646604, -0.0008544484153389931, -0.0007126069976948202, -0.0005644788034260273, -0.00042035849764943123, -0.00029559520771726966, -0.00020665570627897978, -0.0001660131965763867, -0.00017684769409243017, -0.00023167769541032612, -0.0003169942065142095, -0.0004172518092673272, -0.0005125816096551716, -0.0005814501782879233, -0.0006062465254217386, -0.0005797481862828135, -0.0005034218193031847, -0.000386330095352605, -0.0002410893066553399, -8.033050107769668e-05, 8.386236004298553e-05, 0.00024198199389502406, 0.00038719098665751517, 0.0005176573758944869, 0.0006378124817274511, 0.0007581273093819618, 0.0008910964825190604, 0.0010466990061104298, 0.0012307589640840888, 0.001441549975425005, 0.001668964046984911, 0.0018981200410053134, 0.0021137669682502747, 0.0023020480293780565, 0.0024546911008656025, 0.0025703359860926867, 0.002650046953931451, 0.0026927071157842875, 0.0026956379879266024, 0.002658664947375655, 0.002584995934739709, 0.0024797029327601194, 0.00234945397824049, 0.0021996491122990847, 0.002033460885286331, 0.0018497590208426118, 0.0016435639699921012, 0.001409722026437521, 0.0011456350330263376, 0.0008549786289222538, 0.0005473130731843412, 0.00023717069416306913, -5.791027069790289e-05, -0.0003177642065566033, -0.0005219305166974664, -0.0006532525876536965, -0.000700592587236315, -0.0006634371820837259, -0.0005546765751205385, -0.00039455879596062005, -0.0002068744070129469, -1.8325230485061184e-05, 0.00014639720029663295, 0.00026869450812228024, 0.00033680920023471117, 0.0003474765981081873, 0.000305686000501737, 0.0002221745962742716, 0.00011213259858777747, -8.5831970864092e-06, -0.0001250884961336851, -0.0002252904960187152, -0.00030061270808801055, -0.0003469930961728096, -0.0003649523132480681, -0.0003599940100684762, -0.00034001749008893967, -0.0003115157887805253, -0.00028017209842801094, -0.00025431759422644973, -0.00024307089915964752, -0.00025300419656559825, -0.00028784299502149224, -0.000350270391209051, -0.000440226896898821, -0.0005516278906725347, -0.0006730487220920622, -0.0007929094135761261, -0.0009022129816003144, -0.0009915056871250272, -0.0010485469829291105, -0.001060212031006813, -0.0010189269669353962, -0.0009249901049770415, -0.0007861867779865861, -0.000614354619756341, -0.0004231189959682524, -0.00022419780725613236, -2.410353954473976e-05, 0.00017407830455340445, 0.0003666300908662379, 0.0005526053137145936, 0.000733950815629214, 0.0009146733791567385, 0.00109910499304533, 0.0012915290426462889, 0.0014949400210753083, 0.0017092210473492742, 0.0019311680225655437, 0.0021533749531954527, 0.0023644680622965097, 0.002553876955062151, 0.0027137589640915394, 0.002840285887941718, 0.002935641910880804, 0.003008439904078841, 0.0030729409772902727, 0.0031435969285666943, 0.003231812035664916, 0.003349347971379757, 0.003508077934384346, 0.003714597085490823, 0.003966114949434996, 0.004248593933880329, 0.004539194982498884, 0.004808517172932625, 0.00502731092274189, 0.0051710158586502075, 0.005222194828093052, 0.005173155106604099, 0.005027643870562315, 0.004800823051482439, 0.0045156278647482395, 0.004198139067739248, 0.003870835993438959, 0.00354828592389822, 0.0032355349976569414, 0.0029296251013875008, 0.002622306114062667, 0.002305936999619007, 0.00197582202963531, 0.0016295569948852062, 0.0012693930184468627, 0.0009011661750264466, 0.0005326428217813373, 0.0001742135063977912, -0.00016553429304622114, -0.0004826473887078464, -0.0007745934999547899, -0.0010387880029156804, -0.0012755340430885553, -0.0014875440392643213, -0.0016806030180305243, -0.0018645540112629533, -0.002049004891887307, -0.0022399520967155695, -0.002440335927531123, -0.0026510830502957106, -0.0028756209649145603, -0.003119091968983412, -0.0033860590774565935, -0.0036804669070988894, -0.004001971799880266, -0.004343991167843342, -0.004693096037954092, -0.005031928885728121, -0.005343729164451361, -0.0056132059544324875, -0.005827995017170906, -0.005979376845061779, -0.0060631767846643925, -0.00607739994302392, -0.006023713853210211, -0.005908770952373743, -0.0057424758560955524, -0.005536912940442562, -0.005306988023221493, -0.005068275146186352, -0.00483183516189456, -0.0046041421592235565, -0.004386622924357653, -0.004177133087068796, -0.0039742072112858295, -0.0037786168977618217, -0.0035926769487559795, -0.0034202919341623783, -0.003266145009547472, -0.0031295870430767536, -0.003005957929417491, -0.00288956705480814, -0.0027727270498871803, -0.002646401058882475, -0.002500117989256978, -0.002325182082131505, -0.0021150358952581882, -0.0018680499633774161, -0.0015907629858702421, -0.001298328978009522, -0.0010132159804925323, -0.0007622293778695166, -0.0005731952260248363, -0.00046794168883934617, -0.0004579855885822326, -0.0005425788112916052, -0.0007087176200002432, -0.000933690695092082, -0.0011893820483237505, -0.0014475759817287326, -0.0016839000163599849, -0.0018821050180122256, -0.0020372390281409025, -0.002151734894141555, -0.0022307359613478184, -0.0022778469137847424, -0.002294284990057349, -0.0022827209904789925, -0.00225130096077919, -0.0022155779879540205, -0.002192028099671006, -0.0021934390533715487, -0.002226833952590823, -0.002294003963470459, -0.002392101101577282, -0.002515641041100025, -0.002656972035765648, -0.0028056830633431673, -0.0029482899699360132, -0.0030712750740349293, -0.003162720939144492, -0.003215106902644038, -0.003226934000849724, -0.003201819024980068, -0.003146436996757984, -0.0030681591015309095, -0.0029753618873655796, -0.0028768470510840416, -0.0027789499145001173, -0.002686125924810767, -0.0026058040093630552, -0.0025441069155931473, -0.0025017301086336374, -0.0024747420102357864, -0.0024550838861614466, -0.002428855048492551, -0.0023792930878698826, -0.0022908479440957308, -0.0021516450215131044, -0.0019553969614207745, -0.0017043149564415216, -0.0014108530012890697, -0.0010959040373563766, -0.0007857189048081636, -0.0005079315742477775, -0.00029009440913796425, -0.00015435130626428872, -0.00011027540313079953, -0.00015309710579458624, -0.0002686512016225606, -0.00043721080874092877, -0.0006362231215462089, -0.0008425660198554397, -0.0010327589698135853, -0.0011857330100610852, -0.0012879780260846019, -0.0013349199434742332, -0.0013278999831527472, -0.0012707579880952835, -0.001168451039120555, -0.0010273599764332175, -0.000856309721712023, -0.0006665291148237884, -0.00047018390614539385, -0.0002793798048514873, -0.00010747720079962164, 3.451465818216093e-05, 0.00014078669482842088, 0.00021134789858479053, 0.0002515414962545037, 0.0002710227854549885, 0.000278709689155221, 0.0002801076043397188, 0.00027916551334783435, 0.00027927098562940955, 0.0002849730954039842, 0.0003001347940880805, 0.0003290410968475044, 0.0003775969962589443, 0.000451746309408918, 0.0005543524166569114, 0.0006820838898420334, 0.0008287554956041276, 0.0009847311303019524, 0.0011353279696777463, 0.0012624770170077682, 0.0013487699907273054, 0.0013850380200892687, 0.0013737690169364214, 0.0013255970552563667, 0.0012534200213849545, 0.001169694005511701, 0.0010854729916900396, 0.0010097180493175983, 0.0009484824840910733, 0.0009028890053741634, 0.0008723235805518925, 0.0008575182873755693, 0.0008594073005951941, 0.0008750408887863159, 0.000895748904440552, 0.0009109359816648066, 0.0009122479241341352, 0.0008945299778133631, 0.0008588245254941285, 0.0008129089837893844, 0.0007658936083316803, 0.0007228375179693103, 0.0006844414165243506, 0.0006473573157563806, 0.0006077507277950644, 0.0005628237850032747, 0.000513426202815026, 0.0004650930059142411, 0.0004300368018448353, 0.00042616939754225314, 0.00047126319259405136, 0.000579345622099936, 0.0007574008777737617, 0.0010048149852082133, 0.001316242036409676, 0.001680174027569592, 0.002078344114124775, 0.0024852619972079992, 0.0028741909191012383, 0.003221445018425584, 0.0035095680505037308, 0.0037283350247889757, 0.0038765110075473785, 0.0039622168987989426, 0.004001252818852663, 0.004014161881059408, 0.004024138208478689, 0.004053800832480192, 0.004120281897485256, 0.004227939061820507, 0.004366692155599594, 0.004515239968895912, 0.004648142959922552, 0.004742552060633898, 0.004787066951394081, 0.004785609897226095, 0.004753067158162594, 0.004712558817118406, 0.004688352812081575, 0.004696634132415056, 0.004742238204926252, 0.004819600842893124, 0.004915325902402401, 0.005009923130273819, 0.005084536969661713, 0.005127284210175276, 0.005132581107318401, 0.0050966800190508366, 0.005016809795051813, 0.004894997924566269, 0.0047386931255459785, 0.004560884088277817, 0.004377466160804033, 0.004205205012112856, 0.004057095851749182, 0.00393786421045661, 0.003841979894787073, 0.0037526609376072884, 0.0036467791069298983, 0.0035033340100198984, 0.003309225896373391, 0.0030604589264839888, 0.002763281110674143, 0.0024321810342371464, 0.0020869290456175804, 0.0017504279967397451, 0.0014456850476562977, 0.0011919359676539898, 0.0009977214504033327, 0.0008539087139070034, 0.0007373241824097931, 0.000618441088590771, 0.00046752949128858745, 0.0002651088871061802, 8.226063073379919e-06, -0.0002877057995647192, -0.0005957434186711907, -0.0008863477851264179, -0.0011341810459271073, -0.001320751034654677, -0.0014367110561579466, -0.0014828119892627, -0.0014714939752593637, -0.0014240440214052796, -0.0013629950117319822, -0.0013074789894744754, -0.001273258007131517, -0.0012717610225081444, -0.001309953979216516, -0.0013898330507799983, -0.001505931024439633, -0.0016447550151497126, -0.0017872420139610767, -0.001912732026539743, -0.0020043200347572565, -0.0020550331100821495, -0.002069636946544051, -0.002062617102637887, -0.0020549329929053783, -0.002065477892756462, -0.0021064879838377237, -0.002179723000153899, -0.0022775810211896896, -0.002387617016211152, -0.0024945249315351248, -0.002582354936748743, -0.002638279926031828, -0.0026554970536381006, -0.00263313390314579, -0.0025769718922674656, -0.002498053014278412, -0.0024103939067572355, -0.002328772097826004, -0.002267753006890416, -0.002240878064185381, -0.0022540208883583546, -0.002302940934896469, -0.0023745479993522167, -0.0024508091155439615, -0.002512407023459673, -0.002541294088587165, -0.002523438073694706, -0.0024557379074394703, -0.0023484849371016026, -0.0022185449488461018, -0.0020848019048571587, -0.001966811018064618, -0.0018817849922925234, -0.0018382190028205514, -0.0018330520251765847, -0.0018551009707152843, -0.0018892280058935285, -0.0019166909623891115, -0.001918161055073142, -0.0018798649543896317, -0.0017979240510612726, -0.0016782509628683329, -0.0015376630472019315, -0.001396839041262865, -0.0012749549932777882, -0.001186502049677074, -0.0011394090251997113, -0.0011345340171828866, -0.0011669059749692678, -0.001228349981829524, -0.0013081099605187774, -0.0013953810557723045, -0.0014792409492656589, -0.0015494360122829676, -0.001597000053152442, -0.0016167160356417298, -0.001609847997315228, -0.0015824140282347798, -0.0015462780138477683, -0.0015179240144789219, -0.0015108260558918118, -0.0015293279429897666, -0.0015683920355513692, -0.0016155029879882932, -0.001651969039812684, -0.0016554950270801783, -0.001602889969944954, -0.0014736560406163335, -0.0012541810283437371, -0.0009439929272048175, -0.0005585784092545509, -0.00012434560630936176, 0.00032997020753100514, 0.0007783466135151684, 0.0011975329834967852, 0.0015666249673813581, 0.001870727981440723, 0.002104684943333268, 0.0022756229154765606, 0.0023991831112653017, 0.002492319094017148, 0.002567816060036421, 0.002632143907248974, 0.0026860178913921118, 0.0027252871077507734, 0.0027437019161880016, 0.0027351730968803167, 0.0026952619664371014, 0.0026220891159027815, 0.0025180489756166935, 0.0023892309982329607, 0.0022419060114771128, 0.0020800239872187376, 0.001902241026982665, 0.0017032800242304802, 0.0014794720336794853, 0.0012319439556449652, 0.0009668255224823952, 0.0006942041800357401, 0.0004261508001945913, 0.0001752029056660831, -4.6911191020626575e-05, -0.0002306180977029726, -0.00036967749474570155, -0.00046400990686379373, -0.0005226543871685863, -0.0005610662046819925, -0.0005986426258459687, -0.000653476279694587, -0.0007383825141005218, -0.0008607589988969266, -0.0010220949770882726, -0.0012147970264777541, -0.0014243449550122023, -0.0016319929854944348, -0.0018173189600929618, -0.00196004007011652, -0.0020418879576027393, -0.002052428899332881, -0.0019943679217249155, -0.0018779210513457656, -0.001716668950393796, -0.0015249550342559814, -0.001315703964792192, -0.0010979289654642344, -0.0008782822987996042, -0.0006638264749199152, -0.00046201710938476026, -0.00027932680677622557, -0.00012012600200250745, 1.5181150047283154e-05, 0.0001286269980482757, 0.00022225160500966012, 0.00029993339558131993, 0.00036738908966071904, 0.0004284764872863889, 0.0004886130918748677, 0.000554366793949157, 0.0006285370909608901, 0.0007111622835509479, 0.0008025480201467872, 0.0009012711234390736, 0.0010019260225817561, 0.001097199972718954, 0.0011815419420599937, 0.0012511479435488582, 0.0013023309875279665, 0.0013297549448907375, 0.001326023950241506, 0.0012854200322180986, 0.0012062829919159412, 0.001091817975975573, 0.0009486449998803437, 0.000786554825026542, 0.0006182272918522358, 0.00045961569412611425, 0.0003262688114773482, 0.000225555500946939, 0.00015714680193923414, 0.00011855329648824409, 0.0001047948026098311, 0.0001065753967850469, 0.00011214429832762107, 0.00010881549678742886, 8.643411274533719e-05, 3.5988799936603755e-05, -5.026704093324952e-05, -0.00017496860527899116, -0.00033577351132407784, -0.0005266385269351304, -0.0007392321713268757, -0.0009633838781155646, -0.0011876439675688744, -0.0013988990103825927, -0.001582409953698516, -0.001725425012409687, -0.0018207409884780645, -0.001866844017058611, -0.0018673379672691226, -0.0018305130070075393, -0.0017696829745545983, -0.0016986479749903083, -0.0016307990299537778, -0.0015772189944982529, -0.0015439019771292806, -0.0015331630129367113, -0.0015450320206582546, -0.0015758730005472898, -0.0016177779762074351, -0.0016602389514446259, -0.001692158984951675, -0.0017026549903675914, -0.0016856769798323512, -0.00164090096950531, -0.001573677989654243, -0.0014925319701433182, -0.0014063860289752483, -0.0013214580249041319, -0.0012431349605321884, -0.0011760520283132792, -0.001120776985771954, -0.0010749050416052341, -0.0010334739927202463, -0.0009912062669172883, -0.0009418823174200952, -0.0008780207135714591, -0.0007933542947284877, -0.0006849835044704378, -0.0005552283837459981, -0.00041154021164402366, -0.00026532571064308286, -0.0001300824951613322, -1.8108139556716196e-05, 6.274969928199425e-05, 0.00011021840327885002, 0.0001279050047742203, 0.00012440579303074628, 0.00011179529974469915, 0.00010219730029348284, 0.00010761959856608883, 0.00013552300515584648, 0.00018579489551484585, 0.0002517515094950795, 0.00032462889794260263, 0.0003961171896662563, 0.000459331989986822, 0.0005078702815808356, 0.000533349986653775, 0.0005270937108434737, 0.00048463520943187177, 0.0004084892862010747, 0.00030601039179600775, 0.00018777410150505602, 6.597487663384527e-05, -4.986319981981069e-05, -0.000154183799168095, -0.0002443490957375616, -0.0003198813064955175, -0.00038294849218800664, -0.0004361674946267158, -0.00048167150816880167, -0.0005200639134272933, -0.0005531883216463029, -0.0005856358911842108, -0.0006218578782863915, -0.0006664675893262029, -0.0007218124228529632, -0.0007852602284401655, -0.0008510064799338579, -0.0009121578768827021, -0.0009595432784408331, -0.000983558245934546, -0.0009772111661732197, -0.0009379482944495976, -0.0008699268219061196, -0.0007841733167879283, -0.0006922321044839919, -0.0006038972060196102, -0.0005242525949142873, -0.00045185518683865666, -0.0003801664861384779, -0.0003013256937265396, -0.0002091390051646158, -9.828853217186406e-05, 3.532426126184873e-05, 0.00019381579477339983, 0.000375715404516086, 0.000578143575694412, 0.0007959636859595776, 0.001018499955534935, 0.0012295970227569342, 0.0014106399612501264, 0.001547183026559651, 0.0016322929877787828, 0.0016645039431750774, 0.0016477080062031746, 0.0015890629729256034, 0.0014981409767642617, 0.001383833005093038, 0.0012526949867606163, 0.0011075170477852225, 0.0009496128186583519, 0.0007812025141902268, 0.0006045149057172239, 0.00042120370198972523, 0.0002318855986231938, 3.6507750337477773e-05, -0.0001644711010158062, -0.00036952621303498745, -0.0005755507736466825, -0.000777370878495276, -0.0009711651946417987, -0.0011553219519555569, -0.001327318954281509, -0.0014800799544900656, -0.001602598000317812, -0.0016841549659147859, -0.001718249055556953, -0.0017007889691740274, -0.0016293389489874244, -0.001504810992628336, -0.0013330490328371525, -0.0011227020295336843, -0.0008844895055517554, -0.000629876391030848, -0.00037219151272438467, -0.00012478159624151886, 0.0001060600989148952, 0.0003216748882550746, 0.0005264836945571005, 0.0007254512747749686, 0.0009220071951858699, 0.0011180799920111895, 0.0013127910206094384, 0.0015026669716462493, 0.001682159025222063, 0.0018469829810783267, 0.0019967490807175636, 0.0021353759802877903, 0.002266868017613888, 0.002391850110143423, 0.0025089499540627003, 0.002615028992295265, 0.00270474492572248, 0.0027708408888429403, 0.002807680983096361, 0.002811589976772666, 0.002781763905659318, 0.0027193010319024324, 0.0026260900776833296, 0.0025074149016290903, 0.0023725000210106373, 0.00223329896107316, 0.0021015810780227184, 0.001987637020647526, 0.0018998440355062485, 0.001842192024923861, 0.0018116449937224388, 0.0017981460550799966, 0.001786440028809011, 0.0017621919978410006, 0.001715144026093185, 0.0016370819648727775, 0.001518748002126813, 0.001351680955849588, 0.0011334179434925318, 0.0008705465006642044, 0.0005750645068474114, 0.0002623962936922908, -4.8249468818539754e-05, -0.0003354627115186304, -0.0005801938241347671, -0.0007691709906794131, -0.0008956756209954619, -0.000961242476478219, -0.0009745879215188324, -0.00094835419440642, -0.0008996367105282843, -0.0008507964084856212, -0.0008228303049691021, -0.0008319159969687462, -0.0008883090922608972, -0.0009964207420125604, -0.0011553879594430327, -0.0013601910322904587, -0.00159973104018718, -0.0018559140153229237, -0.002104898914694786, -0.0023195119574666023, -0.002476399065926671, -0.002564762020483613, -0.002586446003988385, -0.0025555850006639957, -0.002493994077667594, -0.002424498088657856, -0.0023662219755351543, -0.002335598925128579, -0.0023428569547832012, -0.0023894659243524075, -0.0024716691114008427, -0.0025840098969638348, -0.0027205098886042833, -0.0028708460740745068, -0.0030188939999789, -0.0031474221032112837, -0.00324633507989347, -0.00331537495367229, -0.003358883084729314, -0.0033814560156315565, -0.003386877942830324, -0.003377791028469801, -0.003355171997100115, -0.0033207510132342577, -0.0032813660800457, -0.003245765110477805, -0.003222139086574316, -0.003217794932425022, -0.003239284036681056, -0.003289788030087948, -0.0033677041064947844, -0.003468734910711646, -0.0035858559422194958, -0.0037091190461069345, -0.0038261450827121735, -0.003923994954675436, -0.003991574980318546, -0.004019867163151503, -0.0040034218691289425, -0.003943074028939009, -0.0038457289338111877, -0.0037221249658614397, -0.003583932062610984, -0.0034446679055690765, -0.0033155600540339947, -0.003202053951099515, -0.003103693015873432, -0.0030138608999550343, -0.002923467895016074, -0.0028220880776643753, -0.0026991849299520254, -0.0025468049570918083, -0.002360787009820342, -0.002137154107913375, -0.001870805979706347, -0.0015589749673381448, -0.0012069110525771976, -0.0008303031208924949, -0.0004492427106015384, -8.583990711485967e-05, 0.00023974079522304237, 0.0005141496076248586, 0.0007335470290854573, 0.0009036579867824912, 0.0010391490068286657, 0.0011585609754547477, 0.001277004019357264, 0.0014022040413692594, 0.0015314649790525436, 0.0016575079644098878, 0.0017747159581631422, 0.0018794999923557043, 0.001971327932551503, 0.002055810997262597, 0.002144542057067156, 0.0022506089881062508, 0.002384789986535907, 0.0025504520162940025, 0.0027398481033742428, 0.0029360901098698378, 0.003118193941190839, 0.0032667729537934065, 0.003367228899151087, 0.0034115740563720465, 0.003399183042347431, 0.003337977919727564, 0.003243199083954096, 0.0031324599403887987, 0.003023476107046008, 0.0029277780558913946, 0.002847539959475398, 0.00277962489053607, 0.0027166439685970545, 0.002646141918376088, 0.002554967999458313, 0.0024353149347007275, 0.0022864509373903275, 0.002114363946020603, 0.0019310599891468883, 0.0017529999604448676, 0.001596326008439064, 0.0014715490397065878, 0.001384721021167934, 0.0013386260252445936, 0.0013334830291569233, 0.0013645089929923415, 0.0014191759983077645, 0.001481610001064837, 0.0015406559687107801, 0.0015914899995550513, 0.001631218008697033, 0.001656025997363031, 0.0016626520082354546, 0.0016488659894093871, 0.001612905994988978, 0.0015550019452348351, 0.001477919053286314, 0.0013863580534234643, 0.0012842660071328282, 0.001177879050374031, 0.0010789090301841497, 0.0010023670038208365, 0.0009617524920031428, 0.000967365805990994, 0.0010243869619444013, 0.00113389000762254, 0.001291670952923596, 0.0014867970021441579, 0.0017047059955075383, 0.0019321630243211985, 0.0021595770958811045, 0.002381260972470045, 0.002594158984720707, 0.002795533975586295, 0.0029829060658812523, 0.003155013080686331, 0.0033112019300460815, 0.0034499249886721373, 0.003564526094123721, 0.003643118077889085, 0.0036741408985108137, 0.0036527919583022594, 0.003583855926990509, 0.0034823580645024776, 0.0033673211000859737, 0.003255543066188693, 0.0031551430001854897, 0.0030629211105406284, 0.0029677399434149265, 0.0028541400097310543, 0.0027041349094361067, 0.0024984919000416994, 0.00222244905307889, 0.0018699129577726126, 0.00144409597851336, 0.0009567873203195632, 0.0004272662044968456, -0.00011965440353378654, -0.0006571870762854815, -0.0011608890490606427, -0.0016097580082714558, -0.0019903930369764566, -0.0023050459567457438, -0.0025684640277177095, -0.0028000380843877792, -0.0030167989898473024, -0.0032302918843925, -0.003450097981840372, -0.0036863379646092653, -0.003949216101318598, -0.004246646072715521, -0.0045831347815692425, -0.004960825201123953, -0.005379317793995142, -0.005832098890095949, -0.006305725779384375, -0.0067821890115737915, -0.007237690966576338, -0.007643695920705795, -0.007973662577569485, -0.008211906999349594, -0.008356704376637936, -0.008416485041379929, -0.008407608605921268, -0.008354534395039082, -0.008282857947051525, -0.00821019895374775, -0.008144786581397057, -0.008083033375442028, -0.008008930832147598, -0.007898285053670406, -0.007726228795945644, -0.007476840168237686, -0.007149984128773212, -0.006758925039321184, -0.006322889123111963, -0.005861605051904917, -0.005392603110522032, -0.004929232876747847, -0.004482084885239601, -0.004057846963405609, -0.003659335896372795, -0.003288313979282975, -0.0029430300928652287, -0.0026181871071457863, -0.002307326067239046, -0.0020025840494781733, -0.0016966690309345722, -0.001381134963594377, -0.0010448669781908393, -0.0006778347888030112, -0.00027686660178005695, 0.00015281040396075696, 0.0005939840921200812, 0.0010184720158576965, 0.0013954209862276912, 0.0017015100456774235, 0.0019286050228402019, 0.002083374885842204, 0.0021815448999404907, 0.002241874113678932, 0.002281248103827238, 0.0023089179303497076, 0.0023259210865944624, 0.0023309870157390833, 0.002322085900232196, 0.00229397090151906, 0.0022399660665541887, 0.002154336078092456, 0.002033775905147195, 0.0018773130141198635, 0.0016879889881238341, 0.0014724190114066005, 0.001240230049006641, 0.001002316945232451, 0.0007696687243878841, 0.0005519143887795508, 0.0003588229010347277, 0.00020068249432370067, 8.546801836928353e-05, 1.5189690202532802e-05, -1.6346479242201895e-05, -2.40391291299602e-05, -2.7692989533534274e-05, -4.949951107846573e-05, -0.00010954689787467942, -0.00022143969545140862, -0.0003868475032504648, -0.0005943014984950423, -0.0008260589092969894, -0.0010611870093271136, -0.0012785299913957715, -0.0014633700484409928, -0.0016089429846033454, -0.0017149440245702863, -0.0017875590128824115, -0.0018391900230199099, -0.0018843900179490447, -0.001931641949340701, -0.001980427885428071, -0.0020247451029717922, -0.0020548610482364893, -0.0020624829921871424, -0.0020451790187507868, -0.0020067919977009296, -0.001957912929356098, -0.0019117980264127254, -0.0018759999657049775, -0.0018501660088077188, -0.001830414985306561, -0.00181000295560807, -0.001780199003405869, -0.0017337360186502337, -0.001668476965278387, -0.0015862450236454606, -0.0014906900469213724, -0.0013884160434827209, -0.0012896000407636166, -0.0012041389709338546, -0.0011389759602025151, -0.0010941349901258945, -0.0010620419634506106, -0.0010282440343871713, -0.0009753110934980214, -0.0008855758933350444, -0.0007475307211279869, -0.0005580441793426871, -0.00032073850161395967, -4.517523848335259e-05, 0.00025584478862583637, 0.0005699801258742809, 0.0008884560083970428, 0.001207093009725213, 0.001524023013189435, 0.001836773008108139, 0.0021419739350676537, 0.0024356080684810877, 0.002713118912652135, 0.002971006091684103, 0.003207098925486207, 0.0034206300042569637, 0.0036119678989052773, 0.0037793400697410107, 0.003921835217624903, 0.004042167216539383, 0.004146614111959934, 0.004242647904902697, 0.004336288198828697, 0.004428699146956205, 0.004514344967901707, 0.00458321999758482, 0.00462361192330718, 0.004624534863978624, 0.00457968981936574, 0.00448915408924222, 0.004359889775514603, 0.004203596152365208, 0.0040336898528039455, 0.0038631169591099024, 0.0037034780252724886, 0.0035630210768431425, 0.0034439999144524336, 0.0033426559530198574, 0.0032507660798728466, 0.0031575351022183895, 0.003050497965887189, 0.0029196729883551598, 0.002759861061349511, 0.0025709690526127815, 0.0023578270338475704, 0.002128545893356204, 0.0018952200189232826, 0.001672851969487965, 0.001477641984820366, 0.0013239639811217785, 0.0012210230343043804, 0.0011692040134221315, 0.0011597300181165338, 0.001178878010250628, 0.0012096100253984332, 0.0012319900561124086, 0.0012305090203881264, 0.0011975809466093779, 0.0011300649493932724, 0.0010268089827150106, 0.0008908450836315751, 0.0007307592895813286, 0.0005573396920226514, 0.0003789704933296889, 0.00020042830146849155, 2.1955980628263205e-05, -0.00015894739772193134, -0.00034489919198676944, -0.000538440712261945, -0.0007422477938234806, -0.0009568720124661922, -0.0011788560077548027, -0.0013986179837957025, -0.001600799965672195, -0.0017666990170255303, -0.0018788919551298022, -0.0019234269857406616, -0.0018931720405817032, -0.0017939279787242413, -0.0016435639699921012, -0.001464911038056016, -0.0012800369877368212, -0.0011082109995186329, -0.0009645334212109447, -0.000858534884173423, -0.0007947463891468942, -0.000771604070905596, -0.0007803948828950524, -0.0008070701151154935, -0.0008356688776984811, -0.0008509166073054075, -0.0008406788110733032, -0.0007969518774189055, -0.0007176296203397214, -0.0006044423207640648, -0.0004621584084816277, -0.0002987271873280406, -0.00012464419705793262, 4.8847421567188576e-05, 0.000212602099054493, 0.0003618180053308606, 0.000495683285407722, 0.0006158087053336203, 0.0007268221233971417, 0.0008343762019649148, 0.0009440326248295605, 0.0010591070167720318, 0.0011793229496106505, 0.0012978370068594813, 0.0014012650353834033, 0.001471634954214096, 0.0014906000578776002, 0.0014439619844779372, 0.0013250400079414248, 0.00113601703196764, 0.0008880964014679193, 0.000600990722887218, 0.0002987394982483238, 3.4042859624605626e-06, -0.00026809360133484006, -0.0005077082896605134, -0.0007189444149844348, -0.0009137177257798612, -0.0011077809613198042, -0.001314896042458713, -0.001541013945825398, -0.001783297979272902, -0.0020334171131253242, -0.0022798830177634954, -0.0025096810422837734, -0.002709544962272048, -0.0028681219555437565, -0.00297622405923903, -0.0030257960315793753, -0.0030124750919640064, -0.002938590943813324, -0.002814806066453457, -0.002657335950061679, -0.002483749995008111, -0.0023109340108931065, -0.002152371918782592, -0.002017738064751029, -0.0019129290012642741, -0.0018412109930068254, -0.0018013949738815427, -0.0017874300247058272, -0.0017899960512295365, -0.0017963650170713663, -0.001793042989447713, -0.0017678920412436128, -0.001713008969090879, -0.001629121950827539, -0.0015254650497809052, -0.001415580976754427, -0.0013123450335115194, -0.0012228760169818997, -0.001146181020885706, -0.0010758780408650637, -0.001001426950097084, -0.0009070939267985523, -0.0007767686038278043, -0.0005973331280983984, -0.0003614609013311565, -6.955565186217427e-05, 0.00026855271426029503, 0.0006295741186477244, 0.0009808685863390565, 0.0012847610050812364, 0.0015073210233822465, 0.0016275059897452593, 0.001638098037801683, 0.001545664039440453, 0.0013694519875571132, 0.0011370850261300802, 0.0008800742216408253, 0.000632353825494647, 0.0004262448928784579, 0.00028745768941007555, 0.00022935570450499654, 0.0002499558904673904, 0.00033055979292839766, 0.00043924429337494075, 0.0005394840845838189, 0.0006003694725222886, 0.0005999560817144811, 0.0005268392851576209, 0.00038132211193442345, 0.00017546680464874953, -6.90886881784536e-05, -0.0003252991009503603, -0.0005658441223204136, -0.000769972219131887, -0.0009231470758095384, -0.0010152050526812673, -0.001040876959450543, -0.0009990767575800419, -0.0008934852085076272, -0.0007357746944762766, -0.0005446685245260596, -0.00034151700674556196, -0.00014353319420479238, 4.0015860577113926e-05, 0.00020730039977934211, 0.0003638913040049374, 0.0005165777984075248, 0.0006656580953858793, 0.0008073116187006235, 0.0009363458957523108, 0.0010486639803275466, 0.0011456100037321448, 0.001235045026987791, 0.001329457969404757, 0.0014416410122066736, 0.0015814669895917177, 0.0017562579596415162, 0.0019720839336514473, 0.002232325030490756, 0.0025360509753227234, 0.0028799381107091904, 0.003258436918258667, 0.0036622569896280766, 0.004076369106769562, 0.004483542870730162, 0.004865886177867651, 0.005207246169447899, 0.005495244171470404, 0.005721126217395067, 0.005880128126591444, 0.005974818021059036, 0.006016726139932871, 0.006020353175699711, 0.005999322049319744, 0.005963664967566729, 0.005919413175433874, 0.005868128966540098, 0.005808738060295582, 0.005740842781960964, 0.005665847100317478, 0.005586323793977499, 0.0055038807913661, 0.005415887106209993, 0.005319997202605009, 0.00521805789321661, 0.005113951861858368, 0.005011749919503927, 0.004913088865578175, 0.004815223161131144, 0.004711249843239784, 0.004590513184666634, 0.00443989597260952, 0.004249290097504854, 0.0040154787711799145, 0.0037431030068546534, 0.003444263944402337, 0.0031339048873633146, 0.002829187083989382, 0.0025480680633336306, 0.0023081449326127768, 0.002122909063473344, 0.001998760038986802, 0.0019333510426804423, 0.0019173159962520003, 0.001934592961333692, 0.001965244999155402, 0.0019940100610256195, 0.0020136309321969748, 0.002022413071244955, 0.0020239760633558035, 0.0020273649133741856, 0.0020428579300642014, 0.002076219068840146, 0.00212803203612566, 0.0021922909654676914, 0.002254215069115162, 0.002295524114742875, 0.0023020419757813215, 0.002268702955916524, 0.0022002069745212793, 0.002108243992552161, 0.0020068350713700056, 0.0019121869700029492, 0.0018416079692542553, 0.0018100349698215723, 0.0018267020350322127, 0.0018924650503322482, 0.0020002699457108974, 0.0021363170817494392, 0.0022811470553278923, 0.002415322931483388, 0.002525168005377054, 0.002605103887617588, 0.002655147109180689, 0.0026752410922199488, 0.0026656200643628836, 0.002631187904626131, 0.0025838869623839855, 0.002543604001402855, 0.0025356560945510864, 0.002583246910944581, 0.00270085409283638, 0.002891805022954941, 0.003147735958918929, 0.0034509170800447464, 0.003778683952987194, 0.004106373991817236, 0.004411404021084309, 0.004676343873143196, 0.004892689175903797, 0.00506218895316124, 0.005194495897740126, 0.0053024268709123135, 0.005399329122155905, 0.00549562182277441, 0.005597278010100126, 0.005705248098820448, 0.005818199831992388, 0.005934472195804119, 0.006050652824342251, 0.006162305828183889, 0.006267144810408354, 0.0063653611578047276, 0.0064598871394991875, 0.006554312072694302, 0.0066502890549600124, 0.006745967082679272, 0.006837932858616114, 0.006920748855918646, 0.006985009182244539, 0.0070206038653850555, 0.007018938194960356, 0.006974439136683941, 0.0068835909478366375, 0.0067452359944581985, 0.0065584671683609486, 0.006321968976408243, 0.006032933946698904, 0.005687486845999956, 0.0052836379036307335, 0.004822460003197193, 0.0043106297962367535, 0.003761789994314313, 0.0031934620346874, 0.0026247058995068073, 0.002070588991045952, 0.0015445699682459235, 0.0010580930393189192, 0.0006196323083713651, 0.00023201419389806688, -0.00010702150029828772, -0.0004029149131383747, -0.00066713138949126, -0.0009157439926639199, -0.0011660140007734299, -0.0014372499426826835, -0.0017463569529354572, -0.002102358965203166, -0.002504460047930479, -0.002944381907582283, -0.0034088410902768373, -0.003881443990394473, -0.00434502400457859, -0.004786132834851742, -0.005198535043746233, -0.005581376142799854, -0.005935798864811659, -0.006262606009840965, -0.006564638111740351, -0.006847260054200888, -0.007118651177734137, -0.007388107944279909, -0.0076631479896605015, -0.007945594377815723, -0.008229791186749935, -0.008507048711180687, -0.008769705891609192, -0.009010730311274529, -0.009223440662026405, -0.009402954019606113, -0.009548226371407509, -0.00966173317283392, -0.00974742416292429, -0.009806253015995026, -0.00983412191271782, -0.009819920174777508, -0.009749224409461021, -0.009610144421458244, -0.009396951645612717, -0.009108610451221466, -0.008746502920985222, -0.008315451443195343, -0.007825386710464954, -0.007287180982530117, -0.0067101651802659035, -0.006101899780333042, -0.005469464231282473, -0.004820690024644136, -0.0041648028418421745, -0.003507267916575074, -0.002847184892743826, -0.0021790550090372562, -0.0014998669503256679, -0.0008134787785820663, -0.00012944420450367033, 0.0005421835812740028, 0.0011943669524043798, 0.0018243519589304924, 0.0024339270312339067, 0.0030305141117423773, 0.003622734919190407, 0.004220934119075537, 0.0048369900323450565, 0.005477935075759888, 0.00614567007869482, 0.006835910025984049, 0.0075357528403401375, 0.008227239362895489, 0.008891184814274311, 0.009509272873401642, 0.010069009847939014, 0.010564870201051235, 0.010996519587934017, 0.011370079591870308, 0.01169470977038145, 0.0119825704023242, 0.012246490456163883, 0.012498630210757256, 0.012747109867632389, 0.012996019795536995, 0.013245549984276295, 0.01349152997136116, 0.01372515968978405, 0.013933369889855385, 0.014101560227572918, 0.014216500334441662, 0.01426582969725132, 0.014241700060665607, 0.014144199900329113, 0.013979869894683361, 0.01375959999859333, 0.013499969616532326, 0.013224230147898197, 0.01295814011245966, 0.012724170461297035, 0.01253926008939743, 0.012412579730153084, 0.012341800145804882, 0.012313899584114552, 0.012311359867453575, 0.012314469553530216, 0.012302929535508156, 0.012257089838385582, 0.012161660008132458, 0.01200832985341549, 0.011793759651482105, 0.011518679559230804, 0.011186059564352036, 0.010799949988722801, 0.010367419570684433, 0.009897344745695591, 0.009399556554853916, 0.008885572664439678, 0.008368486538529396, 0.007862196303904057, 0.007380775175988674, 0.006937054917216301, 0.006543263792991638, 0.006209581159055233, 0.005941040813922882, 0.005737750791013241, 0.005592070985585451, 0.005487979855388403, 0.00540416082367301, 0.005320780910551548, 0.005224859807640314, 0.005112166982144117, 0.004985167179256678, 0.004849660210311413, 0.004714571870863438, 0.004589767195284367, 0.0044821929186582565, 0.0043964870274066925, 0.004332929849624634, 0.004285584203898907, 0.004246924072504044, 0.0042117987759411335, 0.004177155904471874, 0.00414004921913147, 0.0040960488840937614, 0.004043239168822765, 0.003982251044362783, 0.00391306122764945, 0.0038354520220309496, 0.0037505680229514837, 0.003658897941932082, 0.003558466909453273, 0.0034457119181752205, 0.003317934926599264, 0.0031784470193088055, 0.0030393400229513645, 0.002917258068919182, 0.002825909061357379, 0.0027710290160030127, 0.00274566188454628, 0.002734122099354863, 0.002720806049183011, 0.0026944910641759634, 0.0026509889867156744, 0.0025915000587701797, 0.002521608956158161, 0.0024462419096380472, 0.0023670790251344442, 0.0022873610723763704, 0.002214543055742979, 0.0021589230746030807, 0.0021292229648679495, 0.0021291410084813833, 0.0021578141022473574, 0.0022065620869398117, 0.0022640249226242304, 0.002318895887583494, 0.0023634040262550116, 0.002393866889178753, 0.002407236024737358, 0.002398259937763214, 0.0023635278921574354, 0.002304073888808489, 0.002223158022388816, 0.002122775884345174, 0.0020008638966828585, 0.0018514690455049276, 0.0016699220286682248, 0.001455942983739078, 0.0012150000547990203, 0.0009543811902403831, 0.0006807327154092491, 0.0003958886954933405, 9.673940803622827e-05, -0.00022260799596551806, -0.000566198315937072, -0.000932767172344029, -0.0013121579540893435, -0.0016880870098248124, -0.0020469028968364, -0.002382538979873061, -0.0026972759515047073, -0.003002203069627285, -0.003312269924208522, -0.0036411790642887354, -0.0039964709430933, -0.0043776631355285645, -0.0047789160162210464, -0.005193389020860195, -0.005614881869405508, -0.006039538886398077, -0.006464710924774408, -0.006886700168251991, -0.007300242781639099, -0.007698834873735905, -0.00807594507932663, -0.008426636457443237, -0.008745864033699036, -0.009029180742800236, -0.009273082949221134, -0.00947624258697033, -0.009639020077884197, -0.009764974936842918, -0.009861081838607788, -0.009935717098414898, -0.009994049556553364, -0.010036850348114967, -0.0100595997646451, -0.01005444023758173, -0.010012869723141193, -0.009930809028446674, -0.009806896559894085, -0.009640549309551716, -0.009432381018996239, -0.009185973554849625, -0.008906558156013489, -0.008599908091127872, -0.00827121827751398, -0.007925355806946754, -0.007569558918476105, -0.007212852127850056, -0.006865331903100014, -0.006535375956445932, -0.006227036938071251, -0.005936893168836832, -0.005655048880726099, -0.005367112811654806, -0.005060058087110519, -0.004725491162389517, -0.004359629936516285, -0.003964785020798445, -0.0035480959340929985, -0.003120314097031951, -0.0026934209745377302, -0.002275790087878704, -0.0018704090034589171, -0.001474812044762075, -0.0010832080151885748, -0.0006901427987031639, -0.0002921285922639072, 0.00011136109969811514, 0.0005176031263545156, 0.0009214027086272836, 0.0013180860551074147, 0.0017029179725795984, 0.0020697179716080427, 0.0024127939250320196, 0.0027273460291326046, 0.0030125079210847616, 0.0032715050037950277, 0.0035104460548609495, 0.0037379050627350807, 0.003961999900639057, 0.004188817925751209, 0.004418062046170235, 0.0046403370797634125, 0.004841662012040615, 0.005007944069802761, 0.005126943811774254, 0.005189383868128061, 0.0051930188201367855, 0.005143377929925919, 0.005051991902291775, 0.004931692034006119, 0.004795437213033438, 0.0046575628221035, 0.004533545114099979, 0.004437536932528019, 0.004375950898975134, 0.00434829480946064, 0.004348189104348421, 0.004364699125289917, 0.004382520914077759, 0.004383911844342947, 0.004351910203695297, 0.004275375045835972, 0.004153664223849773, 0.003997423220425844, 0.0038245979230850935, 0.0036528799682855606, 0.0034941979683935642, 0.0033568849321454763, 0.0032431790605187416, 0.0031462740153074265, 0.0030534309335052967, 0.0029511249158531427, 0.002829700941219926, 0.00268470193259418, 0.0025194529443979263, 0.002342470921576023, 0.0021640239283442497, 0.0019955190364271402, 0.001846382045187056, 0.0017247849609702826, 0.0016369540244340897, 0.0015879239654168487, 0.0015807809541001916, 0.0016143260290846229, 0.0016810100059956312, 0.0017713740235194564, 0.001877355040051043, 0.001991007011383772, 0.002103762933984399, 0.002203444018959999, 0.0022772829979658127, 0.00232030195184052, 0.0023370690178126097, 0.002339283935725689, 0.002342736115679145, 0.0023629639763385057, 0.0024076360277831554, 0.002473738044500351, 0.002552479039877653, 0.002634611912071705, 0.0027139869052916765, 0.002788648009300232, 0.00285815610550344, 0.0029194920789450407, 0.0029699180740863085, 0.003010963089764118, 0.0030474350787699223, 0.003086400916799903, 0.0031329370103776455, 0.003185991896316409, 0.0032408449333161116, 0.0032897840719670057, 0.0033210960682481527, 0.0033231729175895452, 0.0032917559146881104, 0.003232768038287759, 0.003160947933793068, 0.003095038002356887, 0.0030509880743920803, 0.0030413460917770863, 0.003072175895795226, 0.003137272084131837, 0.0032212489750236273, 0.0033067860640585423, 0.003379873000085354, 0.003433461068198085, 0.003468492068350315, 0.0034914559219032526, 0.0035079719964414835, 0.0035140831023454666, 0.003495957935228944, 0.0034370229113847017, 0.0033238930627703667, 0.003150280099362135, 0.0029171069618314505, 0.002633723895996809, 0.002315457910299301, 0.0019791850354522467, 0.0016394329722970724, 0.001306519960053265, 0.0009856604738160968, 0.0006785431760363281, 0.00038491509621962905, 0.00010285819735145196, -0.00017353059956803918, -0.0004543031973298639, -0.0007504784734919667, -0.0010705660097301006, -0.0014201570302248001, -0.0017998659750446677, -0.0022028249222785234, -0.002616852056235075, -0.0030292810406535864, -0.0034282319247722626, -0.003806319087743759, -0.004160313867032528, -0.00449081277474761, -0.004801108036190271, -0.005092334933578968, -0.005364344920963049, -0.005615551955997944, -0.005842986982315779, -0.006043316796422005, -0.006209651939570904, -0.006331561133265495, -0.00639935489743948, -0.006410065107047558, -0.006370450835675001, -0.0062963152304291725, -0.006209229119122028, -0.00613254914060235, -0.006088939029723406, -0.00609517190605402, -0.006159528158605099, -0.006278377026319504, -0.0064320918172597885, -0.006589776836335659, -0.006718926131725311, -0.006794644054025412, -0.006803419906646013, -0.006744973827153444, -0.006630016025155783, -0.00647530285641551, -0.0062972609885036945, -0.006108323112130165, -0.005914962850511074, -0.005720431916415691, -0.0055283741094172, -0.005342139862477779, -0.0051647680811584, -0.004995785187929869, -0.004830779042094946, -0.004663762170821428, -0.004485717974603176, -0.004288321826606989, -0.004069441929459572, -0.0038336319848895073, -0.003593205939978361, -0.0033629960380494595, -0.00315546290948987, -0.002978347009047866, -0.0028340849094092846, -0.0027197650633752346, -0.0026241960003972054, -0.0025291999336332083, -0.002417593030259013, -0.0022796939592808485, -0.0021144640631973743, -0.001926771947182715, -0.0017245820490643382, -0.001518651028163731, -0.0013208880554884672, -0.0011416670167818666, -0.0009876854019239545, -0.0008608272764831781, -0.0007592710899189115, -0.0006782065029256046, -0.0006121523911133409, -0.0005569867207668722, -0.0005077074165455997, -0.000458219408756122, -0.0004028510011266917, -0.00033728161361068487, -0.000258877087617293, -0.00016820429300423712, -7.259339326992631e-05, 1.7039550584740937e-05, 9.125103679252788e-05, 0.000143904093420133, 0.00017192830273415893, 0.00017750280676409602, 0.00016713139484636486, 0.00014792020374443382, 0.0001288091007154435, 0.00012080860324203968, 0.00013569889415521175, 0.00018475379329174757, 0.0002768666890915483, 0.0004152496112510562, 0.0005936981760896742, 0.000798009627033025, 0.001011030049994588, 0.001214894000440836, 0.0013957699993625283, 0.0015464660245925188, 0.0016639940440654755, 0.0017487469594925642, 0.0018047570483759046, 0.0018411270575597882, 0.0018688089912757277, 0.0018952039536088705, 0.0019244930008426309, 0.0019570160657167435, 0.001986372983083129, 0.0020029330626130104, 0.0019979849457740784, 0.001962515991181135, 0.0018891670042648911, 0.001773020951077342, 0.001608793972991407, 0.001391818979755044, 0.001127535942941904, 0.0008328750845976174, 0.0005291471024975181, 0.00023280520690605044, -4.8630328819854185e-05, -0.000314392993459478, -0.0005650697858072817, -0.0008018807275220752, -0.0010294020175933838, -0.0012574000284075737, -0.0015006009489297867, -0.0017754669534042478, -0.0020971139892935753, -0.0024766060523688793, -0.002917506033554673, -0.0034170779399573803, -0.003965157084167004, -0.004544543102383614, -0.005133249796926975, -0.005709891207516193, -0.006254600826650858, -0.006752382963895798, -0.007198721170425415, -0.007599459029734135, -0.00796640757471323, -0.008314530365169048, -0.008655743673443794, -0.008997838944196701, -0.009347187355160713, -0.009708059020340443, -0.0100786704570055, -0.010449649766087532, -0.010806519538164139, -0.011136299930512905, -0.011431010439991951, -0.011688780039548874, -0.011912080459296703, -0.01210705004632473, -0.012283430434763432, -0.012451940216124058, -0.012621560133993626, -0.012795659713447094, -0.012969809584319592, -0.013133250176906586, -0.013270679861307144, -0.013368530198931694, -0.013420309871435165, -0.01342542003840208, -0.013386170379817486, -0.013308409601449966, -0.01320314034819603, -0.013083660043776035, -0.012961549684405327, -0.01284439954906702, -0.012736259959638119, -0.012641320005059242, -0.012565620243549347, -0.012514130212366581, -0.012488390319049358, -0.012486210092902184, -0.012500029988586903, -0.012515770271420479, -0.012514140456914902, -0.012476439587771893, -0.01238980982452631, -0.012247810140252113, -0.012052569538354874, -0.011813949793577194, -0.011546489782631397, -0.011267789639532566, -0.010995959863066673, -0.010747220367193222, -0.010532010346651077, -0.010352489538490772, -0.010203770361840725, -0.010075319558382034, -0.009956154972314835, -0.009840983897447586, -0.009728960692882538, -0.009621135890483856, -0.009519827552139759, -0.009425166994333267, -0.009333296678960323, -0.009237712249159813, -0.009131267666816711, -0.009009165689349174, -0.008871455676853657, -0.008718300610780716, -0.008546627126634121, -0.008350462652742863, -0.008125100284814835, -0.007868344895541668, -0.007581876125186682, -0.007271017879247665, -0.006946350913494825, -0.006622299086302519, -0.0063110701739788055, -0.006019121035933495, -0.005749811884015799, -0.005504886154085398, -0.005279767792671919, -0.0050647081807255745, -0.004850063938647509, -0.004628259222954512, -0.00439971499145031, -0.004170806147158146, -0.003949242178350687, -0.0037449148949235678, -0.0035642508883029222, -0.0034079840406775475, -0.0032744070049375296, -0.0031627670396119356, -0.003071052022278309, -0.0029941119719296694, -0.002922849962487817, -0.0028473129495978355, -0.0027600999455899, -0.0026557259261608124, -0.0025324830785393715, -0.002393689937889576, -0.002248764969408512, -0.0021119210869073868, -0.00200231303460896, -0.0019399479497224092, -0.001939216977916658, -0.002003544010221958, -0.0021225051023066044, -0.002275029895827174, -0.002436039038002491, -0.002583703026175499, -0.002703645033761859, -0.002789566060528159, -0.0028448670636862516, -0.002880603075027466, -0.002913753967732191, -0.00296319299377501, -0.0030441461130976677, -0.0031650778837502003, -0.003324927994981408, -0.0035131049808114767, -0.003710479009896517, -0.003893160028383136, -0.004039534833282232, -0.004133870825171471, -0.004169931169599295, -0.004149565007537603, -0.004081416875123978, -0.003979548811912537, -0.0038589381147176027, -0.003732467070221901, -0.0036110179498791695, -0.0035010259598493576, -0.0034019749145954847, -0.003309423103928566, -0.0032173621002584696, -0.0031194020994007587, -0.003008676925674081, -0.0028800300788134336, -0.0027313579339534044, -0.0025640069507062435, -0.0023816379252821207, -0.0021922860760241747, -0.002010788070037961, -0.0018534660339355469, -0.0017324560321867466, -0.0016530259745195508, -0.0016144539695233107, -0.0016158079961314797, -0.0016573929460719228, -0.0017376550240442157, -0.0018498320132493973, -0.0019813459366559982, -0.0021158899180591106, -0.002237635897472501, -0.0023362699430435896, -0.0024087210185825825, -0.002461961004883051, -0.0025075620505958796, -0.00255708210170269, -0.002622236032038927, -0.00271024601534009, -0.002816590014845133, -0.0029285980854183435, -0.0030340710654854774, -0.003124343929812312, -0.003193550044670701, -0.003239104989916086, -0.003266091924160719, -0.0032910320442169905, -0.003334284061565995, -0.003410309087485075, -0.0035244629252701998, -0.0036725751124322414, -0.0038446190301328897, -0.004030573181807995, -0.004221939016133547, -0.004411202855408192, -0.004590920172631741, -0.004754514899104834, -0.0048984079621732235, -0.005019187927246094, -0.005112621001899242, -0.005173829849809408, -0.005198341794312, -0.005188093055039644, -0.005149884149432182, -0.00509251793846488, -0.005025617778301239, -0.004956407006829977, -0.004885942209511995, -0.0048114219680428505, -0.004726840183138847, -0.004625645000487566, -0.004504707176238298, -0.004363492131233215, -0.004206082783639431, -0.004044513218104839, -0.0038930769078433514, -0.0037614579778164625, -0.0036526869516819715, -0.0035625179298222065, -0.003480887971818447, -0.003397297114133835, -0.0033036749809980392, -0.0031954480800777674, -0.003070523962378502, -0.0029300409369170666, -0.002775938017293811, -0.002610159106552601, -0.0024360809475183487, -0.002256050007417798, -0.002070886082947254, -0.0018837129464372993, -0.0017010070150718093, -0.0015301259700208902, -0.0013774520484730601, -0.001248082029633224, -0.0011452080216258764, -0.0010673130163922906, -0.0010059180203825235, -0.0009511542739346623, -0.0008978457772172987, -0.0008439347730018198, -0.0007872263086028397, -0.0007256155950017273, -0.0006624542875215411, -0.0006074085831642151, -0.0005708792014047503, -0.0005595554248429835, -0.0005749791744165123, -0.0006156350718811154, -0.0006774667999707162, -0.0007547112181782722, -0.0008413243922404945, -0.0009341876721009612, -0.0010345550253987312, -0.0011426130076870322, -0.0012538139708340168, -0.00135976099409163, -0.0014516180381178856, -0.0015218850458040833, -0.0015673850430175662, -0.0015918869758024812, -0.0016019030008465052, -0.0016032529529184103, -0.0015998140443116426, -0.001595771056599915, -0.001596627989783883, -0.001608990947715938, -0.001640742993913591, -0.0016958119813352823, -0.0017714600544422865, -0.0018598289461806417, -0.0019514349987730384, -0.002036816906183958, -0.002108108950778842, -0.0021601140033453703, -0.0021891500800848007, -0.002192375948652625, -0.002171587897464633, -0.0021330108866095543, -0.002083271974697709, -0.0020272540859878063, -0.0019644969142973423, -0.0018885909812524915, -0.0017901810351759195, -0.0016630409518256783, -0.00150944699998945, -0.0013406709767878056, -0.001173458993434906, -0.001024447032250464, -0.0009052125969901681, -0.0008206223137676716, -0.0007679712143726647, -0.0007379304151982069, -0.0007213226053863764, -0.0007117210770957172, -0.000703744706697762, -0.0006930637173354626, -0.0006750925094820559, -0.000646802072878927, -0.0006047873175702989, -0.0005458511877804995, -0.00047045270912349224, -0.00037880989839322865, -0.0002696540905162692, -0.0001450475974706933, -8.192673703888431e-06, 0.00013654360373038799, 0.0002826566924341023, 0.0004213603970129043, 0.000541707209777087, 0.0006337382947094738, 0.0006891777156852186, 0.0007037225877866149, 0.000677798583637923, 0.0006163808866403997, 0.0005277632735669613, 0.0004255244857631624, 0.0003285713028162718, 0.00025690390611998737, 0.00022996739426162094, 0.00026227300986647606, 0.0003597679897211492, 0.0005193910910747945, 0.0007292312802746892, 0.0009710824815556407, 0.0012220590142533183, 0.001457393984310329, 0.0016512159490957856, 0.0017784129595384002, 0.0018212150316685438, 0.0017730649560689926, 0.001640788046643138, 0.0014434129698202014, 0.0012048729695379734, 0.0009495610138401389, 0.0007025497034192085, 0.00048485881416127086, 0.00030803069239482284, 0.00017599589773453772, 8.671209798194468e-05, 3.2667321647750214e-05, 6.150215085654054e-06, 2.4302130441355985e-06, 2.1403089704108424e-05, 6.716873758705333e-05, 0.00014303300122264773, 0.0002478570968378335, 0.00037716238875873387, 0.0005229582893662155, 0.0006706488202326, 0.0008049156749621034, 0.0009139569010585546, 0.0009899671422317624, 0.0010326739866286516, 0.0010498049668967724, 0.0010545389959588647, 0.0010608519660308957, 0.0010802870383486152, 0.0011225870111957192, 0.0011961020063608885, 0.0013047880493104458, 0.0014449319569393992, 0.001605179044418037, 0.00177122897002846, 0.0019281499553471804, 0.002058529993519187, 0.0021449080668389797, 0.0021747120190411806, 0.002141068922355771, 0.002044535940513015, 0.0018957259599119425, 0.001710255048237741, 0.0015061870217323303, 0.0013010710244998336, 0.001108511001802981, 0.000941339589189738, 0.0008126230095513165, 0.0007320825825445354, 0.0007007485837675631, 0.0007099650101736188, 0.0007438390166498721, 0.0007799789891578257, 0.0007958610076457262, 0.0007724144961684942, 0.0006960337050259113, 0.0005585079779848456, 0.0003573326102923602, 9.432250953977928e-05, -0.00022563509992323816, -0.0005955903907306492, -0.0010057060280814767, -0.0014428369468078017, -0.001892969012260437, -0.0023425340186804533, -0.002779050962999463, -0.0031888450030237436, -0.003558153985068202, -0.0038755880668759346, -0.004131391178816557, -0.004320091102272272, -0.004443233832716942, -0.004508771933615208, -0.0045296791940927505, -0.004520094953477383, -0.0044950018636882305, -0.004468029830604792, -0.004449322819709778, -0.004441247787326574, -0.0044372049160301685, -0.00442697387188673, -0.004399500787258148, -0.004344393033534288, -0.004251592792570591, -0.004111690912395716, -0.003914679866284132, -0.003650663886219263, -0.0033146371133625507, -0.002908505965024233, -0.0024447920732200146, -0.0019420860335230827, -0.0014202829916030169, -0.0008999393903650343, -0.00039771199226379395, 7.909222040325403e-05, 0.0005328687257133424, 0.000973832793533802, 0.0014133340446278453, 0.0018581999465823174, 0.0023100480902940035, 0.0027668699622154236, 0.003225587075576186, 0.0036840930115431547, 0.004139801021665335, 0.0045910668559372425, 0.005037651862949133, 0.005481052212417126, 0.005922514013946056, 0.006363116204738617, 0.006800754927098751, 0.007227317895740271, 0.007631284184753895, 0.007999296300113201, 0.00831853412091732, 0.008581230416893959, 0.008786613121628761, 0.008938360959291458, 0.009039762429893017, 0.009093793109059334, 0.00910183135420084, 0.009061533957719803, 0.00897113885730505, 0.008837065659463406, 0.00867411307990551, 0.008502417244017124, 0.008342942222952843, 0.008212856017053127, 0.00811980664730072, 0.008062968030571938, 0.008032778277993202, 0.008015918545424938, 0.007999145425856113, 0.00796904880553484, 0.007915172725915909, 0.007830264046788216, 0.007708284072577953, 0.0075439452193677425, 0.007334270980209112, 0.007082223892211914, 0.006797824986279011, 0.006494069006294012, 0.006182708777487278, 0.00587125588208437, 0.005564408842474222, 0.005266963038593531, 0.004982862155884504, 0.004711740184575319, 0.004450513981282711, 0.004199921153485775, 0.003967017866671085, 0.0037611129228025675, 0.003588794032111764, 0.0034517140593379736, 0.0033452999778091908, 0.0032598080579191446, 0.0031841639429330826, 0.003109823912382126, 0.003032421926036477, 0.0029489139560610056, 0.0028542550280690193, 0.0027432849165052176, 0.0026149291079491377, 0.002472108928486705, 0.0023221969604492188, 0.0021756100468337536, 0.002043151995167136, 0.0019327809568494558, 0.0018450800562277436, 0.0017754039727151394, 0.0017153799999505281, 0.0016555089969187975, 0.001590196043252945, 0.0015192539431154728, 0.0014469960005953908, 0.0013813090045005083, 0.001331927953287959, 0.0013103580567985773, 0.001328191952779889, 0.0013938939664512873, 0.0015107450308278203, 0.0016756339464336634, 0.0018791770562529564, 0.0021059629507362843, 0.002336215926334262, 0.0025476529262959957, 0.0027188649401068687, 0.0028321780264377594, 0.002879591891542077, 0.002866932889446616, 0.0028121930081397295, 0.0027370809111744165, 0.0026589669287204742, 0.0025891039986163378, 0.002534278901293874, 0.002497680950909853, 0.0024785620626062155, 0.002473666099831462, 0.00247652898542583, 0.002479379065334797, 0.002472291002050042, 0.002447328995913267, 0.0024016539100557566, 0.0023347269743680954, 0.0022470129188150167, 0.002138399053364992, 0.0020078159868717194, 0.0018529120134189725, 0.0016735800309106708, 0.0014737709425389767, 0.0012593020219355822, 0.001036279951222241, 0.0008128226036205888, 0.0006003823946230114, 0.00040980649646371603, 0.0002466281002853066, 0.00011536930105648935, 2.316549034730997e-05, -2.2068930775276385e-05, -1.6113239325932227e-05, 4.033227014588192e-05, 0.00013857059821020812, 0.00026207760674878955, 0.00039055111119523644, 0.0005028549931012094, 0.0005806757835671306, 0.0006108718807809055, 0.0005880288081243634, 0.0005133150261826813, 0.0003930166130885482, 0.00023637519916519523, 5.56960585527122e-05, -0.00013475739979185164, -0.0003219053032808006, -0.0004939478822052479, -0.0006414111121557653, -0.0007586764986626804, -0.0008452818728983402, -0.0009043944883160293, -0.0009422341827303171, -0.0009662494994699955, -0.0009809701004996896, -0.0009875275427475572, -0.000982989906333387, -0.0009623471996746957, -0.0009189696866087615, -0.0008443212136626244, -0.0007316689006984234, -0.0005779530038125813, -0.0003853210946545005, -0.00016048259567469358, 8.981425344245508e-05, 0.0003618795017246157, 0.0006517810979858041, 0.0009534551063552499, 0.001260005054064095, 0.0015621980419382453, 0.0018487479537725449, 0.0021074959076941013, 0.0023290920071303844, 0.0025089539121836424, 0.0026510499883443117, 0.0027681849896907806, 0.0028783311136066914, 0.002998894080519676, 0.003141202963888645, 0.003308757906779647, 0.0034990650601685047, 0.003705003997310996, 0.003917701076716185, 0.00412733806297183, 0.004326287191361189, 0.00451052887365222, 0.0046809022314846516, 0.004841352812945843, 0.004994256887584925, 0.005138772074133158, 0.005271303001791239, 0.0053890058770775795, 0.005490365903824568, 0.005573534872382879, 0.005635897163301706, 0.00567530607804656, 0.0056905727833509445, 0.005680808797478676, 0.005647038109600544, 0.005592823028564453, 0.005521180108189583, 0.005434543825685978, 0.00533660314977169, 0.00523492693901062, 0.005139679182320833, 0.005058011040091515, 0.004992487840354443, 0.004940862767398357, 0.004897321108728647, 0.004855656065046787, 0.0048093670047819614, 0.004750499036163092, 0.004673123825341463, 0.0045758080668747425, 0.004462142009288073, 0.00433753477409482, 0.00420565577223897, 0.004069063812494278, 0.003930165898054838, 0.003789633046835661, 0.003643869888037443, 0.003487502923235297, 0.003316927934065461, 0.0031331030186265707, 0.0029404188971966505, 0.0027421650011092424, 0.0025394039694219828, 0.002331281080842018, 0.0021173530258238316, 0.0019030480179935694, 0.0016989270225167274, 0.0015146649675443769, 0.0013550779549404979, 0.001219470053911209, 0.0011039749952033162, 0.0010052230209112167, 0.0009213663870468736, 0.0008534207008779049, 0.0008040759130381048, 0.0007743831956759095, 0.0007632978959009051, 0.0007686304743401706, 0.0007875091978348792, 0.0008161527221091092, 0.0008492611232213676, 0.0008830424048937857, 0.0009148954995907843, 0.0009439697023481131, 0.0009734318009577692, 0.0010075160535052419, 0.0010520699433982372, 0.00111356598790735, 0.0011980249546468258, 0.0013088600244373083, 0.001446272013708949, 0.0016068919794633985, 0.0017854500329121947, 0.00197502295486629, 0.002168710110709071, 0.002362149069085717, 0.002554526086896658, 0.0027461729478091, 0.002937332959845662, 0.0031308759935200214, 0.003331755055114627, 0.0035451429430395365, 0.003774269949644804, 0.004017564933747053, 0.004267462063580751, 0.004511686973273754, 0.004739081021398306, 0.004942989908158779, 0.005121518857777119, 0.005277330055832863, 0.005415314808487892, 0.005539541132748127, 0.005650804843753576, 0.005747622810304165, 0.005826938897371292, 0.005884876009076834, 0.005917664151638746, 0.005924123805016279, 0.0059051369316875935, 0.005861962214112282, 0.0057991608045995235, 0.005725201219320297, 0.005648986902087927, 0.005579385906457901, 0.0055258069187402725, 0.0054931980557739735, 0.005476744845509529, 0.005461518187075853, 0.005431949160993099, 0.005377442110329866, 0.005295062903314829, 0.005188080947846174, 0.005063352175056934, 0.0049309819005429745, 0.004804819822311401, 0.004699151962995529, 0.004621861968189478, 0.004573922138661146, 0.004549869801849127, 0.004540698137134314, 0.004536367952823639, 0.004529075231403112, 0.004513384774327278, 0.004483213182538748, 0.004435336217284203, 0.00437061907723546, 0.004292875062674284, 0.004205501172691584, 0.004107731860131025, 0.003997073974460363, 0.0038693819660693407, 0.0037230600137263536, 0.0035626220051199198, 0.003399013075977564, 0.0032468580175191164, 0.003119251923635602, 0.0030247881077229977, 0.0029641129076480865, 0.002929819980636239, 0.002910858951508999, 0.0028957671020179987, 0.0028741289861500263, 0.002838843036442995, 0.0027872170321643353, 0.0027209899853914976, 0.002646984066814184, 0.0025765320751816034, 0.0025237121153622866, 0.0025005401112139225, 0.0025118389166891575, 0.0025572380982339382, 0.002631101058796048, 0.0027270540595054626, 0.0028405480552464724, 0.0029692118987441063, 0.0031106879469007254, 0.003260438097640872, 0.0034134311135858297, 0.003566707018762827, 0.0037199389189481735, 0.0038741850294172764, 0.004032679833471775, 0.004199779126793146, 0.004380769096314907, 0.004578916821628809, 0.00479357922449708, 0.005022372119128704, 0.005260452162474394, 0.005500609055161476, 0.005733763799071312, 0.005951539147645235, 0.006148323882371187, 0.006320131942629814, 0.00646525714546442, 0.006581998895853758, 0.00666843680664897, 0.006721861194819212, 0.006739141885191202, 0.006721110083162785, 0.0066749220713973045, 0.006613447796553373, 0.006551964208483696, 0.006505434866994619, 0.006484644021838903, 0.006494778208434582, 0.006535928230732679, 0.006600281223654747, 0.0066734920255839825, 0.006736829876899719, 0.006773056928068399, 0.006770369131118059, 0.00672175595536828, 0.006623751949518919, 0.006475450005382299, 0.006277712062001228, 0.006031541153788567, 0.005737788043916225, 0.005398537032306194, 0.005017717834562063, 0.004601743072271347, 0.004159621894359589, 0.0037021159660071135, 0.003241030965000391, 0.0027872829232364893, 0.0023451519664376974, 0.0019108799751847982, 0.001477023004554212, 0.0010369770461693406, 0.0005883955745957792, 0.00013259099796414375, -0.00032880270737223327, -0.0007934579043649137, -0.0012596610467880964, -0.0017265330534428358, -0.002194642089307308, -0.002666329964995384, -0.003145888913422823, -0.0036354910116642714, -0.004134933929890394, -0.004640774801373482, -0.005147982854396105, -0.005651100073009729, -0.006142470054328442, -0.006613635923713446, -0.007057033013552427, -0.007468620780855417, -0.00785087700933218, -0.008211682550609112, -0.008561271242797375, -0.00890862476080656, -0.009260846301913261, -0.009620213881134987, -0.009984702803194523, -0.010347289964556694, -0.010697449557483196, -0.0110227195546031, -0.011308410204946995, -0.011543129570782185, -0.011722399853169918, -0.011846429668366909, -0.011920100077986717, -0.011949770152568817, -0.011942369863390923, -0.011906130239367485, -0.01184780988842249, -0.011772979982197285, -0.011683350428938866, -0.011575089767575264, -0.01144460029900074, -0.011293919757008553, -0.011131989769637585, -0.010970639996230602, -0.010821850039064884, -0.010695260018110275, -0.01059412956237793, -0.010512299835681915, -0.01043654978275299, -0.010349350050091743, -0.010233409702777863, -0.010077140294015408, -0.009875462390482426, -0.009628117084503174, -0.00933743454515934, -0.009007579647004604, -0.008642380125820637, -0.00824592262506485, -0.007823717780411243, -0.007384071126580238, -0.006937216967344284, -0.006491732783615589, -0.006055665202438831, -0.005635417066514492, -0.00522998021915555, -0.004831349011510611, -0.004427103791385889, -0.004005827009677887, -0.00356138008646667, -0.003095603082329035, -0.002617571037262678, -0.002143552992492914, -0.0016914779553189874, -0.0012753249611705542, -0.0009015543037094176, -0.0005695814033970237, -0.00027479720301926136, -1.0938800187432207e-05, 0.000229346303967759, 0.00045546769979409873, 0.0006771744810976088, 0.0009026143234223127, 0.0011388829443603754, 0.001390589983202517, 0.0016598410438746214, 0.0019440730102360249, 0.0022378889843821526, 0.0025357340928167105, 0.0028341710567474365, 0.0031319139525294304, 0.003429548116400838, 0.0037292290944606066, 0.00403317715972662, 0.004341511055827141, 0.004653144162148237, 0.004964366089552641, 0.005270096007734537, 0.005565527826547623, 0.005845728795975447, 0.006104839034378529, 0.006338578183203936, 0.006544293835759163, 0.006719564087688923, 0.006861134897917509, 0.006966690998524427, 0.007039770949631929, 0.00709184305742383, 0.007139481138437986, 0.007198721170425415, 0.007280655205249786, 0.007392961997538805, 0.007540660910308361, 0.007722415961325169, 0.007929185405373573, 0.008146953769028187, 0.00836020428687334, 0.008554781787097454, 0.008721472695469856, 0.00885729305446148, 0.008963544853031635, 0.009045159444212914, 0.009107984602451324, 0.009156265296041965, 0.009190195240080357, 0.009206092916429043, 0.009202387183904648, 0.009181312285363674, 0.009145986288785934, 0.009098043665289879, 0.00903945043683052, 0.00897261407226324, 0.008900516666471958, 0.008825908415019512, 0.008751394227147102, 0.008678142912685871, 0.008605719543993473, 0.008535152301192284, 0.008468135260045528, 0.008405469357967377, 0.008346536196768284, 0.008289402350783348, 0.008230660110712051, 0.008166656829416752, 0.008093710988759995, 0.008008996024727821, 0.007910780608654022, 0.007797660771757364, 0.007668237201869488, 0.007520488929003477, 0.007355616893619299, 0.007181054912507534, 0.007009719964116812, 0.006856685969978571, 0.006734066177159548, 0.006648931186646223, 0.006601621862500906, 0.006586881820112467, 0.0065999990329146385, 0.006637842860072851, 0.006695027928799391, 0.0067633697763085365, 0.006830601952970028, 0.006881846114993095, 0.006903143133968115, 0.006884702015668154, 0.0068225921131670475, 0.0067183529026806355, 0.0065795788541436195, 0.006414791103452444, 0.006230636965483427, 0.00603473000228405, 0.0058393320068717, 0.005662421230226755, 0.005522219929844141, 0.005429952871054411, 0.005385859869420528, 0.0053816549479961395, 0.00540270796045661, 0.005430418066680431, 0.005445098038762808, 0.005431510973721743, 0.005382842849940062, 0.005301033146679401, 0.005194244906306267, 0.005070832092314959, 0.004935677163302898, 0.004789756145328283, 0.004632159136235714, 0.00446196598932147, 0.00428029615432024, 0.0040902611799538136, 0.0038948869332671165, 0.0036948840133845806, 0.003489523893222213, 0.0032785239163786173, 0.0030602579936385155, 0.002830391051247716, 0.0025848140940070152, 0.002322237007319927, 0.0020433960016816854, 0.0017488020239397883, 0.0014413660392165184, 0.0011271110270172358, 0.0008119365083985031, 0.0004992462927475572, 0.00018978409934788942, -0.00012092300312360749, -0.0004410597903188318, -0.0007781372987665236, -0.001136463019065559, -0.0015164939686655998, -0.0019148379797115922, -0.0023216810077428818, -0.0027191999834030867, -0.003088427009060979, -0.0034156988840550184, -0.0036962570156902075, -0.003932284191250801, -0.004131540190428495, -0.004306981805711985, -0.004473756067454815, -0.004645880777388811, -0.004836572799831629, -0.005054471082985401, -0.005300189834088087, -0.005564431194216013, -0.0058296541683375835, -0.006076072808355093, -0.006288070231676102, -0.006454893853515387, -0.006568457931280136, -0.006623608060181141, -0.006621973123401403, -0.006571706850081682, -0.006483856122940779, -0.006371620111167431, -0.006248887162655592, -0.006128058768808842, -0.006019366905093193, -0.005929235834628344, -0.005857580807060003, -0.005799204111099243, -0.005750508978962898, -0.005708531942218542, -0.005669272970408201, -0.005629620049148798, -0.005584903061389923, -0.0055295201018452644, -0.005463346838951111, -0.005392487160861492, -0.005323404911905527, -0.005259472876787186, -0.005201071035116911, -0.005146001931279898, -0.0050916410982608795, -0.00503728911280632, -0.004983020015060902, -0.004927920177578926, -0.004870456177741289, -0.004810212180018425, -0.004752646200358868, -0.00470832409337163, -0.0046911342069506645, -0.004713438916951418, -0.004781248047947884, -0.004893407225608826, -0.005044323857873678, -0.005224431864917278, -0.00542072718963027, -0.005620001815259457, -0.005812747869640589, -0.005994447041302919, -0.006166001781821251, -0.006330979987978935, -0.006494301836937666, -0.0066615501418709755, -0.0068385060876607895, -0.007029972039163113, -0.007238870952278376, -0.007467282935976982, -0.007717583794146776, -0.00798880122601986, -0.008275656960904598, -0.008570191450417042, -0.008860878646373749, -0.009132464416325092, -0.00937172956764698, -0.009569394402205944, -0.009721045382320881, -0.009828082285821438, -0.009895045310258865, -0.009928027167916298, -0.009934154339134693, -0.009921655058860779, -0.009898817166686058, -0.009871811605989933, -0.009843618609011173, -0.009813937358558178, -0.009779182262718678, -0.009732183068990707, -0.009662955068051815, -0.009561151266098022, -0.009419208392500877, -0.009234311990439892, -0.009008325636386871, -0.008748716674745083, -0.008467365987598896, -0.0081773791462183, -0.007888136431574821, -0.00760271493345499, -0.007319110911339521, -0.00703273294493556, -0.006739723030477762, -0.006440755911171436, -0.006142281927168369, -0.005853056907653809, -0.0055794198997318745, -0.005322305951267481, -0.005076980218291283, -0.00483643589541316, -0.004594882950186729, -0.004347172100096941, -0.004089434165507555, -0.003821444930508733, -0.003544338047504425, -0.0032588960602879524, -0.002966670086607337, -0.0026717009022831917, -0.0023780479095876217, -0.002088933950290084, -0.0018049849895760417, -0.0015254480531439185, -0.001249411958269775, -0.0009792373748496175, -0.0007237499812617898, -0.0004946141270920634, -0.00029949890449643135, -0.00013806790229864419, -2.774341965050553e-06, 0.00011797850311268121, 0.0002353864983888343, 0.0003565498918760568, 0.00048306360258720815, 0.0006122150225564837, 0.000737240188755095, 0.0008482494158670306, 0.0009343398851342499, 0.000986325554549694, 0.0009983150521293283, 0.0009686314733698964, 0.0009003942832350731, 0.0007992403116077185, 0.0006739977980032563, 0.0005360950017347932, 0.0003984193899668753, 0.0002737595932558179, 0.0001708271011011675, 9.109400707529858e-05, 3.4478580346331e-05, 1.6248139900199021e-06, -7.1365261646860745e-06, 3.1322640552389203e-06, 2.1003630536142737e-05, 3.195214958395809e-05, 2.042555934167467e-05, -2.674965980986599e-05, -0.00011939799878746271, -0.0002611347008496523, -0.00044822771451435983, -0.0006704865954816341, -0.0009116154978983104, -0.0011536229867488146, -0.0013784939656034112, -0.0015700870426371694, -0.0017150910571217537, -0.0018057150300592184, -0.001842417987063527, -0.0018316099885851145, -0.0017824650276452303, -0.0017019340302795172, -0.0015951760578900576, -0.001466394984163344, -0.0013207109877839684, -0.001168117974884808, -0.0010210450273007154, -0.000888490176293999, -0.0007732184021733701, -0.0006745437276549637, -0.0005902984994463623, -0.000517423904966563, -0.0004510637081693858, -0.00038814981235191226, -0.0003268985019531101, -0.00026512768818065524, -0.0002012568002101034, -0.00013401059550233185, -6.14838718320243e-05, 1.7408219719072804e-05, 9.936241258401424e-05, 0.00017725469660945237, 0.00024136340653058141, 0.0002807716082315892, 0.00028484739596024156, 0.0002456691872794181, 0.00016100489301607013, 3.734253914444707e-05, -0.00010917989857262, -0.00025582811213098466, -0.00038197438698261976, -0.00047743270988576114, -0.0005431995959952474, -0.0005896177026443183, -0.0006296196952462196, -0.0006749785970896482, -0.0007341870223172009, -0.0008115806267596781, -0.000906469183973968, -0.0010136880446225405, -0.0011245450004935265, -0.0012267479905858636, -0.0013072530273348093, -0.0013568890281021595, -0.0013744879979640245, -0.0013649440370500088, -0.0013393210247159004, -0.001311297994107008, -0.001293887966312468, -0.0012960380408912897, -0.00131977500859648, -0.001362079055979848, -0.001417970983311534, -0.0014815579634159803, -0.0015451549552381039, -0.0016020849579945207, -0.0016506570391356945, -0.0016939659835770726, -0.0017369469860568643, -0.0017841779626905918, -0.0018380139954388142, -0.0018992420518770814, -0.001968557946383953, -0.0020450609736144543, -0.0021271060686558485, -0.0022154159378260374, -0.0023126809392124414, -0.002424261998385191, -0.0025557701010257006, -0.0027049120981246233, -0.002860171953216195, -0.003002784913405776, -0.0031110988929867744, -0.0031650608871132135, -0.0031524149235337973, -0.0030739670619368553, -0.0029385830275714397, -0.0027587648946791887, -0.002545709954574704, -0.00230797310359776, -0.0020553350914269686, -0.001802206039428711, -0.0015631000278517604, -0.0013505170354619622, -0.0011746829841285944, -0.0010424869833514094, -0.000956507574301213, -0.0009153470164164901, -0.0009143020724877715, -0.0009457244887016714, -0.0009992201812565327, -0.0010653069475665689, -0.001136380946263671, -0.0012080769520252943, -0.0012796339578926563, -0.0013553219614550471, -0.0014424410182982683, -0.0015453719533979893, -0.0016634840285405517, -0.001792781986296177, -0.0019285540329292417, -0.0020649819634854794, -0.002196487970650196, -0.002317778067663312, -0.002426126040518284, -0.0025228809099644423, -0.0026104459539055824, -0.0026904649566859007, -0.0027660110499709845, -0.0028443909250199795, -0.0029331159312278032, -0.003036834066733718, -0.00315365893766284, -0.0032749311067163944, -0.0033877980895340443, -0.003477067919448018, -0.0035291770473122597, -0.003533625975251198, -0.0034845639020204544, -0.0033820250537246466, -0.0032324769999831915, -0.0030461999122053385, -0.002834059065207839, -0.0026058750227093697, -0.002368262968957424, -0.0021253719460219145, -0.001881567994132638, -0.0016404699999839067, -0.0014021169627085328, -0.0011623799800872803, -0.0009177066967822611, -0.0006675879121758044, -0.0004133429902140051, -0.00015892299416009337, 8.969027840066701e-05, 0.00032435631146654487, 0.0005374380853027105, 0.0007248519104905427, 0.0008866111747920513, 0.0010284560266882181, 0.0011608339846134186, 0.0012934280093759298, 0.0014296260196715593, 0.001567660947330296, 0.0017031989991664886, 0.0018332330510020256, 0.001958827953785658, 0.002084573032334447, 0.002215621992945671, 0.002354610012844205, 0.002499775029718876, 0.002643585903570056, 0.002775656059384346, 0.002885754918679595, 0.0029653029050678015, 0.0030081679578870535, 0.0030126580968499184, 0.002983435057103634, 0.0029303880874067545, 0.002863640896975994, 0.0027913989033550024, 0.002716697985306382, 0.002639289014041424, 0.0025579629000276327, 0.002472887048497796, 0.0023886479903012514, 0.0023151689674705267, 0.0022645338904112577, 0.0022456711158156395, 0.0022647948935627937, 0.0023225159384310246, 0.002413880079984665, 0.0025286029558628798, 0.002654721960425377, 0.0027822048868983984, 0.002902040956541896, 0.003005279926583171, 0.0030824351124465466, 0.0031269730534404516, 0.00313792796805501, 0.0031182330567389727, 0.0030725309625267982, 0.00300977798178792, 0.0029430589638650417, 0.002886787988245487, 0.00285328202880919, 0.0028495320584625006, 0.002879031002521515, 0.0029438959900289774, 0.0030432939529418945, 0.0031737100798636675, 0.003328405087813735, 0.003495605895295739, 0.003662476083263755, 0.003818555036559701, 0.0039588590152561665, 0.004081331193447113, 0.004185888916254044, 0.004276394844055176, 0.004360471852123737, 0.004447396844625473, 0.004543970804661512, 0.0046522668562829494, 0.004772392101585865, 0.004901675041764975, 0.00503308791667223, 0.005156600847840309, 0.005261145997792482, 0.0053364732302725315, 0.005374872125685215, 0.005372839979827404, 0.005331053864210844, 0.005253797862678766, 0.005146251991391182, 0.005015489179641008, 0.004869879223406315, 0.004718097858130932, 0.004566616844385862, 0.004418834112584591, 0.004272093065083027, 0.004118926823139191, 0.0039518531411886215, 0.003765743924304843, 0.003560496959835291, 0.0033401839900761843, 0.0031134220771491528, 0.002890933072194457, 0.002683372003957629, 0.0024979650042951107, 0.002337547019124031, 0.002199392067268491, 0.0020780470222234726, 0.0019666149746626616, 0.0018561920151114464, 0.0017398210475221276, 0.0016151999589055777, 0.001485095010139048, 0.001357270055450499, 0.0012411529896780849, 0.0011469200253486633, 0.0010825609788298607, 0.0010515990434214473, 0.0010543089592829347, 0.0010879900073632598, 0.0011489390162751079, 0.0012312460457906127, 0.001327181002125144, 0.0014271939871832728, 0.0015204929513856769, 0.0015974519774317741, 0.0016536880284547806, 0.001690597040578723, 0.0017115609953179955, 0.0017192249651998281, 0.0017135570524260402, 0.00169402698520571, 0.0016604720149189234, 0.0016131519805639982, 0.0015529609518125653, 0.0014814309542998672, 0.0013985770056024194, 0.0013025760417804122, 0.0011947560124099255, 0.0010820700554177165, 0.0009737682994455099, 0.0008792724111117423, 0.0008035543141886592, 0.0007467200048267841, 0.0007070843712426722, 0.0006810522172600031, 0.0006640846258960664, 0.0006498369039036334, 0.0006328482995741069, 0.0006113798008300364, 0.0005850329180248082, 0.0005513951764442027, 0.0005075929220765829, 0.00045191191020421684, 0.000381866586394608, 0.0002926609886344522, 0.00017575320089235902, 2.222678995167371e-05, -0.00017286049842368811, -0.0004076114855706692, -0.0006734256749041378, -0.0009589422843419015, -0.0012518060393631458, -0.0015370890032500029, -0.0018014099914580584, -0.0020392299629747868, -0.002252537989988923, -0.002445684978738427, -0.0026234209071844816, -0.002789720892906189, -0.0029487109277397394, -0.0031049149110913277, -0.0032600359991192818, -0.003412859980016947, -0.003564302111044526, -0.0037175840698182583, -0.0038767470978200436, -0.004044848028570414, -0.00422229478135705, -0.004407356958836317, -0.00459644990041852, -0.004783446900546551, -0.004961186088621616, -0.005123795010149479, -0.0052692340686917305, -0.0054001822136342525, -0.005522563122212887, -0.005642875097692013, -0.005766816902905703, -0.005897196009755135, -0.006033030804246664, -0.0061697461642324924, -0.0062998090870678425, -0.0064154420979321, -0.006512385793030262, -0.0065893870778381824, -0.006648805923759937, -0.0066941771656274796, -0.006729220971465111, -0.006760770920664072, -0.006797946989536285, -0.0068464120849967, -0.00690458994358778, -0.0069643971510231495, -0.0070133269764482975, -0.007038731127977371, -0.007031990215182304, -0.006988416891545057, -0.006908314768224955, -0.006795316934585571, -0.006655268836766481, -0.006495174951851368, -0.0063222721219062805, -0.006145054940134287, -0.005970946047455072, -0.005803165957331657, -0.005639650858938694, -0.005476688966155052, -0.005309131927788258, -0.005128228105604649, -0.004924147855490446, -0.0046890610828995705, -0.004419685807079077, -0.004117434844374657, -0.00378890591673553, -0.003445030888542533, -0.003100086934864521, -0.002768466016277671, -0.0024613640271127224, -0.0021857700776308775, -0.0019446410005912185, -0.001737563987262547, -0.0015602370258420706, -0.0014039230300113559, -0.0012553019914776087, -0.001098126987926662, -0.00091678457101807, -0.0006988050881773233, -0.00043611699948087335, -0.00013001369370613247, 0.0002093720977427438, 0.0005666280048899353, 0.0009263514075428247, 0.0012746050488203764, 0.001601853989996016, 0.0019034090219065547, 0.002181323943659663, 0.0024435780942440033, 0.0027002329006791115, 0.002958805998787284, 0.0032236899714916945, 0.0034963719081133604, 0.0037735109217464924, 0.004047942813485861, 0.004310207907110453, 0.00455131521448493, 0.004765083082020283, 0.004948793910443783, 0.005103650037199259, 0.005233677104115486, 0.0053427438251674175, 0.00543225510045886, 0.005500342231243849, 0.005544254090636969, 0.00556117994710803, 0.005551671143621206, 0.005522624123841524, 0.005485821980983019, 0.005454290192574263, 0.005437037907540798, 0.005437543150037527, 0.00545466085895896, 0.005485611967742443, 0.005524688865989447, 0.005563217215240002, 0.00558915501460433, 0.005590546876192093, 0.005559824872761965, 0.00549562880769372, 0.0053999219089746475, 0.005271926987916231, 0.005109856836497784, 0.00491253612563014, 0.004681265912950039, 0.004419440869241953, 0.0041338419541716576, 0.0038353970739990473, 0.003535649972036481, 0.00324536906555295, 0.0029722019098699093, 0.002717816038057208, 0.0024791210889816284, 0.0022492820862680674, 0.0020209290087223053, 0.0017868450377136469, 0.0015427550533786416, 0.0012895349645987153, 0.0010330489603802562, 0.0007817542064003646, 0.0005448088049888611, 0.0003288490988779813, 0.00013893470168113708, -1.9886969312210567e-05, -0.00014442800602409989, -0.00023249340301845223, -0.0002830658049788326, -0.0002985442988574505, -0.0002828795986715704, -0.0002412570029264316, -0.00018117070430889726, -0.00011054499918827787, -3.836383984889835e-05, 2.6874389732256532e-05, 7.90886624599807e-05, 0.00011696109868353233, 0.00014269859821069986, 0.0001587354054208845, 0.00016897160094231367, 0.0001780656020855531, 0.00019002679619006813, 0.00020623370073735714, 0.00022599940712098032, 0.0002466210862621665, 0.00026514899218454957, 0.0002792071900330484, 0.0002856726059690118, 0.00028435589047148824, 0.00027969060465693474, 0.0002797488996293396, 0.00029270179220475256, 0.0003262207901570946, 0.00038647849578410387, 0.0004762730095535517, 0.0005951629718765616, 0.0007388778030872345, 0.0009022300946526229, 0.0010798630537465215, 0.001265338039956987, 0.0014516320079565048, 0.0016307609621435404, 0.0017971120541915298, 0.0019501609494909644, 0.002095781033858657, 0.0022436389699578285, 0.002403985010460019, 0.0025842590257525444, 0.002784505020827055, 0.002999129006639123, 0.0032194750383496284, 0.003436456900089979, 0.003641346003860235, 0.0038285860791802406, 0.004000429064035416, 0.004166712984442711, 0.004340223036706448, 0.004529376979917288, 0.004735914990305901, 0.004956606775522232, 0.005184021778404713, 0.005407472141087055, 0.0056131090968847275, 0.00578693812713027, 0.005920593161135912, 0.006011961027979851, 0.006063995882868767, 0.006085976958274841, 0.006094765849411488, 0.006111095193773508, 0.0061531998217105865, 0.0062331329099833965, 0.0063513838686048985, 0.006499826908111572, 0.006663870997726917, 0.0068260361440479755, 0.0069695268757641315, 0.007080419920384884, 0.0071480232290923595, 0.007165980990976095, 0.007131299935281277, 0.007043804973363876, 0.006909660995006561, 0.006741621997207403, 0.006555338855832815, 0.006367214024066925, 0.006191250868141651, 0.006039006169885397, 0.00591905415058136, 0.005836525931954384, 0.005791951902210712, 0.005778876133263111, 0.0057839262299239635, 0.005792070180177689, 0.005790844094008207, 0.00577163090929389, 0.0057294717989861965, 0.005662432871758938, 0.005569826811552048, 0.005452016834169626, 0.005312267225235701, 0.00515760388225317, 0.004998812917619944, 0.004850686993449926, 0.004726441111415625, 0.004629211965948343, 0.004551811143755913, 0.004484735894948244, 0.004419596865773201, 0.004350096918642521, 0.004273901227861643, 0.004188924096524715, 0.004089708905667067, 0.003971974831074476, 0.0038354960270226, 0.003682863898575306, 0.003515796037390828, 0.003334315028041601, 0.0031362250447273254, 0.0029191349167376757, 0.002682924037799239, 0.002432666951790452, 0.002175125991925597, 0.0019148250576108694, 0.0016545229591429234, 0.0013962930534034967, 0.0011397419730201364, 0.0008838797220960259, 0.0006274539045989513, 0.0003652673913165927, 9.048764331964776e-05, -0.0002009388990700245, -0.0005080385017208755, -0.0008247190271504223, -0.0011449320008978248, -0.0014643620233982801, -0.0017780039925128222, -0.002078660996630788, -0.002356411889195442, -0.0026022009551525116, -0.002813484985381365, -0.002993820933625102, -0.0031499650795012712, -0.003286320948973298, -0.003404637100175023, -0.003507518908008933, -0.003601779928430915, -0.003694158047437668, -0.0037890670355409384, -0.0038863299414515495, -0.0039800307713449, -0.004060031846165657, -0.004115724004805088, -0.004140493925660849, -0.0041338009759783745, -0.004096988122910261, -0.004031376913189888, -0.003938787151128054, -0.0038226121105253696, -0.0036891470663249493, -0.003544586943462491, -0.0033914989326149225, -0.003229113994166255, -0.0030552439857274294, -0.0028685000725090504, -0.00266671902500093, -0.0024474600795656443, -0.002208814024925232, -0.001951094949617982, -0.0016783119644969702, -0.001396559993736446, -0.0011117140529677272, -0.0008258767193183303, -0.0005406636046245694, -0.00026112981140613556, 5.8072650972462725e-06, 0.000250371202128008, 0.00046188710257411003, 0.0006292472244240344, 0.0007428003009408712, 0.0007985968259163201, 0.0008022526744753122, 0.0007685921736992896, 0.0007159903179854155, 0.0006590635166503489, 0.000607235124334693, 0.0005653667030856013, 0.0005324594094417989, 0.000501887989230454, 0.00046626231051050127, 0.0004189905012026429, 0.0003527730004861951, 0.0002602389140520245, 0.00013641809346154332, -1.839109063439537e-05, -0.00019801700545940548, -0.00039557309355586767, -0.0006077163270674646, -0.0008343906956724823, -0.0010776149574667215, -0.00134017295204103, -0.0016214889474213123, -0.0019174970220774412, -0.002222656039521098, -0.0025267628952860832, -0.002815498970448971, -0.0030792600009590387, -0.003315218025818467, -0.0035237420815974474, -0.003707580966874957, -0.003872324014082551, -0.004024412948638201, -0.004172335844486952, -0.0043242499232292175, -0.0044866809621453285, -0.004665587097406387, -0.004867510870099068, -0.005097195040434599, -0.005355786066502333, -0.005638939794152975, -0.005937838926911354, -0.006243086885660887, -0.006547107826918364, -0.0068456148728728294, -0.007135823834687471, -0.007414503023028374, -0.007676886860281229, -0.007917732000350952, -0.008131151087582111, -0.00831365492194891, -0.008467376232147217, -0.008601524867117405, -0.008729820139706135, -0.008865276351571083, -0.009013675153255463, -0.009169437922537327, -0.009319300763309002, -0.009449006989598274, -0.009549489244818687, -0.009616508148610592, -0.009648243896663189, -0.009645543992519379, -0.009612598456442356, -0.009555311873555183, -0.009478733874857426, -0.009386155754327774, -0.009276779368519783, -0.009148775599896908, -0.009002665989100933, -0.008839298039674759, -0.008656815625727177, -0.008451510220766068, -0.008219950832426548, -0.007961447350680828, -0.007676437962800264, -0.007366465870290995, -0.007033541798591614, -0.006682645995169878, -0.006318266037851572, -0.005943838972598314, -0.005561854224652052, -0.005175366997718811, -0.00478722807019949, -0.004401130136102438, -0.004021810833364725, -0.003653198014944792, -0.0032995170913636684, -0.002964962972328067, -0.002652313094586134, -0.002361173974350095, -0.00208783196285367, -0.001828146050684154, -0.001576822018250823, -0.0013278309488669038, -0.001076831016689539, -0.0008247552905231714, -0.0005795736215077341, -0.0003549300890881568, -0.0001656969980103895, -2.642163963173516e-05, 5.203907858231105e-05, 6.362902058754116e-05, 1.0063649824587628e-05, -9.83469799393788e-05, -0.00024393459898419678, -0.00040358779369853437, -0.0005565906758420169, -0.0006900795269757509, -0.0007986308773979545, -0.0008816398913040757, -0.0009440265130251646, -0.0009939797455444932, -0.0010415849974378943, -0.001096484949812293, -0.0011667880462482572, -0.001257693045772612, -0.001370570040307939, -0.0015036039985716343, -0.0016519969794899225, -0.0018113820115104318, -0.001979158027097583, -0.002155303955078125, -0.0023400080390274525, -0.0025305759627372026, -0.002719973912462592, -0.002899518935009837, -0.0030666959937661886, -0.003226791974157095, -0.003384263953194022, -0.003536755917593837, -0.0036772729363292456, -0.0037972258869558573, -0.0038889660499989986, -0.003948577214032412, -0.003976637031883001, -0.003976713865995407, -0.003955846186727285, -0.0039248219691216946, -0.0038946550339460373, -0.0038746208883821964, -0.003872449044138193, -0.003893123008310795, -0.003936528228223324, -0.003997898194938898, -0.004069535061717033, -0.0041426001116633415, -0.004210156854242086, -0.004268344957381487, -0.004315918777137995, -0.00435365317389369, -0.004382752813398838, -0.0044048200361430645, -0.004422562196850777, -0.004439149051904678, -0.004456301219761372, -0.004472814034670591, -0.004482623189687729, -0.0044742547906935215, -0.004433081950992346, -0.00434820307418704, -0.004216698929667473, -0.004044549074023962, -0.0038438430055975914, -0.0036314709577709436, -0.0034248109441250563, -0.0032356351148337126, -0.0030692529398947954, -0.002926238114014268, -0.0028033049311488867, -0.0026935581117868423, -0.0025885149370878935, -0.0024809979368001223, -0.0023668259382247925, -0.0022414689883589745, -0.002099707955494523, -0.001939116045832634, -0.0017595370300114155, -0.0015653410227969289, -0.0013610109454020858, -0.0011511800112202764, -0.0009415845270268619, -0.0007365052006207407, -0.0005393208120949566, -0.0003513985138852149, -0.00017208029748871922, -6.44820374873234e-07, 0.00016319169662892818, 0.000319535902235657, 0.0004685303138103336, 0.0006111428956501186, 0.0007507234113290906, 0.0008915106882341206, 0.0010372080141678452, 0.0011898139491677284, 0.001350346952676773, 0.0015181789640337229, 0.0016914770239964128, 0.0018664540257304907, 0.0020373519510030746, 0.0021993599366396666, 0.002348921960219741, 0.0024828698951750994, 0.002598135033622384, 0.00269392691552639, 0.002773744985461235, 0.002843396971002221, 0.0029103029519319534, 0.002980790100991726, 0.003059437032788992, 0.003148334100842476, 0.0032476179767400026, 0.0033548660576343536, 0.003464065957814455, 0.003567456966266036, 0.0036560639273375273, 0.003723242087289691, 0.0037667860742658377, 0.0037851170636713505, 0.0037749910261482, 0.003733190940693021, 0.0036590690724551678, 0.003556635929271579, 0.0034355490934103727, 0.0033068840857595205, 0.003176921047270298, 0.003047423902899027, 0.0029166829772293568, 0.002783087082207203, 0.002646719105541706, 0.002507129916921258, 0.0023644519969820976, 0.002218788955360651, 0.0020717140287160873, 0.0019251089543104172, 0.0017804260132834315, 0.0016398660372942686, 0.0015071609523147345, 0.0013866890221834183, 0.0012827409664168954, 0.001199468970298767, 0.0011366179678589106, 0.0010862980270758271, 0.0010347870411351323, 0.0009662691154517233, 0.0008665216155350208, 0.000727216771338135, 0.000548495096154511, 0.00034126261016353965, 0.0001268477935809642, -7.263563020387664e-05, -0.00024257809855043888, -0.000377069489331916, -0.0004793883999809623, -0.000558434403501451, -0.0006276848143897951, -0.000701822922565043, -0.0007914244779385626, -0.0009010339854285121, -0.001030461979098618, -0.0011719129979610443, -0.001311706961132586, -0.0014389980351552367, -0.001547118998132646, -0.0016338430577889085, -0.001699791057035327, -0.0017470340244472027, -0.001779851969331503, -0.0018033840460702777, -0.0018243020167574286, -0.0018486280459910631, -0.0018800690304487944, -0.0019200750393792987, -0.001969225937500596, -0.0020290170796215534, -0.002102901926264167, -0.0021937519777566195, -0.0023021239321678877, -0.0024256741162389517, -0.0025592739693820477, -0.0026969679165631533, -0.0028303160797804594, -0.0029509488958865404, -0.003055104985833168, -0.003141911933198571, -0.003212240058928728, -0.003268938045948744, -0.0033147670328617096, -0.003352134022861719, -0.0033838769886642694, -0.003415169892832637, -0.0034500400070101023, -0.0034905080683529377, -0.0035372721031308174, -0.003587838029488921, -0.0036384379491209984, -0.0036850098986178637, -0.00372517597861588, -0.003758349921554327, -0.003786162007600069, -0.003811900969594717, -0.003838975913822651, -0.003868834115564823, -0.003900685114786029, -0.003931765910238028, -0.003956940956413746, -0.0039711641147732735, -0.003970639780163765, -0.003954894840717316, -0.003926890902221203, -0.003891752101480961, -0.003857094096019864, -0.003830478060990572, -0.0038180199917405844, -0.0038220910355448723, -0.003839618992060423, -0.003861896926537156, -0.0038769340608268976, -0.003871652064844966, -0.0038357640150934458, -0.003763801883906126, -0.0036568089853972197, -0.00352186500094831, -0.0033709739800542593, -0.0032194301020354033, -0.003082755021750927, -0.002973881084471941, -0.002902100095525384, -0.0028711610939353704, -0.002878938103094697, -0.0029178299009799957, -0.002977275988087058, -0.0030454678926616907, -0.0031120909843593836, -0.0031686800066381693, -0.0032077189534902573, -0.003223575884476304, -0.003212671959772706, -0.0031744330190122128, -0.0031114460434764624, -0.0030296100303530693, -0.002940189093351364, -0.0028587100096046925, -0.0028023249469697475, -0.0027864770963788033, -0.0028225008863955736, -0.0029141989070922136, -0.003055565059185028, -0.0032342120539397, -0.0034331900533288717, -0.003634139895439148, -0.003822141094133258, -0.003987892065197229, -0.004129427019506693, -0.004250319208949804, -0.00435556098818779, -0.004450844135135412, -0.004540126770734787, -0.004625400993973017, -0.004706198815256357, -0.004782191012054682, -0.00485558807849884, -0.004933340009301901, -0.005022854078561068, -0.005128986202180386, -0.005256071221083403, -0.0054076057858765125, -0.005587058141827583, -0.005796570796519518, -0.006037055980414152, -0.006306477822363377, -0.006599714048206806, -0.006911782082170248, -0.0072376541793346405, -0.007571650203317404, -0.007907776162028313, -0.00824043620377779, -0.008563763462007046, -0.0088737141340971, -0.009167580865323544, -0.009440688416361809, -0.009687146171927452, -0.00990010891109705, -0.010074679739773273, -0.010212750174105167, -0.010319620370864868, -0.010402490384876728, -0.01046966016292572, -0.010529830120503902, -0.010589109733700752, -0.010648390278220177, -0.010703399777412415, -0.010747999884188175, -0.010779060423374176, -0.010794620029628277, -0.010793659836053848, -0.01077624037861824, -0.01074496004730463, -0.01070442982017994, -0.01065846998244524, -0.010607689619064331, -0.010547650046646595, -0.010469360277056694, -0.010361379943788052, -0.01021603960543871, -0.01003270037472248, -0.009817375801503658, -0.009578379802405834, -0.009321358986198902, -0.009048514068126678, -0.008761364035308361, -0.008462642319500446, -0.008155779913067818, -0.007844297215342522, -0.007530224043875933, -0.007212440948933363, -0.006889644078910351, -0.006563834846019745, -0.006240755785256624, -0.005924760829657316, -0.005615750793367624, -0.005308188032358885, -0.004993141163140535, -0.004661210812628269, -0.004306402988731861, -0.0039261761121451855, -0.003521841950714588, -0.003095177933573723, -0.0026451940648257732, -0.0021680810023099184, -0.001660478999838233, -0.0011237770086154342, -0.0005642084288410842, 9.844367014011368e-06, 0.0005878055817447603, 0.0011574180098250508, 0.001708748983219266, 0.002237096894532442, 0.002739554038271308, 0.003213295014575124, 0.0036571710370481014, 0.00407232902944088, 0.004461992997676134, 0.0048310537822544575, 0.005182170774787664, 0.00551638612523675, 0.00583414314314723, 0.006135018076747656, 0.006416195072233677, 0.006673077121376991, 0.006898597814142704, 0.007087016943842173, 0.0072344401851296425, 0.007337450049817562, 0.00739565584808588, 0.007415723986923695, 0.007411071099340916, 0.007399342022836208, 0.007396947126835585, 0.007411933038383722, 0.0074469828978180885, 0.007499540224671364, 0.007556017022579908, 0.007597126066684723, 0.007604384794831276, 0.007562567014247179, 0.007463363930583, 0.007308330852538347, 0.007106637116521597, 0.006873320788145065, 0.006623794790357351, 0.0063681951723992825, 0.006108923815190792, 0.0058426507748663425, 0.005566282197833061, 0.005280512850731611, 0.004989758133888245, 0.004700417164713144, 0.0044165379367768764, 0.00413811020553112, 0.003863302990794182, 0.003589139087125659, 0.003314046887680888, 0.003039757953956723, 0.002771718893200159, 0.0025184929836541414, 0.00228946004062891, 0.0020911889150738716, 0.0019284050213173032, 0.0018039740389212966, 0.0017154579982161522, 0.0016558630159124732, 0.0016170799499377608, 0.0015901699662208557, 0.00156625104136765, 0.0015416579553857446, 0.0015150830149650574, 0.0014832729939371347, 0.00144582602661103, 0.0014060060493648052, 0.0013654630165547132, 0.0013198739616200328, 0.0012643360532820225, 0.0011961329728364944, 0.001114794984459877, 0.001021350035443902, 0.000918246281798929, 0.0008058248786255717, 0.000682077428791672, 0.0005462893168441951, 0.0003985443036071956, 0.0002420821983832866, 8.205018093576655e-05, -7.748186180833727e-05, -0.0002302744978806004, -0.0003667194105219096, -0.00047341189929284155, -0.0005369725986383855, -0.0005505986046046019, -0.0005181874730624259, -0.00045205288915894926, -0.00036585520138032734, -0.00026978898677043617, -0.00016941399371717125, -6.556422886205837e-05, 4.5524291635956615e-05, 0.00016916969616431743, 0.00030929830973036587, 0.00046504350029863417, 0.0006316415965557098, 0.0008047731244005263, 0.000982123427093029, 0.0011622400488704443, 0.001343423966318369, 0.0015260030049830675, 0.0017131409840658307, 0.0019076770404353738, 0.0021113241091370583, 0.0023213329259306192, 0.0025289910845458508, 0.0027230209670960903, 0.002895503072068095, 0.003043504897505045, 0.0031682730186730623, 0.0032762489281594753, 0.0033770669251680374, 0.0034814788959920406, 0.003596387105062604, 0.003720497014001012, 0.003847721964120865, 0.003968268167227507, 0.0040719821117818356, 0.004152887035161257, 0.00421132380142808, 0.004252794198691845, 0.004284447990357876, 0.0043143341317772865, 0.004349921829998493, 0.004398256074637175, 0.00446311105042696, 0.0045423610135912895, 0.004628797061741352, 0.004711509216576815, 0.004780322778970003, 0.004830420948565006, 0.004864790942519903, 0.004886236973106861, 0.004892504774034023, 0.004880115855485201, 0.004844973795115948, 0.004784250166267157, 0.00469485018402338, 0.004574811086058617, 0.0044242930598556995, 0.004242638126015663, 0.004031448159366846, 0.0037967900279909372, 0.003549447050318122, 0.0033054170198738575, 0.003081049071624875, 0.002887411043047905, 0.002731726039201021, 0.0026183261070400476, 0.0025496839080005884, 0.002525466028600931, 0.002539265900850296, 0.002579252002760768, 0.002629321999847889, 0.002674971939995885, 0.0027068080380558968, 0.0027189310640096664, 0.002707601059228182, 0.002672564936801791, 0.0026196360122412443, 0.0025605119299143553, 0.002509560901671648, 0.0024807280860841274, 0.0024840340483933687, 0.002525290008634329, 0.0026030540466308594, 0.0027107009664177895, 0.002841369016095996, 0.0029898779466748238, 0.0031503511127084494, 0.0033159360755234957, 0.003478395054116845, 0.003629653947427869, 0.0037638279609382153, 0.0038800430484116077, 0.003981363959610462, 0.004072216805070639, 0.0041588651947677135, 0.00424799881875515, 0.00434460211545229, 0.004454107955098152, 0.004584508016705513, 0.004745625890791416, 0.0049433521926403046, 0.00517491577193141, 0.005433504935353994, 0.005709647201001644, 0.005993593018501997, 0.006275712978094816, 0.006547317840158939, 0.006800503935664892, 0.007026719860732555, 0.007216183003038168, 0.007361448835581541, 0.007460169959813356, 0.0075142099522054195, 0.007526541128754616, 0.00749980378895998, 0.007437680847942829, 0.00734609505161643, 0.007233100943267345, 0.007105897180736065, 0.00696921581402421, 0.0068271588534116745, 0.006682351231575012, 0.006531890016049147, 0.006369569804519415, 0.0061900559812784195, 0.0059907869435846806, 0.005771899130195379, 0.005536907818168402, 0.00528913177549839, 0.00502766715362668, 0.004750237800180912, 0.004456841852515936, 0.004149014130234718, 0.00383044988848269, 0.0035086360294371843, 0.003189393086358905, 0.0028705240692943335, 0.002546747913584113, 0.0022153339814394712, 0.0018791770562529564, 0.0015464740572497249, 0.0012273859465494752, 0.0009293382172472775, 0.0006558034219779074, 0.00040664890548214316, 0.0001765252964105457, -4.1148341551888734e-05, -0.00025178660871461034, -0.00046131189446896315, -0.000674157403409481, -0.0008939031977206469, -0.001124058966524899, -0.0013650290202349424, -0.0016117229824885726, -0.0018541530007496476, -0.0020787110552191734, -0.0022728319745510817, -0.002429927932098508, -0.0025468498934060335, -0.002623002976179123, -0.0026614039670675993, -0.002665749052539468, -0.0026393160223960876, -0.0025859109591692686, -0.002510471036657691, -0.0024161450564861298, -0.002302482957020402, -0.002167836995795369, -0.002012695884332061, -0.0018402510322630405, -0.0016535449540242553, -0.0014539819676429033, -0.0012411250500008464, -0.001016531023196876, -0.0007847733213566244, -0.0005506132147274911, -0.00031848440994508564, -9.075700654648244e-05, 0.00013419659808278084, 0.0003614604938775301, 0.0005965044256299734, 0.000843825691845268, 0.0011074820067733526, 0.0013878720346838236, 0.0016827969811856747, 0.0019877550657838583, 0.002296348102390766, 0.0025997059419751167, 0.0028882259503006935, 0.0031534270383417606, 0.0033921590074896812, 0.003607355058193207, 0.0038064720574766397, 0.0039990427903831005, 0.004194927867501974, 0.0044029089622199535, 0.004631995223462582, 0.004890704993158579, 0.005183272995054722, 0.005507849156856537, 0.0058560678735375404, 0.006214782129973173, 0.006568313110619783, 0.006900180131196976, 0.0071948510594666, 0.007438831962645054, 0.007623505778610706, 0.007747345138341188, 0.007817414589226246, 0.007847628556191921, 0.007856928743422031, 0.007866669446229935, 0.007896183989942074, 0.007958805188536644, 0.008059770800173283, 0.00819696020334959, 0.008361982181668282, 0.008543870411813259, 0.008730136789381504, 0.008909345604479313, 0.009071962907910347, 0.009211313910782337, 0.009323257021605968, 0.009405718185007572, 0.00945814698934555, 0.009479643777012825, 0.009472008794546127, 0.00944000855088234, 0.009388072416186333, 0.00931764580309391, 0.00922803208231926, 0.009116721339523792, 0.008983032777905464, 0.008830543607473373, 0.008665597066283226, 0.008495880290865898, 0.008330876007676125, 0.008184042759239674, 0.008070389740169048, 0.007999066263437271, 0.007971128448843956, 0.007978991605341434, 0.00800981093198061, 0.00804623682051897, 0.008069047704339027, 0.008066055364906788, 0.008035639300942421, 0.007984204217791557, 0.007920457981526852, 0.007852344773709774, 0.0077839200384914875, 0.007714258041232824, 0.0076416609808802605, 0.007567975204437971, 0.007498355116695166, 0.007437941152602434, 0.007385736797004938, 0.007335339207202196, 0.007274752948433161, 0.007192532066255808, 0.00708062993362546, 0.006935729179531336, 0.006759794894605875, 0.006560856010764837, 0.006350071169435978, 0.006137874908745289, 0.005930895917117596, 0.005729285068809986, 0.005530320107936859, 0.005331229884177446, 0.005130634177476168, 0.004927477799355984, 0.00472134817391634, 0.00451271515339613, 0.004303665831685066, 0.004097921773791313, 0.0038997631054371595, 0.0037138250190764666, 0.0035438518971204758, 0.003391468897461891, 0.0032549730967730284, 0.0031286869198083878, 0.0030020989943295717, 0.0028648129664361477, 0.0027096939738839865, 0.002532375045120716, 0.0023293730337172747, 0.0021013449877500534, 0.0018547120271250606, 0.001599675975739956, 0.0013474259758368134, 0.0011084240395575762, 0.0008894582279026508, 0.000693088280968368, 0.0005173574900254607, 0.00035752818803302944, 0.00020679610315710306, 5.8355319197289646e-05, -9.32116963667795e-05, -0.00025002050097100437, -0.0004125871928408742, -0.0005821387167088687, -0.0007577858050353825, -0.0009374797227792442, -0.0011189739452674985, -0.001300796982832253, -0.001479597995057702, -0.0016493999864906073, -0.0018050529761239886, -0.001945098047144711, -0.002074776915833354, -0.0022034260910004377, -0.0023409519344568253, -0.0024960769806057215, -0.002673269947990775, -0.002870656084269285, -0.0030811510514467955, -0.0032954919151961803, -0.003506297944113612, -0.0037077460438013077, -0.0038959761150181293, -0.004068746231496334, -0.004226665012538433, -0.0043710279278457165, -0.004501222167164087, -0.0046138400211930275, -0.004705133847892284, -0.004774465225636959, -0.00482217688113451, -0.004848895128816366, -0.004858416970819235, -0.004856377840042114, -0.004849820863455534, -0.004844356793910265, -0.004843359813094139, -0.004847678821533918, -0.004857304040342569, -0.004873754922300577, -0.004896280821412802, -0.0049196030013263226, -0.004935857839882374, -0.004935921169817448, -0.0049118660390377045, -0.004857222083956003, -0.004769069142639637, -0.004650196060538292, -0.0045047481544315815, -0.004334933124482632, -0.004142589867115021, -0.003932487219572067, -0.0037098880857229233, -0.003479671897366643, -0.0032472889870405197, -0.0030168381053954363, -0.0027884389273822308, -0.0025588308926671743, -0.0023244349285960197, -0.0020834479946643114, -0.0018352889455854893, -0.0015795249491930008, -0.001314320950768888, -0.0010358899598941207, -0.0007403441122733057, -0.00042647900409065187, -9.572364797350019e-05, 0.00025308941258117557, 0.0006256134947761893, 0.0010274129454046488, 0.00146127596963197, 0.0019279109546914697, 0.002423491096124053, 0.0029388319235295057, 0.00346604292280972, 0.004000171087682247, 0.004539546091109514, 0.005082557909190655, 0.005627965088933706, 0.0061737229116261005, 0.0067170108668506145, 0.007252876181155443, 0.0077746352180838585, 0.008274485357105732, 0.00874640978872776, 0.009187603369355202, 0.009596535935997963, 0.009970825165510178, 0.010310440324246883, 0.010619300417602062, 0.010903400368988514, 0.011165370233356953, 0.01140195969492197, 0.011605910025537014, 0.011772310361266136, 0.011901970021426678, 0.012000460177659988, 0.012073390185832977, 0.012120679952204227, 0.012141830287873745, 0.012140190228819847, 0.01212012954056263, 0.012083129957318306, 0.012027510441839695, 0.011953080072999, 0.011862380430102348, 0.011759289540350437, 0.01164788007736206, 0.011532739736139774, 0.0114164799451828, 0.011297089979052544, 0.011169170029461384, 0.011027369648218155, 0.01086840033531189, 0.010689360089600086, 0.010488609783351421, 0.010264740325510502, 0.010013939812779427, 0.009730028919875622, 0.009407402947545052, 0.009044603444635868, 0.008644879795610905, 0.008214211091399193, 0.007759586907923222, 0.007289492059499025, 0.006814002990722656, 0.006341588217765093, 0.0058790650218725204, 0.005430764984339476, 0.004999734926968813, 0.004588800016790628, 0.004198696929961443, 0.003827182110399008, 0.003473218996077776, 0.003137239022180438, 0.0028189150616526604, 0.002515074098482728, 0.0022223240230232477, 0.001938113011419773, 0.0016599140362814069, 0.001382702961564064, 0.001102310954593122, 0.0008196611888706684, 0.0005403275135904551, 0.0002730170963332057, 2.4017799660214223e-05, -0.0002045680012088269, -0.00040993568836711347, -0.0005862694815732539, -0.0007263525039888918, -0.0008268979727290571, -0.0008875068742781878, -0.0009112306288443506, -0.0009055790724232793, -0.0008832925232127309, -0.0008599084103479981, -0.0008480416727252305, -0.000853939272928983, -0.0008773311274126172, -0.0009139140020124614, -0.0009583028731867671, -0.0010058520128950477, -0.001052694977261126, -0.0010968559654429555, -0.0011395210167393088, -0.001183390966616571, -0.001232272945344448, -0.0012868300545960665, -0.0013420480536296964, -0.0013875779695808887, -0.0014127009781077504, -0.001412414014339447, -0.0013839700259268284, -0.00132590695284307, -0.0012418710393831134, -0.001142362947575748, -0.0010437059681862593, -0.0009648572886362672, -0.0009217461920343339, -0.0009239831124432385, -0.0009755815262906253, -0.001072610029950738, -0.001205208944156766, -0.0013594389893114567, -0.001519281999208033, -0.0016715510282665491, -0.0018087440403178334, -0.0019316569669172168, -0.0020473410841077566, -0.002166135935112834, -0.0022990319412201643, -0.0024551479145884514, -0.0026404550299048424, -0.002857021987438202, -0.0031035649590194225, -0.0033744669053703547, -0.003661941969767213, -0.003959531895816326, -0.004265535157173872, -0.004581382963806391, -0.00490933284163475, -0.0052505480125546455, -0.005603870842605829, -0.005966547876596451, -0.006336113903671503, -0.006709645036607981, -0.007083909120410681, -0.007455537095665932, -0.00782250240445137, -0.008183714002370834, -0.008537819609045982, -0.008881199173629284, -0.009208680130541325, -0.009514177218079567, -0.00979082565754652, -0.010033530183136463, -0.010243000462651253, -0.010427829809486866, -0.010600849986076355, -0.010773959569633007, -0.010955650359392166, -0.011149040423333645, -0.01135443989187479, -0.011570420116186142, -0.01179272960871458, -0.012014330364763737, -0.012226860038936138, -0.012421660125255585, -0.012591030448675156, -0.01272668968886137, -0.012821890413761139, -0.012876180000603199, -0.012893239967525005, -0.012879160232841969, -0.012839600443840027, -0.01277828961610794, -0.012699680402874947, -0.012609199620783329, -0.012513370253145695, -0.012418380007147789, -0.01232870016247034, -0.012244230136275291, -0.012159920297563076, -0.012069189921021461, -0.011963429860770702, -0.011831659823656082, -0.011662350036203861, -0.011448689736425877, -0.011193029582500458, -0.010906339623034, -0.010603910312056541, -0.0103005301207304, -0.010006359778344631, -0.009723369032144547, -0.009446551091969013, -0.009168284945189953, -0.008880935609340668, -0.008580118417739868, -0.008264710195362568, -0.00793737918138504, -0.007601973135024309, -0.0072610448114573956, -0.006915547885000706, -0.006567317992448807, -0.006221462972462177, -0.005884580779820681, -0.005561222787946463, -0.005254807882010937, -0.004966231063008308, -0.00469334376975894, -0.004427414853125811, -0.004156060051172972, -0.0038675449322909117, -0.003555272938683629, -0.0032191830687224865, -0.00286289700306952, -0.0024914899840950966, -0.002111959969624877, -0.0017343750223517418, -0.0013709960039705038, -0.0010337800486013293, -0.0007288947235792875, -0.00045297539327293634, -0.0001948371937032789, 6.053292963770218e-05, 0.00032660950091667473, 0.0006124817882664502, 0.0009185482049360871, 0.0012378570390865207, 0.001564068952575326, 0.001893679960630834, 0.00221976893953979, 0.0025295810773968697, 0.0028063540812581778, 0.0030363500118255615, 0.0032129939645528793, 0.0033374920021742582, 0.0034165910910815, 0.0034606740809977055, 0.0034813599195331335, 0.0034906489308923483, 0.0034994708839803934, 0.0035182919818907976, 0.0035558980889618397, 0.00361520703881979, 0.003695945953950286, 0.003795407945290208, 0.003907761070877314, 0.004024668131023645, 0.004136492032557726, 0.00423603318631649, 0.004319535102695227, 0.004388007801026106, 0.004446967970579863, 0.004506730008870363, 0.004578608088195324, 0.004670130088925362, 0.004783207084983587, 0.004916885867714882, 0.005072338972240686, 0.0052502150647342205, 0.005445058923214674, 0.005647997837513685, 0.0058472538366913795, 0.006033805198967457, 0.006203448865562677, 0.006356086116284132, 0.006493364926427603, 0.006616184953600168, 0.00672631710767746, 0.006828151177614927, 0.006926864851266146, 0.00702766003087163, 0.00713443523272872, 0.007245180197060108, 0.007350157015025616, 0.0074378130957484245, 0.0074975029565393925, 0.007523225154727697, 0.0075155640952289104, 0.007480955217033625, 0.007429860066622496, 0.007374675944447517, 0.007325944025069475, 0.007291014771908522, 0.007274349220097065, 0.007278814911842346, 0.007303480990231037, 0.00734067615121603, 0.007375959772616625, 0.007392701227217913, 0.007376622874289751, 0.0073180608451366425, 0.007212699856609106, 0.007062389049679041, 0.006874069105833769, 0.006658234167844057, 0.006426422856748104, 0.006187422201037407, 0.005946684163063765, 0.005708063021302223, 0.005477167200297117, 0.005258824210613966, 0.0050553129985928535, 0.004865483846515417, 0.004686030093580484, 0.00451247813180089, 0.004341073799878359, 0.0041698371060192585, 0.003999247215688229, 0.0038318370934575796, 0.0036699529737234116, 0.0035143019631505013, 0.0033659508917480707, 0.0032252310775220394, 0.0030887098982930183, 0.002950953086838126, 0.0028050069231539965, 0.0026465500704944134, 0.0024765098933130503, 0.002302831970155239, 0.002139424905180931, 0.0020022860262542963, 0.0019031900446861982, 0.001843431033194065, 0.0018170169787481427, 0.0018140010070055723, 0.0018227760447189212, 0.0018298060167580843, 0.001824249979108572, 0.001800440950319171, 0.0017588060582056642, 0.0017049240414053202, 0.001646692049689591, 0.0015920409932732582, 0.0015461919829249382, 0.0015101350145414472, 0.0014830559957772493, 0.0014644870534539223, 0.0014547760365530849, 0.0014553129440173507, 0.0014683579793199897, 0.0014954740181565285, 0.0015387580497190356, 0.0016008010134100914, 0.0016811899840831757, 0.0017765579978004098, 0.0018830789485946298, 0.001998485065996647, 0.0021213360596448183, 0.0022511850111186504, 0.0023900240194052458, 0.0025398049037903547, 0.0026982189156115055, 0.0028592830058187246, 0.0030166239012032747, 0.0031672129407525063, 0.0033076528925448656, 0.003431475954130292, 0.003535008989274502, 0.0036229740362614393, 0.003707712981849909, 0.003804486943408847, 0.003926115110516548, 0.0040784478187561035, 0.004260154906660318, 0.0044630891643464565, 0.0046766651794314384, 0.004889281932264566, 0.005089594051241875, 0.00526665011420846, 0.005413777194917202, 0.0055298940278589725, 0.005618747789412737, 0.005687003023922443, 0.005742535926401615, 0.0057909851893782616, 0.005834090057760477, 0.005872718058526516, 0.005910051986575127, 0.005950840190052986, 0.005997340194880962, 0.006047029048204422, 0.006096918135881424, 0.006146375089883804, 0.006192873232066631, 0.0062310281209647655, 0.006256944965571165, 0.006269981153309345, 0.006270762998610735, 0.006260876078158617, 0.0062415748834609985, 0.006212296895682812, 0.00617374200373888, 0.006127775181084871, 0.0060754078440368176, 0.006017690058797598, 0.005955791100859642, 0.00588958477601409, 0.005817533005028963, 0.005734569858759642, 0.0056337639689445496, 0.0055095660500228405, 0.005358742084354162, 0.005181643180549145, 0.0049833860248327255, 0.004775486886501312, 0.004574184771627188, 0.004393810871988535, 0.004242206923663616, 0.004119101911783218, 0.004016220103949308, 0.003922127187252045, 0.0038236009422689676, 0.00371062895283103, 0.003579607931897044, 0.0034316719975322485, 0.003270393004640937, 0.0031004250049591064, 0.002925537060946226, 0.0027479929849505424, 0.0025704388972371817, 0.0023958319798111916, 0.0022269131150096655, 0.00206645205616951, 0.0019174630288034678, 0.001780729042366147, 0.0016559589421376586, 0.0015441919676959515, 0.001446870039217174, 0.001365288975648582, 0.001298106973990798, 0.0012397109530866146, 0.0011849619913846254, 0.0011303520295768976, 0.0010740129509940743, 0.001015890040434897, 0.0009572735289111733, 0.0008999155834317207, 0.0008449078886769712, 0.000791871570982039, 0.0007384967757388949, 0.0006825255113653839, 0.000622642575763166, 0.0005578208947554231, 0.0004886828828603029, 0.000417859700974077, 0.00035008700797334313, 0.0002894772042054683, 0.00023946509463712573, 0.00020183839660603553, 0.00017658559954725206, 0.00016086810501292348, 0.000149606799823232, 0.00013434530410449952, 0.00010391510295448825, 4.900705971522257e-05, -3.3803098631324247e-05, -0.00014401449880097061, -0.0002800665097311139, -0.0004384999047033489, -0.000612017116509378, -0.0007915967144072056, -0.0009673450840637088, -0.0011314869625493884, -0.0012800239492207766, -0.001415360951796174, -0.0015430550556629896, -0.0016701120184734464, -0.0018043579766526818, -0.0019507290562614799, -0.0021085930056869984, -0.002272553974762559, -0.0024345279671251774, -0.0025859950110316277, -0.0027217420283704996, -0.002840162953361869, -0.002943475032225251, -0.0030360259115695953, -0.003121756948530674, -0.003205025102943182, -0.0032911000307649374, -0.0033849019091576338, -0.003489387920126319, -0.0036038109101355076, -0.0037250949535518885, -0.0038482239469885826, -0.003968026954680681, -0.004083964042365551, -0.0041988808661699295, -0.004319436848163605, -0.004450250882655382, -0.004591932985931635, -0.004740457981824875, -0.004890398122370243, -0.005038035102188587, -0.005180785898119211, -0.005319326184689999, -0.005457359831780195, -0.005600663833320141, -0.005754155106842518, -0.005918850190937519, -0.0060901460237801075, -0.0062584360130131245, -0.00641676178202033, -0.0065652597695589066, -0.006706944201141596, -0.006842183880507946, -0.006970723159611225, -0.007095642853528261, -0.007220290135592222, -0.007346066180616617, -0.007470616139471531, -0.007588899228721857, -0.007694859988987446, -0.007785233203321695, -0.007862390950322151, -0.007931454107165337, -0.007996373809874058, -0.008057196624577045, -0.008113401010632515, -0.008168810978531837, -0.008229328319430351, -0.008295906707644463, -0.008363301865756512, -0.008424894884228706, -0.0084750447422266, -0.008512662723660469, -0.008539708331227303, -0.008557957597076893, -0.008571000769734383, -0.008580543100833893, -0.008585730567574501, -0.008581962436437607, -0.008564100600779057, -0.008526523597538471, -0.008464147336781025, -0.00837605632841587, -0.008266052231192589, -0.008139819838106632, -0.008002858608961105, -0.007859398610889912, -0.007713045924901962, -0.007567673921585083, -0.00742444209754467, -0.007281640078872442, -0.007137254811823368, -0.0069912332110106945, -0.006846384145319462, -0.0067078350111842155, -0.006582279223948717, -0.0064745680429041386, -0.0063848658464848995, -0.0063102152198553085, -0.006247565150260925, -0.00619537103921175, -0.00615212507545948, -0.006113693118095398, -0.006072739139199257, -0.006019641179591417, -0.005946263205260038, -0.005850120913237333, -0.005734588950872421, -0.005607395898550749, -0.005478803068399429, -0.005357726011425257, -0.005248800851404667, -0.005151817109435797, -0.005062054842710495, -0.0049736639484763145, -0.004882000852376223, -0.00478530116379261, -0.00468373904004693, -0.004579300060868263, -0.004472469910979271, -0.00436204019933939, -0.004248653072863817, -0.004138747230172157, -0.004042723216116428, -0.0039689610712230206, -0.003920875955373049, -0.0038973239716142416, -0.0038914100732654333, -0.0038956899661570787, -0.003906317986547947, -0.003922254778444767, -0.003947305027395487, -0.003988970071077347, -0.004053561016917229, -0.004144656006246805, -0.004263576120138168, -0.004408115986734629, -0.004573367070406675, -0.004752185195684433, -0.0049341279082000256, -0.00510710384696722, -0.005260984878987074, -0.0053909700363874435, -0.005501023028045893, -0.005599136929959059, -0.005692796781659126, -0.00578588480129838, -0.005877489224076271, -0.005964632146060467, -0.00604231795296073, -0.006103782914578915, -0.0061411671340465546, -0.006150214001536369, -0.006133075803518295, -0.006095035932958126, -0.00604413915425539, -0.005987232085317373, -0.005929084029048681, -0.0058716111816465855, -0.005814800038933754, -0.00575815886259079, -0.005701403133571148, -0.00564158707857132, -0.005571584217250347, -0.005484092980623245, -0.0053740208968520164, -0.005240981932729483, -0.005089105106890202, -0.004923095926642418, -0.004744790028780699, -0.0045529319904744625, -0.004342828877270222, -0.004107378888875246, -0.003839801996946335, -0.003536726115271449, -0.0031997771002352238, -0.0028344730380922556, -0.002449217950925231, -0.002053949050605297, -0.001659017987549305, -0.001271659042686224, -0.0008929917821660638, -0.0005188505165278912, -0.0001419549953425303, 0.0002439542004140094, 0.0006425419123843312, 0.0010529380524531007, 0.001470818999223411, 0.0018903829623013735, 0.002308068098500371, 0.0027219669427722692, 0.0031325079035013914, 0.003540480975061655, 0.003947487100958824, 0.004355086944997311, 0.004761409014463425, 0.005160640925168991, 0.005544053856283426, 0.005901340860873461, 0.006221670191735029, 0.006497005932033062, 0.006725634913891554, 0.006910494063049555, 0.007056461181491613, 0.007170639932155609, 0.007260628044605255, 0.007330894935876131, 0.0073833828791975975, 0.007417337968945503, 0.007430917117744684, 0.0074213529005646706, 0.007387456018477678, 0.0073286499828100204, 0.007245216052979231, 0.007139727007597685, 0.007017055060714483, 0.006883217953145504, 0.0067420899868011475, 0.006592308171093464, 0.006430450826883316, 0.006253671832382679, 0.006059679202735424, 0.005847101099789143, 0.0056144618429243565, 0.005359373055398464, 0.005079666152596474, 0.00477564986795187, 0.004451189190149307, 0.004113273229449987, 0.0037683609407395124, 0.0034208849538117647, 0.003071758896112442, 0.002719936892390251, 0.00236537610180676, 0.0020095070358365774, 0.0016556510236114264, 0.0013079129857942462, 0.000969614484347403, 0.0006422554142773151, 0.00032563498825766146, 1.8200560589320958e-05, -0.0002811049052979797, -0.0005715335137210786, -0.000850957992952317, -0.0011178459972143173, -0.0013732770457863808, -0.001617736998014152, -0.0018487339839339256, -0.002062099054455757, -0.0022556630428880453, -0.002428831998258829, -0.0025808559730648994, -0.0027106909547001123, -0.002817742060869932, -0.002902266103774309, -0.0029646409675478935, -0.0030069819185882807, -0.0030332980677485466, -0.0030487258918583393, -0.003057424910366535, -0.00306293205358088, -0.003066397039219737, -0.0030661579221487045, -0.0030590470414608717, -0.0030439419206231833, -0.003022893099114299, -0.002996578114107251, -0.0029625750612467527, -0.002916967961937189, -0.002857594983652234, -0.0027851059567183256, -0.0027040699496865273, -0.002619815059006214, -0.002535017905756831, -0.0024490379728376865, -0.0023586119059473276, -0.0022608148865401745, -0.002154347952455282, -0.0020392739679664373, -0.0019150619627907872, -0.001779443002305925, -0.0016312970547005534, -0.0014704560162499547, -0.0012976420111954212, -0.001114540034905076, -0.0009235054021701217, -0.0007263246225193143, -0.0005261803744360805, -0.0003296328941360116, -0.00014373719750437886, 2.6170300770900212e-05, 0.00017860760272014886, 0.0003161614004056901, 0.0004421308112796396, 0.0005559924175031483, 0.0006532701081596315, 0.0007274319068528712, 0.0007736412226222456, 0.0007902372744865716, 0.0007772095268592238, 0.000734152621589601, 0.0006628957926295698, 0.0005686507793143392, 0.0004587121948134154, 0.0003397235122974962, 0.0002177088026655838, 9.791606134967878e-05, -1.4769500012334902e-05, -0.00011857839854201302, -0.00021537620341405272, -0.0003082547918893397, -0.0004010942066088319, -0.0004959192010574043, -0.0005937623791396618, -0.0006948295049369335, -0.0007967168930917978, -0.0008966164896264672, -0.0009914733236655593, -0.001079921959899366, -0.001166015979833901, -0.0012593260034918785, -0.001370641984976828, -0.0015074419789016247, -0.0016715589445084333, -0.001858141040429473, -0.002057932084426284, -0.002262287074699998, -0.0024647200480103493, -0.0026568749453872442, -0.002830313052982092, -0.002983293030411005, -0.00312033505178988, -0.003246121108531952, -0.0033637341111898422, -0.0034754390362650156, -0.0035809900145977736, -0.003677159082144499, -0.0037605890538543463, -0.003829641966149211, -0.00388701306656003, -0.0039390381425619125, -0.003993466030806303, -0.0040565840899944305, -0.004131331108510494, -0.004217354115098715, -0.004312026780098677, -0.004412556998431683, -0.004517427179962397, -0.004622055217623711, -0.004718611016869545, -0.0047987219877541065, -0.004854802042245865, -0.00487927719950676, -0.004865867085754871, -0.0048133558593690395, -0.004725527949631214, -0.004613080061972141, -0.004489774815738201, -0.004366355016827583, -0.0042484961450099945, -0.004136903211474419, -0.0040308209136128426, -0.00393061013892293, -0.003837602911517024, -0.003750791074708104, -0.003664728021249175, -0.0035728150978684425, -0.003469852963462472, -0.003350293030962348, -0.0032085429411381483, -0.0030411980114877224, -0.0028476009611040354, -0.0026279110461473465, -0.002385210944339633, -0.0021252608858048916, -0.0018529710359871387, -0.0015717160422354937, -0.0012847620528191328, -0.0009992121485993266, -0.0007237925892695785, -0.0004652384086512029, -0.00022637119400314987, -5.934028195042629e-06, 0.00020074620260857046, 0.00040011509554460645, 0.0005980920977890491, 0.0007991651073098183, 0.0010053960140794516, 0.0012174659641459584, 0.0014357749605551362, 0.0016596369678154588, 0.0018856329843401909, 0.0021081441082060337, 0.0023220779839903116, 0.0025231209583580494, 0.002707473933696747, 0.0028741098940372467, 0.0030259808991104364, 0.003171880031004548, 0.003325415076687932, 0.0034952270798385143, 0.003679900895804167, 0.0038725959602743387, 0.00406360998749733, 0.004242944996803999, 0.004401661921292543, 0.004534839186817408, 0.004644162021577358, 0.004735354799777269, 0.004814593121409416, 0.004887061193585396, 0.004955505020916462, 0.005019871983677149, 0.005077658221125603, 0.005125896073877811, 0.005162192042917013, 0.005186235066503286, 0.005199161823838949, 0.005204879213124514, 0.0052079129964113235, 0.005207145120948553, 0.005198093131184578, 0.005176878999918699, 0.005140787921845913, 0.005085784010589123, 0.005009497050195932, 0.0049119628965854645, 0.004794557113200426, 0.004659648053348064, 0.0045097749680280685, 0.004349148832261562, 0.004183366894721985, 0.004019200801849365, 0.0038595409132540226, 0.0037002419121563435, 0.00353301502764225, 0.0033511288929730654, 0.0031521229539066553, 0.002936257980763912, 0.0027047640178352594, 0.002459289040416479, 0.002201161114498973, 0.001930902013555169, 0.0016491520218551159, 0.0013582879910245538, 0.0010610379977151752, 0.0007610428147017956, 0.00046268620644696057, 0.00016881090414244682, -0.00012012980005238205, -0.0004056986072100699, -0.0006881278241053224, -0.0009643840021453798, -0.0012307410361245275, -0.0014846209669485688, -0.0017230029916390777, -0.0019416429568082094, -0.0021388770546764135, -0.0023138821125030518, -0.0024670620914548635, -0.002598749939352274, -0.002709273947402835, -0.002802706090733409, -0.002886418020352721, -0.002966729924082756, -0.003048270009458065, -0.0031346420291811228, -0.003228631103411317, -0.0033311680890619755, -0.0034386650659143925, -0.0035412150900810957, -0.0036252550780773163, -0.003679540939629078, -0.003697497071698308, -0.003677044063806534, -0.003621577052399516, -0.003537385957315564, -0.0034325439482927322, -0.003316018031910062, -0.003193975891917944, -0.0030678780749440193, -0.00293358089402318, -0.002786792116239667, -0.002626151079311967, -0.002450333908200264, -0.0022587410639971495, -0.002050834009423852, -0.00182780297473073, -0.0015929179498925805, -0.0013503310037776828, -0.0011046630097553134, -0.0008581954753026366, -0.0006109807873144746, -0.0003609434934332967, -0.00010707639739848673, 0.00015219260239973664, 0.0004172185144852847, 0.0006842506118118763, 0.0009466796764172614, 0.0011991240317001939, 0.0014399780193343759, 0.001669747056439519, 0.0018887219484895468, 0.0020961069967597723, 0.002288839081302285, 0.0024611279368400574, 0.002607583999633789, 0.0027257311157882214, 0.0028169320430606604, 0.0028864520136266947, 0.0029422419611364603, 0.0029927389696240425, 0.003041737014427781, 0.0030864239670336246, 0.00312620191834867, 0.0031639039516448975, 0.0032001000363379717, 0.0032359519973397255, 0.0032726700883358717, 0.003311116946861148, 0.0033492879010736942, 0.0033827871084213257, 0.003407890908420086, 0.0034218239597976208, 0.0034235629718750715, 0.0034130949061363935, 0.0033907799515873194, 0.003357931040227413, 0.003315173089504242, 0.0032602380961179733, 0.003189187031239271, 0.003099139081314206, 0.002989462111145258, 0.002861953107640147, 0.002719075884670019, 0.0025626320857554674, 0.0023972229100763798, 0.0022297720424830914, 0.002066605957224965, 0.0019110890571027994, 0.001766782021149993, 0.0016360509907826781, 0.0015170919941738248, 0.0014064100105315447, 0.0013030900154262781, 0.00120984495151788, 0.0011311030248180032, 0.0010710930218920112, 0.0010311369551345706, 0.0010087150149047375, 0.0009954303968697786, 0.0009781495900824666, 0.0009450215729884803, 0.0008900549728423357, 0.0008125274907797575, 0.0007151099853217602, 0.000602979096584022, 0.0004833797866012901, 0.00036531168734654784, 0.0002577932027634233, 0.00016793109534773976, 9.775689250091091e-05, 4.399962926981971e-05, -2.186608071497176e-06, -5.252753180684522e-05, -0.00011860320228151977, -0.0002072398056043312, -0.000320561695843935, -0.0004557254142127931, -0.0006069759256206453, -0.0007655143272131681, -0.0009216144098900259, -0.0010675829835236073, -0.0011981399729847908, -0.001310474006459117, -0.0014031470054760575, -0.0014790119603276253, -0.001544579048641026, -0.0016078590415418148, -0.0016760060098022223, -0.001753531047143042, -0.0018414410296827555, -0.0019350829534232616, -0.0020246650092303753, -0.002100266981869936, -0.002155713038519025, -0.002191165927797556, -0.002212811028584838, -0.0022300430573523045, -0.0022514129523187876, -0.0022812848910689354, -0.002321098931133747, -0.0023690781090408564, -0.002418472897261381, -0.002460357965901494, -0.002487112069502473, -0.002495362889021635, -0.0024886620230972767, -0.002475043060258031, -0.0024637789465487003, -0.0024632608983665705, -0.002479197923094034, -0.0025123769883066416, -0.002558151027187705, -0.002610997064039111, -0.0026693108957260847, -0.002733703004196286, -0.002804072108119726, -0.002878759056329727, -0.0029541810508817434, -0.003024251898750663, -0.0030807489529252052, -0.003115844912827015, -0.003125949064269662, -0.0031147769186645746, -0.003089637029916048, -0.00305755902081728, -0.0030236931052058935, -0.0029925319831818342, -0.0029677439015358686, -0.0029526820871979, -0.002949279034510255, -0.0029585170559585094, -0.002981276949867606, -0.0030146129429340363, -0.0030517498962581158, -0.0030858370009809732, -0.003110029036179185, -0.003118820022791624, -0.0031119019258767366, -0.0030951460357755423, -0.003079579910263419, -0.0030774909537285566, -0.003097858978435397, -0.003143901005387306, -0.003212854964658618, -0.0032961389515548944, -0.0033816860523074865, -0.0034559189807623625, -0.0035065640695393085, -0.003528354922309518, -0.0035239860881119967, -0.0035005579702556133, -0.003463844070211053, -0.003418449079617858, -0.003371377009898424, -0.0033274369779974222, -0.0032900699879974127, -0.0032648949418216944, -0.003256801050156355, -0.0032671289518475533, -0.003295823000371456, -0.003342228941619396, -0.0034042210318148136, -0.0034788260236382484, -0.0035625749733299017, -0.0036525160539895296, -0.003745890920981765, -0.0038401149213314056, -0.003933708183467388, -0.004027105867862701, -0.0041204290464520454, -0.00421327818185091, -0.004305209964513779, -0.0043964628130197525, -0.004486040212213993, -0.004569388926029205, -0.00464041018858552, -0.0046959188766777515, -0.004736252129077911, -0.004765986930578947, -0.004790558014065027, -0.0048129260540008545, -0.004833301994949579, -0.0048491028137505054, -0.004856468178331852, -0.004851684905588627, -0.00483294203877449, -0.004802356008440256, -0.00476333312690258, -0.004717757925391197, -0.004666610155254602, -0.004611127078533173, -0.004549779929220676, -0.004479933064430952, -0.004401416052132845, -0.004312395118176937, -0.0042081861756742, -0.004083158913999796, -0.003937101922929287, -0.0037756790407001972, -0.0036044290754944086, -0.003425274044275284, -0.003237440949305892, -0.0030400999821722507, -0.00283239409327507, -0.0026142029091715813, -0.0023851320147514343, -0.002145339036360383, -0.0018941080197691917, -0.0016323650488629937, -0.0013647939777001739, -0.0010979940416291356, -0.0008388599962927401, -0.0005905242287553847, -0.0003528982924763113, -0.00012516060087364167, 9.53784110606648e-05, 0.0003122044145129621, 0.0005267265951260924, 0.0007372780237346888, 0.0009431309881620109, 0.0011432430474087596, 0.0013372759567573667, 0.0015273080207407475, 0.0017160970019176602, 0.001906228018924594, 0.0020993819925934076, 0.002295789076015353, 0.002494585933163762, 0.00269230711273849, 0.002884153975173831, 0.0030652759596705437, 0.003233525902032852, 0.003389693098142743, 0.003537710988894105, 0.003683722112327814, 0.003834052011370659, 0.0039931610226631165, 0.0041623301804065704, 0.004341109190136194, 0.004527869168668985, 0.004720817785710096, 0.004917339887470007, 0.00511130690574646, 0.005295002833008766, 0.005459715146571398, 0.005598627962172031, 0.005710025783628225, 0.005796314217150211, 0.0058633009903132915, 0.005920260213315487, 0.005974397994577885, 0.006026641931384802, 0.00607368815690279, 0.006111370865255594, 0.006136793177574873, 0.006147541105747223, 0.006139200180768967, 0.00610625185072422, 0.006046317983418703, 0.005960916168987751, 0.005856283940374851, 0.005740281194448471, 0.005621106829494238, 0.005506189074367285, 0.005402176175266504, 0.005315203219652176, 0.005248030181974173, 0.005199462175369263, 0.005162876099348068, 0.005130121950060129, 0.005094694904983044, 0.005052247084677219, 0.004999728873372078, 0.004933854099363089, 0.004850327968597412, 0.004744228906929493, 0.0046132029965519905, 0.004458711016923189, 0.004285316914319992, 0.004098689183592796, 0.003903189906850457, 0.003704586997628212, 0.0035094809718430042, 0.0033251389395445585, 0.003157644998282194, 0.00300621404312551, 0.0028635719791054726, 0.0027213268913328648, 0.0025741111021488905, 0.0024230070412158966, 0.002275309059768915, 0.002140275901183486, 0.002026794943958521, 0.0019378210417926311, 0.0018663350492715836, 0.0018001629505306482, 0.0017300710314884782, 0.0016498699551448226, 0.0015558069571852684, 0.0014465400017797947, 0.0013217260129749775, 0.0011822109809145331, 0.0010312780505046248, 0.0008707402157597244, 0.0007005520164966583, 0.0005209494847804308, 0.00033475441159680486, 0.00014475149509962648, -4.6747121814405546e-05, -0.0002381942031206563, -0.0004291397053748369, -0.0006201153737492859, -0.0008122968138195574, -0.001006921986117959, -0.001204660045914352, -0.0014047930017113686, -0.0016029729740694165, -0.0017934819916263223, -0.0019688960164785385, -0.0021218189503997564, -0.002246788004413247, -0.002341632964089513, -0.00240674102678895, -0.0024457979016005993, -0.0024645240046083927, -0.002469219034537673, -0.002466013887897134, -0.002458408009260893, -0.0024475969839841127, -0.002435833914205432, -0.0024256580509245396, -0.0024196358863264322, -0.0024202989879995584, -0.0024276229087263346, -0.00243781809695065, -0.002446606056764722, -0.002451889915391803, -0.002454387955367565, -0.002460543066263199, -0.0024766160640865564, -0.002503457944840193, -0.002536504063755274, -0.002569227945059538, -0.0025978200137615204, -0.0026210499927401543, -0.0026368380058556795, -0.0026424298994243145, -0.002635096898302436, -0.0026139039546251297, -0.002580022905021906, -0.0025344460736960173, -0.0024774689227342606, -0.0024093580432236195, -0.002327559981495142, -0.0022268889006227255, -0.0021018690895289183, -0.0019498890032991767, -0.0017731740372255445, -0.0015794399660080671, -0.0013772440142929554, -0.0011714099673554301, -0.0009625247912481427, -0.0007526783156208694, -0.0005477805971167982, -0.0003561727935448289, -0.00018369349709246308, -3.24807406286709e-05, 9.80686818365939e-05, 0.00021109300723765045, 0.0003101624024566263, 0.000396756106056273, 0.0004710571956820786, 0.0005352835869416595, 0.0005920956027694046, 0.0006434955867007375, 0.0006910678930580616, 0.0007372627151198685, 0.0007845665095373988, 0.0008349596173502505, 0.0008910964825190604, 0.0009559288155287504, 0.0010294540552422404, 0.0011082839919254184, 0.0011865530395880342, 0.0012602920178323984, 0.001329301972873509, 0.0013947909465059638, 0.001456795958802104, 0.001514520961791277, 0.0015664820093661547, 0.0016130040166899562, 0.0016584020340815187, 0.0017095690127462149, 0.001774588949047029, 0.001858597039245069, 0.001961875008419156, 0.002078078920021653, 0.0021970150992274284, 0.0023086159490048885, 0.0024058809503912926, 0.0024859749246388674, 0.0025480089243501425, 0.0025941459462046623, 0.0026292919646948576, 0.0026569049805402756, 0.0026781719643622637, 0.002692050999030471, 0.0026964759454131126, 0.0026885580737143755, 0.0026663439348340034, 0.002630518050864339, 0.002583181019872427, 0.0025260529946535826, 0.002462860895320773, 0.0024004289880394936, 0.002345910994336009, 0.002303536981344223, 0.002272275974974036, 0.0022479610051959753, 0.002224506111815572, 0.0021963799372315407, 0.0021605188958346844, 0.00211698398925364, 0.0020692269317805767, 0.002021318068727851, 0.0019755640532821417, 0.0019308320479467511, 0.001881906995549798, 0.0018236140022054315, 0.0017537360545247793, 0.0016733469674363732, 0.0015845310408622026, 0.00148994498886168, 0.0013945299433544278, 0.0013037329772487283, 0.001219009980559349, 0.0011407899437472224, 0.0010712449438869953, 0.0010136429918929935, 0.0009696868946775794, 0.0009355348884128034, 0.0009027820779010653, 0.000863162218593061, 0.0008093140204437077, 0.0007337951101362705, 0.00063374760793522, 0.0005135310930199921, 0.0003839572018478066, 0.0002593300014268607, 0.00015117159637156874, 6.685186963295564e-05, 6.862565896881279e-06, -3.369971091160551e-05, -6.397612014552578e-05, -9.546388173475862e-05, -0.00014042049588169903, -0.00020847779524046928, -0.00030382920522242785, -0.00042458390817046165, -0.0005623751785606146, -0.0007047618273645639, -0.0008397898054681718, -0.0009585008956491947, -0.0010535550536587834, -0.0011210109805688262, -0.00116292096208781, -0.0011855709599331021, -0.00119864905718714, -0.0012135700089856982, -0.001238288008607924, -0.001276141032576561, -0.0013289670459926128, -0.0013992589665576816, -0.0014888319419696927, -0.001595727982930839, -0.0017136710230261087, -0.0018332699546590447, -0.0019455800065770745, -0.002043843036517501, -0.002128175925463438, -0.0022072310093790293, -0.0022935180459171534, -0.002398150973021984, -0.002527069067582488, -0.002678960096091032, -0.0028466819785535336, -0.0030199920292943716, -0.0031875199638307095, -0.003338616108521819, -0.0034644820261746645, -0.0035620180424302816, -0.00363483396358788, -0.003686971962451935, -0.0037217820063233376, -0.0037410850636661053, -0.0037453279364854097, -0.003736312035471201, -0.0037184099201112986, -0.00369632407091558, -0.003673240076750517, -0.003649734891951084, -0.0036255279555916786, -0.0036025019362568855, -0.003583149053156376, -0.003566635074093938, -0.0035474400501698256, -0.0035194531083106995, -0.0034796649124473333, -0.003426804905757308, -0.003360525006428361, -0.003283476922661066, -0.0032028919085860252, -0.0031253378838300705, -0.00305189099162817, -0.002980933990329504, -0.0029126419685781, -0.002847529947757721, -0.002785047050565481, -0.0027230610139667988, -0.002660714089870453, -0.002598447958007455, -0.002537267981097102, -0.002476020948961377, -0.002408944070339203, -0.002326984889805317, -0.0022216381039470434, -0.002087861066684127, -0.001926859957166016, -0.0017465970013290644, -0.0015583459753543139, -0.0013733910163864493, -0.001201704959385097, -0.0010496790055185556, -0.0009187799878418446, -0.0008063819259405136, -0.0007071256986819208, -0.0006148894899524748, -0.0005226152134127915, -0.00042388291331008077, -0.0003142768982797861, -0.00019216339569538832, -5.951747152721509e-05, 7.694320811424404e-05, 0.0002105468010995537, 0.0003366802993696183, 0.0004532797902356833, 0.0005619733710773289, 0.000667095126118511, 0.0007740759174339473, 0.0008879692177288234, 0.0010096350451931357, 0.001133844954892993, 0.0012525529600679874, 0.0013603479601442814, 0.0014561739517375827, 0.0015414520166814327, 0.001617391943000257, 0.0016836229478940368, 0.001739092986099422, 0.0017842239467427135, 0.0018212479772046208, 0.0018554830458015203, 0.0018967429641634226, 0.001956051914021373, 0.002040525898337364, 0.0021496149711310863, 0.0022730990312993526, 0.002394930925220251, 0.0024997319560498, 0.0025773909874260426, 0.0026245610788464546, 0.002644122112542391, 0.0026428319979459047, 0.002629257971420884, 0.0026116210501641035, 0.0025957811158150434, 0.0025837980210781097, 0.002572209108620882, 0.002555226907134056, 0.002527375938370824, 0.002487397054210305, 0.002440233016386628, 0.0023931520991027355, 0.002353498013690114, 0.002327864058315754, 0.002322529908269644, 0.002342232968658209, 0.0023860109504312277, 0.0024486519396305084, 0.002520421054214239, 0.002592393895611167, 0.002658477984368801, 0.002714663976803422, 0.0027563991025090218, 0.002778874011710286, 0.0027804209385067225, 0.002764103002846241, 0.002738154958933592, 0.002711303997784853, 0.002689091954380274, 0.002674889052286744, 0.002666576998308301, 0.0026588928885757923, 0.002646910957992077, 0.002630491042509675, 0.002611943054944277, 0.0025910090189427137, 0.0025643070694059134, 0.0025298648979514837, 0.0024878359399735928, 0.0024391699116677046, 0.002385498955845833, 0.002327623078599572, 0.0022635229397565126, 0.002188713988289237, 0.002097086049616337, 0.0019849929958581924, 0.0018527399515733123, 0.001704085967503488, 0.001546362997032702, 0.001387897995300591, 0.0012344949645921588, 0.0010891889687627554, 0.000952532805968076, 0.0008238130249083042, 0.0007016825838945806, 0.0005836791242472827, 0.0004654667864087969, 0.0003441711887717247, 0.0002184865006711334, 8.782903023529798e-05, -4.5687258534599096e-05, -0.00017866170674096793, -0.0003086568904109299, -0.0004326665948610753, -0.000550789525732398, -0.0006706317071802914, -0.0008006033021956682, -0.0009441060828976333, -0.001098425011150539, -0.0012550370302051306, -0.0014039749512448907, -0.001539719058200717, -0.0016633080085739493, -0.0017797050531953573, -0.0018925060285255313, -0.0020016098860651255, -0.0021033459343016148, -0.002193426014855504, -0.0022714571096003056, -0.002342693042010069, -0.002414810936897993, -0.0024944539181888103, -0.0025854469276964664, -0.0026878919452428818, -0.0027996220160275698, -0.0029178059194236994, -0.0030398499220609665, -0.0031617190688848495, -0.0032808019313961267, -0.003396738087758422, -0.003510002978146076, -0.003621448064222932, -0.003731065895408392, -0.0038369710091501474, -0.003937243018299341, -0.004029289819300175, -0.004111084155738354, -0.004182862117886543, -0.004248627927154303, -0.004313203971832991, -0.004381441045552492, -0.004457737784832716, -0.004544905852526426, -0.004644509870558977, -0.004756723064929247, -0.00488028209656477, -0.0050116111524403095, -0.005143885966390371, -0.005268346983939409, -0.005376465152949095, -0.005459901876747608, -0.005512785166501999, -0.005535533186048269, -0.0055314539931714535, -0.005503926891833544, -0.005454399157315493, -0.005383365787565708, -0.005291415844112635, -0.005180887877941132, -0.005055973771959543, -0.004920244216918945, -0.004777752794325352, -0.0046328529715538025, -0.004491350147873163, -0.004358070902526379, -0.004233858082443476, -0.004116512835025787, -0.003999824170023203, -0.003873986890539527, -0.003729880088940263, -0.0035643549636006355, -0.003382145892828703, -0.00319176004268229, -0.003003990976139903, -0.0028285218868404627, -0.002670888090506196, -0.0025309710763394833, -0.002405162900686264, -0.0022882199846208096, -0.002173142973333597, -0.0020511068869382143, -0.0019156710477545857, -0.0017634800169616938, -0.001593629946000874, -0.0014055799692869186, -0.0012004160089418292, -0.000980276963673532, -0.0007490921998396516, -0.0005115647800266743, -0.0002735719026532024, -4.126251951674931e-05, 0.00017953060159925371, 0.0003860403085127473, 0.0005809601861983538, 0.0007715310784988105, 0.0009647805709391832, 0.001163744949735701, 0.0013683190336450934, 0.0015768849989399314, 0.0017888459842652082, 0.002004150999709964, 0.002220707945525646, 0.0024355431087315083, 0.002645188942551613, 0.002845047041773796, 0.003029565094038844, 0.003195347962900996, 0.003343688091263175, 0.003480267943814397, 0.003612264059484005, 0.003743262030184269, 0.0038708948995918036, 0.003987696021795273, 0.004082769155502319, 0.0041454569436609745, 0.004169827792793512, 0.0041566272266209126, 0.0041132839396595955, 0.0040521021001040936, 0.003986279014497995, 0.003924666903913021, 0.003871372900903225, 0.0038255269173532724, 0.003780171973630786, 0.0037253079935908318, 0.0036521509755402803, 0.003554099937900901, 0.0034270728938281536, 0.0032712509855628014, 0.003090586978942156, 0.002893157070502639, 0.002690244000405073, 0.002491577062755823, 0.0023038729559630156, 0.0021316800266504288, 0.001978403888642788, 0.0018441410502418876, 0.0017257039435207844, 0.0016157299978658557, 0.001504412037320435, 0.001381470006890595, 0.001239671022631228, 0.0010768090141937137, 0.000894047028850764, 0.0006933010881766677, 0.0004771254025399685, 0.00024784920969977975, 9.820356353884563e-06, -0.00023023970425128937, -0.00046617400948889554, -0.0006957467994652689, -0.0009206081740558147, -0.001146299997344613, -0.0013783039757981896, -0.0016184940468519926, -0.0018645819509401917, -0.002110379049554467, -0.002348564099520445, -0.0025734470691531897, -0.0027808710001409054, -0.002969555091112852, -0.0031407650094479322, -0.003298253985121846, -0.0034462010953575373, -0.003586254082620144, -0.003717822954058647, -0.0038410110864788294, -0.003956274129450321, -0.00406675087288022, -0.00417625205591321, -0.00428594509139657, -0.004394026007503271, -0.004494733177125454, -0.0045764087699353695, -0.00462556816637516, -0.004632939118891954, -0.004596391227096319, -0.004520163871347904, -0.0044142939150333405, -0.0042933807708323, -0.004174899775534868, -0.004071950912475586, -0.003989284858107567, -0.003924903925508261, -0.003870787099003792, -0.0038156649097800255, -0.003750031115487218, -0.003668529912829399, -0.003573040943592787, -0.003469873918220401, -0.0033643520437180996, -0.0032595519442111254, -0.003154108067974448, -0.0030435570515692234, -0.0029242360033094883, -0.0027956541161984205, -0.00266043609008193, -0.0025227200239896774, -0.002384474966675043, -0.002246009884402156, -0.0021077790297567844, -0.001969690900295973, -0.0018333570333197713, -0.0017010070150718093, -0.0015720550436526537, -0.001443765009753406, -0.0013137819478288293, -0.001181459054350853, -0.001050604972988367, -0.00092940719332546, -0.0008239587186835706, -0.0007349994848482311, -0.0006615049205720425, -0.0005993858212605119, -0.0005405992269515991, -0.00047595371142961085, -0.00040009309304878116, -0.00031440731254406273, -0.00022501099738292396, -0.00013978520291857421, -6.471361848525703e-05, -2.905884002757375e-06, 4.584455018630251e-05, 8.397395868087187e-05, 0.00011351770081091672, 0.0001373744016746059, 0.00015817969688214362, 0.00017851039592642337, 0.0001995351049117744, 0.00022343400632962584, 0.0002527603937778622, 0.00028733789804391563, 0.0003263925027567893, 0.0003667270066216588, 0.00040237800567410886, 0.00042929701157845557, 0.0004473711014725268, 0.0004585426941048354, 0.0004645886947400868, 0.0004649448092095554, 0.0004580586974043399, 0.0004435514856595546, 0.00042280511115677655, 0.0003993242862634361, 0.00037774149677716196, 0.00036106299376115203, 0.0003515832941047847, 0.0003505928907543421, 0.00035751701216213405, 0.00036932871444150805, 0.0003823117003776133, 0.000392376008676365, 0.0003986970114056021, 0.00040519749745726585, 0.0004173381021246314, 0.00043873500544577837, 0.00046928550000302494, 0.0005061295232735574, 0.0005440819077193737, 0.0005763655062764883, 0.0005959096015430987, 0.0005993582890368998, 0.0005894490168429911, 0.000571661104913801, 0.0005533850053325295, 0.0005439845845103264, 0.0005510594928637147, 0.0005798278143629432, 0.0006302808178588748, 0.0006950877723284066, 0.0007629402098245919, 0.0008250916725955904, 0.0008772545261308551, 0.0009180242195725441, 0.0009493487887084484, 0.0009745795978233218, 0.0009974613785743713, 0.001021640026010573, 0.0010503659723326564, 0.0010850309627130628, 0.0011254360433667898, 0.00117031903937459, 0.0012173140421509743, 0.00126552302390337, 0.001316088018938899, 0.0013689040206372738, 0.0014227740466594696, 0.0014773469883948565, 0.0015336730284616351, 0.0015929300570860505, 0.0016562719829380512, 0.0017227299977093935, 0.0017902350518852472, 0.0018538259901106358, 0.001903568976558745, 0.0019310059724375606, 0.0019353260286152363, 0.0019216480432078242, 0.0018961339956149459, 0.0018643479561433196, 0.0018283670069649816, 0.0017884890548884869, 0.0017457560170441866, 0.0017017009668052197, 0.001657673972658813, 0.0016139160143211484, 0.0015689609572291374, 0.0015204859664663672, 0.0014669609954580665, 0.0014081510016694665, 0.0013443779898807406, 0.0012751939939334989, 0.001198905985802412, 0.0011125010205432773, 0.001013459055684507, 0.0009024729952216148, 0.0007840400794520974, 0.0006649530841968954, 0.0005532986833713949, 0.00045550669892691076, 0.0003748559101950377, 0.0003122513007838279, 0.0002662868064362556, 0.00023569150653202087, 0.00021896109683439136, 0.00021521009330172092, 0.0002239380992250517, 0.00024327420396730304, 0.0002695737057365477, 0.0002980506978929043, 0.00032530329190194607, 0.00034807249903678894, 0.00036334770265966654, 0.0003703027905430645, 0.00036982129677198827, 0.0003638791968114674, 0.0003557495947461575, 0.00034873010008595884, 0.0003467164933681488, 0.00035553230554796755, 0.0003812561044469476, 0.00042612760444171727, 0.00048744140076451004, 0.0005574919050559402, 0.0006280377856455743, 0.0006944378837943077, 0.0007565144915133715, 0.0008170027867890894, 0.0008792533772066236, 0.0009477296844124794, 0.0010276760440319777, 0.001124851987697184, 0.0012447419576346874, 0.0013891840353608131, 0.0015540029853582382, 0.0017292409902438521, 0.001906124991364777, 0.00207872805185616, 0.0022450019605457783, 0.002402703044936061, 0.002547220094129443, 0.0026737460866570473, 0.002778321970254183, 0.002861842978745699, 0.0029312320984899998, 0.002996186027303338, 0.0030651050619781017, 0.003144321031868458, 0.0032380390912294388, 0.0033481260761618614, 0.003473808988928795, 0.003613336943089962, 0.003765546018257737, 0.003927525132894516, 0.004092772025614977, 0.004252876155078411, 0.004398656077682972, 0.004524720832705498, 0.004631946794688702, 0.004725352860987186, 0.004811055026948452, 0.0048958538100123405, 0.004985225852578878, 0.005080495961010456, 0.005180826876312494, 0.005284599959850311, 0.005390620790421963, 0.0054969871416687965, 0.005601552780717611, 0.005700618028640747, 0.005788764916360378, 0.005862697027623653, 0.005922925192862749, 0.005971552804112434, 0.006009124219417572, 0.006037565879523754, 0.006062528118491173, 0.0060910121537745, 0.006127906963229179, 0.00617229612544179, 0.006218248978257179, 0.006258769892156124, 0.006288518197834492, 0.006302117835730314, 0.006294506136327982, 0.006263377144932747, 0.006209570914506912, 0.0061372630298137665, 0.006052377168089151, 0.0059565887786448, 0.0058463867753744125, 0.005717895925045013, 0.0055698188953101635, 0.005402817856520414, 0.005217975936830044, 0.0050182039849460125, 0.00480598583817482, 0.004581667948514223, 0.0043479399755597115, 0.004109859932214022, 0.0038733540568500757, 0.0036430410109460354, 0.00342353992164135, 0.0032187621109187603, 0.0030298810452222824, 0.0028576808981597424, 0.0027034298982471228, 0.002566710114479065, 0.0024433990474790335, 0.0023269408848136663, 0.0022121239453554153, 0.002095910022035241, 0.001973968930542469, 0.001838825992308557, 0.001685169991105795, 0.0015131899854168296, 0.0013280239654704928, 0.001137665007263422, 0.0009503794135525823, 0.000772322528064251, 0.0006063159089535475, 0.0004522883100435138, 0.00030637270538136363, 0.0001654421939747408, 2.765353929135017e-05, -0.00010803530312841758, -0.00024081330047920346, -0.00036692930734716356, -0.00048160439473576844, -0.0005813195020891726, -0.0006634125020354986, -0.0007287369226105511, -0.0007816933793947101, -0.0008249552920460701, -0.000859652878716588, -0.000887213391251862, -0.0009082541218958795, -0.0009208836127072573, -0.000924505409784615, -0.0009216823964379728, -0.0009157533058896661, -0.0009085077908821404, -0.0008983553852885962, -0.0008830698789097369, -0.0008610949153080583, -0.000830075703561306, -0.0007889497792348266, -0.0007374819251708686, -0.0006777315866202116, -0.00061281758826226, -0.0005462266271933913, -0.0004833152052015066, -0.000431729102274403, -0.00039766650297679007, -0.00038372058770619333, -0.0003908062062691897, -0.00041918960050679743, -0.0004671151109505445, -0.0005292203277349472, -0.0005959001719020307, -0.0006586600211448967, -0.0007130461162887514, -0.0007588529260829091, -0.0007975143962539732, -0.0008339544874615967, -0.0008763156947679818, -0.0009321817778982222, -0.0010027979733422399, -0.001084518968127668, -0.0011711700353771448, -0.0012575549772009254, -0.001341228955425322, -0.0014228059444576502, -0.001503617037087679, -0.0015843380242586136, -0.0016660169931128621, -0.0017513480270281434, -0.001842699944972992, -0.0019420030293986201, -0.0020496940705925226, -0.002163924975320697, -0.0022797859273850918, -0.002389068016782403, -0.0024839791003614664, -0.0025601049419492483, -0.0026151658967137337, -0.0026508138980716467, -0.002672746079042554, -0.002688613021746278, -0.002705605933442712, -0.0027302668895572424, -0.002765144919976592, -0.0028083580546081066, -0.002855984028428793, -0.0029025119729340076, -0.002942410996183753, -0.0029705630149692297, -0.0029822099022567272, -0.002970705972984433, -0.002929378068074584, -0.0028582599479705095, -0.0027619050815701485, -0.0026467670686542988, -0.0025197009090334177, -0.002387958113104105, -0.0022587270941585302, -0.002138084964826703, -0.0020302319899201393, -0.0019387720385566354, -0.0018637980101630092, -0.0018002160359174013, -0.0017401829827576876, -0.0016770800575613976, -0.0016065869713202119, -0.0015286150155588984, -0.0014468779554590583, -0.0013682759599760175, -0.0013001069892197847, -0.0012480879668146372, -0.0012139660539105535, -0.0011941459961235523, -0.0011805229587480426, -0.0011637309798970819, -0.0011381020303815603, -0.001104666036553681, -0.0010675130179151893, -0.0010296580148860812, -0.000991868320852518, -0.0009535283898003399, -0.0009144479990936816, -0.0008759383927099407, -0.0008394562173634768, -0.0008060242980718613, -0.0007773120887577534, -0.000755304004997015, -0.000741113384719938, -0.0007339859730564058, -0.0007300868164747953, -0.0007244048174470663, -0.0007134036277420819, -0.0006946654175408185, -0.0006683263927698135, -0.0006374611984938383, -0.000604394415859133, -0.0005704340874217451, -0.0005362320225685835, -0.0005022839177399874, -0.00046939810272306204, -0.000441723910626024, -0.00042804848635569215, -0.00043725408613681793, -0.00047273910604417324, -0.0005307028186507523, -0.000601546373218298, -0.0006730513996444643, -0.0007348685758188367, -0.0007780783926136792, -0.0007947871927171946, -0.0007825770881026983, -0.000748444173950702, -0.0007058283081278205, -0.000667317071929574, -0.000643130682874471, -0.000641017104499042, -0.0006659087957814336, -0.0007195899961516261, -0.0007988897268660367, -0.000894888595212251, -0.0009931304957717657, -0.0010773449903354049, -0.0011362129589542747, -0.0011671649990603328, -0.0011739840265363455, -0.0011649850057438016, -0.0011495030485093594, -0.0011373789748176932, -0.0011389290448278189, -0.001162325032055378, -0.001210120040923357, -0.0012816369999200106, -0.0013744400348514318, -0.001483301050029695, -0.0016020600451156497, -0.0017231550300493836, -0.0018380279652774334, -0.0019411409739404917, -0.0020293339621275663, -0.002099368954077363, -0.002149547915905714, -0.0021800079848617315, -0.002190991071984172, -0.0021841339766979218, -0.0021645950619131327, -0.0021391441114246845, -0.002112630056217313, -0.0020884829573333263, -0.0020711920224130154, -0.0020656040869653225, -0.002075253054499626, -0.0021007840987294912, -0.0021402740385383368, -0.0021895719692111015, -0.0022434459533542395, -0.0022979460190981627, -0.0023538360837846994, -0.0024127380456775427, -0.0024760249070823193, -0.002544452901929617, -0.002618660917505622, -0.0027003749273717403, -0.0027932259254157543, -0.0028997380286455154, -0.0030181061010807753, -0.0031419540755450726, -0.0032617771066725254, -0.003368966979905963, -0.00345901888795197, -0.0035312180407345295, -0.003591103944927454, -0.003648220095783472, -0.0037105348892509937, -0.0037818748969584703, -0.0038623050786554813, -0.003949312027543783, -0.0040396638214588165, -0.0041303131729364395, -0.0042177969589829445, -0.004299155902117491, -0.0043742042034864426, -0.004444850143045187, -0.0045144702307879925, -0.004587590228766203, -0.004667595028877258, -0.004755508154630661, -0.004849005024880171, -0.004942580126225948, -0.005030958913266659, -0.0051133600063622, -0.005193940829485655, -0.0052764881402254105, -0.005360713228583336, -0.005441934801638126, -0.00551227992400527, -0.005564031191170216, -0.005593587178736925, -0.005603502970188856, -0.005599628202617168, -0.005587996914982796, -0.005574606824666262, -0.005565926898270845, -0.005566677078604698, -0.005578331183642149, -0.005597113166004419, -0.005615240894258022, -0.005624246783554554, -0.00561867281794548, -0.005595094058662653, -0.005550254136323929, -0.00548217911273241, -0.005392211023718119, -0.005283581092953682, -0.005159835796803236, -0.005025310907512903, -0.004886525217443705, -0.0047499737702310085, -0.004620058927685022, -0.004498851019889116, -0.004384926054626703, -0.0042750160209834576, -0.004167729057371616, -0.004063103813678026, -0.003963165916502476, -0.0038704590406268835, -0.0037873219698667526, -0.00371380103752017, -0.003646859899163246, -0.0035832941066473722, -0.0035240850411355495, -0.003469809889793396, -0.0034170818980783224, -0.00336087797768414, -0.003295233938843012, -0.0032113459892570972, -0.0031006759963929653, -0.0029580830596387386, -0.0027846419252455235, -0.0025906111113727093, -0.002392384922131896, -0.002205556957051158, -0.002038333099335432, -0.0018895609537139535, -0.0017542940331622958, -0.001625332050025463, -0.0014934019418433309, -0.0013494939776137471, -0.0011878849472850561, -0.0010056949686259031, -0.0008034944767132401, -0.0005839316290803254, -0.00035177470999769866, -0.00011164439638378099, 0.0001329123042523861, 0.00037854848778806627, 0.0006208643899299204, 0.0008556146058253944, 0.001078170957043767, 0.0012873030500486493, 0.0014869429869577289, 0.001684620976448059, 0.0018865979509428144, 0.0020963361021131277, 0.0023122720886021852, 0.0025274520739912987, 0.002731872955337167, 0.002917383098974824, 0.0030808919109404087, 0.0032258499413728714, 0.0033581529278308153, 0.0034810530487447977, 0.0035953789483755827, 0.0037042018957436085, 0.003812643000856042, 0.003927139099687338, 0.004051249008625746, 0.004182523116469383, 0.004313160199671984, 0.004432240966707468, 0.004531960003077984, 0.004610204137861729, 0.004670160822570324, 0.004717804957181215, 0.004759038798511028, 0.004799012094736099, 0.004840570036321878, 0.004885904025286436, 0.004936370067298412, 0.004991868976503611, 0.005052259191870689, 0.00511619308963418, 0.00517968600615859, 0.005238589830696583, 0.005291061010211706, 0.005335303954780102, 0.005366323050111532, 0.0053773787803947926, 0.005362925119698048, 0.005321925040334463, 0.005258228164166212, 0.005177658051252365, 0.005085842218250036, 0.0049867089837789536, 0.004879747983068228, 0.004762472119182348, 0.004634193144738674, 0.004495367873460054, 0.004347003996372223, 0.004191068932414055, 0.004030351992696524, 0.0038690539076924324, 0.0037131980061531067, 0.0035687610507011414, 0.003437696024775505, 0.0033172559924423695, 0.003200008999556303, 0.003078531939536333, 0.0029505910351872444, 0.002817647997289896, 0.0026815079618245363, 0.002543810987845063, 0.00240487908013165, 0.0022648130543529987, 0.0021252750884741545, 0.0019889690447598696, 0.0018604190554469824, 0.0017448699800297618, 0.0016485860105603933, 0.0015759930247440934, 0.0015250700525939465, 0.0014915349893271923, 0.0014708240050822496, 0.0014542220160365105, 0.0014312040293589234, 0.0013946479884907603, 0.0013416589936241508, 0.0012719640508294106, 0.0011882609687745571, 0.0010965249966830015, 0.0010030720150098205, 0.0009136609151028097, 0.0008331091958098114, 0.000765870907343924, 0.0007157539948821068, 0.0006845662137493491, 0.0006735774222761393, 0.0006789949256926775, 0.0006904536858201027, 0.0006982705090194941, 0.0006983279017731547, 0.0006929470109753311, 0.0006869640201330185, 0.0006855180254206061, 0.0006902114837430418, 0.00069895462365821, 0.0007073230226524174, 0.0007119706133380532, 0.0007135861087590456, 0.0007154998020268977, 0.0007209607283584774, 0.000731561507564038, 0.0007461516070179641, 0.0007611684268340468, 0.0007710270001552999, 0.0007697762921452522, 0.0007519139908254147, 0.0007144829141907394, 0.0006563237984664738, 0.0005783831002190709, 0.0004820818139705807, 0.0003689969889819622, 0.0002445534919388592, 0.00011759740300476551, -2.39766200138547e-06, -0.00010981660307152197, -0.0002039593964582309, -0.0002854450140148401, -0.00035669791395775974, -0.0004200087860226631, -0.0004782062896993011, -0.000531261321157217, -0.0005785218090750277, -0.0006243084208108485, -0.0006758582894690335, -0.0007398893940262496, -0.0008206770289689302, -0.0009180885972455144, -0.001029093051329255, -0.0011478259693831205, -0.0012653740122914314, -0.0013736969558522105, -0.0014689010567963123, -0.00155036395881325, -0.0016210370231419802, -0.0016855259891599417, -0.001748549984768033, -0.0018141840118914843, -0.0018856329843401909, -0.0019652959890663624, -0.0020534510258585215, -0.00214586709626019, -0.0022348740603774786, -0.0023159401025623083, -0.0023904331028461456, -0.0024621279444545507, -0.0025338269770145416, -0.002605634042993188, -0.002677326090633869, -0.0027474190574139357, -0.0028130048885941505, -0.0028729229234158993, -0.0029295519925653934, -0.002986065112054348, -0.0030449950136244297, -0.0031086490489542484, -0.0031779929995536804, -0.003251170041039586, -0.0033226669766008854, -0.0033854900393635035, -0.0034342529252171516, -0.003464692970737815, -0.003474839963018894, -0.003466197056695819, -0.003443222027271986, -0.0034104168880730867, -0.0033732359297573566, -0.0033367311116307974, -0.003303482895717025, -0.003273356007412076, -0.003244915045797825, -0.003216858021914959, -0.0031876899302005768, -0.0031562780495733023, -0.0031233809422701597, -0.0030884859152138233, -0.0030475349631160498, -0.0029958789236843586, -0.0029317711014300585, -0.0028549570124596357, -0.0027673819568008184, -0.0026730101089924574, -0.0025757208932191133, -0.002479333896189928, -0.0023869010619819164, -0.0023002158850431442, -0.0022178320214152336, -0.0021351950708776712, -0.002048630965873599, -0.0019592700991779566, -0.0018723109969869256, -0.0017907440196722746, -0.001713986974209547, -0.00164138397667557, -0.0015701360534876585, -0.001496023964136839, -0.001414689002558589, -0.0013238090323284268, -0.0012236960465088487, -0.001116015948355198, -0.001001875032670796, -0.0008802936063148081, -0.0007510678260587156, -0.0006146507221274078, -0.00047388768871314824, -0.00033469090703874826, -0.0002027437003562227, -8.100407285382971e-05, 3.311664841021411e-05, 0.0001464319066144526, 0.00026783719658851624, 0.00040369690395891666, 0.000552511599380523, 0.0007060372154228389, 0.0008534077205695212, 0.0009831228526309133, 0.001084720017388463, 0.0011527120368555188, 0.0011883459519594908, 0.0011988950427621603, 0.0011932889465242624, 0.0011796059552580118, 0.001165754976682365, 0.001160760992206633, 0.001170397037640214, 0.0011938660172745585, 0.001226625987328589, 0.0012637079926207662, 0.001301364041864872, 0.0013391339452937245, 0.001377698965370655, 0.0014160539722070098, 0.0014512039488181472, 0.0014806169783696532, 0.0015017299447208643, 0.0015127479564398527, 0.0015134030254557729, 0.001506416010670364, 0.0014964420115575194, 0.0014869519509375095, 0.0014792169677093625, 0.001474207965657115, 0.001472495961934328, 0.0014746770029887557, 0.0014796130126342177, 0.0014851780142635107, 0.0014894170453771949, 0.0014909369638189673, 0.0014925559516996145, 0.0014984270092099905, 0.0015115570276975632, 0.0015371589688584208, 0.0015803429996594787, 0.0016452319687232375, 0.0017309479881078005, 0.0018314539920538664, 0.001934638014063239, 0.0020286659710109234, 0.002107494045048952, 0.00216996599920094, 0.0022168969735503197, 0.002251832978799939, 0.0022818429861217737, 0.0023152909707278013, 0.002358552999794483, 0.0024134579580277205, 0.002479756949469447, 0.002555789891630411, 0.002635929035022855, 0.0027150639798492193, 0.0027908131014555693, 0.0028617389034479856, 0.0029258779250085354, 0.0029814389999955893, 0.0030257580801844597, 0.00305394409224391, 0.003062634030357003, 0.0030525289475917816, 0.003028897102922201, 0.003000705037266016, 0.0029771269764751196, 0.0029650928918272257, 0.002969851018860936, 0.0029926530551165342, 0.003031281055882573, 0.003083408111706376, 0.003146342933177948, 0.003216989105567336, 0.003294090973213315, 0.003375394968315959, 0.0034561739303171635, 0.003528171917423606, 0.0035817360039800406, 0.0036088749766349792, 0.0036054919473826885, 0.003571108914911747, 0.0035066280979663134, 0.0034143419470638037, 0.003300068899989128, 0.003172921948134899, 0.0030426010489463806, 0.0029175779782235622, 0.0028033440466970205, 0.0027028010226786137, 0.002616079058498144, 0.0025424419436603785, 0.002479986986145377, 0.0024258620105683804, 0.0023758749011904, 0.0023237098939716816, 0.0022607760038226843, 0.002178589114919305, 0.0020730909891426563, 0.0019470859551802278, 0.001808473956771195, 0.0016672139754518867, 0.0015338569646701217, 0.001416004030033946, 0.0013153570471331477, 0.0012299639638513327, 0.0011556249810382724, 0.0010868220124393702, 0.0010186450090259314, 0.0009509663213975728, 0.0008860559901222587, 0.0008258844027295709, 0.0007714941748417914, 0.0007205855217762291, 0.0006693517207168043, 0.0006141324993222952, 0.0005510923801921308, 0.00047756789717823267, 0.0003933102125301957, 0.0003003352030646056, 0.000202022900339216, 0.00010253040090901777, 4.972001079295296e-06, -8.910030010156333e-05, -0.0001775796990841627, -0.00025807699421420693, -0.0003278914955444634, -0.0003885453916154802, -0.0004437995085027069, -0.0004968011053279042, -0.0005485358997248113, -0.0005997904809191823, -0.0006522982730530202, -0.000708032981492579, -0.0007690925849601626, -0.0008341377251781523, -0.0008994244853965938, -0.0009618073818273842, -0.0010177609510719776, -0.0010653489734977484, -0.0011033619521185756, -0.0011326370295137167, -0.0011563299922272563, -0.0011797279585152864, -0.0012086039641872048, -0.0012472179951146245, -0.0012982620391994715, -0.001363535993732512, -0.0014451689785346389, -0.001543535036034882, -0.0016548699932172894, -0.0017708799568936229, -0.0018817749805748463, -0.001980795990675688, -0.0020620739087462425, -0.0021211430430412292, -0.0021586609072983265, -0.002181944902986288, -0.002202230039983988, -0.002228023950010538, -0.0022631778847426176, -0.0023072289768606424, -0.0023562998976558447, -0.002406011102721095, -0.0024540768936276436, -0.0024981170427054167, -0.0025349711067974567, -0.0025619310326874256, -0.0025774938985705376, -0.002581977052614093, -0.0025771220680326223, -0.0025671781040728092, -0.002558367094025016, -0.0025542299263179302, -0.002552957972511649, -0.0025469521060585976, -0.002528067911043763, -0.0024916240945458412, -0.002439698902890086, -0.0023799920454621315, -0.002323213964700699, -0.0022790280636399984, -0.0022527810651808977, -0.00224359892308712, -0.002243724884465337, -0.002243119990453124, -0.002233646111562848, -0.0022097700275480747, -0.0021683829836547375, -0.0021081389859318733, -0.002029439900070429, -0.001937165972776711, -0.0018389419419690967, -0.001741152023896575, -0.0016460709739476442, -0.0015532940160483122, -0.0014631090452894568, -0.0013769729994237423, -0.0012941979803144932, -0.0012115660356357694, -0.0011244730558246374, -0.001029276056215167, -0.0009267386049032211, -0.000819988374132663, -0.0007126511773094535, -0.0006069780210964382, -0.0005021202960051596, -0.00039593499968759716, -0.0002854148915503174, -0.00016771549417171627, -4.260314017301425e-05, 8.900732063921168e-05, 0.00022642059775535017, 0.0003680697991512716, 0.0005089935148134828, 0.0006420214776881039, 0.0007586543215438724, 0.0008532478823326528, 0.0009265663102269173, 0.0009860469726845622, 0.0010431340197101235, 0.001109421020373702, 0.0011929370230063796, 0.0012969709932804108, 0.0014199629658833146, 0.0015574910212308168, 0.001701731001958251, 0.0018434820231050253, 0.001972865080460906, 0.002082914113998413, 0.002172230975702405, 0.0022440149914473295, 0.002304829889908433, 0.0023643390741199255, 0.002431197091937065, 0.0025107809342443943, 0.0026062149554491043, 0.002717291936278343, 0.0028388190548866987, 0.0029626840259879827, 0.003081045113503933, 0.0031893299892544746, 0.0032851239666342735, 0.0033708440605551004, 0.003454865887761116, 0.0035489920992404222, 0.003662366885691881, 0.0037947678938508034, 0.003937455825507641, 0.004079080186784267, 0.004209443926811218, 0.004322000779211521, 0.004414860159158707, 0.004489556886255741, 0.004550015088170767, 0.004601558204740286, 0.004650185815989971, 0.004703125916421413, 0.0047662281431257725, 0.0048389919102191925, 0.0049172439612448215, 0.00499746622517705, 0.005076424218714237, 0.005151179153472185, 0.005220983177423477, 0.005285684019327164, 0.005343297030776739, 0.00539170578122139, 0.005430723074823618, 0.005461812950670719, 0.005484357010573149, 0.005495353136211634, 0.005491822957992554, 0.005471915937960148, 0.005435391794890165, 0.005382813047617674, 0.00531669519841671, 0.005241815932095051, 0.005166293121874332, 0.005100591108202934, 0.005052725784480572, 0.005021880846470594, 0.005002416204661131, 0.004988126922398806, 0.004973340779542923, 0.004953524097800255, 0.004925088956952095, 0.004886175040155649, 0.004835686180740595, 0.004770771134644747, 0.004689808003604412, 0.004595447797328234, 0.004494206048548222, 0.004395083989948034, 0.004306301008909941, 0.004232217092067003, 0.004172328859567642, 0.004118768032640219, 0.00406236108392477, 0.0039972541853785515, 0.003921304829418659, 0.0038361221086233854, 0.0037472040858119726, 0.0036604399792850018, 0.0035801168996840715, 0.003511240938678384, 0.0034569650888442993, 0.0034135389141738415, 0.0033727509435266256, 0.0033286409452557564, 0.003277498995885253, 0.003218132071197033, 0.0031554740853607655, 0.0030966729391366243, 0.0030434520449489355, 0.0029921249952167273, 0.0029375150334089994, 0.002874355996027589, 0.0027998830191791058, 0.002714232075959444, 0.0026221428997814655, 0.0025338740088045597, 0.0024604820646345615, 0.0024076690897345543, 0.002377677010372281, 0.0023674950934946537, 0.002371477894484997, 0.002382131991907954, 0.0023901578970253468, 0.0023882840760052204, 0.002373612020164728, 0.002344850916415453, 0.0023000179789960384, 0.002238671062514186, 0.002161314943805337, 0.0020709449891000986, 0.001974472077563405, 0.0018795019714161754, 0.0017911499598994851, 0.0017117209499701858, 0.0016412000404670835, 0.0015771100297570229, 0.0015133150154724717, 0.0014436639612540603, 0.001366604003123939, 0.0012852289946749806, 0.0012042069574818015, 0.0011298960307613015, 0.0010675910161808133, 0.0010199400130659342, 0.0009851462673395872, 0.000957484997343272, 0.0009279706864617765, 0.000886294525116682, 0.0008279677131213248, 0.0007544959080405533, 0.0006702194805257022, 0.0005804484244436026, 0.0004891558783128858, 0.0003965189098380506, 0.0002987777115777135, 0.00019134979811497033, 7.359399751294404e-05, -5.1849041483365e-05, -0.00018057260604109615, -0.0003072441031690687, -0.0004254147061146796, -0.0005289334803819656, -0.0006148808752186596, -0.0006845302996225655, -0.0007415374275296926, -0.0007905926904641092, -0.0008334178128279746, -0.0008686271030455828, -0.0008939143735915422, -0.000907434499822557, -0.0009071792010217905, -0.0008919627871364355, -0.0008610612712800503, -0.0008139616111293435, -0.0007507316768169403, -0.000672074209433049, -0.0005793874734081328, -0.0004767785139847547, -0.0003712153120432049, -0.00026747610536403954, -0.0001676168030826375, -7.14928173692897e-05, 2.078137913485989e-05, 0.00011050979810534045, 0.00020019549992866814, 0.00029107221052981913, 0.0003861192089971155, 0.0004906858084723353, 0.0006083928747102618, 0.0007378525915555656, 0.0008737614843994379, 0.0010080289794132113, 0.0011340710334479809, 0.0012497040443122387, 0.0013550850562751293, 0.001448765047825873, 0.0015280910301953554, 0.001592732034623623, 0.0016476570162922144, 0.0017030970193445683, 0.0017696679569780827, 0.0018529959488660097, 0.001953735016286373, 0.0020673798862844706, 0.0021851309575140476, 0.0022961210925132036, 0.0023913918994367123, 0.002467396901920438, 0.002525076037272811, 0.002567233983427286, 0.002598010003566742, 0.0026208609342575073, 0.0026383730582892895, 0.0026511079631745815, 0.002658502897247672, 0.0026582051068544388, 0.002646300010383129, 0.0026182320434600115, 0.002570775104686618, 0.00250177807174623, 0.0024118900764733553, 0.002306286944076419, 0.0021939980797469616, 0.0020856510382145643, 0.0019900149200111628, 0.0019122599624097347, 0.0018536490388214588, 0.0018101909663528204, 0.0017759730108082294, 0.0017463299445807934, 0.001718917046673596, 0.0016928180120885372, 0.0016679470427334309, 0.0016433439450338483, 0.0016157659702003002, 0.0015805009752511978, 0.0015334519557654858, 0.0014715750003233552, 0.001393986982293427, 0.0013019420439377427, 0.0011992939980700612, 0.0010908859549090266, 0.0009823351865634322, 0.00087762251496315, 0.0007789109949953854, 0.000685902195982635, 0.0005968806799501181, 0.0005103257717564702, 0.00042720549390651286, 0.00035179281258024275, 0.00028886579093523324, 0.00024078150454442948, 0.0002032332995440811, 0.00016613809566479176, 0.00012078019790351391, 6.285584095166996e-05, -6.859943823656067e-06, -8.450359746348113e-05, -0.00016535900067538023, -0.0002448064915370196, -0.0003204850945621729, -0.0003921964962501079, -0.00046074751298874617, -0.0005271055852063, -0.0005912284250371158, -0.0006525872158817947, -0.0007106811972334981, -0.0007659519906155765, -0.0008153177914209664, -0.0008540598792023957, -0.0008809738792479038, -0.0008971361094154418, -0.0009057570714503527, -0.0009127170196734369, -0.0009257838828489184, -0.0009526634821668267, -0.0009987738449126482, -0.001066369004547596, -0.0011532839853316545, -0.0012530420208349824, -0.001355085987597704, -0.0014468739973381162, -0.0015184140065684915, -0.0015642710495740175, -0.001583685982041061, -0.0015780390240252018, -0.0015510079683735967, -0.0015091130044311285, -0.001461290055885911, -0.0014161609578877687, -0.001379302004352212, -0.0013524600071832538, -0.0013330710353329778, -0.0013181299436837435, -0.0013070859713479877, -0.0012999220052734017, -0.001296728034503758, -0.0012958130100741982, -0.00129280099645257, -0.0012826790334656835, -0.0012639870401471853, -0.001236079027876258, -0.0011983319418504834, -0.0011511980555951595, -0.0010983389802277088, -0.0010472990106791258, -0.0010065650567412376, -0.0009834953816607594, -0.0009821004932746291, -0.0010001440532505512, -0.001030831946991384, -0.0010682709980756044, -0.0011089029721915722, -0.0011511490447446704, -0.0011945810401812196, -0.0012406139867380261, -0.0012879580026492476, -0.001329881022684276, -0.0013552459422498941, -0.001354319043457508, -0.001325787976384163, -0.0012776260264217854, -0.001224756008014083, -0.0011790740536525846, -0.0011439180234447122, -0.0011179869761690497, -0.0010986829875037074, -0.0010820729658007622, -0.0010650049662217498, -0.0010454989969730377, -0.0010238339891657233, -0.001002994948066771, -0.0009882819140329957, -0.0009836208773776889, -0.0009890737710520625, -0.0010012580314651132, -0.0010139900259673595, -0.0010208849562332034, -0.001019135001115501, -0.001010520034469664, -0.0010003040079027414, -0.000991800450719893, -0.0009853350929915905, -0.0009793457575142384, -0.0009724257979542017, -0.0009659776114858687, -0.0009636799222789705, -0.000968290027230978, -0.0009807711467146873, -0.0010011859703809023, -0.0010282599832862616, -0.0010589390294626355, -0.0010898499749600887, -0.0011171470396220684, -0.0011376399779692292, -0.0011494579957798123, -0.001152758952230215, -0.0011484239948913455, -0.0011397149646654725, -0.0011325429659336805, -0.0011301579652354121, -0.0011320889461785555, -0.0011364519596099854, -0.001142106018960476, -0.0011487869778648019, -0.001153799006715417, -0.0011517719831317663, -0.0011362270452082157, -0.001104898052290082, -0.0010600819950923324, -0.001005606958642602, -0.0009486118797212839, -0.0008949520997703075, -0.0008463329286314547, -0.000801097194198519, -0.0007560313097201288, -0.000707097293343395, -0.000651846406981349, -0.0005906890146434307, -0.0005274681025184691, -0.000466981902718544, -0.0004111675079911947, -0.0003582042991183698, -0.00030494280508719385, -0.00025064809597097337, -0.00019907590467482805, -0.00015520170563831925, -0.00012315419735386968, -0.00010400619794381782, -9.470504301134497e-05, -8.964324661064893e-05, -8.0694786447566e-05, -6.0703048802679405e-05, -2.505811062292196e-05, 2.772799962258432e-05, 9.660414070822299e-05, 0.0001755320990923792, 0.0002525038144085556, 0.0003152452118229121, 0.0003541950136423111, 0.00036297619226388633, 0.0003376289096195251, 0.00027715900796465576, 0.0001858746982179582, 7.539017678936943e-05, -3.921049938071519e-05, -0.00014349579578265548, -0.00022540030477102846, -0.00028083191136829555, -0.0003121958870906383, -0.0003248763969168067, -0.00033075601095333695, -0.0003442848101258278, -0.00037623458774760365, -0.00043029661173932254, -0.0005032388144172728, -0.000587145914323628, -0.0006716456264257431, -0.0007435436127707362, -0.0007905694073997438, -0.0008091332856565714, -0.0008042178815230727, -0.0007847789092920721, -0.0007629739120602608, -0.0007514507742598653, -0.000761963427066803, -0.0008011374156922102, -0.0008680985192768276, -0.0009588461252860725, -0.0010692139621824026, -0.0011922649573534727, -0.0013183599803596735, -0.0014375370228663087, -0.001542774960398674, -0.001630396000109613, -0.0017019540537148714, -0.001764202956110239, -0.001825863029807806, -0.0018951479578390718, -0.001975543098524213, -0.0020628839265555143, -0.0021483709570020437, -0.002223239978775382, -0.0022811798844486475, -0.002321302890777588, -0.002346599008888006, -0.0023616370745003223, -0.0023712438996881247, -0.002378910081461072, -0.002387505955994129, -0.002398432930931449, -0.0024134600535035133, -0.002436066046357155, -0.002467128913849592, -0.0025042069610208273, -0.002545040100812912, -0.0025866320356726646, -0.0026246339548379183, -0.0026542439591139555, -0.0026694799307733774, -0.002665458945557475, -0.0026430340949445963, -0.0026073860935866833, -0.002563339890912175, -0.002514539984986186, -0.002465174999088049, -0.002418304095044732, -0.0023753540590405464, -0.002337368903681636, -0.0023038280196487904, -0.0022728859912604094, -0.00224242708645761, -0.0022111129947006702, -0.002178316004574299, -0.002145912032574415, -0.0021162941120564938, -0.002089068992063403, -0.002061661100015044, -0.0020332259591668844, -0.00200501992367208, -0.0019792059902101755, -0.001957068918272853, -0.0019391579553484917, -0.0019234999781474471, -0.0019056960009038448, -0.0018799869576469064, -0.0018431720091030002, -0.0017987079918384552, -0.0017544870497658849, -0.0017191109945997596, -0.0017009270377457142, -0.0017044349806383252, -0.001728252973407507, -0.001767497044056654, -0.0018147530499845743, -0.001860948046669364, -0.001897788024507463, -0.0019176020286977291, -0.0019154009642079473, -0.0018895909888669848, -0.0018437040271237493, -0.0017867940478026867, -0.001729522948153317, -0.0016787879867479205, -0.0016359869623556733, -0.0016009010141715407, -0.0015751189785078168, -0.0015617860481142998, -0.0015627129469066858, -0.001575323985889554, -0.0015951920067891479, -0.0016182749532163143, -0.0016409880481660366, -0.0016605310374870896, -0.001673402963206172, -0.0016775709809735417, -0.001674190047197044, -0.0016689429758116603, -0.0016679440159350634, -0.0016745530301705003, -0.001689709024503827, -0.0017130529740825295, -0.0017437429632991552, -0.001781421946361661, -0.001824963022954762, -0.0018709460273385048, -0.0019158830400556326, -0.0019579059444367886, -0.001998411025851965, -0.002041308907791972, -0.002089652931317687, -0.002144979080185294, -0.002207681071013212, -0.0022778459824621677, -0.0023533760104328394, -0.002429746091365814, -0.00250023091211915, -0.0025582860689610243, -0.002600782085210085, -0.0026275499258190393, -0.0026391539722681046, -0.0026362540666013956, -0.002621412044391036, -0.0026004789397120476, -0.0025796389672905207, -0.0025620029773563147, -0.0025467369705438614, -0.002530724974349141, -0.0025118759367614985, -0.002488482976332307, -0.002458510920405388, -0.002416705945506692, -0.0023574689403176308, -0.0022795149125158787, -0.0021868098992854357, -0.0020879660733044147, -0.0019921730272471905, -0.0019039110047742724, -0.0018223959486931562, -0.0017455939669162035, -0.001670273020863533, -0.001591981970705092, -0.0015056220581755042, -0.001409085001796484, -0.001306410995312035, -0.001201955950818956, -0.0010982089443132281, -0.0009972439147531986, -0.0009013263043016195, -0.0008131756912916899, -0.0007356057758443058, -0.0006695715710520744, -0.0006114530260674655, -0.0005535025848075747, -0.00048695370787754655, -0.00040637271013110876, -0.0003135229926556349, -0.00021399889374151826, -0.00011527020251378417, -2.3438680727849714e-05, 5.654960114043206e-05, 0.00012048800272168592, 0.00016565009718760848, 0.0001925763936014846, 0.00020420139480847865, 0.00020551049965433776, 0.00020422869420144707, 0.0002087183966068551, 0.00022652390180155635, 0.0002603557950351387, 0.00030565541237592697, 0.00035554979695007205, 0.00040396509575657547, 0.0004473786102607846, 0.00048400330706499517, 0.0005112066282890737, 0.0005264469073154032, 0.0005309365806169808, 0.00052917271386832, 0.0005254778079688549, 0.0005204961053095758, 0.0005122942966409028, 0.0004992869799025357, 0.00048073820653371513, 0.0004556179919745773, 0.00042287789983674884, 0.0003812932991422713, 0.00033053228980861604, 0.0002716243907343596, 0.00020712129480671138, 0.0001399372995365411, 7.385543722193688e-05, 1.4997500329627655e-05, -3.0633618735009804e-05, -6.173407018650323e-05, -7.898458716226742e-05, -8.401984086958691e-05, -8.015335333766416e-05, -7.446557719958946e-05, -7.401902257697657e-05, -8.542225259589031e-05, -0.00011436380009399727, -0.00016339699504896998, -0.00022911910491529852, -0.0003013261884916574, -0.00036653620190918446, -0.0004135131021030247, -0.0004349602968432009, -0.00043031948735006154, -0.000406671199016273, -0.0003757948870770633, -0.0003486165951471776, -0.00033261009957641363, -0.0003315368958283216, -0.0003458184073679149, -0.0003748224989976734, -0.00041807349771261215, -0.0004752255917992443, -0.0005443093832582235, -0.000621852173935622, -0.0007067837868817151, -0.0008022157126106322, -0.0009105788776651025, -0.0010300440480932593, -0.0011532820062711835, -0.001269737957045436, -0.0013697609538212419, -0.0014466500142589211, -0.0014981370186433196, -0.001529364031739533, -0.0015492039965465665, -0.0015642240177839994, -0.0015794449718669057, -0.0016017310554161668, -0.0016375059494748712, -0.0016880340408533812, -0.0017502009868621826, -0.0018199889454990625, -0.0018938940484076738, -0.001969302073121071, -0.002044911962002516, -0.0021185739897191525, -0.0021870939526706934, -0.0022487409878522158, -0.0023025800473988056, -0.0023463040124624968, -0.002377605065703392, -0.002397435950115323, -0.0024111359380185604, -0.0024234841112047434, -0.0024347680155187845, -0.002441840013489127, -0.0024435780942440033, -0.002442494034767151, -0.0024426979944109917, -0.0024493790697306395, -0.002465528901666403, -0.0024912930093705654, -0.002521617105230689, -0.0025481239426881075, -0.002564891939982772, -0.002568874042481184, -0.002561718923971057, -0.002548207063227892, -0.00253331009298563, -0.002519568894058466, -0.0025061089545488358, -0.0024898680858314037, -0.0024675331078469753, -0.0024374378845095634, -0.0023983099963515997, -0.0023495210334658623, -0.0022940379567444324, -0.002236285014078021, -0.002180672949180007, -0.0021325231064110994, -0.0020949270110577345, -0.002067907014861703, -0.0020483939442783594, -0.002033909084275365, -0.0020249609369784594, -0.0020220340229570866, -0.0020234868861734867, -0.0020246009808033705, -0.0020200670696794987, -0.002005259972065687, -0.0019769431091845036, -0.001932531944476068, -0.0018724260153248906, -0.001798095996491611, -0.0017119509866461158, -0.0016155310440808535, -0.001509553985670209, -0.0013959399657323956, -0.00127986294683069, -0.0011687870137393475, -0.0010682520223781466, -0.0009804358705878258, -0.0009049564832821488, -0.0008399020880460739, -0.0007843804196454585, -0.0007370521780103445, -0.000696046685334295, -0.0006590337725356221, -0.0006234761094674468, -0.0005850839079357684, -0.000538834894541651, -0.00048197119031101465, -0.00041212240466848016, -0.00032651738729327917, -0.0002243350027129054, -0.00010838249727385119, 1.5066359992488287e-05, 0.0001367090007988736, 0.0002471345942467451, 0.0003387414908502251, 0.00040893390541896224, 0.0004619820974767208, 0.000505670381244272, 0.000547977106180042, 0.0005948094767518342, 0.0006485343910753727, 0.0007094651809893548, 0.0007761706947349012, 0.0008454808266833425, 0.0009147544042207301, 0.000980972545221448, 0.0010389949893578887, 0.0010825899662449956, 0.0011065310100093484, 0.0011087850434705615, 0.0010920950444415212, 0.0010638999519869685, 0.0010344160255044699, 0.0010135089978575706, 0.0010065949754789472, 0.0010133680189028382, 0.0010283800074830651, 0.0010435100411996245, 0.0010501430369913578, 0.00104267499409616, 0.0010198960080742836, 0.0009849140187725425, 0.0009436184773221612, 0.0009037556010298431, 0.000873356475494802, 0.0008583834278397262, 0.0008602844900451601, 0.0008765255915932357, 0.0009022729936987162, 0.0009323644917458296, 0.000962349702604115, 0.0009872784139588475, 0.0010032339487224817, 0.0010078089544549584, 0.0010007929522544146, 0.000984290847554803, 0.0009623554069548845, 0.0009390882914885879, 0.0009175430168397725, 0.0008978446712717414, 0.0008792161243036389, 0.0008617640123702586, 0.0008459176169708371, 0.000832596211694181, 0.000822673027869314, 0.000814551895018667, 0.0008047303999774158, 0.0007902390789240599, 0.0007697450928390026, 0.0007432085112668574, 0.0007108662975952029, 0.0006726473802700639, 0.0006296227220445871, 0.0005855396739207208, 0.0005465680733323097, 0.0005195103003643453, 0.000507937918882817, 0.0005122189177200198, 0.0005299935000948608, 0.0005587097839452326, 0.0005970731726847589, 0.0006458031130023301, 0.0007061698124743998, 0.0007800288731232285, 0.0008680251776240766, 0.000969857326708734, 0.0010842130286619067, 0.0012069579679518938, 0.0013336939737200737, 0.0014614040264859796, 0.0015867339679971337, 0.0017051970353350043, 0.0018129160162061453, 0.0019072090508416295, 0.0019870649557560682, 0.002054477110505104, 0.0021152410190552473, 0.0021770140156149864, 0.0022459090687334538, 0.002324152970686555, 0.002410775050520897, 0.0025026770308613777, 0.0025975489988923073, 0.0026947311125695705, 0.002790705068036914, 0.0028778898995369673, 0.0029475020710378885, 0.0029923319816589355, 0.00301005388610065, 0.0030043378937989473, 0.002984503982588649, 0.0029613710939884186, 0.0029431190341711044, 0.002934189047664404, 0.0029334439896047115, 0.002936274977400899, 0.0029375851154327393, 0.002934102900326252, 0.002925572916865349, 0.0029134571086615324, 0.002897992031648755, 0.002878960920497775, 0.0028590080328285694, 0.0028417170979082584, 0.002829320030286908, 0.0028219460509717464, 0.0028174209874123335, 0.00281155901029706, 0.0027965449262410402, 0.0027634999714791775, 0.002707327948883176, 0.0026272039394825697, 0.0025276269298046827, 0.0024213269352912903, 0.002323644934222102, 0.002241854090243578, 0.002175969071686268, 0.0021239928901195526, 0.002085163025185466, 0.002058963058516383, 0.0020416430197656155, 0.0020290471147745848, 0.0020161750726401806, 0.001994091086089611, 0.001956742024049163, 0.0019045310327783227, 0.0018402519635856152, 0.0017675940180197358, 0.001691751996986568, 0.0016202329425141215, 0.001563544967211783, 0.0015325959539040923, 0.0015339419478550553, 0.0015667330008000135, 0.0016220950055867434, 0.0016874369466677308, 0.0017514779465273023, 0.001803544000722468, 0.0018336880020797253, 0.001836910960264504, 0.001815625000745058, 0.0017787739634513855, 0.0017368349945172668, 0.0016975440084934235, 0.0016664329450577497, 0.0016481219790875912, 0.0016449469840154052, 0.0016559760551899672, 0.0016789339715614915, 0.0017088729655370116, 0.0017380890203639865, 0.0017601799918338656, 0.0017725620418787003, 0.0017752760322764516, 0.0017692360561341047, 0.0017572379438206553, 0.0017450869781896472, 0.0017402670346200466, 0.0017490279860794544, 0.0017750069964677095, 0.0018163389759138227, 0.0018685460090637207, 0.0019269180484116077, 0.0019871171098202467, 0.0020455680787563324, 0.002099832985550165, 0.002148363972082734, 0.002191663021221757, 0.0022331338841468096, 0.002277319086715579, 0.002327165100723505, 0.0023813319858163595, 0.002436090959236026, 0.0024864759761840105, 0.002527601085603237, 0.0025561959482729435, 0.002572794910520315, 0.002583329100161791, 0.0025960500352084637, 0.0026191489305347204, 0.0026577450335025787, 0.0027118490543216467, 0.0027748181018978357, 0.002836894942447543, 0.0028899810276925564, 0.002929701004177332, 0.0029567989986389875, 0.0029758589807897806, 0.0029922749381512403, 0.0030121360905468464, 0.0030419519171118736, 0.0030860770493745804, 0.003143718931823969, 0.0032064819242805243, 0.003263545921072364, 0.003304766956716776, 0.0033249000553041697, 0.0033272390719503164, 0.003320632968097925, 0.003313909051939845, 0.003313652938231826, 0.0033247550018131733, 0.0033477279357612133, 0.0033772368915379047, 0.0034051749389618635, 0.003421595087274909, 0.003419057000428438, 0.003397597000002861, 0.003362318966537714, 0.0033167290966957808, 0.0032642988953739405, 0.0032088831067085266, 0.0031547469552606344, 0.003108569886535406, 0.0030757540371268988, 0.0030577529687434435, 0.0030532970558851957, 0.003060817951336503, 0.0030761039815843105, 0.003091762075200677, 0.003100346075370908, 0.003094482934102416, 0.0030684019438922405, 0.0030189049430191517, 0.002948027104139328, 0.0028660399839282036, 0.002788781886920333, 0.0027303791139274836, 0.0026981919072568417, 0.002692543901503086, 0.002707225037738681, 0.002732468070462346, 0.002757868031039834, 0.0027714651077985764, 0.0027669009286910295, 0.0027485329192131758, 0.0027279790956526995, 0.0027158150915056467, 0.0027181420009583235, 0.002736401977017522, 0.0027673461008816957, 0.0028068250976502895, 0.002850867109373212, 0.0028950138948857784, 0.002933155046775937, 0.002958395052701235, 0.002963484963402152, 0.002943947911262512, 0.0029008688870817423, 0.002840302884578705, 0.0027712720911949873, 0.0027015700470656157, 0.0026359029579907656, 0.002575857099145651, 0.0025174999609589577, 0.0024576480500400066, 0.0023973078932613134, 0.0023395998869091272, 0.0022873389534652233, 0.0022436240687966347, 0.0022094850428402424, 0.0021832180209457874, 0.00216211611405015, 0.0021418870892375708, 0.0021168780513107777, 0.002079833997413516, 0.0020247120410203934, 0.0019496140303090215, 0.0018564489437267184, 0.0017486059805378318, 0.0016302790027111769, 0.0015055770054459572, 0.0013762679882347584, 0.001243478967808187, 0.0011080800322815776, 0.0009700154769234359, 0.0008295727893710136, 0.0006879382999613881, 0.0005472127813845873, 0.0004108021967113018, 0.000281141692539677, 0.0001579610980115831, 4.022233042633161e-05, -7.326064223889261e-05, -0.00018396250379737467, -0.0002947768080048263, -0.0004078978963661939, -0.0005238506128080189, -0.0006420544814318419, -0.0007608439773321152, -0.0008773694280534983, -0.000987941399216652, -0.001089234952814877, -0.0011786799877882004, -0.0012563549680635333, -0.001324084005318582, -0.0013859790051355958, -0.0014464559499174356, -0.0015086870407685637, -0.0015746529679745436, -0.0016464049695059657, -0.0017249550437554717, -0.00180881901178509, -0.0018946450436487794, -0.0019784809555858374, -0.0020557839889079332, -0.002121344907209277, -0.0021719960495829582, -0.0022103730589151382, -0.0022431251127272844, -0.0022777020931243896, -0.0023208290804177523, -0.002377253957092762, -0.002448112005367875, -0.002531341975554824, -0.0026227780617773533, -0.002718640025705099, -0.0028138249181210995, -0.0029014560859650373, -0.0029749879613518715, -0.0030317490454763174, -0.003071886021643877, -0.003097976092249155, -0.003112955018877983, -0.0031200689263641834, -0.0031248319428414106, -0.003133605932816863, -0.0031530580017715693, -0.0031885739881545305, -0.0032413240987807512, -0.0033071490470319986, -0.003377807093784213, -0.0034448299556970596, -0.003502870909869671, -0.003550182096660137, -0.0035878720227628946, -0.0036156061105430126, -0.0036302499938756227, -0.003626628080382943, -0.0035997158847749233, -0.0035498531069606543, -0.0034828109201043844, -0.0034033700358122587, -0.0033132750540971756, -0.0032154330983757973, -0.003114751074463129, -0.003017846029251814, -0.0029282609466463327, -0.002845189068466425, -0.002766922116279602, -0.002693861024454236, -0.002626843051984906, -0.0025652858894318342, -0.0025052179116755724, -0.0024401210248470306, -0.0023656529374420643, -0.0022822669707238674, -0.002196060959249735, -0.002116478979587555, -0.002051888033747673, -0.0020083868876099586, -0.0019891110714524984, -0.0019934100564569235, -0.0020174989476799965, -0.0020551818888634443, -0.002097975928336382, -0.0021358910016715527, -0.0021581200417131186, -0.002156904898583889, -0.0021323570981621742, -0.0020924159325659275, -0.0020450640004128218, -0.001995560945942998, -0.001945015974342823, -0.0018915520049631596, -0.0018316219793632627, -0.0017639519646763802, -0.0016930319834500551, -0.0016275589587166905, -0.001576627022586763, -0.0015478719724342227, -0.0015454390086233616, -0.0015685800462961197, -0.0016161620151251554, -0.001684851013123989, -0.00176563102286309, -0.0018451670184731483, -0.001908175996504724, -0.001939001027494669, -0.0019258529646322131, -0.0018657529726624489, -0.0017669900553300977, -0.001644797041080892, -0.0015201029600575566, -0.0014149179914966226, -0.0013447169912979007, -0.0013139069778844714, -0.0013161359820514917, -0.0013372510438784957, -0.0013604529667645693, -0.0013691720087081194, -0.0013510610442608595, -0.0013028610264882445, -0.0012302730465307832, -0.001140802982263267, -0.001040098024532199, -0.0009317112271673977, -0.000821324298158288, -0.0007143313996493816, -0.0006133604911155999, -0.0005190612282603979, -0.0004324376059230417, -0.00035499079967848957, -0.0002861398970708251, -0.00022270869521889836, -0.00016119239444378763, -0.00010003019997384399, -3.7971291021676734e-05, 2.745813071669545e-05, 9.848504851106554e-05, 0.00017801120702642947, 0.0002667742082849145, 0.0003631325962487608, 0.00046299610403366387, 0.0005609369254671037, 0.0006512167165055871, 0.0007301478181034327, 0.0007977540954016149, 0.0008573487284593284, 0.000914328615181148, 0.0009741064859554172, 0.0010408259695395827, 0.0011155479587614536, 0.0011976540554314852, 0.0012862279545515776, 0.0013799190055578947, 0.001477316953241825, 0.0015753109473735094, 0.0016688399482518435, 0.0017513539642095566, 0.0018164849607273936, 0.001860606949776411, 0.0018832460045814514, 0.0018867070320993662, 0.0018771420000120997, 0.001864611986093223, 0.0018581560580059886, 0.001862777047790587, 0.0018822019919753075, 0.0019188630394637585, 0.001970333978533745, 0.0020281579345464706, 0.002081607934087515, 0.002124310005456209, 0.002154767978936434, 0.002175718080252409, 0.0021910760551691055, 0.0022048770915716887, 0.002220473950728774, 0.0022380310110747814, 0.00225612404756248, 0.0022713590878993273, 0.0022804990876466036, 0.002281889086589217, 0.0022763318847864866, 0.0022660410031676292, 0.0022546679247170687, 0.002245736075565219, 0.0022421160247176886, 0.0022478539030998945, 0.0022647720761597157, 0.0022893568966537714, 0.0023173459339886904, 0.0023455999325960875, 0.0023735619615763426, 0.0023989230394363403, 0.0024158249143511057, 0.0024202640634030104, 0.0024119019508361816, 0.002393048955127597, 0.0023657549172639847, 0.0023331530392169952, 0.002301040105521679, 0.0022756289690732956, 0.002259250031784177, 0.0022490681149065495, 0.0022394719999283552, 0.0022231009788811207, 0.0021939389407634735, 0.0021489718928933144, 0.002090096939355135, 0.002023915061727166, 0.0019591220188885927, 0.001903134980238974, 0.001859860960394144, 0.001831014989875257, 0.001813794020563364, 0.0018019559793174267, 0.001790769980289042, 0.001777700032107532, 0.001763571985065937, 0.0017495539505034685, 0.0017381979851052165, 0.0017313810531049967, 0.0017311150440946221, 0.0017404899699613452, 0.0017619000282138586, 0.0017920329701155424, 0.001822934951633215, 0.0018503499450162053, 0.0018719759536907077, 0.0018856939859688282, 0.0018927010241895914, 0.0018958540167659521, 0.0018976680003106594, 0.0019017650047317147, 0.0019107479602098465, 0.0019225990399718285, 0.0019297050312161446, 0.0019221119582653046, 0.0018919650465250015, 0.0018364250427111983, 0.0017586930189281702, 0.0016653339844197035, 0.0015644809463992715, 0.0014643770409747958, 0.0013716439716517925, 0.001289541949518025, 0.0012188219698145986, 0.0011591300135478377, 0.0011112119536846876, 0.0010770770022645593, 0.0010586159769445658, 0.0010544509859755635, 0.0010592039907351136, 0.0010639639804139733, 0.0010589839657768607, 0.001036548987030983, 0.0009927772916853428, 0.0009290439775213599, 0.000850987620651722, 0.0007664838922210038, 0.0006836940883658826, 0.0006070540985092521, 0.0005373090971261263, 0.00047494578757323325, 0.0004214027139823884, 0.00037744740257039666, 0.0003414177044760436, 0.0003114930004812777, 0.00028738469700329006, 0.0002690528053790331, 0.0002539475099183619, 0.00023898670042399317, 0.00022157200146466494, 0.00020065749413333833, 0.00017758659669198096, 0.00015479499415960163, 0.00013364109327085316, 0.00011414170148782432, 9.487661009188741e-05, 7.610194734297693e-05, 6.119140016380697e-05, 5.4872238251846284e-05, 5.9063640946988016e-05, 7.341813034145162e-05, 9.684570250101388e-05, 0.00012798269744962454, 0.00016501359641551971, 0.00020459860388655216, 0.00024360089446417987, 0.0002793197054415941, 0.00031071939156390727, 0.00033915549283847213, 0.0003671644954010844, 0.00039618241135030985, 0.0004273650120012462, 0.00046020839363336563, 0.0004923372180201113, 0.0005201653111726046, 0.00054006720893085, 0.0005506579182110727, 0.0005543510778807104, 0.0005567324114963412, 0.0005635048146359622, 0.0005784793756902218, 0.0006008864147588611, 0.000628546578809619, 0.0006581019842997193, 0.000684689381159842, 0.000703099591191858, 0.0007102140807546675, 0.0007051556021906435, 0.000690846296492964, 0.0006744707934558392, 0.0006643506931141019, 0.0006668451824225485, 0.0006839971174485981, 0.000709558604285121, 0.0007337640854530036, 0.0007462588255293667, 0.0007407892844639719, 0.0007168138981796801, 0.000678636075463146, 0.0006332530174404383, 0.000585947185754776, 0.0005400815862230957, 0.000497841218020767, 0.000459762493846938, 0.00042387930443510413, 0.0003879904979839921, 0.0003505279019009322, 0.00031113080331124365, 0.0002681440964806825, 0.00021772140462417156, 0.00015704550605732948, 8.367944974452257e-05, -2.9000771064602304e-06, -0.00010120400111190975, -0.0002061397972283885, -0.00030947799677960575, -0.00040499819442629814, -0.0004895520978607237, -0.0005620088195428252, -0.0006245162803679705, -0.0006811203784309328, -0.0007387240184471011, -0.0008061645203270018, -0.0008908166782930493, -0.0009966820944100618, -0.0011258230078965425, -0.0012762469705194235, -0.0014401780208572745, -0.0016059030313044786, -0.0017615080578252673, -0.0018967270152643323, -0.002002652967348695, -0.002075335942208767, -0.0021184340585023165, -0.0021382190752774477, -0.002142152050510049, -0.002136243972927332, -0.0021252399310469627, -0.0021122649777680635, -0.0021000138949602842, -0.0020908641163259745, -0.0020879548974335194, -0.0020936329383403063, -0.00210747797973454, -0.0021265819668769836, -0.002146719954907894, -0.0021658209152519703, -0.002185004996135831, -0.0022053481079638004, -0.002225815085694194, -0.002243258059024811, -0.0022532669827342033, -0.002252462087199092, -0.002240902977064252, -0.002221090020611882, -0.002196625107899308, -0.00217256392352283, -0.0021544990595430136, -0.00214664195664227, -0.002148659899830818, -0.002156475093215704, -0.002165447920560837, -0.0021702831145375967, -0.002166717080399394, -0.002148920902982354, -0.0021117241121828556, -0.0020577351097017527, -0.0019939870107918978, -0.0019265100127086043, -0.0018581990152597427, -0.001790776033885777, -0.0017263490008190274, -0.001667720964178443, -0.001617660978808999, -0.0015790440374985337, -0.0015560470055788755, -0.0015487700002267957, -0.0015492320526391268, -0.001543196034617722, -0.0015165089862421155, -0.0014608510537073016, -0.00137504399754107, -0.0012658319901674986, -0.0011445910204201937, -0.0010231579653918743, -0.0009085853234864771, -0.0008018622174859047, -0.0007004227954894304, -0.0005998368724249303, -0.0004974000039510429, -0.0003932128893211484, -0.00029102989356033504, -0.0001967668067663908, -0.00011618300050031394, -5.394177060225047e-05, -1.2062359928677324e-05, 1.4016999557497911e-05, 3.442203160375357e-05, 6.299070810200647e-05, 0.00011396220361348242, 0.00019484059885144234, 0.000303826091112569, 0.00043502330663613975, 0.0005788102280348539, 0.0007219554972834885, 0.0008512022905051708, 0.0009587854729034007, 0.0010438900208100677, 0.0011107149766758084, 0.0011682809563353658, 0.0012271599844098091, 0.0012942380271852016, 0.001372092985548079, 0.0014609229983761907, 0.0015575039433315396, 0.0016549959545955062, 0.001746334950439632, 0.0018258809577673674, 0.0018889929633587599, 0.0019357360433787107, 0.0019710969645529985, 0.002001390093937516, 0.0020324739161878824, 0.002068507019430399, 0.0021109359804540873, 0.00215932191349566, 0.0022110710851848125, 0.002262759953737259, 0.0023111209738999605, 0.0023514609783887863, 0.0023778160102665424, 0.0023845010437071323, 0.0023696860298514366, 0.0023379079066216946, 0.0022978750057518482, 0.002260413020849228, 0.002233366947621107, 0.002217822941020131, 0.002208059886470437, 0.0021961049642413855, 0.002176047069951892, 0.0021439509000629187, 0.0020970909390598536, 0.002035256940871477, 0.0019615760538727045, 0.0018814250361174345, 0.0018001280259341002, 0.0017203009920194745, 0.0016429610550403595, 0.0015686090337112546, 0.0014974350342527032, 0.0014292249688878655, 0.0013627930311486125, 0.0012972640106454492, 0.0012326940195634961, 0.0011670220410451293, 0.001096672029234469, 0.0010196970542892814, 0.0009363830904476345, 0.0008472133777104318, 0.0007511957082897425, 0.0006486169877462089, 0.0005425324197858572, 0.0004373445990495384, 0.000336125202011317, 0.00024028299958445132, 0.00014865730190649629, 5.812909876112826e-05, -3.614052911871113e-05, -0.0001376134023303166, -0.0002446201106067747, -0.0003517231089062989, -0.00045238708844408393, -0.0005420101806521416, -0.0006195144960656762, -0.0006847048061899841, -0.0007361795287579298, -0.0007728378986939788, -0.0007973578758537769, -0.0008166959160007536, -0.0008402452222071588, -0.0008749521803110838, -0.0009221836808137596, -0.0009779897518455982, -0.0010348829673603177, -0.0010853320127353072, -0.001123341964557767, -0.0011462620459496975, -0.0011553389485925436, -0.001152088982053101, -0.0011374619789421558, -0.0011140709975734353, -0.0010870150290429592, -0.0010610410245135427, -0.001038416987285018, -0.001020780997350812, -0.001010512001812458, -0.0010079949861392379, -0.001010279986076057, -0.001014285022392869, -0.0010189639870077372, -0.0010243089636787772, -0.00103073101490736, -0.0010367849608883262, -0.0010393320117145777, -0.0010365709895268083, -0.0010295440442860126, -0.0010221910197287798, -0.0010176970390602946, -0.001015487010590732, -0.0010124739492312074, -0.00100812001619488, -0.001006097998470068, -0.00101233902387321, -0.001029853941872716, -0.0010571239981800318, -0.0010897249449044466, -0.0011220290325582027, -0.001147605013102293, -0.0011628359789028764, -0.0011669730301946402, -0.0011605529580265284, -0.0011459599481895566, -0.0011282289633527398, -0.0011119140544906259, -0.0010992030147463083, -0.0010906870011240244, -0.001085352967493236, -0.0010808389633893967, -0.001074886997230351, -0.0010671609779819846, -0.0010601129615679383, -0.0010586479911580682, -0.0010680579580366611, -0.0010928009869530797, -0.0011334189912304282, -0.0011829689610749483, -0.001230885973200202, -0.0012677520280703902, -0.0012860799906775355, -0.0012834069784730673, -0.0012627890100702643, -0.001231685047969222, -0.001199275953695178, -0.0011726099764928222, -0.0011558689875528216, -0.0011507549788802862, -0.0011545290471985936, -0.00116198998875916, -0.0011675989953801036, -0.0011675989953801036, -0.0011612869566306472, -0.0011512170312926173, -0.0011395750334486365, -0.0011253809789195657, -0.0011025209678336978, -0.0010646929731592536, -0.0010092540178447962, -0.0009387396275997162, -0.0008587883203290403, -0.0007778662256896496, -0.0007045966922305524, -0.0006444539176300168, -0.0005995837855152786, -0.0005681960028596222, -0.0005441312096081674, -0.0005181729793548584, -0.0004824367933906615, -0.00043439038563519716, -0.00037572981091216207, -0.0003115680883638561, -0.00025047961389645934, -0.00020386719552334398, -0.0001799259043764323, -0.00018026780162472278, -0.0002020131069002673, -0.00023910359595902264, -0.00028149699210189283, -0.0003132828860543668, -0.0003169011906720698, -0.00028327939799055457, -0.00021574870334006846, -0.0001287794002564624, -4.173811976215802e-05, 2.85351798083866e-05, 7.274092786246911e-05, 9.041972225531936e-05, 8.927912131184712e-05, 8.07612668722868e-05, 7.309892680495977e-05, 7.244529842864722e-05, 8.373770106118172e-05, 0.00011103489669039845, 0.00015392090426757932, 0.00020877229690086097, 0.00026987679302692413, 0.0003305684949737042, 0.0003858937125187367, 0.000430284213507548, 0.0004575494967866689, 0.000462428288301453, 0.00044467850239016116, 0.00041087449062615633, 0.00037315679946914315, 0.0003435364051256329, 0.0003287857980467379, 0.00033002669806592166, 0.0003452833043411374, 0.00037263560807332397, 0.0004082006053067744, 0.000444650009740144, 0.00047374959103763103, 0.0004890576237812638, 0.00048774731112644076, 0.00047114279004745185, 0.0004432967980392277, 0.0004076510958839208, 0.00036453260690905154, 0.0003145431983284652, 0.0002605800109449774, 0.00020667779608629644, 0.00015474369865842164, 0.00010392229887656868, 5.49762808077503e-05, 1.1238070328545291e-05, -2.324759952898603e-05, -4.533629908110015e-05, -5.2805549785261974e-05, -4.5710461563430727e-05, -2.5569570425432175e-05, 5.373313797463197e-06, 4.173514025751501e-05, 7.691694918321446e-05, 0.00010591059981379658, 0.00012565440556500107, 0.00013527019473258406, 0.00013546019908972085, 0.00012780209362972528, 0.0001145604983321391, 9.880324796540663e-05, 8.310534758493304e-05, 6.795740046072751e-05, 5.284068902255967e-05, 3.624540113378316e-05, 1.7960859622689895e-05, 3.7699049926231964e-07, -1.3709110135096125e-05, -2.3967009838088416e-05, -3.1853309337748215e-05, -3.969961835537106e-05, -4.930379873258062e-05, -6.251648301258683e-05, -8.203965262509882e-05, -0.00011039119999622926, -0.00014777120668441057, -0.00019104090461041778, -0.00023479580704588443, -0.0002744171069934964, -0.0003085772041231394, -0.00034063690691255033, -0.0003768086025957018, -0.0004238891997374594, -0.0004865941882599145, -0.0005653948173858225, -0.000656920310575515, -0.000755039625801146, -0.0008524933946318924, -0.0009410469210706651, -0.001012225984595716, -0.001061673043295741, -0.0010915539460256696, -0.0011099949479103088, -0.0011255269637331367, -0.0011442330433055758, -0.0011709049576893449, -0.0012066729832440615, -0.0012496759882196784, -0.0012940559536218643, -0.0013318490236997604, -0.0013562219683080912, -0.0013616030337288976, -0.0013471189886331558, -0.0013172510080039501, -0.001280286000110209, -0.001246090978384018, -0.0012244830140843987, -0.0012230159481987357, -0.0012434950331225991, -0.001281031989492476, -0.001326613943092525, -0.0013710790080949664, -0.0014059030218049884, -0.001424100948497653, -0.001420706044882536, -0.001395971979945898, -0.0013575679622590542, -0.0013163640396669507, -0.001280845026485622, -0.0012549690436571836, -0.001239681034348905, -0.0012336750514805317, -0.0012347729643806815, -0.0012395229423418641, -0.0012444589519873261, -0.0012460430152714252, -0.0012407740578055382, -0.001226859982125461, -0.0012045910116285086, -0.0011745080118998885, -0.001138255000114441, -0.0010973189491778612, -0.0010533799650147557, -0.0010082570370286703, -0.0009648703853599727, -0.0009269469883292913, -0.0008989315247163177, -0.0008844021940603852, -0.0008841789094731212, -0.0008963432046584785, -0.0009170342236757278, -0.0009425070020370185, -0.0009692530147731304, -0.0009938530856743455, -0.0010148780420422554, -0.0010324650211259723, -0.0010488659609109163, -0.0010664990404620767, -0.0010871399426832795, -0.0011101820273324847, -0.0011315100127831101, -0.0011457139626145363, -0.0011490460019558668, -0.001141211949288845, -0.0011256779544055462, -0.0011081829434260726, -0.0010965720284730196, -0.001096604042686522, -0.0011078569805249572, -0.0011257600272074342, -0.0011460409732535481, -0.0011653989786282182, -0.001181654050014913, -0.001194800017401576, -0.00120760896243155, -0.0012223890516906977, -0.0012383810244500637, -0.0012524520279839635, -0.0012598569737747312, -0.0012568540405482054, -0.0012417590478435159, -0.001215268042869866, -0.0011803379748016596, -0.001142291002906859, -0.0011072979541495442, -0.0010815459536388516, -0.0010713479714468122, -0.0010815670248121023, -0.0011142570292577147, -0.0011700349859893322, -0.0012478550197556615, -0.0013457350432872772, -0.0014630459481850266, -0.001599426963366568, -0.0017524920403957367, -0.001915434026159346, -0.002076338045299053, -0.0022198930382728577, -0.0023314340505748987, -0.002404669066891074, -0.0024420490954071283, -0.0024516889825463295, -0.002443956909701228, -0.0024294829927384853, -0.0024179129395633936, -0.0024159180466085672, -0.002423844998702407, -0.0024355780333280563, -0.0024423389695584774, -0.0024359289091080427, -0.0024137140717357397, -0.002377820899710059, -0.002334210090339184, -0.0022922379430383444, -0.0022604248952120543, -0.002244661096483469, -0.002247791038826108, -0.0022684920113533735, -0.002299825893715024, -0.002330936025828123, -0.002352295909076929, -0.0023591730277985334, -0.0023504009004682302, -0.0023284279741346836, -0.0023009139113128185, -0.002277117921039462, -0.0022654940839856863, -0.002270098077133298, -0.00228696595877409, -0.0023043761029839516, -0.0023109489120543003, -0.0023036589846014977, -0.0022831859532743692, -0.002249205019325018, -0.0021990900859236717, -0.002133843954652548, -0.00206208904273808, -0.0019945339299738407, -0.00193869904614985, -0.0018960949964821339, -0.0018642659997567534, -0.0018409669864922762, -0.0018237050389871001, -0.0018062740564346313, -0.001779597019776702, -0.0017373920418322086, -0.0016772180097177625, -0.0015999199822545052, -0.0015100579475983977, -0.0014134430093690753, -0.0013159209629520774, -0.0012253000168129802, -0.0011505819857120514, -0.0010997869540005922, -0.001075788983143866, -0.0010751780355349183, -0.0010873000137507915, -0.0010984999826177955, -0.0010971640003845096, -0.0010781349847093225, -0.0010439850157126784, -0.0010011260164901614, -0.000957871787250042, -0.0009206333197653294, -0.0008917006780393422, -0.0008709502872079611, -0.0008566383039578795, -0.0008450868772342801, -0.0008314874721691012, -0.0008120003039948642, -0.0007839411264285445, -0.0007468775729648769, -0.0007014824077486992, -0.0006494529079645872, -0.000593179720453918, -0.0005363016971386969, -0.0004813543055206537, -0.00042867069714702666, -0.00037829650682397187, -0.00033103080932050943, -0.00028756039682775736, -0.0002469315950293094, -0.0002080348931485787, -0.00017247340292669833, -0.00014220470620784909, -0.00011703879863489419, -9.495358244748786e-05, -7.378414738923311e-05, -5.355379107641056e-05, -3.5176701203454286e-05, -1.917018926178571e-05, -3.801522098001442e-06, 1.4750499758520164e-05, 3.9894101064419374e-05, 7.499824278056622e-05, 0.00012200210039736703, 0.00018063159950543195, 0.00024725220282562077, 0.00031662159017287195, 0.0003823305887635797, 0.0004407280939631164, 0.000490961188916117, 0.0005315669113770127, 0.0005602330202236772, 0.0005760117783211172, 0.0005824001273140311, 0.0005854637129232287, 0.000589480681810528, 0.000595823978073895, 0.0006064104964025319, 0.0006260990048758686, 0.0006595936720259488, 0.0007100658840499818, 0.0007769637159071863, 0.0008557420806027949, 0.000939682824537158, 0.0010225640144199133, 0.0010991089511662722, 0.001166102010756731, 0.0012229450512677431, 0.0012719070073217154, 0.0013175460044294596, 0.001365027972497046, 0.0014179670251905918, 0.0014773550210520625, 0.0015427640173584223, 0.0016132090240716934, 0.001687119947746396, 0.0017626129556447268, 0.0018366359872743487, 0.0019068759866058826, 0.0019739139825105667, 0.0020368481054902077, 0.002090177033096552, 0.002126729115843773, 0.0021422419231384993, 0.0021359079983085394, 0.0021102139726281166, 0.002072240924462676, 0.0020337249152362347, 0.0020086849108338356, 0.0020062599796801805, 0.002027380047366023, 0.0020664879120886326, 0.002113365102559328, 0.0021568029187619686, 0.002188391052186489, 0.0022060370538383722, 0.002211431972682476, 0.0022072698920965195, 0.002195626962929964, 0.002179990988224745, 0.0021651210263371468, 0.0021531700622290373, 0.00214347499422729, 0.002132958034053445, 0.0021184440702199936, 0.002097429009154439, 0.0020690090022981167, 0.0020342341158539057, 0.0019958470948040485, 0.0019575110636651516, 0.001921887043863535, 0.0018905450124293566, 0.0018638119800016284, 0.0018428879557177424, 0.0018307809950783849, 0.0018306829733774066, 0.0018454940291121602, 0.001875177025794983, 0.0019156630150973797, 0.001958712935447693, 0.001994447084143758, 0.002014702884480357, 0.002016400918364525, 0.002000917913392186, 0.001972234109416604, 0.001935487031005323, 0.0018947579665109515, 0.001854822039604187, 0.0018200669437646866, 0.0017935089999809861, 0.0017750930273905396, 0.0017597749829292297, 0.0017419690266251564, 0.0017200120491907, 0.0016954209422692657, 0.0016711610369384289, 0.0016500779893249273, 0.0016332860104739666, 0.001622786046937108, 0.0016205740394070745, 0.0016281059943139553, 0.0016438850434496999, 0.001663816045038402, 0.0016837000148370862, 0.0016983610112220049, 0.0017038809601217508, 0.0016979980282485485, 0.0016808409709483385, 0.0016536980401724577, 0.0016196180367842317, 0.0015818839892745018, 0.001543950056657195, 0.0015098679577931762, 0.001482993015088141, 0.0014667550567537546, 0.0014615330146625638, 0.0014619269641116261, 0.001457693986594677, 0.0014374960446730256, 0.0013953819870948792, 0.0013333030510693789, 0.001257790019735694, 0.0011753319995477796, 0.0010923920199275017, 0.0010150759480893612, 0.0009481160086579621, 0.000892716518137604, 0.0008454978815279901, 0.0008009863086044788, 0.0007546931155957282, 0.000705127022229135, 0.0006538304733112454, 0.0006050686934031546, 0.000563891779165715, 0.0005346328835003078, 0.0005190870142541826, 0.000514860381372273, 0.0005170439253561199, 0.0005180910229682922, 0.0005127398180775344, 0.0005017492221668363, 0.00048784149112179875, 0.00047279050340875983, 0.0004574432969093323, 0.00044073211029171944, 0.0004202401905786246, 0.0003942688927054405, 0.0003635809989646077, 0.000331382907461375, 0.00030102088931016624, 0.0002748834958765656, 0.0002547038020566106, 0.00024039350682869554, 0.000231329002417624, 0.00022661070397589356, 0.00022252100461628288, 0.00021394589566625655, 0.00019835350394714624, 0.00017577859398443252, 0.00014617390115745366, 0.00010911539720837027, 6.49078210699372e-05, 1.4836909940640908e-05, -3.925480996258557e-05, -9.578173194313422e-05, -0.000151952393935062, -0.00020368890545796603, -0.0002487988967914134, -0.0002886755974031985, -0.00032561790430918336, -0.00036217691376805305, -0.00039996931445784867, -0.0004397958982735872, -0.0004833771090488881, -0.0005315631860867143, -0.0005822657258249819, -0.000631616625469178, -0.000676638213917613, -0.0007177985971793532, -0.0007567001157440245, -0.0007937385234981775, -0.0008285834919661283, -0.0008603322203271091, -0.0008879153174348176, -0.0009111178223975003, -0.0009312673937529325, -0.0009513195254839957, -0.0009759279200807214, -0.0010116039775311947, -0.001064733020029962, -0.0011392369633540511, -0.0012339879758656025, -0.0013416180154308677, -0.0014497640077024698, -0.0015458520501852036, -0.001623932970687747, -0.0016842179466038942, -0.0017293120035901666, -0.0017626079497858882, -0.0017866840353235602, -0.0018042799783870578, -0.001817338983528316, -0.0018263920210301876, -0.0018296809867024422, -0.0018256240291520953, -0.0018158509628847241, -0.0018044660100713372, -0.001795305055566132, -0.0017904250416904688, -0.0017886440036818385, -0.001787554007023573, -0.0017864269902929664, -0.0017861180240288377, -0.001788984052836895, -0.001795743010006845, -0.0018036030232906342, -0.0018088159849867225, -0.0018062590388581157, -0.0017901170067489147, -0.0017572720535099506, -0.0017070299945771694, -0.0016435040161013603, -0.001572591019794345, -0.0015001390129327774, -0.0014313330175355077, -0.0013704480370506644, -0.0013190590543672442, -0.0012749610468745232, -0.0012319510569795966, -0.0011818059720098972, -0.0011182170128449798, -0.0010379409650340676, -0.0009423458832316101, -0.0008366691181436181, -0.0007296265102922916, -0.0006312960758805275, -0.0005508275935426354, -0.0004944364773109555, -0.000463644799310714, -0.00045439100358635187, -0.00045806579873897135, -0.00046412908704951406, -0.0004619375104084611, -0.0004459710035007447, -0.00041669560596346855, -0.0003762024862226099, -0.0003253729082643986, -0.00026442279340699315, -0.0001917513000080362, -0.00010595769708743319, -8.863807124726009e-06, 9.204234083881602e-05, 0.00018534269474912435, 0.00025815810658968985, 0.0003012290981132537, 0.0003146732924506068, 0.0003060867020394653, 0.0002853271143976599, 0.00026039520162157714, 0.00023569360200781375, 0.00021166120131965727, 0.00018824869766831398, 0.00016698980471119285, 0.00015021109720692039, 0.00014338600158225745, 0.00015367359446827322, 0.00018434939556755126, 0.00023316880105994642, 0.0002916250959970057, 0.0003461923042777926, 0.0003821814898401499, 0.00039018038660287857, 0.00036993029061704874, 0.00032917241333052516, 0.0002799479116220027, 0.00023424449318554252, 0.00020224860054440796, 0.00018892269872594625, 0.00019241120025981218, 0.00020560830307658762, 0.00021708010172005743, 0.00021532780374400318, 0.00019291549688205123, 0.0001488520938437432, 8.704308129381388e-05, 1.5265599358826876e-05, -5.611162123386748e-05, -0.00011559580161701888, -0.00015384580183308572, -0.00016818339645396918, -0.00015975820133462548, -0.00013350069639272988, -9.587888780515641e-05, -5.347721162252128e-05, -1.0979980288539082e-05, 2.8910129913128912e-05, 6.386639142874628e-05, 9.259516082238406e-05, 0.00011386050027795136, 0.0001266861945623532, 0.0001307461061514914, 0.00012590289406944066, 0.00011135249951621518, 8.661128958920017e-05, 5.1971910579595715e-05, 8.52935863804305e-06, -4.097458077012561e-05, -9.190553100779653e-05, -0.00013992009917274117, -0.00018139960593543947, -0.00021355319768190384, -0.00023421940568368882, -0.00024237719480879605, -0.00023723120102658868, -0.00021894350356888026, -0.000192849402083084, -0.0001655985979596153, -0.0001431877026334405, -0.0001295631955144927, -0.0001261337019968778, -0.0001349117956124246, -0.0001580064999870956, -0.00019630510360002518, -0.00024683738593012094, -0.00030408569728024304, -0.00036269109114073217, -0.0004199274117127061, -0.0004755900881718844, -0.0005287830135785043, -0.0005748606054112315, -0.0006066237110644579, -0.0006235964829102159, -0.0006329757743515074, -0.0006445663166232407, -0.0006696797790937126, -0.0007166501018218696, -0.0007870362023822963, -0.0008751014829613268, -0.0009694540058262646, -0.0010577290086075664, -0.0011331080459058285, -0.0011957630049437284, -0.0012482129968702793, -0.0012934509431943297, -0.0013364680344238877, -0.0013818410225212574, -0.0014331650454550982, -0.0014955130172893405, -0.0015746239805594087, -0.001672841957770288, -0.0017875989433377981, -0.0019122420344501734, -0.002036744961515069, -0.00215139496140182, -0.002249153098091483, -0.002324942033737898, -0.002375097945332527, -0.0024022620636969805, -0.002414870075881481, -0.0024223849177360535, -0.002433832036331296, -0.002455462934449315, -0.0024885479360818863, -0.0025295999366790056, -0.0025726770982146263, -0.0026112119667232037, -0.0026404699310660362, -0.0026578400284051895, -0.0026630819775164127, -0.0026581769343465567, -0.0026473531033843756, -0.0026365420781075954, -0.002632135059684515, -0.002638390054926276, -0.002655948046594858, -0.0026838090270757675, -0.002719548065215349, -0.002759031020104885, -0.0027970969676971436, -0.002828034106642008, -0.0028465520590543747, -0.0028498780447989702, -0.002836742904037237, -0.002807913115248084, -0.0027660659980028868, -0.0027151540853083134, -0.002659175079315901, -0.0026029839646071196, -0.0025513130240142345, -0.0025060900952667, -0.0024668790865689516, -0.0024343039840459824, -0.0024094709660857916, -0.002392357913777232, -0.002381060039624572, -0.0023722751066088676, -0.002363957930356264, -0.0023569019977003336, -0.002351281000301242, -0.0023439289070665836, -0.002330886898562312, -0.002310842974111438, -0.002284236019477248, -0.0022543040104210377, -0.002226267009973526, -0.0022058850154280663, -0.0021961070597171783, -0.0021950840018689632, -0.0021979669108986855, -0.0022008230444043875, -0.0022015569265931845, -0.0021991499233990908, -0.0021913431119173765, -0.0021752279717475176, -0.0021470629144459963, -0.00210470799356699, -0.0020528289023786783, -0.0019999840296804905, -0.001956603955477476, -0.0019311909563839436, -0.0019268520409241319, -0.0019420499447733164, -0.001972106983885169, -0.0020112539641559124, -0.002051983028650284, -0.002084945095703006, -0.0021020439453423023, -0.0021017598919570446, -0.002089075045660138, -0.0020712600089609623, -0.0020559111144393682, -0.0020497310906648636, -0.0020562559366226196, -0.0020748190581798553, -0.002102317987009883, -0.002135191112756729, -0.0021722340025007725, -0.0022136240731924772, -0.0022578579373657703, -0.002301817061379552, -0.0023430739529430866, -0.0023795568849891424, -0.00240946002304554, -0.0024291779845952988, -0.0024352790787816048, -0.002427854109555483, -0.002409328008070588, -0.0023809729609638453, -0.0023442809469997883, -0.00230377702973783, -0.002262749942019582, -0.002223279094323516, -0.0021868920885026455, -0.002151927910745144, -0.002113746013492346, -0.0020680930465459824, -0.0020150430500507355, -0.0019583150278776884, -0.0019018599996343255, -0.001848733052611351, -0.001801377977244556, -0.0017616209806874394, -0.0017302479827776551, -0.0017077600350603461, -0.0016932289581745863, -0.0016836629947647452, -0.0016749639762565494, -0.0016621809918433428, -0.0016402440378442407, -0.0016064710216596723, -0.0015640540514141321, -0.0015198140172287822, -0.0014799600467085838, -0.0014485199935734272, -0.0014271290274336934, -0.0014152920339256525, -0.0014121730346232653, -0.0014143709558993578, -0.001414204016327858, -0.0014031770406290889, -0.0013767719501629472, -0.0013354599941521883, -0.0012828819453716278, -0.0012258300557732582, -0.0011714049614965916, -0.0011246829526498914, -0.0010894290171563625, -0.0010685869492590427, -0.0010644530411809683, -0.0010769510408863425, -0.0011025540297850966, -0.001136137987487018, -0.0011729110265150666, -0.0012088390067219734, -0.0012396760284900665, -0.0012605410302057862, -0.0012669500429183245, -0.0012588989920914173, -0.0012422750005498528, -0.0012261070078238845, -0.0012190600391477346, -0.0012226459803059697, -0.001231892965734005, -0.0012428299523890018, -0.001252150977961719, -0.0012576490407809615, -0.0012569800019264221, -0.0012480859877541661, -0.0012297660578042269, -0.0012024069437757134, -0.0011675619753077626, -0.0011285189539194107, -0.0010912800207734108, -0.0010613050544634461, -0.0010405000066384673, -0.0010288440389558673, -0.0010264849988743663, -0.0010323330061510205, -0.0010425850050523877, -0.001052316976711154, -0.0010580529924482107, -0.001059266971424222, -0.0010554669424891472, -0.0010447270469740033, -0.0010244440054520965, -0.0009943675249814987, -0.0009574941941536963, -0.0009173664730042219, -0.0008781467913649976, -0.0008442819234915078, -0.0008204309269785881, -0.0008105983142741024, -0.0008178526186384261, -0.0008413959876634181, -0.0008744496153667569, -0.000905657303519547, -0.0009222758817486465, -0.0009177360916510224, -0.0008940296829678118, -0.0008561440045014024, -0.0008089853799901903, -0.0007572185131721199, -0.0007068471750244498, -0.0006628197152167559, -0.0006294852937571704, -0.0006130092078819871, -0.0006179522024467587, -0.0006450157961808145, -0.000690320273861289, -0.0007445304072462022, -0.0007944703102111816, -0.0008268278907053173, -0.0008343975059688091, -0.0008171341032721102, -0.0007810196839272976, -0.0007354323170147836, -0.0006906443741172552, -0.0006594035075977445, -0.0006540984031744301, -0.0006809229962527752, -0.0007366897189058363, -0.0008109128102660179, -0.000890917785000056, -0.0009665095712989569, -0.0010310979560017586, -0.0010817890288308263, -0.00111857196316123, -0.0011445990530773997, -0.001166027970612049, -0.001188974012620747, -0.0012186130043119192, -0.0012582970084622502, -0.0013096639886498451, -0.0013704679440706968, -0.001433114055544138, -0.0014883599942550063, -0.0015317229554057121, -0.0015632159775123, -0.0015847160248085856, -0.0016012979904189706, -0.0016211170004680753, -0.0016508459812030196, -0.0016921909991651773, -0.0017411269946023822, -0.0017890880117192864, -0.0018269260181114078, -0.0018474439857527614, -0.0018477089470252395, -0.001829297048971057, -0.0017981469864025712, -0.0017624660395085812, -0.0017335800221189857, -0.0017253250116482377, -0.0017473200568929315, -0.0018020389834418893, -0.0018834959482774138, -0.001979066990315914, -0.0020733659621328115, -0.002151669003069401, -0.0022035480942577124, -0.002221754053607583, -0.0022048470564186573, -0.002161063952371478, -0.002102601109072566, -0.0020436521153897047, -0.0019991800654679537, -0.0019802520982921124, -0.001991905039176345, -0.0020338899921625853, -0.0021019820123910904, -0.0021869600750505924, -0.002274339087307453, -0.002348504960536957, -0.0023967688903212547, -0.0024092679377645254, -0.002384166931733489, -0.002330767922103405, -0.00226222793571651, -0.0021887430921196938, -0.0021159499883651733, -0.002047732938081026, -0.0019899660255759954, -0.0019488839898258448, -0.0019300980493426323, -0.0019386899657547474, -0.00197734497487545, -0.0020436099730432034, -0.002127772895619273, -0.002215903950855136, -0.002294529927894473, -0.002355078002437949, -0.0023939679376780987, -0.0024110940285027027, -0.0024078181013464928, -0.0023875560145825148, -0.0023548200260847807, -0.002313016913831234, -0.002264376962557435, -0.002211394952610135, -0.002157763112336397, -0.002109660068526864, -0.0020722888875752687, -0.002046789973974228, -0.002032618038356304, -0.0020301840268075466, -0.0020377899054437876, -0.002050396054983139, -0.0020633810199797153, -0.0020717340521514416, -0.0020701009780168533, -0.0020535460207611322, -0.0020201990846544504, -0.0019728299230337143, -0.0019161819946020842, -0.0018572249682620168, -0.0018052899977192283, -0.0017675859853625298, -0.0017488249577581882, -0.001748397946357727, -0.0017601459985598922, -0.0017757980385795236, -0.001784797990694642, -0.0017768259858712554, -0.0017449919832870364, -0.0016900500049814582, -0.0016181990504264832, -0.0015349419554695487, -0.0014447709545493126, -0.0013486719690263271, -0.0012460349826142192, -0.0011372639564797282, -0.0010272209765389562, -0.0009241212974302471, -0.0008352852892130613, -0.0007654178771190345, -0.0007155885105021298, -0.0006833733059465885, -0.0006627844995819032, -0.0006436749827116728, -0.0006128025124780834, -0.0005587046034634113, -0.00047891310532577336, -0.0003779719118028879, -0.00026535510551184416, -0.00015018389967735857, -3.9824601117288694e-05, 5.804425018141046e-05, 0.00013913109432905912, 0.0002062185958493501, 0.0002671412948984653, 0.00033176341094076633, 0.00040672539034858346, 0.0004911895957775414, 0.0005790619761683047, 0.0006635115132667124, 0.0007391684921458364, 0.0008035911014303565, 0.0008563151932321489, 0.0008976159733720124, 0.0009306303109042346, 0.0009619647171348333, 0.0009972859406843781, 0.0010401520412415266, 0.0010909880511462688, 0.001148344948887825, 0.001209696987643838, 0.0012703080428764224, 0.0013243269640952349, 0.0013650209875777364, 0.0013869509566575289, 0.0013906649546697736, 0.0013839909806847572, 0.0013787290081381798, 0.0013858979800716043, 0.0014139419654384255, 0.0014658150030300021, 0.001534439972601831, 0.0016071610152721405, 0.0016725610475987196, 0.0017235149862244725, 0.001757442019879818, 0.0017762399511411786, 0.0017859629588201642, 0.0017931950278580189, 0.0018010300118476152, 0.0018097179709002376, 0.0018174239667132497, 0.0018215449526906013, 0.0018202710198238492, 0.0018153010169044137, 0.0018117360305041075, 0.0018128990195691586, 0.0018190910341218114, 0.0018303639953956008, 0.0018464589957147837, 0.0018673569429665804, 0.0018926489865407348, 0.001922045019455254, 0.001954978099092841, 0.0019890109542757273, 0.0020214859396219254, 0.002051080111414194, 0.002079190919175744, 0.002109010936692357, 0.002143062883988023, 0.002179943025112152, 0.002216470893472433, 0.0022488709073513746, 0.0022719870321452618, 0.0022822159808129072, 0.002279631095007062, 0.0022663830313831568, 0.002243734896183014, 0.0022137409541755915, 0.0021817460656166077, 0.0021534000989049673, 0.0021289840806275606, 0.00210845610126853, 0.0020955679938197136, 0.0020949579775333405, 0.002108926884829998, 0.0021378579549491405, 0.0021812659688293934, 0.0022360149305313826, 0.0022971429862082005, 0.0023561979178339243, 0.0024038651026785374, 0.0024324089754372835, 0.0024376490619033575, 0.002419847995042801, 0.0023850470315665007, 0.002342205960303545, 0.0022998868953436613, 0.0022631490137428045, 0.002232349943369627, 0.0022057299502193928, 0.002181808929890394, 0.0021621088963001966, 0.0021487621124833822, 0.0021455700043588877, 0.002157794078812003, 0.002185869961977005, 0.0022271969355642796, 0.0022771479561924934, 0.0023298319429159164, 0.0023774520959705114, 0.002410565037280321, 0.002423064084723592, 0.002415566937997937, 0.002395601011812687, 0.002371269976720214, 0.002345900982618332, 0.0023191110230982304, 0.002287191106006503, 0.0022477370221167803, 0.002204804914072156, 0.0021679119672626257, 0.0021439041011035442, 0.0021331130992621183, 0.0021315061021596193, 0.0021341999527066946, 0.002140012104064226, 0.0021499800495803356, 0.0021660709753632545, 0.002190082101151347, 0.0022211100440472364, 0.0022567769046872854, 0.0022924260701984167, 0.0023228831123560667, 0.002343535888940096, 0.0023506039287894964, 0.0023406059481203556, 0.002313121920451522, 0.0022751770447939634, 0.0022370850201696157, 0.0022072959691286087, 0.002191286999732256, 0.002190682105720043, 0.0022026579827070236, 0.0022202921099960804, 0.002236028900370002, 0.002243337919935584, 0.002239213092252612, 0.002225646050646901, 0.002207903889939189, 0.002191101899370551, 0.002175823086872697, 0.0021593880373984575, 0.0021410530898720026, 0.0021250920835882425, 0.0021194471046328545, 0.002131880959495902, 0.0021643040236085653, 0.0022103500086814165, 0.002259280998259783, 0.0023010449949651957, 0.0023292088881134987, 0.0023403901141136885, 0.0023349360562860966, 0.002317362930625677, 0.0022942449431866407, 0.0022718010004609823, 0.0022556770127266645, 0.002248629927635193, 0.002250378020107746, 0.002260196954011917, 0.0022775379475206137, 0.0023032650351524353, 0.0023375831078737974, 0.0023779980838298798, 0.0024216650053858757, 0.002466941950842738, 0.002512721111997962, 0.002558116102591157, 0.0026019581127911806, 0.002642515115439892, 0.0026781680062413216, 0.00270565296523273, 0.00271885609254241, 0.0027149540837854147, 0.002696353942155838, 0.0026672629173845053, 0.0026321960613131523, 0.0025951829738914967, 0.002560212044045329, 0.0025301610585302114, 0.002508081030100584, 0.0024956720881164074, 0.00249147298745811, 0.002493500942364335, 0.002500335918739438, 0.002512529958039522, 0.0025321058928966522, 0.00256091495975852, 0.0025977089535444975, 0.002637763973325491, 0.002675748895853758, 0.0027070411015301943, 0.0027280698996037245, 0.002737568924203515, 0.0027355600614100695, 0.0027218160685151815, 0.0026977011002600193, 0.0026651991065591574, 0.002628647955134511, 0.0025959359481930733, 0.0025746070314198732, 0.002568929921835661, 0.002576129976660013, 0.0025875219143927097, 0.002595518948510289, 0.002596959937363863, 0.0025924560613930225, 0.0025830899830907583, 0.0025700998958200216, 0.002553957048803568, 0.0025349019560962915, 0.0025126999244093895, 0.0024877830874174833, 0.0024613169953227043, 0.002432529116049409, 0.0024001318961381912, 0.002362082013860345, 0.0023181510623544455, 0.0022706619929522276, 0.00222163088619709, 0.0021733141038566828, 0.0021269419230520725, 0.002083390951156616, 0.00204284000210464, 0.0020034140907227993, 0.0019637190271168947, 0.001923228963278234, 0.0018814780050888658, 0.0018395220395177603, 0.0017985750455409288, 0.001757150050252676, 0.001713122008368373, 0.0016629870515316725, 0.0016037860186770558, 0.001538221025839448, 0.0014734190190210938, 0.001419764943420887, 0.0013858280144631863, 0.0013753559906035662, 0.0013887359527871013, 0.0014204089529812336, 0.0014621280133724213, 0.0015037680277600884, 0.0015370820183306932, 0.0015578060410916805, 0.0015650260029360652, 0.0015604749787598848, 0.0015452899970114231, 0.0015212709549814463, 0.0014938770327717066, 0.0014717200538143516, 0.001462677028030157, 0.0014720519538968801, 0.0015010599745437503, 0.0015497090062126517, 0.0016168319853022695, 0.0016965479589998722, 0.0017798109911382198, 0.0018549349624663591, 0.0019115889444947243, 0.0019429170060902834, 0.0019440300529822707, 0.0019156700000166893, 0.0018648989498615265, 0.0017998990369960666, 0.0017291740514338017, 0.001660587964579463, 0.001602404983714223, 0.00156251504085958, 0.0015452089719474316, 0.001548529020510614, 0.0015655539464205503, 0.0015883210580796003, 0.0016077449545264244, 0.001615412998944521, 0.001606942038051784, 0.0015822279965505004, 0.0015451499493792653, 0.00150351005140692, 0.0014652470126748085, 0.0014329280238598585, 0.0014039929956197739, 0.001373586943373084, 0.0013367390492931008, 0.0012900360161438584, 0.0012322829570621252, 0.0011646579951047897, 0.0010903090005740523, 0.0010139050427824259, 0.0009413068764843047, 0.0008773956215009093, 0.0008237048168666661, 0.0007798384758643806, 0.0007463057991117239, 0.00072345050284639, 0.0007117001223377883, 0.0007078577182255685, 0.0007008604006841779, 0.0006798147805966437, 0.0006410133792087436, 0.0005899015231989324, 0.0005391634767875075, 0.0005032895714975893, 0.0004899551859125495, 0.0004952059825882316, 0.0005078972899354994, 0.0005175371188670397, 0.0005182902095839381, 0.0005081577110104263, 0.0004879925982095301, 0.00046020428999327123, 0.0004305063921492547, 0.0004072909941896796, 0.00039795361226424575, 0.0004062411026097834, 0.00042842200491577387, 0.0004564985865727067, 0.0004829817044083029, 0.0005035297945141792, 0.0005173927056603134, 0.0005251879920251667, 0.0005266816006042063, 0.0005221018218435347, 0.0005132147925905883, 0.0005011826287955046, 0.00048431329196318984, 0.00045883809798397124, 0.00042384350672364235, 0.00038402850623242557, 0.0003486856003291905, 0.00032910049776546657, 0.00033356848871335387, 0.00036406650906428695, 0.00041654478991404176, 0.00048376841004937887, 0.0005590189248323441, 0.0006357547244988382, 0.0007079694769345224, 0.0007699084817431867, 0.0008167537744157016, 0.0008454715716652572, 0.0008547732140868902, 0.0008476481889374554, 0.00083099992480129, 0.0008124219020828605, 0.0007972979219630361, 0.0007867987151257694, 0.0007805207278579473, 0.0007818524027243257, 0.0007986798882484436, 0.0008377170888707042, 0.000899348990060389, 0.0009752807090990245, 0.0010519439820200205, 0.0011182710295543075, 0.0011686719954013824, 0.001201701001264155, 0.0012174779549241066, 0.0012173899449408054, 0.0012053040554746985, 0.0011864859843626618, 0.0011672769905999303, 0.0011536739766597748, 0.0011485860450193286, 0.0011524149449542165, 0.0011629400542005897, 0.0011782570509240031, 0.001198449986986816, 0.0012241400545462966, 0.001254384987987578, 0.0012886460172012448, 0.001326733035966754, 0.0013677410315722227, 0.001408752053976059, 0.0014467800501734018, 0.0014806570252403617, 0.0015127570368349552, 0.0015477919951081276, 0.0015896830009296536, 0.0016402980545535684, 0.0016972189769148827, 0.0017529899487271905, 0.0018002010183408856, 0.001835947041399777, 0.001862318953499198, 0.001883444027043879, 0.0019015530124306679, 0.0019181070383638144, 0.001933988998644054, 0.0019486000528559089, 0.0019620959646999836, 0.001975849037989974, 0.0019917921163141727, 0.002011111006140709, 0.0020318040624260902, 0.002050091978162527, 0.0020602659787982702, 0.0020576389506459236, 0.0020429259166121483, 0.0020224980544298887, 0.002005469985306263, 0.002000499051064253, 0.0020112579222768545, 0.00203598290681839, 0.002070765011012554, 0.0021095150150358677, 0.0021443860605359077, 0.0021704519167542458, 0.0021875249221920967, 0.002198433969169855, 0.0022051450796425343, 0.002205335069447756, 0.002194528002291918, 0.0021698379423469305, 0.0021321489475667477, 0.0020872640889137983, 0.0020441939122974873, 0.0020100129768252373, 0.0019862910266965628, 0.0019713970832526684, 0.0019633180927485228, 0.0019611939787864685, 0.0019626340363174677, 0.0019633739721029997, 0.0019609429873526096, 0.001954232109710574, 0.00194352597463876, 0.0019299420528113842, 0.001915876055136323, 0.0019039269536733627, 0.001895583001896739, 0.001889607054181397, 0.0018825649749487638, 0.0018706240225583315, 0.0018515799893066287, 0.0018249599961563945, 0.001790364971384406, 0.0017472639447078109, 0.001694898004643619, 0.001633396022953093, 0.0015641739591956139, 0.0014890050515532494, 0.0014096059603616595, 0.0013278849655762315, 0.001245431019924581, 0.0011641000164672732, 0.0010864690411835909, 0.0010157240321859717, 0.0009547374211251736, 0.0009044036269187927, 0.0008609734941273928, 0.0008176951087079942, 0.0007673790096305311, 0.0007071312866173685, 0.0006417579133994877, 0.0005791173898614943, 0.0005257510929368436, 0.00048284430522471666, 0.0004459033953025937, 0.00040800400893203914, 0.00036239810287952423, 0.00030793860787525773, 0.00024928589118644595, 0.00019327409972902387, 0.00014451669994741678, 0.00010058849875349551, 5.552470975089818e-05, 4.011497821920784e-06, -5.763953959103674e-05, -0.00013191609468776733, -0.00021884069428779185, -0.0003160329069942236, -0.00041915950714610517, -0.0005238379817456007, -0.0006293985061347485, -0.0007378999143838882, -0.0008496204973198473, -0.0009609936969354749, -0.0010679200058802962, -0.0011679379967972636, -0.001258883043192327, -0.0013400099705904722, -0.0014123870059847832, -0.0014765169471502304, -0.0015320410020649433, -0.0015795649960637093, -0.0016223849961534142, -0.001667537959292531, -0.0017221589805558324, -0.0017901830142363906, -0.0018708299612626433, -0.001958967885002494, -0.0020473420154303312, -0.002129774075001478, -0.002203725976869464, -0.0022689090110361576, -0.002326336922124028, -0.0023784060031175613, -0.0024313319008797407, -0.0024935940746217966, -0.0025739639531821012, -0.0026762390043586493, -0.0027981260791420937, -0.0029325371142476797, -0.0030691269785165787, -0.003197154961526394, -0.003305637976154685, -0.003385107032954693, -0.0034325208980590105, -0.003452124074101448, -0.003453363897278905, -0.0034451859537512064, -0.003435299964621663, -0.0034302358981221914, -0.003433859907090664, -0.0034487079828977585, -0.0034733859356492758, -0.00350114400498569, -0.003522861050441861, -0.0035304520279169083, -0.003518274985253811, -0.003483884036540985, -0.0034278349485248327, -0.0033543019089847803, -0.003270169021561742, -0.0031856331042945385, -0.0031131869181990623, -0.003064991906285286, -0.003047896083444357, -0.003060064045712352, -0.0030931918881833553, -0.003134174970909953, -0.0031686059664934874, -0.003186027053743601, -0.0031799960415810347, -0.003149759955704212, -0.003099554916843772, -0.003034787019714713, -0.002960389945656061, -0.002880251035094261, -0.002799978945404291, -0.002723750891163945, -0.002653698902577162, -0.0025914038997143507, -0.0025356169790029526, -0.0024837451055645943, -0.002431974047794938, -0.002376137999817729, -0.0023124380968511105, -0.0022409209050238132, -0.00216692709363997, -0.0020975000225007534, -0.002040558960288763, -0.002002107910811901, -0.0019846290815621614, -0.001984952948987484, -0.0019967169500887394, -0.0020120630506426096, -0.002020864048972726, -0.0020146858878433704, -0.0019847380463033915, -0.0019260910339653492, -0.0018430879572406411, -0.0017464139964431524, -0.0016484089428558946, -0.0015598329482600093, -0.0014882610412314534, -0.001436920021660626, -0.0014069429598748684, -0.0013971710577607155, -0.0014042180264368653, -0.0014240610180422664, -0.0014524719445034862, -0.001485339947976172, -0.0015178140019997954, -0.0015456960536539555, -0.0015660549979656935, -0.0015786669682711363, -0.0015839299885556102, -0.0015831280034035444, -0.0015791900223121047, -0.0015737010398879647, -0.0015671560540795326, -0.0015583679778501391, -0.001544423052109778, -0.0015201680362224579, -0.0014825549442321062, -0.0014334189472720027, -0.001377503969706595, -0.001322875963523984, -0.001277719042263925, -0.0012462950544431806, -0.0012289440492168069, -0.001222398946993053, -0.0012209919514134526, -0.0012194280279800296, -0.0012125270441174507, -0.0011960120173171163, -0.0011668310035020113, -0.0011247099610045552, -0.0010744499741122127, -0.0010247670579701662, -0.0009864730527624488, -0.0009668786078691483, -0.0009663187083788216, -0.0009790905751287937, -0.0009978157468140125, -0.0010166219435632229, -0.0010344210313633084, -0.0010533110471442342, -0.00107634998857975, -0.0011057129595428705, -0.0011413940228521824, -0.0011794640449807048, -0.001213481999002397, -0.0012395030353218317, -0.0012559030437842011, -0.0012628840049728751, -0.0012614179868251085, -0.0012531219981610775, -0.0012399699771776795, -0.0012256479822099209, -0.0012133950367569923, -0.001205479959025979, -0.0012017360422760248, -0.0011989700142294168, -0.0011938050156459212, -0.0011846680426970124, -0.0011741049820557237, -0.0011664109770208597, -0.0011641030432656407, -0.0011673930566757917, -0.0011755089508369565, -0.0011872570030391216, -0.0011991820065304637, -0.0012062479509040713, -0.0012044110335409641, -0.0011938420357182622, -0.0011781740467995405, -0.0011630839435383677, -0.0011555190430954099, -0.001161981956101954, -0.0011868010042235255, -0.0012299399822950363, -0.0012875819811597466, -0.001351882005110383, -0.0014133789809420705, -0.0014642470050603151, -0.0014985930174589157, -0.0015129459789022803, -0.0015065600164234638, -0.0014804430538788438, -0.0014372889418154955, -0.0013814809499308467, -0.001320132054388523, -0.0012637339532375336, -0.0012231790460646152, -0.0012054400285705924, -0.0012115909485146403, -0.0012376379454508424, -0.0012768539600074291, -0.0013213210040703416, -0.001359916990622878, -0.0013815580168738961, -0.0013818050501868129, -0.001359208021312952, -0.0013161799870431423, -0.001263994025066495, -0.0012159580364823341, -0.0011815590551123023, -0.001164378016255796, -0.0011627740459516644, -0.0011737559689208865, -0.0011952159693464637, -0.0012238039635121822, -0.0012545989593490958, -0.0012831309577450156, -0.001307378988713026, -0.001326987985521555, -0.0013432910200208426, -0.0013558289501816034, -0.001361698959954083, -0.0013568829745054245, -0.0013378469739109278, -0.0013019329635426402, -0.0012507779756560922, -0.0011912459740415215, -0.0011333329603075981, -0.0010850969702005386, -0.0010494779562577605, -0.0010249640326946974, -0.0010066879913210869, -0.000987798091955483, -0.0009616594761610031, -0.0009247052948921919, -0.000877786020282656, -0.0008269384270533919, -0.0007801178144291043, -0.0007435310981236398, -0.0007202508277259767, -0.0007096994086168706, -0.0007087389240041375, -0.0007122256211005151, -0.0007133521721698344, -0.0007059324998408556, -0.0006842418806627393, -0.0006426143809221685, -0.0005773936281912029, -0.0004900341737084091, -0.00038826558738946915, -0.0002826665004249662, -0.00018388210446573794, -9.973996202461421e-05, -3.3199590689036995e-05, 1.758954931574408e-05, 5.7990531786344945e-05, 9.550640970701352e-05, 0.0001374335988657549, 0.0001869925035862252, 0.0002434271009406075, 0.00030362969846464694, 0.0003631967992987484, 0.000420011900132522, 0.00047380028991028666, 0.0005237736040726304, 0.0005703294882550836, 0.0006153009016998112, 0.0006586245144717395, 0.0006982092745602131, 0.0007308732019737363, 0.0007555445190519094, 0.0007759046857245266, 0.0007984716212376952, 0.0008291663252748549, 0.0008710926049388945, 0.0009226276888512075, 0.0009784403955563903, 0.0010304399766027927, 0.001072583021596074, 0.001103356946259737, 0.0011237780563533306, 0.0011360079515725374, 0.0011450620368123055, 0.001156045007519424, 0.0011726190568879247, 0.0011954159708693624, 0.0012211799621582031, 0.0012452630326151848, 0.001261575031094253, 0.0012666239636018872, 0.0012622399954125285, 0.0012549830134958029, 0.001253715017810464, 0.0012656720355153084, 0.0012951670214533806, 0.001342238043434918, 0.0014024339616298676, 0.001466228044591844, 0.0015225299866870046, 0.0015621479833498597, 0.0015791590558364987, 0.001571101020090282, 0.0015395720256492496, 0.0014922210248187184, 0.0014421379892155528, 0.0014018589863553643, 0.0013786100316792727, 0.0013714369852095842, 0.0013767300406470895, 0.0013923969818279147, 0.0014148550108075142, 0.0014397019986063242, 0.0014652980025857687, 0.0014926400035619736, 0.0015222750371322036, 0.0015498159918934107, 0.0015682120574638247, 0.0015726200072094798, 0.0015606350498273969, 0.001532503985799849, 0.0014913029735907912, 0.00144409597851336, 0.0014005639823153615, 0.0013676759554073215, 0.0013494410086423159, 0.001349181984551251, 0.0013680249685421586, 0.0014047779841348529, 0.001455932972021401, 0.0015172340208664536, 0.0015842110151425004, 0.0016505050007253885, 0.0017065979773178697, 0.0017422409728169441, 0.0017499929526820779, 0.0017266500508412719, 0.0016746210167184472, 0.001604274963028729, 0.001529813976958394, 0.0014624020550400019, 0.0014088860480114818, 0.0013723080046474934, 0.0013535449979826808, 0.0013516199542209506, 0.0013649150496348739, 0.0013907949905842543, 0.0014261320466175675, 0.0014655840350314975, 0.0015034930547699332, 0.0015349100576713681, 0.001556989038363099, 0.0015688349958509207, 0.0015703310491517186, 0.0015641150530427694, 0.0015565870562568307, 0.0015555189456790686, 0.001566688995808363, 0.0015923379687592387, 0.001630250015296042, 0.0016757410485297441, 0.0017235289560630918, 0.0017687149811536074, 0.0018070780206471682, 0.0018347450532019138, 0.001849589985795319, 0.0018522520549595356, 0.0018452489748597145, 0.001832098001614213, 0.0018192409770563245, 0.0018123829504474998, 0.0018108610529452562, 0.001810761052183807, 0.001810310990549624, 0.0018113020341843367, 0.0018161919433623552, 0.0018248920096084476, 0.0018348220037296414, 0.0018447489710524678, 0.0018564859637990594, 0.001873609027825296, 0.0018991270335391164, 0.001934112049639225, 0.0019748059567064047, 0.0020160500425845385, 0.002052746945992112, 0.0020815751049667597, 0.0021026390604674816, 0.002119662007316947, 0.0021379480604082346, 0.0021601750049740076, 0.0021869689226150513, 0.002216761000454426, 0.0022475249134004116, 0.0022768990602344275, 0.0023029448930174112, 0.0023250929079949856, 0.0023459559306502342, 0.0023708681110292673, 0.0024023118894547224, 0.0024366439320147038, 0.002468547085300088, 0.002494517946615815, 0.002511925995349884, 0.0025175679475069046, 0.0025116349570453167, 0.002499595982953906, 0.0024890799541026354, 0.0024856249801814556, 0.0024897539988160133, 0.0024987279903143644, 0.002508854027837515, 0.002512664068490267, 0.002500783884897828, 0.002468511927872896, 0.0025361289735883474, 0.002471808111295104, 0.002402741927653551, 0.0023358329199254513, 0.0022766978945583105, 0.0022280460689216852, 0.0021905770990997553, 0.0021642730571329594, 0.002146294107660651, 0.00213194009847939, 0.0021179961040616035, 0.0021025550086051226, 0.0020815960597246885, 0.0020489979069679976, 0.0020002119708806276, 0.0019362489692866802, 0.0018629459664225578, 0.0017865749541670084, 0.0017116230446845293, 0.0016428929520770907, 0.0015844169538468122, 0.0015396219678223133, 0.0015115919522941113, 0.0015032689552754164, 0.0015128159429877996, 0.0015310420421883464, 0.00154819805175066, 0.0015570300165563822, 0.00155361695215106, 0.0015368950553238392, 0.0015059680445119739, 0.0014625820331275463, 0.0014123220462352037, 0.001364251016639173, 0.0013292660005390644, 0.0013156679924577475, 0.0013246439630165696, 0.0013522569788619876, 0.0013911649584770203, 0.0014318459434434772, 0.0014662969624623656, 0.00149031903129071, 0.0015039050485938787, 0.0015100289601832628, 0.0015134729910641909, 0.0015201859641820192, 0.0015332140028476715, 0.001549907959997654, 0.0015656229807063937, 0.0015775479841977358, 0.0015856409445405006, 0.0015908180503174663, 0.0015923569444566965, 0.001590820960700512, 0.0015893559902906418, 0.0015905230538919568, 0.0015962700126692653, 0.0016087000258266926, 0.0016286630416288972, 0.0016527960542589426, 0.0016732889926061034, 0.001682383008301258, 0.0016736099496483803, 0.0016436469741165638, 0.0015965759521350265, 0.0015450200298801064, 0.0015045090112835169, 0.0014848409919068217, 0.0014880510279908776, 0.0015076090348884463, 0.0015334079507738352, 0.001554433023557067, 0.0015621799975633621, 0.001554075046442449, 0.001532873953692615, 0.001505495049059391, 0.0014794700546190143, 0.0014595210086554289, 0.001447828020900488, 0.001442415057681501, 0.0014396719634532928, 0.0014372760197147727, 0.0014345899689942598, 0.001430902979336679, 0.001424705027602613, 0.0014152670046314597, 0.0014022879768162966, 0.001386065036058426, 0.0013674870133399963, 0.0013478449545800686, 0.0013286860194057226, 0.0013107949635013938, 0.001293409033678472, 0.001275280024856329, 0.001254018978215754, 0.0012274719774723053, 0.0011953309876844287, 0.001159181003458798, 0.0011186939664185047, 0.0010732610244303942, 0.0010243209544569254, 0.0009751038742251694, 0.000930700683966279, 0.0008976758108474314, 0.000882653403095901, 0.0008922960259951651, 0.0009284929255954921, 0.000984886079095304, 0.0010502260411158204, 0.0011128400219604373, 0.001161359017714858, 0.001187094021588564, 0.0011864149710163474, 0.0011619050055742264, 0.0011218000436201692, 0.0010778489522635937, 0.0010423989733681083, 0.00102549500297755, 0.0010312719969078898, 0.0010586290154606104, 0.0011032610200345516, 0.0011600169818848372, 0.0012265309924259782, 0.0013023769715800881, 0.0013852600241079926, 0.0014690370298922062, 0.0015430960338562727, 0.0015956100542098284, 0.0016170500312000513, 0.0016041089547798038, 0.0015633460134267807, 0.0015087570063769817, 0.0014568079495802522, 0.0014221209567040205, 0.0014096900122240186, 0.0014123390428721905, 0.0014196040574461222, 0.001425144961103797, 0.0014298040186986327, 0.0014378350460901856, 0.0014516890514642, 0.0014713000273332, 0.0014927230076864362, 0.001509596942923963, 0.0015167760429903865, 0.0015138749731704593, 0.0015039639547467232, 0.0014911979669705033, 0.0014791389694437385, 0.0014689459931105375, 0.0014574190136045218, 0.0014389059506356716, 0.001408530049957335, 0.0013642499689012766, 0.001307999948039651, 0.0012460009893402457, 0.0011876419885084033, 0.001139865955337882, 0.0011031939648091793, 0.0010747499763965607, 0.0010519339703023434, 0.0010331739904358983, 0.00101629295386374, 0.0009987709345296025, 0.0009772722842171788, 0.0009488461073487997, 0.0009128397796303034, 0.0008700307225808501, 0.0008212748798541725, 0.0007680932176299393, 0.0007138624205254018, 0.0006623915978707373, 0.0006146114901639521, 0.0005696169100701809, 0.0005276828887872398, 0.0004903092049062252, 0.0004585440910886973, 0.0004328495997469872, 0.000411490211263299, 0.000391566805774346, 0.00037106600939296186, 0.0003494161937851459, 0.00032740310416556895, 0.0003051588137168437, 0.00028178931097500026, 0.0002563243906479329, 0.00022684529540129006, 0.00019382679602131248, 0.00015902440645731986, 0.00012146579683758318, 7.845636719139293e-05, 2.7553749532671645e-05, -3.2989741157507524e-05, -0.00010328060307074338, -0.0001825438957894221, -0.00026756711304187775, -0.00034976049209944904, -0.00041990779573097825, -0.00047500801156274974, -0.0005200189189054072, -0.0005630567902699113, -0.0006092634284868836, -0.000660211022477597, -0.0007131061283871531, -0.00076215312583372, -0.0008038742234930396, -0.0008385683177039027, -0.0008689644746482372, -0.0008993832161650062, -0.000931602728087455, -0.0009630008134990931, -0.0009878157870844007, -0.0010050969431176782, -0.0010185909923166037, -0.0010310140205547214, -0.0010435000294819474, -0.0010567860445007682, -0.001071296981535852, -0.0010887030512094498, -0.0011115840170532465, -0.0011421709787100554, -0.0011829710565507412, -0.0012350310571491718, -0.0012974359560757875, -0.001365924021229148, -0.0014337570173665881, -0.0014953690115362406, -0.0015473259845748544, -0.0015899139689281583, -0.0016269549960270524, -0.0016629910096526146, -0.0017015580087900162, -0.0017431889427825809, -0.0017857420025393367, -0.0018273070454597473, -0.0018658350454643369, -0.0019009719835594296, -0.0019351090304553509, -0.0019741379655897617, -0.0020236950367689133, -0.0020861730445176363, -0.002159788040444255, -0.002239326946437359, -0.002318908926099539, -0.0023944799322634935, -0.002463317010551691, -0.002519587054848671, -0.0025579710491001606, -0.002578645944595337, -0.0025855349376797676, -0.002585724927484989, -0.0025854650884866714, -0.0025860678870230913, -0.0025863531045615673, -0.0025865440256893635, -0.0025888129603117704, -0.0025962560903280973, -0.0026089639868587255, -0.0026227240450680256, -0.002632681978866458, -0.0026353299617767334, -0.0026273969560861588, -0.0026078480295836926, -0.0025806839112192392, -0.002553770085796714, -0.002535673091188073, -0.002532840007916093, -0.0025468599051237106, -0.002575397025793791, -0.002612855052575469, -0.002649361966177821, -0.002674063900485635, -0.002680771052837372, -0.002670814050361514, -0.002650290960446, -0.002627322915941477, -0.002611452015116811, -0.002610132098197937, -0.002625561086460948, -0.002652958035469055, -0.002683660015463829, -0.0027117719873785973, -0.002735756104812026, -0.0027547660283744335, -0.002767707919701934, -0.0027727459091693163, -0.0027684590313583612, -0.002755572088062763, -0.002736492082476616, -0.0027160081081092358, -0.0027009700424969196, -0.0026950330939143896, -0.0026971730403602123, -0.0027043360751122236, -0.0027127598877996206, -0.0027203999925404787, -0.002726695965975523, -0.002729235915467143, -0.0027247590478509665, -0.002714558970183134, -0.0027039649430662394, -0.002697665011510253, -0.002696847077459097, -0.002699580043554306, -0.0027036629617214203, -0.0027077309787273407, -0.00270866509526968, -0.0027012780774384737, -0.002681101905182004, -0.0026456268969923258, -0.0025967040564864874, -0.002540129004046321, -0.002482543932273984, -0.0024264189414680004, -0.0023711149115115404, -0.002317958977073431, -0.0022663769777864218, -0.0022119549103081226, -0.00214834394864738, -0.002072240924462676, -0.001984850037842989, -0.0018901580478996038, -0.00179477094206959, -0.0017041109967976809, -0.0016205300344154239, -0.001543074962683022, -0.00147058698348701, -0.0014032910112291574, -0.0013387450017035007, -0.0012714120093733072, -0.0011970560299232602, -0.0011164259631186724, -0.001033973996527493, -0.0009571692207828164, -0.0008945284062065184, -0.000848504074383527, -0.0008116269018501043, -0.000771409017033875, -0.0007170977187342942, -0.0006435901741497219, -0.0005570029024966061, -0.000472285901196301, -0.0004026136011816561, -0.0003533062990754843, -0.0003202912921551615, -0.00029322190675884485, -0.0002605268091429025, -0.00021577930601779372, -0.00016150949522852898, -0.00010331650264561176, -4.579799860948697e-05, 8.43388625071384e-06, 5.794207027065568e-05, 0.00010142139944946393, 0.0001367821969324723, 0.00016178039368242025, 0.00017634080722928047, 0.00018102480680681765, 0.0001791592949302867, 0.0001772052055457607, 0.00018168629321735352, 0.00019750850333366543, 0.00022759829880669713, 0.00027039251290261745, 0.00031837349524721503, 0.0003621916112024337, 0.00039441880653612316, 0.00041054238681681454, 0.0004079499049112201, 0.00038477679481729865, 0.0003422138106543571, 0.00028621978708542883, 0.00022637929941993207, 0.0001708899944787845, 0.0001242636062670499, 8.860244997777045e-05, 6.655706965830177e-05, 6.0819031205028296e-05, 7.341984746744856e-05, 0.00010398789891041815, 0.0001488940033596009, 0.00020303629571571946, 0.00025975549942813814, 0.00031105391099117696, 0.000348379195202142, 0.00036530778743326664, 0.0003600098134484142, 0.0003361554117873311, 0.0003028007922694087, 0.0002706455998122692, 0.0002488919999450445, 0.00024268169363494962, 0.00025261170230805874, 0.0002771822037175298, 0.00031199160730466247, 0.00035120180109515786, 0.00038948480505496264, 0.0004214702930767089, 0.00044234629604034126, 0.000450238207122311, 0.0004460891941562295, 0.00043203160748817027, 0.0004105516127310693, 0.0003849597997032106, 0.0003599667106755078, 0.0003395084058865905, 0.0003242740058340132, 0.00031360049615614116, 0.00030882429564371705, 0.00031497079180553555, 0.00033823520061559975, 0.00037920678732916713, 0.00043217488564550877, 0.0004898605984635651, 0.0005462553817778826, 0.0005975943058729172, 0.0006419899873435497, 0.0006782026030123234, 0.0007053983863443136, 0.0007260958082042634, 0.0007433568243868649, 0.0007596263894811273, 0.0007766098133288324, 0.0007958872010931373, 0.0008191317901946604, 0.000846690614707768, 0.0008781838114373386, 0.000910807226318866, 0.0009398068068549037, 0.0009613275760784745, 0.0009755890932865441, 0.0009854089003056288, 0.0009921400342136621, 0.000995840411633253, 0.0009969264501705766, 0.0009975781431421638, 0.0010014210129156709, 0.0010115830227732658, 0.0010279440321028233, 0.0010475609451532364, 0.0010672119678929448, 0.0010843840427696705, 0.001100150984711945, 0.0011174400569871068, 0.0011381739750504494, 0.0011629960499703884, 0.0011912989430129528, 0.0012213969603180885, 0.0012509759981185198, 0.0012771639740094543, 0.0013000640319660306, 0.0013224680442363024, 0.0013461810303851962, 0.0013716289540752769, 0.0013970589498057961, 0.0014190439833328128, 0.0014332480495795608, 0.0014347400283440948, 0.001419964013621211, 0.0013879219768568873, 0.0013404929777607322, 0.001284328056499362, 0.0012292159954085946, 0.0011830959701910615, 0.0011486930307000875, 0.001124221016652882, 0.0011067199520766735, 0.0010945559479296207, 0.0010872009443119168, 0.0010824409546330571, 0.0010773279936984181, 0.0010686690220609307, 0.0010516990441828966, 0.0010231209453195333, 0.0009828356560319662, 0.0009348795283585787, 0.0008873431943356991, 0.000849153904709965, 0.0008248297963291407, 0.0008139425772242248, 0.0008140148129314184, 0.0008201554883271456, 0.0008267508237622678, 0.0008276687003672123, 0.0008198869181796908, 0.0008054591016843915, 0.0007889232947491109, 0.0007737486739642918, 0.0007607184816151857, 0.0007474425947293639, 0.0007302596932277083, 0.0007072241278365254, 0.0006791047053411603, 0.0006491307867690921, 0.0006227078847587109, 0.0006066735950298607, 0.0006056796992197633, 0.0006197700276970863, 0.0006441309815272689, 0.000670741603244096, 0.0006930454983375967, 0.0007088548154570162, 0.0007190598989836872, 0.0007245686138048768, 0.0007257848046720028, 0.0007225790759548545, 0.0007129762088879943, 0.0006957696750760078, 0.0006731324829161167, 0.0006507502985186875, 0.0006355039076879621, 0.0006308251176960766, 0.000635010888800025, 0.000642819213680923, 0.0006491141975857317, 0.0006517897127196193, 0.0006521110772155225, 0.0006523974006995559, 0.0006528561934828758, 0.0006522922194562852, 0.0006505653145723045, 0.0006482630269601941, 0.000644817715510726, 0.0006386762834154069, 0.0006268147844821215, 0.0006069712108001113, 0.0005796807818114758, 0.0005493854987435043, 0.0005227671936154366, 0.0005050196195952594, 0.0004986092098988593, 0.0005017779185436666, 0.0005092048086225986, 0.0005156744737178087, 0.0005177850252948701, 0.0005137777770869434, 0.0005037744995206594, 0.0004892416764050722, 0.0004739614960271865, 0.0004646650922950357, 0.00046701999963261187, 0.0004809334932360798, 0.0005024566198699176, 0.0005245988140814006, 0.0005392414168454707, 0.0005398516077548265, 0.0005222958279773593, 0.0004855860024690628, 0.00043141678906977177, 0.0003632715088315308, 0.0002882078115362674, 0.00021730859589297324, 0.0001629312027944252, 0.00013308429333847016, 0.0001276636030524969, 0.0001386402000207454, 0.00015654609887860715, 0.00017353940347675234, 0.0001827944943215698, 0.0001777261059032753, 0.0001536603958811611, 0.00010950739670079201, 4.784912016475573e-05, -2.411497916909866e-05, -9.475604019826278e-05, -0.00015094449918251485, -0.0001838830066844821, -0.00019268569303676486, -0.00018268860003445297, -0.00016250509361270815, -0.00014246150385588408, -0.0001307776983594522, -0.0001313545071752742, -0.00014491050387732685, -0.00017062720144167542, -0.00020772080461028963, -0.0002548912016209215, -0.00031098880572244525, -0.000374751805793494, -0.00044286780757829547, -0.0005104125011712313, -0.0005721739144064486, -0.000624392821919173, -0.0006646753172390163, -0.0006914149853400886, -0.0007056380272842944, -0.0007106941775418818, -0.0007096006884239614, -0.0007041615899652243, -0.0006974833086133003, -0.0006948587251827121, -0.0007002452039159834, -0.0007156403153203428, -0.0007410508114844561, -0.0007730770739726722, -0.0008052384946495295, -0.0008339608903042972, -0.0008611034718342125, -0.0008902428089641035, -0.0009234645985998213, -0.0009614331065677106, -0.0010040940251201391, -0.001049994956701994, -0.0010950060095638037, -0.0011342900106683373, -0.0011649980442598462, -0.0011859890073537827, -0.0011975979432463646, -0.0012021169532090425, -0.0012043289607390761, -0.0012089989613741636, -0.0012188920518383384, -0.0012350049801170826, -0.0012578510213643312, -0.0012869540369138122, -0.0013204619754105806, -0.0013555879704654217, -0.0013894770527258515, -0.0014182280283421278, -0.001437898026779294, -0.0014474720228463411, -0.0014472639886662364, -0.0014383799862116575, -0.0014225230552256107, -0.0014030060265213251, -0.0013848779490217566, -0.0013747930061072111, -0.0013783229514956474, -0.0013972800225019455, -0.0014292499981820583, -0.0014683339977636933, -0.0015063530299812555, -0.0015345830470323563, -0.0015466429758816957, -0.0015409709885716438, -0.0015211020363494754, -0.0014942940324544907, -0.0014687289949506521, -0.0014521100092679262, -0.0014502699486911297, -0.001464611035771668, -0.0014905829448252916, -0.0015213609440252185, -0.0015521720051765442, -0.0015791610348969698, -0.0015989280072972178, -0.001609132974408567, -0.0016087860567495227, -0.0015990269603207707, -0.0015825110021978617, -0.0015634950250387192, -0.0015465799951925874, -0.0015356129733845592, -0.0015328139998018742, -0.0015380550175905228, -0.0015484020113945007, -0.0015585989458486438, -0.0015624839579686522, -0.0015554600395262241, -0.0015370500041171908, -0.001510679954662919, -0.0014824720565229654, -0.0014585769968107343, -0.001443524961359799, -0.0014397440245375037, -0.0014478149823844433, -0.001467050053179264, -0.0014952949713915586, -0.0015284910332411528, -0.001560903969220817, -0.0015878280391916633, -0.0016079730121418834, -0.0016203440027311444, -0.0016243299469351768, -0.0016206289874389768, -0.0016095240134745836, -0.001590974978171289, -0.0015665109967812896, -0.0015391570050269365, -0.0015115380520001054, -0.0014857869828119874, -0.0014645300107076764, -0.0014491919428110123, -0.0014392950106412172, -0.0014335350133478642, -0.001430358039215207, -0.0014280830509960651, -0.0014248780207708478, -0.0014185949694365263, -0.0014078839449211955, -0.0013930719578638673, -0.001376052969135344, -0.001359835034236312, -0.0013487250544130802, -0.0013476320309564471, -0.0013587960274890065, -0.0013793959515169263, -0.0014048860175535083, -0.001432031043805182, -0.0014592099469155073, -0.0014858089853078127, -0.0015096679562702775, -0.001525920000858605, -0.0015290100127458572, -0.0015137499431148171, -0.0014787099789828062, -0.0014285369543358684, -0.0013712210347875953, -0.0013165880227461457, -0.0012720059603452682, -0.0012403189903125167, -0.0012197090545669198, -0.0012047929922118783, -0.001189720002003014, -0.0011708870297297835, -0.0011469230521470308, -0.0011175289982929826, -0.0010851819533854723, -0.0010539799695834517, -0.0010273449588567019, -0.0010051439749076962, -0.0009823365835472941, -0.0009515826241113245, -0.0009081725729629397, -0.0008524404838681221, -0.0007898187031969428, -0.0007290840148925781, -0.0006780594121664762, -0.0006413740920834243, -0.0006198415067046881, -0.000609046604949981, -0.0006009726203046739, -0.0005870900931768119, -0.0005610599182546139, -0.0005196061101742089, -0.00046360859414562583, -0.0003981080953963101, -0.000330818205839023, -0.00027002449496649206, -0.00022307300241664052, -0.00019331950170453638, -0.00017831919831223786, -0.000170406507095322, -0.0001593056949786842, -0.00013707380276173353, -0.00010173750342801213, -5.5882250308059156e-05, -3.461605047050398e-06, 5.163608875591308e-05, 0.0001061868024407886, 0.00015883840387687087, 0.00021068229398224503, 0.00026405180688016117, 0.00031988040427677333, 0.0003750429896172136, 0.0004231393104419112, 0.00045813500764779747, 0.0004771155072376132, 0.00048184310435317457, 0.0004768928047269583, 0.00046709980233572423, 0.0004572891048155725, 0.00045079929986968637, 0.0004469993873499334, 0.0004437530878931284, 0.000440720294136554, 0.00043981391354463995, 0.0004429846885614097, 0.00045132500235922635, 0.0004633872886188328, 0.0004754354013130069, 0.00048398779472336173, 0.0004866599047090858, 0.00048276889720000327, 0.00047315031406469643, 0.0004595619975589216, 0.0004448390973266214, 0.0004321922024246305, 0.0004235199885442853, 0.00041778350714594126, 0.0004128023865632713, 0.00040556499152444303, 0.0003933511907234788, 0.00037523091305047274, 0.0003523858031257987, 0.0003274212940596044, 0.0003033230022992939, 0.00028242889675311744, 0.00026675639674067497, 0.0002573044039309025, 0.00025230259052477777, 0.0002467221929691732, 0.00023572960344608873, 0.00021704960090573877, 0.00019153859466314316, 0.00016206350119318813, 0.00013146309356670827, 0.00010241870040772483, 7.658940012333915e-05, 5.48929201613646e-05, 3.714343984029256e-05, 2.2076210370869376e-05, 6.525167009385768e-06, -1.3388769730227068e-05, -3.863278107019141e-05, -6.602730718441308e-05, -8.950525807449594e-05, -0.00010357770224800333, -0.00010664240107871592, -0.00010131570161320269, -9.202351066051051e-05, -8.205418998841196e-05, -7.222963904496282e-05, -6.081275932956487e-05, -4.483948941924609e-05, -2.3411250367644243e-05, 1.0812150321726222e-06, 2.390866029600147e-05, 3.8814170693513006e-05, 4.1111299651674926e-05, 3.0413730200962164e-05, 9.451496225665323e-06, -1.7455080524086952e-05, -4.527618148131296e-05, -6.939911691006273e-05, -8.703039202373475e-05, -9.672727173892781e-05, -9.867556218523532e-05, -9.525653149466962e-05, -9.062464232556522e-05, -9.012911323225126e-05, -9.786488953977823e-05, -0.00011432130122557282, -0.00013512409350369126, -0.00015384980360977352, -0.0001663527946220711, -0.00017120680422522128, -0.00016793679969850928, -0.00015726100536994636, -0.00014199150609783828, -0.00012653569865506142, -0.00011609800276346505, -0.0001141597967944108, -0.00012078360305167735, -0.00013333800598047674, -0.0001483032974647358, -0.00016262629651464522, -0.00017365420353598893, -0.00018035690300166607, -0.00018430029740557075, -0.00018730279407463968, -0.0001898719056043774, -0.0001917373010655865, -0.0001932025043061003, -0.00019408490334171802, -0.00019344830070622265, -0.00019122099911328405, -0.00018867359904106706, -0.00018701949738897383, -0.00018657150212675333, -0.00018651819846127182, -0.00018523620383348316, -0.00018073880346491933, -0.000171421401319094, -0.0001573493063915521, -0.0001399259053869173, -0.00012120849714847282, -0.00010423950152471662, -9.163415961666033e-05, -8.466572035104036e-05, -8.401923696510494e-05, -9.016307012643665e-05, -0.00010179720266023651, -0.00011508719762787223, -0.0001252703950740397, -0.0001289866049773991, -0.00012468639761209488, -0.00011162390001118183, -9.0937246568501e-05, -6.654953904217109e-05, -4.289932985557243e-05, -2.1996249415678903e-05, -3.983399892604211e-06, 1.216949021909386e-05, 2.859900087059941e-05, 4.6975310397101566e-05, 6.658714119112119e-05, 8.496626833220944e-05, 9.987520752474666e-05, 0.00010965309775201604, 0.0001129434967879206, 0.00011052610352635384, 0.0001067397024598904, 0.00010813680273713544, 0.0001191732008010149, 0.00013967030099593103, 0.00016754229727666825, 0.00020003020472358912, 0.00023403989325743169, 0.0002656911965459585, 0.00029152390197850764, 0.00030965980840846896, 0.0003203485975973308, 0.00032580329570919275, 0.00032878699130378664, 0.0003308625891804695, 0.00033199478639289737, 0.00033180840546265244, 0.000331362709403038, 0.00033323888783343136, 0.00033979289582930505, 0.00035195579403080046, 0.0003682133974507451, 0.00038486349512822926, 0.00039890551124699414, 0.0004091933951713145, 0.0004158605879638344, 0.000419139105360955, 0.0004198595997877419, 0.00041928348946385086, 0.0004171236068941653, 0.0004123440885450691, 0.00040462121251039207, 0.00039445358561351895, 0.0003826832107733935, 0.0003706534917000681, 0.00035917811328545213, 0.0003483809996396303, 0.0003382680006325245, 0.00032910131267271936, 0.000321071594953537, 0.00031400538864545524, 0.0003087604127358645, 0.00030696450266987085, 0.00030937278643250465, 0.000316218298394233, 0.0003260078956373036, 0.0003355081134941429, 0.00034128810511901975, 0.00034096938907168806, 0.00033385970164090395, 0.0003208362031728029, 0.00030380868702195585, 0.00028498409665189683, 0.00026607979089021683, 0.0002477213856764138, 0.00023059410159476101, 0.00021531670063268393, 0.00020128139294683933, 0.0001875511952675879, 0.00017461029347032309, 0.0001646689051995054, 0.0001594835048308596, 0.0001582904951646924, 0.00016008080274332315, 0.00016390549717471004, 0.00016802380559965968, 0.00017118119285441935, 0.00017257180297747254, 0.00017126990132965147, 0.00016697400133125484, 0.0001603046985110268, 0.0001519643992651254, 0.000141479293233715, 0.0001282441953662783, 0.0001128349031205289, 9.707066783448681e-05, 8.329771662829444e-05, 7.37272494006902e-05, 6.920768646523356e-05, 6.817484245402738e-05, 6.770429899916053e-05, 6.49488065391779e-05, 5.839320147060789e-05, 4.828945020562969e-05, 3.582799035939388e-05, 2.3992710339371115e-05, 1.6597199646639638e-05, 1.6536530893063173e-05, 2.5533809093758464e-05, 4.297755003790371e-05, 6.61582889733836e-05, 9.153791324933991e-05, 0.00011517499660840258, 0.00013366350322030485, 0.00014509059838019311, 0.000149318395415321, 0.00014783510414417833, 0.00014306569937616587, 0.00013769129873253405, 0.00013457919703796506, 0.0001365766947856173, 0.0001447117974748835, 0.0001569642045069486, 0.00016982729721348733, 0.0001799963938537985, 0.0001854229049058631, 0.0001853480061981827, 0.00018034469394478947, 0.00017273939738515764, 0.00016510749992448837, 0.00015831799828447402, 0.00015228150004986674, 0.00014756190648768097, 0.00014518460375256836, 0.00014564240700565279, 0.00014935679791960865, 0.00015618160250596702, 0.0001657009997870773, 0.00017765660595614463, 0.00019088569388259202, 0.00020330889674369246, 0.0002129719068761915, 0.00021860719425603747, 0.00021975100389681756, 0.00021702449885196984, 0.0002123891026712954, 0.00020859790674876422, 0.00020783230138476938, 0.0002103377046296373, 0.00021540689340326935, 0.00022180449741426855, 0.00022811000235378742, 0.00023309499374590814, 0.00023514279746450484, 0.00023328450333792716, 0.0002272809942951426, 0.00021706210100091994, 0.00020321659394539893, 0.00018726009875535965, 0.00017135249800048769, 0.0001571414031786844, 0.00014451680181082338, 0.0001318949944106862, 0.00011799130152212456, 0.0001030234998324886, 8.87751521077007e-05, 7.806638313923031e-05, 7.305545295821503e-05, 7.308182102860883e-05, 7.465235830750316e-05, 7.396205910481513e-05, 6.838732224423438e-05, 5.757464168709703e-05, 4.351160896476358e-05, 2.818806933646556e-05, 1.2375369806250092e-05, -3.0189560220605927e-06, -1.6054189472924918e-05, -2.467599006195087e-05, -2.840741944964975e-05, -2.876365942938719e-05, -2.7750860681408085e-05, -2.6518870072322898e-05, -2.495658009138424e-05, -2.2296539100352675e-05, -1.794019954104442e-05, -1.1968980288656894e-05, -5.204416083870456e-06, 1.4897559594828635e-06, 7.346763140958501e-06, 1.2643629816011526e-05, 1.883466939034406e-05, 2.697674062801525e-05, 3.584743171813898e-05, 4.1759369196370244e-05, 4.100436854059808e-05, 3.257342177676037e-05, 1.833691931096837e-05, 1.833695023378823e-06, -1.3388869774644263e-05, -2.5133620511041954e-05, -3.2712090614950284e-05, -3.622242002165876e-05, -3.5399989428697154e-05, -2.940781087090727e-05, -1.806528052838985e-05, -2.886579068217543e-06, 1.3575479897554033e-05, 2.9083270419505425e-05, 4.1786588553804904e-05, 4.9913091061171144e-05, 5.241508915787563e-05, 4.921412983094342e-05, 4.090060974704102e-05, 2.8583370294654742e-05, 1.4455839846050367e-05, 1.3948149444331648e-06, -8.54743666423019e-06, -1.4267960068536922e-05, -1.4766429558221716e-05, -9.531235264148563e-06, -2.25673204568011e-08, 1.0637940249580424e-05, 1.925011929415632e-05, 2.3781060008332133e-05, 2.4144710550899617e-05, 2.1536960048251785e-05, 1.7210209989571013e-05, 1.1656429705908522e-05, 5.209717073739739e-06, -1.4849980516373762e-06, -7.816797733539715e-06, -1.4332889804791193e-05, -2.2455769794760272e-05, -3.2854368328116834e-05, -4.511201041168533e-05, -5.833254908793606e-05, -7.140974048525095e-05, -8.339410851476714e-05, -9.425145981367677e-05, -0.00010447159729665145, -0.0001141796019510366, -0.000122595505672507, -0.0001286335027543828, -0.00013247260358184576, -0.0001359168963972479, -0.00014079360698815435, -0.00014784530503675342, -0.00015679369971621782, -0.0001668777986196801, -0.00017698410374578089, -0.00018660009664017707, -0.00019616750068962574, -0.00020640720322262496, -0.00021716080664191395, -0.00022748700575903058, -0.00023665929620619863, -0.0002442912955302745, -0.00025090010603889823, -0.0002575131074991077, -0.0002648860099725425, -0.0002729427069425583, -0.00028121090144850314, -0.00028970048879273236, -0.0002984695020131767, -0.0003069975064136088, -0.0003138110914733261, -0.0003172034048475325, -0.0003160180931445211, -0.0003095399879384786, -0.0002982991863973439, -0.0002837996871676296, -0.0002674499119166285, -0.0002504537987988442, -0.0002342849038541317, -0.0002202238974859938, -0.00020907330326735973, -0.00020149040210526437, -0.00019776090630330145, -0.0001973447942873463, -0.0001986403949558735, -0.00019964069360867143, -0.000198816298507154, -0.00019528910343069583, -0.0001888411061372608, -0.00017917320656124502, -0.00016546140250284225, -0.00014769429981242865, -0.0001278494019061327, -0.00010846750228665769, -9.138143650488928e-05, -7.742983871139586e-05, -6.631430005654693e-05, -5.725938899558969e-05, -4.9735910579329357e-05, -4.347944923210889e-05, -3.813719013123773e-05, -3.296049908385612e-05, -2.694615068321582e-05, -1.947702003235463e-05, -1.067551966116298e-05, -1.0042019766842714e-06, 9.383104043081403e-06, 2.0537219825200737e-05, 3.243419996579178e-05, 4.509765130933374e-05, 5.8093570260098204e-05, 7.02792385709472e-05, 8.018391235964373e-05, 8.682448969921097e-05, 9.036940173245966e-05, 9.206683171214536e-05, 9.342480188934132e-05, 9.549820970278233e-05, 9.886913176160306e-05, 0.00010355820268159732, 0.0001091782032744959, 0.00011541099956957623, 0.0001218170000356622, 0.00012762710684910417, 0.00013151750317774713, 0.00013209119788371027, 0.00012873229570686817, 0.00012144789798185229, 0.00011072120105382055, 9.793148637982085e-05, 8.467950829071924e-05, 7.206181180663407e-05, 6.0756410675821826e-05, 5.089832848170772e-05, 4.2206251237075776e-05, 3.432506127865054e-05, 2.729226980591193e-05, 2.155054062313866e-05, 1.7248599760932848e-05, 1.3881650374969468e-05, 1.0545960321906023e-05, 6.197024958964903e-06, 6.764943094594855e-08, -8.047129085753113e-06, -1.774003976606764e-05, -2.807985947583802e-05, -3.8072888855822384e-05, -4.7359339077956975e-05, -5.605013939202763e-05, -6.401079008355737e-05, -7.051689317449927e-05, -7.458162872353569e-05, -7.55377477617003e-05, -7.335554255405441e-05, -6.92537723807618e-05, -6.540823233081028e-05, -6.393800867954269e-05, -6.611215212615207e-05, -7.168926822487265e-05, -7.917870971141383e-05, -8.660522871650755e-05, -9.238342317985371e-05, -9.543300257064402e-05, -9.53906710492447e-05, -9.290753223467618e-05, -8.944916044129059e-05, -8.669737144373357e-05, -8.548147161491215e-05, -8.572857768740505e-05, -8.680354221723974e-05, -8.814767352305353e-05, -8.924816211219877e-05, -8.964083826867864e-05, -8.933727076509967e-05, -8.86141715454869e-05, -8.749937114771456e-05, -8.580742724006996e-05, -8.359406638192013e-05, -8.132564835250378e-05, -7.971807644935325e-05, -7.929455750854686e-05, -8.033250196604058e-05, -8.308467658935115e-05, -8.718470053281635e-05, -9.15066702873446e-05, -9.466062329011038e-05, -9.54412535065785e-05, -9.32397015276365e-05, -8.830059232423082e-05, -8.11544232419692e-05, -7.229465700220317e-05, -6.261347880354151e-05, -5.360103023122065e-05, -4.681339851231314e-05, -4.337514110375196e-05, -4.365927088656463e-05, -4.741934026242234e-05, -5.3985411796020344e-05, -6.231394218048081e-05, -7.106328121153638e-05, -7.882482896093279e-05, -8.404853724641725e-05, -8.548014011466876e-05, -8.29133132356219e-05, -7.693530642427504e-05, -6.852800288470462e-05, -5.854970004293136e-05, -4.772534157382324e-05, -3.696000931086019e-05, -2.74303001788212e-05, -2.027218033617828e-05, -1.6154990589711815e-05, -1.5322399121942e-05, -1.7444779587094672e-05, -2.1534569896175526e-05, -2.639603007992264e-05, -3.1250150641426444e-05, -3.6044089938513935e-05, -4.083400926901959e-05, -4.5321081415750086e-05, -4.90124111820478e-05, -5.162871821084991e-05, -5.308332038111985e-05, -5.3609150199918076e-05, -5.3471441788133234e-05, -5.2979521569795907e-05, -5.246251021162607e-05, -5.2560608310159296e-05, -5.424064147518948e-05, -5.820579099236056e-05, -6.462047167588025e-05, -7.282968726940453e-05, -8.15383973531425e-05, -8.93797623575665e-05, -9.525447967462242e-05, -9.881480218609795e-05, -0.00010009299876401201, -9.915485861711204e-05, -9.608182881493121e-05, -9.136086737271398e-05, -8.595648978371173e-05, -8.10423371149227e-05, -7.75501030148007e-05, -7.597709918627515e-05, -7.650384213775396e-05, -7.908019324531779e-05, -8.343761146534234e-05, -8.908761810744181e-05, -9.528185910312459e-05, -0.00010103030217578635, -0.00010531549924053252, -0.00010776839917525649, -0.00010873829887714237, -0.00010894979641307145, -0.00010936320177279413, -0.00011089780309703201, -0.00011378349881852046, -0.00011749730037990957, -0.0001210155023727566, -0.00012322039401624352, -0.00012332080223131925, -0.00012107090151403099, -0.00011697540321620181, -0.00011189859651494771, -0.0001067690973286517, -0.0001025359015329741, -0.00010004729847423732, -9.982530173147097e-05, -0.00010185789869865403, -0.00010552180174272507, -0.00010998010111507028, -0.00011456620268290862, -0.00011868579895235598, -0.00012168719695182517, -0.00012286030687391758, -0.00012179649638710544, -0.00011893299961229786, -0.00011526759772095829, -0.0001117903011618182, -0.00010912220022873953, -0.00010740700236056, -0.00010648989700712264, -0.00010625110007822514, -0.00010665779700502753, -0.00010764040052890778, -0.00010899709741352126, -0.00011020670353900641, -0.0001107322023017332, -0.00011021010141121224, -0.00010835369903361425, -0.00010488439875189215, -9.982626215787604e-05, -9.368306928081438e-05, -8.712334238225594e-05, -8.086251182248816e-05, -7.540418300777674e-05, -7.094060856616125e-05, -6.749993190169334e-05, -6.499081791844219e-05, -6.297280197031796e-05, -6.0840160585939884e-05, -5.817506098537706e-05, -5.480591062223539e-05, -5.072879866929725e-05, -4.600967076839879e-05, -4.073153104400262e-05, -3.495539931464009e-05, -2.8808390197809786e-05, -2.2408099539461546e-05, -1.5922589227557182e-05, -9.777247214515228e-06, -4.406108928378671e-06, 8.172914789383867e-09, 3.5638079225464026e-06, 6.5842727963172365e-06, 9.552327355777379e-06, 1.2967009752173908e-05, 1.7300359104410745e-05, 2.2802880266681314e-05, 2.9319780878722668e-05, 3.643150921561755e-05, 4.3505489884410053e-05, 4.9824840971268713e-05, 5.48892785445787e-05, 5.855623021489009e-05, 6.0954731452511624e-05, 6.237815250642598e-05, 6.31881266599521e-05, 6.382713036146015e-05, 6.470618245657533e-05, 6.594004662474617e-05, 6.733681220794097e-05, 6.87247229507193e-05, 7.004129292909056e-05, 7.119627844076604e-05, 7.200500112958252e-05, 7.23086777725257e-05, 7.205821020761505e-05, 7.143242692109197e-05, 7.077991176629439e-05, 7.047039252938703e-05, 7.089893915690482e-05, 7.219152757897973e-05, 7.41960175218992e-05, 7.656153320567682e-05, 7.88890611147508e-05, 8.095116936601698e-05, 8.271302795037627e-05, 8.433683979092166e-05, 8.599578723078594e-05, 8.778431947575882e-05, 8.971617353381589e-05, 9.166511881630868e-05, 9.361313277622685e-05, 9.562094055581838e-05, 9.770775068318471e-05, 9.983847121475264e-05, 0.00010185399878537282, 0.00010355179983889684, 0.00010478470358066261, 0.00010550589649938047, 0.00010581919923424721, 0.00010596169886412099, 0.0001062320006894879, 0.00010690589988371357, 0.00010803050099639222, 0.000109389096905943, 0.00011067139712395146, 0.00011159400310134515, 0.00011198149877600372, 0.00011178570275660604, 0.00011102249845862389, 0.00010969569848384708, 0.00010801819735206664, 0.00010644950089044869, 0.00010552869935054332, 0.00010560669761616737, 0.00010674879740690812, 0.0001088029021047987, 0.00011141350114485249, 0.00011415860353736207, 0.00011661970347631723, 0.00011845379776787013, 0.0001194774013129063, 0.00011967679893132299, 0.00011915749928448349, 0.00011807189730461687, 0.00011666650243569165, 0.00011528989853104576, 0.00011435570195317268, 0.0001141834000009112, 0.00011477689986350015, 0.00011586920300032943, 0.00011710289982147515, 0.0001181365005322732, 0.000118764401122462, 0.00011897250078618526, 0.00011889309826074168, 0.0001186895024147816, 0.00011848330177599564, 0.00011831150186480954, 0.00011813350283773616, 0.00011791389988502488, 0.00011768400145228952, 0.00011751079728128389, 0.00011741740308934823, 0.00011740450281649828, 0.00011745790106942877, 0.00011751930287573487, 0.00011750769772334024, 0.00011735180305549875, 0.00011708359670592472, 0.00011682119657052681, 0.00011661850294331089, 0.0001164229033747688, 0.00011617229756666347, 0.00011588010238483548, 0.00011561800056369975, 0.00011545069719431922, 0.0001154178025899455, 0.00011550549970706925, 0.00011570910282898694, 0.0001160058964160271, 0.00011634299880824983, 0.0001166657020803541, 0.00011688440281432122, 0.00011690630344673991, 0.00011666220234474167, 0.00011617039854172617, 0.0001155580030172132, 0.00011500000255182385, 0.00011463100236142054, 0.00011452379840193316, 0.0001146258000517264, 0.00011475950304884464, 0.00011478600208647549, 0.0001146650974988006, 0.00011443389666965231, 0.00011414440086809918, 0.00011383170203771442, 0.00011353269655955955, 0.00011329189874231815, 0.00011313590221107006, 0.00011303379869787022, 0.00011291589908069, 0.00011270609684288502, 0.0001123572001233697, 0.00011187900236109272, 0.00011133280349895358, 0.00011079089745180681, 0.00011032399925170466, 0.00010997500066878274, 0.00010975339682772756, 0.0001096264022635296, 0.00010954179742839187, 0.00010944020323222503, 0.00010925860260613263, 0.0001089551005861722, 0.00010850110265891999, 0.00010791140084620565, 0.00010726330219767988, 0.00010666489833965898, 0.00010621349792927504, 0.00010594030027277768, 0.00010582640243228525, 0.00010582450340734795, 0.00010587349970592186, 0.00010590170131763443, 0.00010585199925117195, 0.0001056870969478041, 0.00010539070353843272, 0.00010496089817024767, 0.00010438689787406474, 0.00010367060167482123, 0.00010284710151609033, 0.0001019789997371845, 0.00010114850010722876, 0.00010042599751614034, 9.985946235246956e-05, 9.94587826426141e-05, 9.918001887854189e-05, 9.894400864141062e-05, 9.867575136013329e-05, 9.833201329456642e-05, 9.789555770112202e-05, 9.736540960147977e-05, 9.675297042122111e-05, 9.607786341803148e-05, 9.53703565755859e-05, 9.46666332310997e-05, 9.399372356710956e-05, 9.335904178442433e-05, 9.275453339796513e-05, 9.215204045176506e-05, 9.152771963272244e-05, 9.087972284760326e-05, 9.022477024700493e-05, 8.959161641541868e-05, 8.900213288143277e-05, 8.8466789748054e-05, 8.795761823421344e-05, 8.741226338315755e-05, 8.677170262672007e-05, 8.601586887380108e-05, 8.51725199026987e-05, 8.430417074123397e-05, 8.347834955202416e-05, 8.273892308352515e-05, 8.210814121412113e-05, 8.15856983535923e-05, 8.114649244816974e-05, 8.074531069723889e-05, 8.034244092414156e-05, 7.990573794813827e-05, 7.941445801407099e-05, 7.887245737947524e-05, 7.830667891539633e-05, 7.77451423346065e-05, 7.719743734924123e-05, 7.66712983022444e-05, 7.617307710461318e-05, 7.570986053906381e-05, 7.527980778831989e-05, 7.48698366805911e-05, 7.44759090594016e-05, 7.410453690681607e-05, 7.374907727353275e-05, 7.338535215239972e-05, 7.298457785509527e-05, 7.252181239891797e-05, 7.19793897587806e-05, 7.13560584699735e-05, 7.066903344821185e-05, 6.994701834628358e-05, 6.921731255715713e-05, 6.84999322402291e-05, 6.781623233109713e-05, 6.719138036714867e-05, 6.664066313533112e-05, 6.616098835365847e-05, 6.573850259883329e-05, 6.535276042995974e-05, 6.498731818282977e-05, 6.463199679274112e-05, 6.427249900298193e-05, 6.389778718585148e-05, 6.350148760247976e-05, 6.307681906037033e-05, 6.262071838136762e-05, 6.21390572632663e-05, 6.16435136180371e-05, 6.11432406003587e-05, 6.064862827770412e-05, 6.0170990764163435e-05, 5.971769860479981e-05, 5.928782047703862e-05, 5.887381121283397e-05, 5.8461821026867256e-05, 5.8039331634063274e-05, 5.760311978519894e-05, 5.716130181099288e-05, 5.672209954354912e-05, 5.62846107641235e-05, 5.5845401220722124e-05, 5.540109850699082e-05, 5.494841025210917e-05, 5.4485120926983654e-05, 5.4014031775295734e-05, 5.35388317075558e-05, 5.30668294231873e-05, 5.26095500390511e-05, 5.2175808377796784e-05, 5.1767448894679546e-05, 5.137905100127682e-05, 5.099998088553548e-05, 5.06172509631142e-05, 5.022095137974247e-05, 4.980606900062412e-05, 4.9371188652003184e-05, 4.8916048399405554e-05, 4.844354043598287e-05, 4.796048960997723e-05, 4.747752973344177e-05, 4.700828139903024e-05, 4.6561650378862396e-05, 4.613598866853863e-05, 4.572114994516596e-05, 4.5307260734261945e-05, 4.4887521653436124e-05, 4.445555168786086e-05, 4.4008411350660026e-05, 4.3547668610699475e-05, 4.3077328882645816e-05, 4.2601699533406645e-05, 4.212672865833156e-05, 4.165816062595695e-05, 4.1198200051439926e-05, 4.0747599996393546e-05, 4.030729178339243e-05, 3.987694071838632e-05, 3.945593925891444e-05, 3.904306868207641e-05, 3.8635491364402696e-05, 3.8230340578593314e-05, 3.7824458559043705e-05, 3.7413949030451477e-05, 3.699626904563047e-05, 3.657089109765366e-05, 3.6139281291980296e-05, 3.5704080801224336e-05, 3.526738873915747e-05, 3.483051114017144e-05, 3.4394350223010406e-05, 3.3959651773329824e-05, 3.352624116814695e-05, 3.3094391255872324e-05, 3.266529893153347e-05, 3.224072861485183e-05, 3.182316868333146e-05, 3.141559136565775e-05, 3.102008122368716e-05, 3.063575059059076e-05, 3.025915975740645e-05, 2.988517917401623e-05, 2.9509499654523097e-05, 2.9129620088497177e-05, 2.8744219889631495e-05, 2.8353810193948448e-05, 2.7960910301771946e-05, 2.7568750738282688e-05, 2.7179759854334407e-05, 2.6794919904205017e-05, 2.641454921104014e-05, 2.6039109798148274e-05, 2.5668530724942684e-05, 2.5302209905930795e-05, 2.493901047273539e-05, 2.4577659132773988e-05, 2.421729914203752e-05, 2.3857090127421543e-05, 2.3496349967899732e-05, 2.3135109586291946e-05, 2.277357089042198e-05, 2.2411830286728218e-05, 2.2050340703572147e-05, 2.1690200810553506e-05, 2.133268935722299e-05, 2.0978350221412256e-05, 2.062699059024453e-05, 2.0278070223866962e-05, 1.993121077248361e-05, 1.958603024831973e-05, 1.9242230337113142e-05, 1.889966915769037e-05, 1.8558370356913656e-05, 1.8218399418401532e-05, 1.7879900042316876e-05, 1.7542879504617304e-05, 1.720713044051081e-05, 1.687258918536827e-05, 1.6539270291104913e-05, 1.620719012862537e-05, 1.5876190445851535e-05, 1.554614027554635e-05, 1.5216879546642303e-05, 1.4888320038153324e-05, 1.4560389899997972e-05, 1.4233080037229229e-05, 1.3906370440963656e-05, 1.3580340237240307e-05, 1.3255130397737958e-05, 1.2930760021845344e-05, 1.2607169992406853e-05, 1.2284240256121848e-05, 1.1961989912379067e-05, 1.1640509910648689e-05, 1.1320000339765102e-05, 1.1000630365742836e-05, 1.0682480024115648e-05, 1.0365560228819959e-05, 1.0049780030385591e-05, 9.735003004607279e-06, 9.42104361456586e-06, 9.107679034059402e-06, 8.794701898295898e-06, 8.482023986289278e-06, 8.169692591764033e-06, 7.857846867409535e-06, 7.546601864305558e-06, 7.236017154355068e-06, 6.926108198967995e-06, 6.6168640842079185e-06, 6.308268893917557e-06, 6.000303073960822e-06, 5.6929170568764675e-06, 5.386055818235036e-06, 5.079677976027597e-06, 4.773752152686939e-06, 4.4682469706458505e-06, 4.163143785262946e-06, 3.858438958559418e-06, 3.554134082150995e-06, 3.2502330213901587e-06, 2.9467419153661467e-06, 2.6436630378157133e-06, 2.3409979803545866e-06, 2.0387510630826e-06, 1.7369250144838588e-06, 1.4355199482452008e-06, 1.1345330221956829e-06, 8.339599162354716e-07, 5.337947186490055e-07, 2.3403279669764743e-07, -6.532744833975812e-08, -3.642863077857328e-07, -6.628437745348492e-07, -9.610005236027064e-07, -1.2587570381583646e-06, -1.55611201080319e-06, -1.8530680563344504e-06, -2.14962096833915e-06, -2.445772906867205e-06, -2.7415210297476733e-06, -3.0368639727385016e-06, -3.3318019632133655e-06, -3.6263320453144843e-06, -3.920454219041858e-06, -4.214166892779758e-06, -4.507468929659808e-06, -4.800358965439955e-06, -5.092835181130795e-06, -5.3848962124902755e-06, -5.676539785781642e-06], '-time', *[0.0, 0.005, 0.01, 0.015, 0.02, 0.025, 0.03, 0.035, 0.04, 0.045, 0.05, 0.055, 0.06, 0.065, 0.07, 0.075, 0.08, 0.085, 0.09, 0.095, 0.1, 0.105, 0.11, 0.115, 0.12, 0.125, 0.13, 0.135, 0.14, 0.145, 0.15, 0.155, 0.16, 0.165, 0.17, 0.17500000000000002, 0.18, 0.185, 0.19, 0.195, 0.2, 0.20500000000000002, 0.21, 0.215, 0.22, 0.225, 0.23, 0.23500000000000001, 0.24, 0.245, 0.25, 0.255, 0.26, 0.265, 0.27, 0.275, 0.28, 0.28500000000000003, 0.29, 0.295, 0.3, 0.305, 0.31, 0.315, 0.32, 0.325, 0.33, 0.335, 0.34, 0.34500000000000003, 0.35000000000000003, 0.355, 0.36, 0.365, 0.37, 0.375, 0.38, 0.385, 0.39, 0.395, 0.4, 0.405, 0.41000000000000003, 0.41500000000000004, 0.42, 0.425, 0.43, 0.435, 0.44, 0.445, 0.45, 0.455, 0.46, 0.465, 0.47000000000000003, 0.47500000000000003, 0.48, 0.485, 0.49, 0.495, 0.5, 0.505, 0.51, 0.515, 0.52, 0.525, 0.53, 0.535, 0.54, 0.545, 0.55, 0.555, 0.56, 0.5650000000000001, 0.5700000000000001, 0.5750000000000001, 0.58, 0.585, 0.59, 0.595, 0.6, 0.605, 0.61, 0.615, 0.62, 0.625, 0.63, 0.635, 0.64, 0.645, 0.65, 0.655, 0.66, 0.665, 0.67, 0.675, 0.68, 0.685, 0.6900000000000001, 0.6950000000000001, 0.7000000000000001, 0.705, 0.71, 0.715, 0.72, 0.725, 0.73, 0.735, 0.74, 0.745, 0.75, 0.755, 0.76, 0.765, 0.77, 0.775, 0.78, 0.785, 0.79, 0.795, 0.8, 0.805, 0.81, 0.8150000000000001, 0.8200000000000001, 0.8250000000000001, 0.8300000000000001, 0.835, 0.84, 0.845, 0.85, 0.855, 0.86, 0.865, 0.87, 0.875, 0.88, 0.885, 0.89, 0.895, 0.9, 0.905, 0.91, 0.915, 0.92, 0.925, 0.93, 0.935, 0.9400000000000001, 0.9450000000000001, 0.9500000000000001, 0.9550000000000001, 0.96, 0.965, 0.97, 0.975, 0.98, 0.985, 0.99, 0.995, 1.0, 1.0050000000000001, 1.01, 1.0150000000000001, 1.02, 1.025, 1.03, 1.035, 1.04, 1.045, 1.05, 1.055, 1.06, 1.065, 1.07, 1.075, 1.08, 1.085, 1.09, 1.095, 1.1, 1.105, 1.11, 1.115, 1.12, 1.125, 1.1300000000000001, 1.135, 1.1400000000000001, 1.145, 1.1500000000000001, 1.155, 1.16, 1.165, 1.17, 1.175, 1.18, 1.185, 1.19, 1.195, 1.2, 1.205, 1.21, 1.215, 1.22, 1.225, 1.23, 1.235, 1.24, 1.245, 1.25, 1.2550000000000001, 1.26, 1.2650000000000001, 1.27, 1.2750000000000001, 1.28, 1.285, 1.29, 1.295, 1.3, 1.305, 1.31, 1.315, 1.32, 1.325, 1.33, 1.335, 1.34, 1.345, 1.35, 1.355, 1.36, 1.365, 1.37, 1.375, 1.3800000000000001, 1.385, 1.3900000000000001, 1.395, 1.4000000000000001, 1.405, 1.41, 1.415, 1.42, 1.425, 1.43, 1.435, 1.44, 1.445, 1.45, 1.455, 1.46, 1.465, 1.47, 1.475, 1.48, 1.485, 1.49, 1.495, 1.5, 1.5050000000000001, 1.51, 1.5150000000000001, 1.52, 1.5250000000000001, 1.53, 1.5350000000000001, 1.54, 1.545, 1.55, 1.555, 1.56, 1.565, 1.57, 1.575, 1.58, 1.585, 1.59, 1.595, 1.6, 1.605, 1.61, 1.615, 1.62, 1.625, 1.6300000000000001, 1.635, 1.6400000000000001, 1.645, 1.6500000000000001, 1.655, 1.6600000000000001, 1.665, 1.67, 1.675, 1.68, 1.685, 1.69, 1.695, 1.7, 1.705, 1.71, 1.715, 1.72, 1.725, 1.73, 1.735, 1.74, 1.745, 1.75, 1.7550000000000001, 1.76, 1.7650000000000001, 1.77, 1.7750000000000001, 1.78, 1.7850000000000001, 1.79, 1.795, 1.8, 1.805, 1.81, 1.815, 1.82, 1.825, 1.83, 1.835, 1.84, 1.845, 1.85, 1.855, 1.86, 1.865, 1.87, 1.875, 1.8800000000000001, 1.885, 1.8900000000000001, 1.895, 1.9000000000000001, 1.905, 1.9100000000000001, 1.915, 1.92, 1.925, 1.93, 1.935, 1.94, 1.945, 1.95, 1.955, 1.96, 1.965, 1.97, 1.975, 1.98, 1.985, 1.99, 1.995, 2.0, 2.005, 2.0100000000000002, 2.015, 2.02, 2.025, 2.0300000000000002, 2.035, 2.04, 2.045, 2.05, 2.055, 2.06, 2.065, 2.07, 2.075, 2.08, 2.085, 2.09, 2.095, 2.1, 2.105, 2.11, 2.115, 2.12, 2.125, 2.13, 2.1350000000000002, 2.14, 2.145, 2.15, 2.1550000000000002, 2.16, 2.165, 2.17, 2.1750000000000003, 2.18, 2.185, 2.19, 2.195, 2.2, 2.205, 2.21, 2.215, 2.22, 2.225, 2.23, 2.235, 2.24, 2.245, 2.25, 2.255, 2.2600000000000002, 2.265, 2.27, 2.275, 2.2800000000000002, 2.285, 2.29, 2.295, 2.3000000000000003, 2.305, 2.31, 2.315, 2.32, 2.325, 2.33, 2.335, 2.34, 2.345, 2.35, 2.355, 2.36, 2.365, 2.37, 2.375, 2.38, 2.3850000000000002, 2.39, 2.395, 2.4, 2.4050000000000002, 2.41, 2.415, 2.42, 2.4250000000000003, 2.43, 2.435, 2.44, 2.445, 2.45, 2.455, 2.46, 2.465, 2.47, 2.475, 2.48, 2.485, 2.49, 2.495, 2.5, 2.505, 2.5100000000000002, 2.515, 2.52, 2.525, 2.5300000000000002, 2.535, 2.54, 2.545, 2.5500000000000003, 2.555, 2.56, 2.565, 2.57, 2.575, 2.58, 2.585, 2.59, 2.595, 2.6, 2.605, 2.61, 2.615, 2.62, 2.625, 2.63, 2.6350000000000002, 2.64, 2.645, 2.65, 2.6550000000000002, 2.66, 2.665, 2.67, 2.6750000000000003, 2.68, 2.685, 2.69, 2.695, 2.7, 2.705, 2.71, 2.715, 2.72, 2.725, 2.73, 2.735, 2.74, 2.745, 2.75, 2.755, 2.7600000000000002, 2.765, 2.77, 2.775, 2.7800000000000002, 2.785, 2.79, 2.795, 2.8000000000000003, 2.805, 2.81, 2.815, 2.82, 2.825, 2.83, 2.835, 2.84, 2.845, 2.85, 2.855, 2.86, 2.865, 2.87, 2.875, 2.88, 2.8850000000000002, 2.89, 2.895, 2.9, 2.9050000000000002, 2.91, 2.915, 2.92, 2.9250000000000003, 2.93, 2.935, 2.94, 2.945, 2.95, 2.955, 2.96, 2.965, 2.97, 2.975, 2.98, 2.985, 2.99, 2.995, 3.0, 3.005, 3.0100000000000002, 3.015, 3.02, 3.025, 3.0300000000000002, 3.035, 3.04, 3.045, 3.0500000000000003, 3.055, 3.06, 3.065, 3.0700000000000003, 3.075, 3.08, 3.085, 3.09, 3.095, 3.1, 3.105, 3.11, 3.115, 3.12, 3.125, 3.13, 3.1350000000000002, 3.14, 3.145, 3.15, 3.1550000000000002, 3.16, 3.165, 3.17, 3.1750000000000003, 3.18, 3.185, 3.19, 3.1950000000000003, 3.2, 3.205, 3.21, 3.215, 3.22, 3.225, 3.23, 3.235, 3.24, 3.245, 3.25, 3.255, 3.2600000000000002, 3.265, 3.27, 3.275, 3.2800000000000002, 3.285, 3.29, 3.295, 3.3000000000000003, 3.305, 3.31, 3.315, 3.3200000000000003, 3.325, 3.33, 3.335, 3.34, 3.345, 3.35, 3.355, 3.36, 3.365, 3.37, 3.375, 3.38, 3.3850000000000002, 3.39, 3.395, 3.4, 3.4050000000000002, 3.41, 3.415, 3.42, 3.4250000000000003, 3.43, 3.435, 3.44, 3.4450000000000003, 3.45, 3.455, 3.46, 3.465, 3.47, 3.475, 3.48, 3.485, 3.49, 3.495, 3.5, 3.505, 3.5100000000000002, 3.515, 3.52, 3.525, 3.5300000000000002, 3.535, 3.54, 3.545, 3.5500000000000003, 3.555, 3.56, 3.565, 3.5700000000000003, 3.575, 3.58, 3.585, 3.59, 3.595, 3.6, 3.605, 3.61, 3.615, 3.62, 3.625, 3.63, 3.6350000000000002, 3.64, 3.645, 3.65, 3.6550000000000002, 3.66, 3.665, 3.67, 3.6750000000000003, 3.68, 3.685, 3.69, 3.6950000000000003, 3.7, 3.705, 3.71, 3.715, 3.72, 3.725, 3.73, 3.735, 3.74, 3.745, 3.75, 3.755, 3.7600000000000002, 3.765, 3.77, 3.775, 3.7800000000000002, 3.785, 3.79, 3.795, 3.8000000000000003, 3.805, 3.81, 3.815, 3.8200000000000003, 3.825, 3.83, 3.835, 3.84, 3.845, 3.85, 3.855, 3.86, 3.865, 3.87, 3.875, 3.88, 3.8850000000000002, 3.89, 3.895, 3.9, 3.9050000000000002, 3.91, 3.915, 3.92, 3.9250000000000003, 3.93, 3.935, 3.94, 3.9450000000000003, 3.95, 3.955, 3.96, 3.9650000000000003, 3.97, 3.975, 3.98, 3.985, 3.99, 3.995, 4.0, 4.005, 4.01, 4.015, 4.0200000000000005, 4.025, 4.03, 4.035, 4.04, 4.045, 4.05, 4.055, 4.0600000000000005, 4.065, 4.07, 4.075, 4.08, 4.085, 4.09, 4.095, 4.1, 4.105, 4.11, 4.115, 4.12, 4.125, 4.13, 4.135, 4.14, 4.1450000000000005, 4.15, 4.155, 4.16, 4.165, 4.17, 4.175, 4.18, 4.1850000000000005, 4.19, 4.195, 4.2, 4.205, 4.21, 4.215, 4.22, 4.225, 4.23, 4.235, 4.24, 4.245, 4.25, 4.255, 4.26, 4.265, 4.2700000000000005, 4.275, 4.28, 4.285, 4.29, 4.295, 4.3, 4.305, 4.3100000000000005, 4.315, 4.32, 4.325, 4.33, 4.335, 4.34, 4.345, 4.3500000000000005, 4.355, 4.36, 4.365, 4.37, 4.375, 4.38, 4.385, 4.39, 4.3950000000000005, 4.4, 4.405, 4.41, 4.415, 4.42, 4.425, 4.43, 4.4350000000000005, 4.44, 4.445, 4.45, 4.455, 4.46, 4.465, 4.47, 4.4750000000000005, 4.48, 4.485, 4.49, 4.495, 4.5, 4.505, 4.51, 4.515, 4.5200000000000005, 4.525, 4.53, 4.535, 4.54, 4.545, 4.55, 4.555, 4.5600000000000005, 4.565, 4.57, 4.575, 4.58, 4.585, 4.59, 4.595, 4.6000000000000005, 4.605, 4.61, 4.615, 4.62, 4.625, 4.63, 4.635, 4.64, 4.6450000000000005, 4.65, 4.655, 4.66, 4.665, 4.67, 4.675, 4.68, 4.6850000000000005, 4.69, 4.695, 4.7, 4.705, 4.71, 4.715, 4.72, 4.7250000000000005, 4.73, 4.735, 4.74, 4.745, 4.75, 4.755, 4.76, 4.765, 4.7700000000000005, 4.775, 4.78, 4.785, 4.79, 4.795, 4.8, 4.805, 4.8100000000000005, 4.815, 4.82, 4.825, 4.83, 4.835, 4.84, 4.845, 4.8500000000000005, 4.855, 4.86, 4.865, 4.87, 4.875, 4.88, 4.885, 4.89, 4.8950000000000005, 4.9, 4.905, 4.91, 4.915, 4.92, 4.925, 4.93, 4.9350000000000005, 4.94, 4.945, 4.95, 4.955, 4.96, 4.965, 4.97, 4.9750000000000005, 4.98, 4.985, 4.99, 4.995, 5.0, 5.005, 5.01, 5.015, 5.0200000000000005, 5.025, 5.03, 5.035, 5.04, 5.045, 5.05, 5.055, 5.0600000000000005, 5.065, 5.07, 5.075, 5.08, 5.085, 5.09, 5.095, 5.1000000000000005, 5.105, 5.11, 5.115, 5.12, 5.125, 5.13, 5.135, 5.14, 5.1450000000000005, 5.15, 5.155, 5.16, 5.165, 5.17, 5.175, 5.18, 5.1850000000000005, 5.19, 5.195, 5.2, 5.205, 5.21, 5.215, 5.22, 5.2250000000000005, 5.23, 5.235, 5.24, 5.245, 5.25, 5.255, 5.26, 5.265, 5.2700000000000005, 5.275, 5.28, 5.285, 5.29, 5.295, 5.3, 5.305, 5.3100000000000005, 5.315, 5.32, 5.325, 5.33, 5.335, 5.34, 5.345, 5.3500000000000005, 5.355, 5.36, 5.365, 5.37, 5.375, 5.38, 5.385, 5.39, 5.3950000000000005, 5.4, 5.405, 5.41, 5.415, 5.42, 5.425, 5.43, 5.4350000000000005, 5.44, 5.445, 5.45, 5.455, 5.46, 5.465, 5.47, 5.4750000000000005, 5.48, 5.485, 5.49, 5.495, 5.5, 5.505, 5.51, 5.515, 5.5200000000000005, 5.525, 5.53, 5.535, 5.54, 5.545, 5.55, 5.555, 5.5600000000000005, 5.565, 5.57, 5.575, 5.58, 5.585, 5.59, 5.595, 5.6000000000000005, 5.605, 5.61, 5.615, 5.62, 5.625, 5.63, 5.635, 5.64, 5.6450000000000005, 5.65, 5.655, 5.66, 5.665, 5.67, 5.675, 5.68, 5.6850000000000005, 5.69, 5.695, 5.7, 5.705, 5.71, 5.715, 5.72, 5.7250000000000005, 5.73, 5.735, 5.74, 5.745, 5.75, 5.755, 5.76, 5.765, 5.7700000000000005, 5.775, 5.78, 5.785, 5.79, 5.795, 5.8, 5.805, 5.8100000000000005, 5.815, 5.82, 5.825, 5.83, 5.835, 5.84, 5.845, 5.8500000000000005, 5.855, 5.86, 5.865, 5.87, 5.875, 5.88, 5.885, 5.89, 5.8950000000000005, 5.9, 5.905, 5.91, 5.915, 5.92, 5.925, 5.93, 5.9350000000000005, 5.94, 5.945, 5.95, 5.955, 5.96, 5.965, 5.97, 5.9750000000000005, 5.98, 5.985, 5.99, 5.995, 6.0, 6.005, 6.01, 6.015000000000001, 6.0200000000000005, 6.025, 6.03, 6.035, 6.04, 6.045, 6.05, 6.055, 6.0600000000000005, 6.065, 6.07, 6.075, 6.08, 6.085, 6.09, 6.095, 6.1000000000000005, 6.105, 6.11, 6.115, 6.12, 6.125, 6.13, 6.135, 6.140000000000001, 6.1450000000000005, 6.15, 6.155, 6.16, 6.165, 6.17, 6.175, 6.18, 6.1850000000000005, 6.19, 6.195, 6.2, 6.205, 6.21, 6.215, 6.22, 6.2250000000000005, 6.23, 6.235, 6.24, 6.245, 6.25, 6.255, 6.26, 6.265000000000001, 6.2700000000000005, 6.275, 6.28, 6.285, 6.29, 6.295, 6.3, 6.305, 6.3100000000000005, 6.315, 6.32, 6.325, 6.33, 6.335, 6.34, 6.345, 6.3500000000000005, 6.355, 6.36, 6.365, 6.37, 6.375, 6.38, 6.385, 6.390000000000001, 6.3950000000000005, 6.4, 6.405, 6.41, 6.415, 6.42, 6.425, 6.43, 6.4350000000000005, 6.44, 6.445, 6.45, 6.455, 6.46, 6.465, 6.47, 6.4750000000000005, 6.48, 6.485, 6.49, 6.495, 6.5, 6.505, 6.51, 6.515000000000001, 6.5200000000000005, 6.525, 6.53, 6.535, 6.54, 6.545, 6.55, 6.555, 6.5600000000000005, 6.565, 6.57, 6.575, 6.58, 6.585, 6.59, 6.595, 6.6000000000000005, 6.605, 6.61, 6.615, 6.62, 6.625, 6.63, 6.635, 6.640000000000001, 6.6450000000000005, 6.65, 6.655, 6.66, 6.665, 6.67, 6.675, 6.68, 6.6850000000000005, 6.69, 6.695, 6.7, 6.705, 6.71, 6.715, 6.72, 6.7250000000000005, 6.73, 6.735, 6.74, 6.745, 6.75, 6.755, 6.76, 6.765000000000001, 6.7700000000000005, 6.775, 6.78, 6.785, 6.79, 6.795, 6.8, 6.805, 6.8100000000000005, 6.815, 6.82, 6.825, 6.83, 6.835, 6.84, 6.845, 6.8500000000000005, 6.855, 6.86, 6.865, 6.87, 6.875, 6.88, 6.885, 6.890000000000001, 6.8950000000000005, 6.9, 6.905, 6.91, 6.915, 6.92, 6.925, 6.93, 6.9350000000000005, 6.94, 6.945, 6.95, 6.955, 6.96, 6.965, 6.97, 6.9750000000000005, 6.98, 6.985, 6.99, 6.995, 7.0, 7.005, 7.01, 7.015000000000001, 7.0200000000000005, 7.025, 7.03, 7.035, 7.04, 7.045, 7.05, 7.055, 7.0600000000000005, 7.065, 7.07, 7.075, 7.08, 7.085, 7.09, 7.095, 7.1000000000000005, 7.105, 7.11, 7.115, 7.12, 7.125, 7.13, 7.135, 7.140000000000001, 7.1450000000000005, 7.15, 7.155, 7.16, 7.165, 7.17, 7.175, 7.18, 7.1850000000000005, 7.19, 7.195, 7.2, 7.205, 7.21, 7.215, 7.22, 7.2250000000000005, 7.23, 7.235, 7.24, 7.245, 7.25, 7.255, 7.26, 7.265000000000001, 7.2700000000000005, 7.275, 7.28, 7.285, 7.29, 7.295, 7.3, 7.305, 7.3100000000000005, 7.315, 7.32, 7.325, 7.33, 7.335, 7.34, 7.345, 7.3500000000000005, 7.355, 7.36, 7.365, 7.37, 7.375, 7.38, 7.385, 7.390000000000001, 7.3950000000000005, 7.4, 7.405, 7.41, 7.415, 7.42, 7.425, 7.43, 7.4350000000000005, 7.44, 7.445, 7.45, 7.455, 7.46, 7.465, 7.47, 7.4750000000000005, 7.48, 7.485, 7.49, 7.495, 7.5, 7.505, 7.51, 7.515000000000001, 7.5200000000000005, 7.525, 7.53, 7.535, 7.54, 7.545, 7.55, 7.555, 7.5600000000000005, 7.565, 7.57, 7.575, 7.58, 7.585, 7.59, 7.595, 7.6000000000000005, 7.605, 7.61, 7.615, 7.62, 7.625, 7.63, 7.635, 7.640000000000001, 7.6450000000000005, 7.65, 7.655, 7.66, 7.665, 7.67, 7.675, 7.68, 7.6850000000000005, 7.69, 7.695, 7.7, 7.705, 7.71, 7.715, 7.72, 7.7250000000000005, 7.73, 7.735, 7.74, 7.745, 7.75, 7.755, 7.76, 7.765000000000001, 7.7700000000000005, 7.775, 7.78, 7.785, 7.79, 7.795, 7.8, 7.805000000000001, 7.8100000000000005, 7.815, 7.82, 7.825, 7.83, 7.835, 7.84, 7.845, 7.8500000000000005, 7.855, 7.86, 7.865, 7.87, 7.875, 7.88, 7.885, 7.890000000000001, 7.8950000000000005, 7.9, 7.905, 7.91, 7.915, 7.92, 7.925, 7.930000000000001, 7.9350000000000005, 7.94, 7.945, 7.95, 7.955, 7.96, 7.965, 7.97, 7.9750000000000005, 7.98, 7.985, 7.99, 7.995, 8.0, 8.005, 8.01, 8.015, 8.02, 8.025, 8.03, 8.035, 8.040000000000001, 8.045, 8.05, 8.055, 8.06, 8.065, 8.07, 8.075, 8.08, 8.085, 8.09, 8.095, 8.1, 8.105, 8.11, 8.115, 8.120000000000001, 8.125, 8.13, 8.135, 8.14, 8.145, 8.15, 8.155, 8.16, 8.165000000000001, 8.17, 8.175, 8.18, 8.185, 8.19, 8.195, 8.2, 8.205, 8.21, 8.215, 8.22, 8.225, 8.23, 8.235, 8.24, 8.245000000000001, 8.25, 8.255, 8.26, 8.265, 8.27, 8.275, 8.28, 8.285, 8.290000000000001, 8.295, 8.3, 8.305, 8.31, 8.315, 8.32, 8.325, 8.33, 8.335, 8.34, 8.345, 8.35, 8.355, 8.36, 8.365, 8.370000000000001, 8.375, 8.38, 8.385, 8.39, 8.395, 8.4, 8.405, 8.41, 8.415000000000001, 8.42, 8.425, 8.43, 8.435, 8.44, 8.445, 8.45, 8.455, 8.46, 8.465, 8.47, 8.475, 8.48, 8.485, 8.49, 8.495000000000001, 8.5, 8.505, 8.51, 8.515, 8.52, 8.525, 8.53, 8.535, 8.540000000000001, 8.545, 8.55, 8.555, 8.56, 8.565, 8.57, 8.575000000000001, 8.58, 8.585, 8.59, 8.595, 8.6, 8.605, 8.61, 8.615, 8.620000000000001, 8.625, 8.63, 8.635, 8.64, 8.645, 8.65, 8.655, 8.66, 8.665000000000001, 8.67, 8.675, 8.68, 8.685, 8.69, 8.695, 8.700000000000001, 8.705, 8.71, 8.715, 8.72, 8.725, 8.73, 8.735, 8.74, 8.745000000000001, 8.75, 8.755, 8.76, 8.765, 8.77, 8.775, 8.78, 8.785, 8.790000000000001, 8.795, 8.8, 8.805, 8.81, 8.815, 8.82, 8.825000000000001, 8.83, 8.835, 8.84, 8.845, 8.85, 8.855, 8.86, 8.865, 8.870000000000001, 8.875, 8.88, 8.885, 8.89, 8.895, 8.9, 8.905, 8.91, 8.915000000000001, 8.92, 8.925, 8.93, 8.935, 8.94, 8.945, 8.950000000000001, 8.955, 8.96, 8.965, 8.97, 8.975, 8.98, 8.985, 8.99, 8.995000000000001, 9.0, 9.005, 9.01, 9.015, 9.02, 9.025, 9.03, 9.035, 9.040000000000001, 9.045, 9.05, 9.055, 9.06, 9.065, 9.07, 9.075000000000001, 9.08, 9.085, 9.09, 9.095, 9.1, 9.105, 9.11, 9.115, 9.120000000000001, 9.125, 9.13, 9.135, 9.14, 9.145, 9.15, 9.155, 9.16, 9.165000000000001, 9.17, 9.175, 9.18, 9.185, 9.19, 9.195, 9.200000000000001, 9.205, 9.21, 9.215, 9.22, 9.225, 9.23, 9.235, 9.24, 9.245000000000001, 9.25, 9.255, 9.26, 9.265, 9.27, 9.275, 9.28, 9.285, 9.290000000000001, 9.295, 9.3, 9.305, 9.31, 9.315, 9.32, 9.325000000000001, 9.33, 9.335, 9.34, 9.345, 9.35, 9.355, 9.36, 9.365, 9.370000000000001, 9.375, 9.38, 9.385, 9.39, 9.395, 9.4, 9.405, 9.41, 9.415000000000001, 9.42, 9.425, 9.43, 9.435, 9.44, 9.445, 9.450000000000001, 9.455, 9.46, 9.465, 9.47, 9.475, 9.48, 9.485, 9.49, 9.495000000000001, 9.5, 9.505, 9.51, 9.515, 9.52, 9.525, 9.53, 9.535, 9.540000000000001, 9.545, 9.55, 9.555, 9.56, 9.565, 9.57, 9.575000000000001, 9.58, 9.585, 9.59, 9.595, 9.6, 9.605, 9.61, 9.615, 9.620000000000001, 9.625, 9.63, 9.635, 9.64, 9.645, 9.65, 9.655, 9.66, 9.665000000000001, 9.67, 9.675, 9.68, 9.685, 9.69, 9.695, 9.700000000000001, 9.705, 9.71, 9.715, 9.72, 9.725, 9.73, 9.735, 9.74, 9.745000000000001, 9.75, 9.755, 9.76, 9.765, 9.77, 9.775, 9.78, 9.785, 9.790000000000001, 9.795, 9.8, 9.805, 9.81, 9.815, 9.82, 9.825000000000001, 9.83, 9.835, 9.84, 9.845, 9.85, 9.855, 9.86, 9.865, 9.870000000000001, 9.875, 9.88, 9.885, 9.89, 9.895, 9.9, 9.905, 9.91, 9.915000000000001, 9.92, 9.925, 9.93, 9.935, 9.94, 9.945, 9.950000000000001, 9.955, 9.96, 9.965, 9.97, 9.975, 9.98, 9.985, 9.99, 9.995000000000001, 10.0, 10.005, 10.01, 10.015, 10.02, 10.025, 10.03, 10.035, 10.040000000000001, 10.045, 10.05, 10.055, 10.06, 10.065, 10.07, 10.075000000000001, 10.08, 10.085, 10.09, 10.095, 10.1, 10.105, 10.11, 10.115, 10.120000000000001, 10.125, 10.13, 10.135, 10.14, 10.145, 10.15, 10.155, 10.16, 10.165000000000001, 10.17, 10.175, 10.18, 10.185, 10.19, 10.195, 10.200000000000001, 10.205, 10.21, 10.215, 10.22, 10.225, 10.23, 10.235, 10.24, 10.245000000000001, 10.25, 10.255, 10.26, 10.265, 10.27, 10.275, 10.28, 10.285, 10.290000000000001, 10.295, 10.3, 10.305, 10.31, 10.315, 10.32, 10.325000000000001, 10.33, 10.335, 10.34, 10.345, 10.35, 10.355, 10.36, 10.365, 10.370000000000001, 10.375, 10.38, 10.385, 10.39, 10.395, 10.4, 10.405, 10.41, 10.415000000000001, 10.42, 10.425, 10.43, 10.435, 10.44, 10.445, 10.450000000000001, 10.455, 10.46, 10.465, 10.47, 10.475, 10.48, 10.485, 10.49, 10.495000000000001, 10.5, 10.505, 10.51, 10.515, 10.52, 10.525, 10.53, 10.535, 10.540000000000001, 10.545, 10.55, 10.555, 10.56, 10.565, 10.57, 10.575000000000001, 10.58, 10.585, 10.59, 10.595, 10.6, 10.605, 10.61, 10.615, 10.620000000000001, 10.625, 10.63, 10.635, 10.64, 10.645, 10.65, 10.655, 10.66, 10.665000000000001, 10.67, 10.675, 10.68, 10.685, 10.69, 10.695, 10.700000000000001, 10.705, 10.71, 10.715, 10.72, 10.725, 10.73, 10.735, 10.74, 10.745000000000001, 10.75, 10.755, 10.76, 10.765, 10.77, 10.775, 10.78, 10.785, 10.790000000000001, 10.795, 10.8, 10.805, 10.81, 10.815, 10.82, 10.825000000000001, 10.83, 10.835, 10.84, 10.845, 10.85, 10.855, 10.86, 10.865, 10.870000000000001, 10.875, 10.88, 10.885, 10.89, 10.895, 10.9, 10.905, 10.91, 10.915000000000001, 10.92, 10.925, 10.93, 10.935, 10.94, 10.945, 10.950000000000001, 10.955, 10.96, 10.965, 10.97, 10.975, 10.98, 10.985, 10.99, 10.995000000000001, 11.0, 11.005, 11.01, 11.015, 11.02, 11.025, 11.03, 11.035, 11.040000000000001, 11.045, 11.05, 11.055, 11.06, 11.065, 11.07, 11.075000000000001, 11.08, 11.085, 11.09, 11.095, 11.1, 11.105, 11.11, 11.115, 11.120000000000001, 11.125, 11.13, 11.135, 11.14, 11.145, 11.15, 11.155, 11.16, 11.165000000000001, 11.17, 11.175, 11.18, 11.185, 11.19, 11.195, 11.200000000000001, 11.205, 11.21, 11.215, 11.22, 11.225, 11.23, 11.235, 11.24, 11.245000000000001, 11.25, 11.255, 11.26, 11.265, 11.27, 11.275, 11.28, 11.285, 11.290000000000001, 11.295, 11.3, 11.305, 11.31, 11.315, 11.32, 11.325000000000001, 11.33, 11.335, 11.34, 11.345, 11.35, 11.355, 11.36, 11.365, 11.370000000000001, 11.375, 11.38, 11.385, 11.39, 11.395, 11.4, 11.405, 11.41, 11.415000000000001, 11.42, 11.425, 11.43, 11.435, 11.44, 11.445, 11.450000000000001, 11.455, 11.46, 11.465, 11.47, 11.475, 11.48, 11.485, 11.49, 11.495000000000001, 11.5, 11.505, 11.51, 11.515, 11.52, 11.525, 11.53, 11.535, 11.540000000000001, 11.545, 11.55, 11.555, 11.56, 11.565, 11.57, 11.575000000000001, 11.58, 11.585, 11.59, 11.595, 11.6, 11.605, 11.61, 11.615, 11.620000000000001, 11.625, 11.63, 11.635, 11.64, 11.645, 11.65, 11.655, 11.66, 11.665000000000001, 11.67, 11.675, 11.68, 11.685, 11.69, 11.695, 11.700000000000001, 11.705, 11.71, 11.715, 11.72, 11.725, 11.73, 11.735, 11.74, 11.745000000000001, 11.75, 11.755, 11.76, 11.765, 11.77, 11.775, 11.78, 11.785, 11.790000000000001, 11.795, 11.8, 11.805, 11.81, 11.815, 11.82, 11.825000000000001, 11.83, 11.835, 11.84, 11.845, 11.85, 11.855, 11.86, 11.865, 11.870000000000001, 11.875, 11.88, 11.885, 11.89, 11.895, 11.9, 11.905, 11.91, 11.915000000000001, 11.92, 11.925, 11.93, 11.935, 11.94, 11.945, 11.950000000000001, 11.955, 11.96, 11.965, 11.97, 11.975, 11.98, 11.985, 11.99, 11.995000000000001, 12.0, 12.005, 12.01, 12.015, 12.02, 12.025, 12.030000000000001, 12.035, 12.040000000000001, 12.045, 12.05, 12.055, 12.06, 12.065, 12.07, 12.075000000000001, 12.08, 12.085, 12.09, 12.095, 12.1, 12.105, 12.11, 12.115, 12.120000000000001, 12.125, 12.13, 12.135, 12.14, 12.145, 12.15, 12.155000000000001, 12.16, 12.165000000000001, 12.17, 12.175, 12.18, 12.185, 12.19, 12.195, 12.200000000000001, 12.205, 12.21, 12.215, 12.22, 12.225, 12.23, 12.235, 12.24, 12.245000000000001, 12.25, 12.255, 12.26, 12.265, 12.27, 12.275, 12.280000000000001, 12.285, 12.290000000000001, 12.295, 12.3, 12.305, 12.31, 12.315, 12.32, 12.325000000000001, 12.33, 12.335, 12.34, 12.345, 12.35, 12.355, 12.36, 12.365, 12.370000000000001, 12.375, 12.38, 12.385, 12.39, 12.395, 12.4, 12.405000000000001, 12.41, 12.415000000000001, 12.42, 12.425, 12.43, 12.435, 12.44, 12.445, 12.450000000000001, 12.455, 12.46, 12.465, 12.47, 12.475, 12.48, 12.485, 12.49, 12.495000000000001, 12.5, 12.505, 12.51, 12.515, 12.52, 12.525, 12.530000000000001, 12.535, 12.540000000000001, 12.545, 12.55, 12.555, 12.56, 12.565, 12.57, 12.575000000000001, 12.58, 12.585, 12.59, 12.595, 12.6, 12.605, 12.61, 12.615, 12.620000000000001, 12.625, 12.63, 12.635, 12.64, 12.645, 12.65, 12.655000000000001, 12.66, 12.665000000000001, 12.67, 12.675, 12.68, 12.685, 12.69, 12.695, 12.700000000000001, 12.705, 12.71, 12.715, 12.72, 12.725, 12.73, 12.735, 12.74, 12.745000000000001, 12.75, 12.755, 12.76, 12.765, 12.77, 12.775, 12.780000000000001, 12.785, 12.790000000000001, 12.795, 12.8, 12.805, 12.81, 12.815, 12.82, 12.825000000000001, 12.83, 12.835, 12.84, 12.845, 12.85, 12.855, 12.86, 12.865, 12.870000000000001, 12.875, 12.88, 12.885, 12.89, 12.895, 12.9, 12.905000000000001, 12.91, 12.915000000000001, 12.92, 12.925, 12.93, 12.935, 12.94, 12.945, 12.950000000000001, 12.955, 12.96, 12.965, 12.97, 12.975, 12.98, 12.985, 12.99, 12.995000000000001, 13.0, 13.005, 13.01, 13.015, 13.02, 13.025, 13.030000000000001, 13.035, 13.040000000000001, 13.045, 13.05, 13.055, 13.06, 13.065, 13.07, 13.075000000000001, 13.08, 13.085, 13.09, 13.095, 13.1, 13.105, 13.11, 13.115, 13.120000000000001, 13.125, 13.13, 13.135, 13.14, 13.145, 13.15, 13.155000000000001, 13.16, 13.165000000000001, 13.17, 13.175, 13.18, 13.185, 13.19, 13.195, 13.200000000000001, 13.205, 13.21, 13.215, 13.22, 13.225, 13.23, 13.235, 13.24, 13.245000000000001, 13.25, 13.255, 13.26, 13.265, 13.27, 13.275, 13.280000000000001, 13.285, 13.290000000000001, 13.295, 13.3, 13.305, 13.31, 13.315, 13.32, 13.325000000000001, 13.33, 13.335, 13.34, 13.345, 13.35, 13.355, 13.36, 13.365, 13.370000000000001, 13.375, 13.38, 13.385, 13.39, 13.395, 13.4, 13.405000000000001, 13.41, 13.415000000000001, 13.42, 13.425, 13.43, 13.435, 13.44, 13.445, 13.450000000000001, 13.455, 13.46, 13.465, 13.47, 13.475, 13.48, 13.485, 13.49, 13.495000000000001, 13.5, 13.505, 13.51, 13.515, 13.52, 13.525, 13.530000000000001, 13.535, 13.540000000000001, 13.545, 13.55, 13.555, 13.56, 13.565, 13.57, 13.575000000000001, 13.58, 13.585, 13.59, 13.595, 13.6, 13.605, 13.61, 13.615, 13.620000000000001, 13.625, 13.63, 13.635, 13.64, 13.645, 13.65, 13.655000000000001, 13.66, 13.665000000000001, 13.67, 13.675, 13.68, 13.685, 13.69, 13.695, 13.700000000000001, 13.705, 13.71, 13.715, 13.72, 13.725, 13.73, 13.735, 13.74, 13.745000000000001, 13.75, 13.755, 13.76, 13.765, 13.77, 13.775, 13.780000000000001, 13.785, 13.790000000000001, 13.795, 13.8, 13.805, 13.81, 13.815, 13.82, 13.825000000000001, 13.83, 13.835, 13.84, 13.845, 13.85, 13.855, 13.86, 13.865, 13.870000000000001, 13.875, 13.88, 13.885, 13.89, 13.895, 13.9, 13.905000000000001, 13.91, 13.915000000000001, 13.92, 13.925, 13.93, 13.935, 13.94, 13.945, 13.950000000000001, 13.955, 13.96, 13.965, 13.97, 13.975, 13.98, 13.985, 13.99, 13.995000000000001, 14.0, 14.005, 14.01, 14.015, 14.02, 14.025, 14.030000000000001, 14.035, 14.040000000000001, 14.045, 14.05, 14.055, 14.06, 14.065, 14.07, 14.075000000000001, 14.08, 14.085, 14.09, 14.095, 14.1, 14.105, 14.11, 14.115, 14.120000000000001, 14.125, 14.13, 14.135, 14.14, 14.145, 14.15, 14.155000000000001, 14.16, 14.165000000000001, 14.17, 14.175, 14.18, 14.185, 14.19, 14.195, 14.200000000000001, 14.205, 14.21, 14.215, 14.22, 14.225, 14.23, 14.235, 14.24, 14.245000000000001, 14.25, 14.255, 14.26, 14.265, 14.27, 14.275, 14.280000000000001, 14.285, 14.290000000000001, 14.295, 14.3, 14.305, 14.31, 14.315, 14.32, 14.325000000000001, 14.33, 14.335, 14.34, 14.345, 14.35, 14.355, 14.36, 14.365, 14.370000000000001, 14.375, 14.38, 14.385, 14.39, 14.395, 14.4, 14.405000000000001, 14.41, 14.415000000000001, 14.42, 14.425, 14.43, 14.435, 14.44, 14.445, 14.450000000000001, 14.455, 14.46, 14.465, 14.47, 14.475, 14.48, 14.485, 14.49, 14.495000000000001, 14.5, 14.505, 14.51, 14.515, 14.52, 14.525, 14.530000000000001, 14.535, 14.540000000000001, 14.545, 14.55, 14.555, 14.56, 14.565, 14.57, 14.575000000000001, 14.58, 14.585, 14.59, 14.595, 14.6, 14.605, 14.61, 14.615, 14.620000000000001, 14.625, 14.63, 14.635, 14.64, 14.645, 14.65, 14.655000000000001, 14.66, 14.665000000000001, 14.67, 14.675, 14.68, 14.685, 14.69, 14.695, 14.700000000000001, 14.705, 14.71, 14.715, 14.72, 14.725, 14.73, 14.735, 14.74, 14.745000000000001, 14.75, 14.755, 14.76, 14.765, 14.77, 14.775, 14.780000000000001, 14.785, 14.790000000000001, 14.795, 14.8, 14.805, 14.81, 14.815, 14.82, 14.825000000000001, 14.83, 14.835, 14.84, 14.845, 14.85, 14.855, 14.86, 14.865, 14.870000000000001, 14.875, 14.88, 14.885, 14.89, 14.895, 14.9, 14.905000000000001, 14.91, 14.915000000000001, 14.92, 14.925, 14.93, 14.935, 14.94, 14.945, 14.950000000000001, 14.955, 14.96, 14.965, 14.97, 14.975, 14.98, 14.985, 14.99, 14.995000000000001, 15.0, 15.005, 15.01, 15.015, 15.02, 15.025, 15.030000000000001, 15.035, 15.040000000000001, 15.045, 15.05, 15.055, 15.06, 15.065, 15.07, 15.075000000000001, 15.08, 15.085, 15.09, 15.095, 15.1, 15.105, 15.11, 15.115, 15.120000000000001, 15.125, 15.13, 15.135, 15.14, 15.145, 15.15, 15.155000000000001, 15.16, 15.165000000000001, 15.17, 15.175, 15.18, 15.185, 15.19, 15.195, 15.200000000000001, 15.205, 15.21, 15.215, 15.22, 15.225, 15.23, 15.235, 15.24, 15.245000000000001, 15.25, 15.255, 15.26, 15.265, 15.27, 15.275, 15.280000000000001, 15.285, 15.290000000000001, 15.295, 15.3, 15.305, 15.31, 15.315, 15.32, 15.325000000000001, 15.33, 15.335, 15.34, 15.345, 15.35, 15.355, 15.36, 15.365, 15.370000000000001, 15.375, 15.38, 15.385, 15.39, 15.395, 15.4, 15.405000000000001, 15.41, 15.415000000000001, 15.42, 15.425, 15.43, 15.435, 15.44, 15.445, 15.450000000000001, 15.455, 15.46, 15.465, 15.47, 15.475, 15.48, 15.485000000000001, 15.49, 15.495000000000001, 15.5, 15.505, 15.51, 15.515, 15.52, 15.525, 15.530000000000001, 15.535, 15.540000000000001, 15.545, 15.55, 15.555, 15.56, 15.565, 15.57, 15.575000000000001, 15.58, 15.585, 15.59, 15.595, 15.6, 15.605, 15.610000000000001, 15.615, 15.620000000000001, 15.625, 15.63, 15.635, 15.64, 15.645, 15.65, 15.655000000000001, 15.66, 15.665000000000001, 15.67, 15.675, 15.68, 15.685, 15.69, 15.695, 15.700000000000001, 15.705, 15.71, 15.715, 15.72, 15.725, 15.73, 15.735000000000001, 15.74, 15.745000000000001, 15.75, 15.755, 15.76, 15.765, 15.77, 15.775, 15.780000000000001, 15.785, 15.790000000000001, 15.795, 15.8, 15.805, 15.81, 15.815, 15.82, 15.825000000000001, 15.83, 15.835, 15.84, 15.845, 15.85, 15.855, 15.860000000000001, 15.865, 15.870000000000001, 15.875, 15.88, 15.885, 15.89, 15.895, 15.9, 15.905000000000001, 15.91, 15.915000000000001, 15.92, 15.925, 15.93, 15.935, 15.94, 15.945, 15.950000000000001, 15.955, 15.96, 15.965, 15.97, 15.975, 15.98, 15.985000000000001, 15.99, 15.995000000000001, 16.0, 16.005, 16.01, 16.015, 16.02, 16.025, 16.03, 16.035, 16.04, 16.045, 16.05, 16.055, 16.06, 16.065, 16.07, 16.075, 16.080000000000002, 16.085, 16.09, 16.095, 16.1, 16.105, 16.11, 16.115000000000002, 16.12, 16.125, 16.13, 16.135, 16.14, 16.145, 16.15, 16.155, 16.16, 16.165, 16.17, 16.175, 16.18, 16.185, 16.19, 16.195, 16.2, 16.205000000000002, 16.21, 16.215, 16.22, 16.225, 16.23, 16.235, 16.240000000000002, 16.245, 16.25, 16.255, 16.26, 16.265, 16.27, 16.275, 16.28, 16.285, 16.29, 16.295, 16.3, 16.305, 16.31, 16.315, 16.32, 16.325, 16.330000000000002, 16.335, 16.34, 16.345, 16.35, 16.355, 16.36, 16.365000000000002, 16.37, 16.375, 16.38, 16.385, 16.39, 16.395, 16.4, 16.405, 16.41, 16.415, 16.42, 16.425, 16.43, 16.435, 16.44, 16.445, 16.45, 16.455000000000002, 16.46, 16.465, 16.47, 16.475, 16.48, 16.485, 16.490000000000002, 16.495, 16.5, 16.505, 16.51, 16.515, 16.52, 16.525, 16.53, 16.535, 16.54, 16.545, 16.55, 16.555, 16.56, 16.565, 16.57, 16.575, 16.580000000000002, 16.585, 16.59, 16.595, 16.6, 16.605, 16.61, 16.615000000000002, 16.62, 16.625, 16.63, 16.635, 16.64, 16.645, 16.65, 16.655, 16.66, 16.665, 16.67, 16.675, 16.68, 16.685, 16.69, 16.695, 16.7, 16.705000000000002, 16.71, 16.715, 16.72, 16.725, 16.73, 16.735, 16.740000000000002, 16.745, 16.75, 16.755, 16.76, 16.765, 16.77, 16.775, 16.78, 16.785, 16.79, 16.795, 16.8, 16.805, 16.81, 16.815, 16.82, 16.825, 16.830000000000002, 16.835, 16.84, 16.845, 16.85, 16.855, 16.86, 16.865000000000002, 16.87, 16.875, 16.88, 16.885, 16.89, 16.895, 16.9, 16.905, 16.91, 16.915, 16.92, 16.925, 16.93, 16.935, 16.94, 16.945, 16.95, 16.955000000000002, 16.96, 16.965, 16.97, 16.975, 16.98, 16.985, 16.990000000000002, 16.995, 17.0, 17.005, 17.01, 17.015, 17.02, 17.025, 17.03, 17.035, 17.04, 17.045, 17.05, 17.055, 17.06, 17.065, 17.07, 17.075, 17.080000000000002, 17.085, 17.09, 17.095, 17.1, 17.105, 17.11, 17.115000000000002, 17.12, 17.125, 17.13, 17.135, 17.14, 17.145, 17.150000000000002, 17.155, 17.16, 17.165, 17.17, 17.175, 17.18, 17.185, 17.19, 17.195, 17.2, 17.205000000000002, 17.21, 17.215, 17.22, 17.225, 17.23, 17.235, 17.240000000000002, 17.245, 17.25, 17.255, 17.26, 17.265, 17.27, 17.275000000000002, 17.28, 17.285, 17.29, 17.295, 17.3, 17.305, 17.31, 17.315, 17.32, 17.325, 17.330000000000002, 17.335, 17.34, 17.345, 17.35, 17.355, 17.36, 17.365000000000002, 17.37, 17.375, 17.38, 17.385, 17.39, 17.395, 17.400000000000002, 17.405, 17.41, 17.415, 17.42, 17.425, 17.43, 17.435, 17.44, 17.445, 17.45, 17.455000000000002, 17.46, 17.465, 17.47, 17.475, 17.48, 17.485, 17.490000000000002, 17.495, 17.5, 17.505, 17.51, 17.515, 17.52, 17.525000000000002, 17.53, 17.535, 17.54, 17.545, 17.55, 17.555, 17.56, 17.565, 17.57, 17.575, 17.580000000000002, 17.585, 17.59, 17.595, 17.6, 17.605, 17.61, 17.615000000000002, 17.62, 17.625, 17.63, 17.635, 17.64, 17.645, 17.650000000000002, 17.655, 17.66, 17.665, 17.67, 17.675, 17.68, 17.685, 17.69, 17.695, 17.7, 17.705000000000002, 17.71, 17.715, 17.72, 17.725, 17.73, 17.735, 17.740000000000002, 17.745, 17.75, 17.755, 17.76, 17.765, 17.77, 17.775000000000002, 17.78, 17.785, 17.79, 17.795, 17.8, 17.805, 17.81, 17.815, 17.82, 17.825, 17.830000000000002, 17.835, 17.84, 17.845, 17.85, 17.855, 17.86, 17.865000000000002, 17.87, 17.875, 17.88, 17.885, 17.89, 17.895, 17.900000000000002, 17.905, 17.91, 17.915, 17.92, 17.925, 17.93, 17.935, 17.94, 17.945, 17.95, 17.955000000000002, 17.96, 17.965, 17.97, 17.975, 17.98, 17.985, 17.990000000000002, 17.995, 18.0, 18.005, 18.01, 18.015, 18.02, 18.025000000000002, 18.03, 18.035, 18.04, 18.045, 18.05, 18.055, 18.06, 18.065, 18.07, 18.075, 18.080000000000002, 18.085, 18.09, 18.095, 18.1, 18.105, 18.11, 18.115000000000002, 18.12, 18.125, 18.13, 18.135, 18.14, 18.145, 18.150000000000002, 18.155, 18.16, 18.165, 18.17, 18.175, 18.18, 18.185, 18.19, 18.195, 18.2, 18.205000000000002, 18.21, 18.215, 18.22, 18.225, 18.23, 18.235, 18.240000000000002, 18.245, 18.25, 18.255, 18.26, 18.265, 18.27, 18.275000000000002, 18.28, 18.285, 18.29, 18.295, 18.3, 18.305, 18.31, 18.315, 18.32, 18.325, 18.330000000000002, 18.335, 18.34, 18.345, 18.35, 18.355, 18.36, 18.365000000000002, 18.37, 18.375, 18.38, 18.385, 18.39, 18.395, 18.400000000000002, 18.405, 18.41, 18.415, 18.42, 18.425, 18.43, 18.435, 18.44, 18.445, 18.45, 18.455000000000002, 18.46, 18.465, 18.47, 18.475, 18.48, 18.485, 18.490000000000002, 18.495, 18.5, 18.505, 18.51, 18.515, 18.52, 18.525000000000002, 18.53, 18.535, 18.54, 18.545, 18.55, 18.555, 18.56, 18.565, 18.57, 18.575, 18.580000000000002, 18.585, 18.59, 18.595, 18.6, 18.605, 18.61, 18.615000000000002, 18.62, 18.625, 18.63, 18.635, 18.64, 18.645, 18.650000000000002, 18.655, 18.66, 18.665, 18.67, 18.675, 18.68, 18.685, 18.69, 18.695, 18.7, 18.705000000000002, 18.71, 18.715, 18.72, 18.725, 18.73, 18.735, 18.740000000000002, 18.745, 18.75, 18.755, 18.76, 18.765, 18.77, 18.775000000000002, 18.78, 18.785, 18.79, 18.795, 18.8, 18.805, 18.81, 18.815, 18.82, 18.825, 18.830000000000002, 18.835, 18.84, 18.845, 18.85, 18.855, 18.86, 18.865000000000002, 18.87, 18.875, 18.88, 18.885, 18.89, 18.895, 18.900000000000002, 18.905, 18.91, 18.915, 18.92, 18.925, 18.93, 18.935, 18.94, 18.945, 18.95, 18.955000000000002, 18.96, 18.965, 18.97, 18.975, 18.98, 18.985, 18.990000000000002, 18.995, 19.0, 19.005, 19.01, 19.015, 19.02, 19.025000000000002, 19.03, 19.035, 19.04, 19.045, 19.05, 19.055, 19.06, 19.065, 19.07, 19.075, 19.080000000000002, 19.085, 19.09, 19.095, 19.1, 19.105, 19.11, 19.115000000000002, 19.12, 19.125, 19.13, 19.135, 19.14, 19.145, 19.150000000000002, 19.155, 19.16, 19.165, 19.17, 19.175, 19.18, 19.185, 19.19, 19.195, 19.2, 19.205000000000002, 19.21, 19.215, 19.22, 19.225, 19.23, 19.235, 19.240000000000002, 19.245, 19.25, 19.255, 19.26, 19.265, 19.27, 19.275000000000002, 19.28, 19.285, 19.29, 19.295, 19.3, 19.305, 19.31, 19.315, 19.32, 19.325, 19.330000000000002, 19.335, 19.34, 19.345, 19.35, 19.355, 19.36, 19.365000000000002, 19.37, 19.375, 19.38, 19.385, 19.39, 19.395, 19.400000000000002, 19.405, 19.41, 19.415, 19.42, 19.425, 19.43, 19.435, 19.44, 19.445, 19.45, 19.455000000000002, 19.46, 19.465, 19.47, 19.475, 19.48, 19.485, 19.490000000000002, 19.495, 19.5, 19.505, 19.51, 19.515, 19.52, 19.525000000000002, 19.53, 19.535, 19.54, 19.545, 19.55, 19.555, 19.56, 19.565, 19.57, 19.575, 19.580000000000002, 19.585, 19.59, 19.595, 19.6, 19.605, 19.61, 19.615000000000002, 19.62, 19.625, 19.63, 19.635, 19.64, 19.645, 19.650000000000002, 19.655, 19.66, 19.665, 19.67, 19.675, 19.68, 19.685, 19.69, 19.695, 19.7, 19.705000000000002, 19.71, 19.715, 19.72, 19.725, 19.73, 19.735, 19.740000000000002, 19.745, 19.75, 19.755, 19.76, 19.765, 19.77, 19.775000000000002, 19.78, 19.785, 19.79, 19.795, 19.8, 19.805, 19.81, 19.815, 19.82, 19.825, 19.830000000000002, 19.835, 19.84, 19.845, 19.85, 19.855, 19.86, 19.865000000000002, 19.87, 19.875, 19.88, 19.885, 19.89, 19.895, 19.900000000000002, 19.905, 19.91, 19.915, 19.92, 19.925, 19.93, 19.935, 19.94, 19.945, 19.95, 19.955000000000002, 19.96, 19.965, 19.97, 19.975, 19.98, 19.985, 19.990000000000002, 19.995, 20.0, 20.005, 20.01, 20.015, 20.02, 20.025000000000002, 20.03, 20.035, 20.04, 20.045, 20.05, 20.055, 20.06, 20.065, 20.07, 20.075, 20.080000000000002, 20.085, 20.09, 20.095, 20.1, 20.105, 20.11, 20.115000000000002, 20.12, 20.125, 20.13, 20.135, 20.14, 20.145, 20.150000000000002, 20.155, 20.16, 20.165, 20.17, 20.175, 20.18, 20.185, 20.19, 20.195, 20.2, 20.205000000000002, 20.21, 20.215, 20.22, 20.225, 20.23, 20.235, 20.240000000000002, 20.245, 20.25, 20.255, 20.26, 20.265, 20.27, 20.275000000000002, 20.28, 20.285, 20.29, 20.295, 20.3, 20.305, 20.31, 20.315, 20.32, 20.325, 20.330000000000002, 20.335, 20.34, 20.345, 20.35, 20.355, 20.36, 20.365000000000002, 20.37, 20.375, 20.38, 20.385, 20.39, 20.395, 20.400000000000002, 20.405, 20.41, 20.415, 20.42, 20.425, 20.43, 20.435, 20.44, 20.445, 20.45, 20.455000000000002, 20.46, 20.465, 20.47, 20.475, 20.48, 20.485, 20.490000000000002, 20.495, 20.5, 20.505, 20.51, 20.515, 20.52, 20.525000000000002, 20.53, 20.535, 20.54, 20.545, 20.55, 20.555, 20.56, 20.565, 20.57, 20.575, 20.580000000000002, 20.585, 20.59, 20.595, 20.6, 20.605, 20.61, 20.615000000000002, 20.62, 20.625, 20.63, 20.635, 20.64, 20.645, 20.650000000000002, 20.655, 20.66, 20.665, 20.67, 20.675, 20.68, 20.685, 20.69, 20.695, 20.7, 20.705000000000002, 20.71, 20.715, 20.72, 20.725, 20.73, 20.735, 20.740000000000002, 20.745, 20.75, 20.755, 20.76, 20.765, 20.77, 20.775000000000002, 20.78, 20.785, 20.79, 20.795, 20.8, 20.805, 20.81, 20.815, 20.82, 20.825, 20.830000000000002, 20.835, 20.84, 20.845, 20.85, 20.855, 20.86, 20.865000000000002, 20.87, 20.875, 20.88, 20.885, 20.89, 20.895, 20.900000000000002, 20.905, 20.91, 20.915, 20.92, 20.925, 20.93, 20.935, 20.94, 20.945, 20.95, 20.955000000000002, 20.96, 20.965, 20.97, 20.975, 20.98, 20.985, 20.990000000000002, 20.995, 21.0, 21.005, 21.01, 21.015, 21.02, 21.025000000000002, 21.03, 21.035, 21.04, 21.045, 21.05, 21.055, 21.06, 21.065, 21.07, 21.075, 21.080000000000002, 21.085, 21.09, 21.095, 21.1, 21.105, 21.11, 21.115000000000002, 21.12, 21.125, 21.13, 21.135, 21.14, 21.145, 21.150000000000002, 21.155, 21.16, 21.165, 21.17, 21.175, 21.18, 21.185, 21.19, 21.195, 21.2, 21.205000000000002, 21.21, 21.215, 21.22, 21.225, 21.23, 21.235, 21.240000000000002, 21.245, 21.25, 21.255, 21.26, 21.265, 21.27, 21.275000000000002, 21.28, 21.285, 21.29, 21.295, 21.3, 21.305, 21.31, 21.315, 21.32, 21.325, 21.330000000000002, 21.335, 21.34, 21.345, 21.35, 21.355, 21.36, 21.365000000000002, 21.37, 21.375, 21.38, 21.385, 21.39, 21.395, 21.400000000000002, 21.405, 21.41, 21.415, 21.42, 21.425, 21.43, 21.435, 21.44, 21.445, 21.45, 21.455000000000002, 21.46, 21.465, 21.47, 21.475, 21.48, 21.485, 21.490000000000002, 21.495, 21.5, 21.505, 21.51, 21.515, 21.52, 21.525000000000002, 21.53, 21.535, 21.54, 21.545, 21.55, 21.555, 21.56, 21.565, 21.57, 21.575, 21.580000000000002, 21.585, 21.59, 21.595, 21.6, 21.605, 21.61, 21.615000000000002, 21.62, 21.625, 21.63, 21.635, 21.64, 21.645, 21.650000000000002, 21.655, 21.66, 21.665, 21.67, 21.675, 21.68, 21.685, 21.69, 21.695, 21.7, 21.705000000000002, 21.71, 21.715, 21.72, 21.725, 21.73, 21.735, 21.740000000000002, 21.745, 21.75, 21.755, 21.76, 21.765, 21.77, 21.775000000000002, 21.78, 21.785, 21.79, 21.795, 21.8, 21.805, 21.81, 21.815, 21.82, 21.825, 21.830000000000002, 21.835, 21.84, 21.845, 21.85, 21.855, 21.86, 21.865000000000002, 21.87, 21.875, 21.88, 21.885, 21.89, 21.895, 21.900000000000002, 21.905, 21.91, 21.915, 21.92, 21.925, 21.93, 21.935, 21.94, 21.945, 21.95, 21.955000000000002, 21.96, 21.965, 21.97, 21.975, 21.98, 21.985, 21.990000000000002, 21.995, 22.0, 22.005, 22.01, 22.015, 22.02, 22.025000000000002, 22.03, 22.035, 22.04, 22.045, 22.05, 22.055, 22.06, 22.065, 22.07, 22.075, 22.080000000000002, 22.085, 22.09, 22.095, 22.1, 22.105, 22.11, 22.115000000000002, 22.12, 22.125, 22.13, 22.135, 22.14, 22.145, 22.150000000000002, 22.155, 22.16, 22.165, 22.17, 22.175, 22.18, 22.185, 22.19, 22.195, 22.2, 22.205000000000002, 22.21, 22.215, 22.22, 22.225, 22.23, 22.235, 22.240000000000002, 22.245, 22.25, 22.255, 22.26, 22.265, 22.27, 22.275000000000002, 22.28, 22.285, 22.29, 22.295, 22.3, 22.305, 22.31, 22.315, 22.32, 22.325, 22.330000000000002, 22.335, 22.34, 22.345, 22.35, 22.355, 22.36, 22.365000000000002, 22.37, 22.375, 22.38, 22.385, 22.39, 22.395, 22.400000000000002, 22.405, 22.41, 22.415, 22.42, 22.425, 22.43, 22.435, 22.44, 22.445, 22.45, 22.455000000000002, 22.46, 22.465, 22.47, 22.475, 22.48, 22.485, 22.490000000000002, 22.495, 22.5, 22.505, 22.51, 22.515, 22.52, 22.525000000000002, 22.53, 22.535, 22.54, 22.545, 22.55, 22.555, 22.56, 22.565, 22.57, 22.575, 22.580000000000002, 22.585, 22.59, 22.595, 22.6, 22.605, 22.61, 22.615000000000002, 22.62, 22.625, 22.63, 22.635, 22.64, 22.645, 22.650000000000002, 22.655, 22.66, 22.665, 22.67, 22.675, 22.68, 22.685, 22.69, 22.695, 22.7, 22.705000000000002, 22.71, 22.715, 22.72, 22.725, 22.73, 22.735, 22.740000000000002, 22.745, 22.75, 22.755, 22.76, 22.765, 22.77, 22.775000000000002, 22.78, 22.785, 22.79, 22.795, 22.8, 22.805, 22.81, 22.815, 22.82, 22.825, 22.830000000000002, 22.835, 22.84, 22.845, 22.85, 22.855, 22.86, 22.865000000000002, 22.87, 22.875, 22.88, 22.885, 22.89, 22.895, 22.900000000000002, 22.905, 22.91, 22.915, 22.92, 22.925, 22.93, 22.935, 22.94, 22.945, 22.95, 22.955000000000002, 22.96, 22.965, 22.97, 22.975, 22.98, 22.985, 22.990000000000002, 22.995, 23.0, 23.005, 23.01, 23.015, 23.02, 23.025000000000002, 23.03, 23.035, 23.04, 23.045, 23.05, 23.055, 23.06, 23.065, 23.07, 23.075, 23.080000000000002, 23.085, 23.09, 23.095, 23.1, 23.105, 23.11, 23.115000000000002, 23.12, 23.125, 23.13, 23.135, 23.14, 23.145, 23.150000000000002, 23.155, 23.16, 23.165, 23.17, 23.175, 23.18, 23.185, 23.19, 23.195, 23.2, 23.205000000000002, 23.21, 23.215, 23.22, 23.225, 23.23, 23.235, 23.240000000000002, 23.245, 23.25, 23.255, 23.26, 23.265, 23.27, 23.275000000000002, 23.28, 23.285, 23.29, 23.295, 23.3, 23.305, 23.31, 23.315, 23.32, 23.325, 23.330000000000002, 23.335, 23.34, 23.345, 23.35, 23.355, 23.36, 23.365000000000002, 23.37, 23.375, 23.38, 23.385, 23.39, 23.395, 23.400000000000002, 23.405, 23.41, 23.415, 23.42, 23.425, 23.43, 23.435, 23.44, 23.445, 23.45, 23.455000000000002, 23.46, 23.465, 23.47, 23.475, 23.48, 23.485, 23.490000000000002, 23.495, 23.5, 23.505, 23.51, 23.515, 23.52, 23.525000000000002, 23.53, 23.535, 23.54, 23.545, 23.55, 23.555, 23.56, 23.565, 23.57, 23.575, 23.580000000000002, 23.585, 23.59, 23.595, 23.6, 23.605, 23.61, 23.615000000000002, 23.62, 23.625, 23.63, 23.635, 23.64, 23.645, 23.650000000000002, 23.655, 23.66, 23.665, 23.67, 23.675, 23.68, 23.685, 23.69, 23.695, 23.7, 23.705000000000002, 23.71, 23.715, 23.72, 23.725, 23.73, 23.735, 23.740000000000002, 23.745, 23.75, 23.755, 23.76, 23.765, 23.77, 23.775000000000002, 23.78, 23.785, 23.79, 23.795, 23.8, 23.805, 23.81, 23.815, 23.82, 23.825, 23.830000000000002, 23.835, 23.84, 23.845, 23.85, 23.855, 23.86, 23.865000000000002, 23.87, 23.875, 23.88, 23.885, 23.89, 23.895, 23.900000000000002, 23.905, 23.91, 23.915, 23.92, 23.925, 23.93, 23.935000000000002, 23.94, 23.945, 23.95, 23.955000000000002, 23.96, 23.965, 23.97, 23.975, 23.98, 23.985, 23.990000000000002, 23.995, 24.0, 24.005, 24.01, 24.015, 24.02, 24.025000000000002, 24.03, 24.035, 24.04, 24.045, 24.05, 24.055, 24.060000000000002, 24.065, 24.07, 24.075, 24.080000000000002, 24.085, 24.09, 24.095, 24.1, 24.105, 24.11, 24.115000000000002, 24.12, 24.125, 24.13, 24.135, 24.14, 24.145, 24.150000000000002, 24.155, 24.16, 24.165, 24.17, 24.175, 24.18, 24.185000000000002, 24.19, 24.195, 24.2, 24.205000000000002, 24.21, 24.215, 24.22, 24.225, 24.23, 24.235, 24.240000000000002, 24.245, 24.25, 24.255, 24.26, 24.265, 24.27, 24.275000000000002, 24.28, 24.285, 24.29, 24.295, 24.3, 24.305, 24.310000000000002, 24.315, 24.32, 24.325, 24.330000000000002, 24.335, 24.34, 24.345, 24.35, 24.355, 24.36, 24.365000000000002, 24.37, 24.375, 24.38, 24.385, 24.39, 24.395, 24.400000000000002, 24.405, 24.41, 24.415, 24.42, 24.425, 24.43, 24.435000000000002, 24.44, 24.445, 24.45, 24.455000000000002, 24.46, 24.465, 24.47, 24.475, 24.48, 24.485, 24.490000000000002, 24.495, 24.5, 24.505, 24.51, 24.515, 24.52, 24.525000000000002, 24.53, 24.535, 24.54, 24.545, 24.55, 24.555, 24.560000000000002, 24.565, 24.57, 24.575, 24.580000000000002, 24.585, 24.59, 24.595, 24.6, 24.605, 24.61, 24.615000000000002, 24.62, 24.625, 24.63, 24.635, 24.64, 24.645, 24.650000000000002, 24.655, 24.66, 24.665, 24.67, 24.675, 24.68, 24.685000000000002, 24.69, 24.695, 24.7, 24.705000000000002, 24.71, 24.715, 24.72, 24.725, 24.73, 24.735, 24.740000000000002, 24.745, 24.75, 24.755, 24.76, 24.765, 24.77, 24.775000000000002, 24.78, 24.785, 24.79, 24.795, 24.8, 24.805, 24.810000000000002, 24.815, 24.82, 24.825, 24.830000000000002, 24.835, 24.84, 24.845, 24.85, 24.855, 24.86, 24.865000000000002, 24.87, 24.875, 24.88, 24.885, 24.89, 24.895, 24.900000000000002, 24.905, 24.91, 24.915, 24.92, 24.925, 24.93, 24.935000000000002, 24.94, 24.945, 24.95, 24.955000000000002, 24.96, 24.965, 24.97, 24.975, 24.98, 24.985, 24.990000000000002, 24.995, 25.0, 25.005, 25.01, 25.015, 25.02, 25.025000000000002, 25.03, 25.035, 25.04, 25.045, 25.05, 25.055, 25.060000000000002, 25.065, 25.07, 25.075, 25.080000000000002, 25.085, 25.09, 25.095, 25.1, 25.105, 25.11, 25.115000000000002, 25.12, 25.125, 25.13, 25.135, 25.14, 25.145, 25.150000000000002, 25.155, 25.16, 25.165, 25.17, 25.175, 25.18, 25.185000000000002, 25.19, 25.195, 25.2, 25.205000000000002, 25.21, 25.215, 25.22, 25.225, 25.23, 25.235, 25.240000000000002, 25.245, 25.25, 25.255, 25.26, 25.265, 25.27, 25.275000000000002, 25.28, 25.285, 25.29, 25.295, 25.3, 25.305, 25.310000000000002, 25.315, 25.32, 25.325, 25.330000000000002, 25.335, 25.34, 25.345, 25.35, 25.355, 25.36, 25.365000000000002, 25.37, 25.375, 25.38, 25.385, 25.39, 25.395, 25.400000000000002, 25.405, 25.41, 25.415, 25.42, 25.425, 25.43, 25.435000000000002, 25.44, 25.445, 25.45, 25.455000000000002, 25.46, 25.465, 25.47, 25.475, 25.48, 25.485, 25.490000000000002, 25.495, 25.5, 25.505, 25.51, 25.515, 25.52, 25.525000000000002, 25.53, 25.535, 25.54, 25.545, 25.55, 25.555, 25.560000000000002, 25.565, 25.57, 25.575, 25.580000000000002, 25.585, 25.59, 25.595, 25.6, 25.605, 25.61, 25.615000000000002, 25.62, 25.625, 25.63, 25.635, 25.64, 25.645, 25.650000000000002, 25.655, 25.66, 25.665, 25.67, 25.675, 25.68, 25.685000000000002, 25.69, 25.695, 25.7, 25.705000000000002, 25.71, 25.715, 25.72, 25.725, 25.73, 25.735, 25.740000000000002, 25.745, 25.75, 25.755, 25.76, 25.765, 25.77, 25.775000000000002, 25.78, 25.785, 25.79, 25.795, 25.8, 25.805, 25.810000000000002, 25.815, 25.82, 25.825, 25.830000000000002, 25.835, 25.84, 25.845, 25.85, 25.855, 25.86, 25.865000000000002, 25.87, 25.875, 25.88, 25.885, 25.89, 25.895, 25.900000000000002, 25.905, 25.91, 25.915, 25.92, 25.925, 25.93, 25.935000000000002, 25.94, 25.945, 25.95, 25.955000000000002, 25.96, 25.965, 25.97, 25.975, 25.98, 25.985, 25.990000000000002, 25.995, 26.0, 26.005, 26.01, 26.015, 26.02, 26.025000000000002, 26.03, 26.035, 26.04, 26.045, 26.05, 26.055, 26.060000000000002, 26.065, 26.07, 26.075, 26.080000000000002, 26.085, 26.09, 26.095, 26.1, 26.105, 26.11, 26.115000000000002, 26.12, 26.125, 26.13, 26.135, 26.14, 26.145, 26.150000000000002, 26.155, 26.16, 26.165, 26.17, 26.175, 26.18, 26.185000000000002, 26.19, 26.195, 26.2, 26.205000000000002, 26.21, 26.215, 26.22, 26.225, 26.23, 26.235, 26.240000000000002, 26.245, 26.25, 26.255, 26.26, 26.265, 26.27, 26.275000000000002, 26.28, 26.285, 26.29, 26.295, 26.3, 26.305, 26.310000000000002, 26.315, 26.32, 26.325, 26.330000000000002, 26.335, 26.34, 26.345, 26.35, 26.355, 26.36, 26.365000000000002, 26.37, 26.375, 26.38, 26.385, 26.39, 26.395, 26.400000000000002, 26.405, 26.41, 26.415, 26.42, 26.425, 26.43, 26.435000000000002, 26.44, 26.445, 26.45, 26.455000000000002, 26.46, 26.465, 26.47, 26.475, 26.48, 26.485, 26.490000000000002, 26.495, 26.5, 26.505, 26.51, 26.515, 26.52, 26.525000000000002, 26.53, 26.535, 26.54, 26.545, 26.55, 26.555, 26.560000000000002, 26.565, 26.57, 26.575, 26.580000000000002, 26.585, 26.59, 26.595, 26.6, 26.605, 26.61, 26.615000000000002, 26.62, 26.625, 26.63, 26.635, 26.64, 26.645, 26.650000000000002, 26.655, 26.66, 26.665, 26.67, 26.675, 26.68, 26.685000000000002, 26.69, 26.695, 26.7, 26.705000000000002, 26.71, 26.715, 26.72, 26.725, 26.73, 26.735, 26.740000000000002, 26.745, 26.75, 26.755, 26.76, 26.765, 26.77, 26.775000000000002, 26.78, 26.785, 26.79, 26.795, 26.8, 26.805, 26.810000000000002, 26.815, 26.82, 26.825, 26.830000000000002, 26.835, 26.84, 26.845, 26.85, 26.855, 26.86, 26.865000000000002, 26.87, 26.875, 26.88, 26.885, 26.89, 26.895, 26.900000000000002, 26.905, 26.91, 26.915, 26.92, 26.925, 26.93, 26.935000000000002, 26.94, 26.945, 26.95, 26.955000000000002, 26.96, 26.965, 26.97, 26.975, 26.98, 26.985, 26.990000000000002, 26.995, 27.0, 27.005, 27.01, 27.015, 27.02, 27.025000000000002, 27.03, 27.035, 27.04, 27.045, 27.05, 27.055, 27.060000000000002, 27.065, 27.07, 27.075, 27.080000000000002, 27.085, 27.09, 27.095, 27.1, 27.105, 27.11, 27.115000000000002, 27.12, 27.125, 27.13, 27.135, 27.14, 27.145, 27.150000000000002, 27.155, 27.16, 27.165, 27.17, 27.175, 27.18, 27.185000000000002, 27.19, 27.195, 27.2, 27.205000000000002, 27.21, 27.215, 27.22, 27.225, 27.23, 27.235, 27.240000000000002, 27.245, 27.25, 27.255, 27.26, 27.265, 27.27, 27.275000000000002, 27.28, 27.285, 27.29, 27.295, 27.3, 27.305, 27.310000000000002, 27.315, 27.32, 27.325, 27.330000000000002, 27.335, 27.34, 27.345, 27.35, 27.355, 27.36, 27.365000000000002, 27.37, 27.375, 27.38, 27.385, 27.39, 27.395, 27.400000000000002, 27.405, 27.41, 27.415, 27.42, 27.425, 27.43, 27.435000000000002, 27.44, 27.445, 27.45, 27.455000000000002, 27.46, 27.465, 27.47, 27.475, 27.48, 27.485, 27.490000000000002, 27.495, 27.5, 27.505, 27.51, 27.515, 27.52, 27.525000000000002, 27.53, 27.535, 27.54, 27.545, 27.55, 27.555, 27.560000000000002, 27.565, 27.57, 27.575, 27.580000000000002, 27.585, 27.59, 27.595, 27.6, 27.605, 27.61, 27.615000000000002, 27.62, 27.625, 27.63, 27.635, 27.64, 27.645, 27.650000000000002, 27.655, 27.66, 27.665, 27.67, 27.675, 27.68, 27.685000000000002, 27.69, 27.695, 27.7, 27.705000000000002, 27.71, 27.715, 27.72, 27.725, 27.73, 27.735, 27.740000000000002, 27.745, 27.75, 27.755, 27.76, 27.765, 27.77, 27.775000000000002, 27.78, 27.785, 27.79, 27.795, 27.8, 27.805, 27.810000000000002, 27.815, 27.82, 27.825, 27.830000000000002, 27.835, 27.84, 27.845, 27.85, 27.855, 27.86, 27.865000000000002, 27.87, 27.875, 27.88, 27.885, 27.89, 27.895, 27.900000000000002, 27.905, 27.91, 27.915, 27.92, 27.925, 27.93, 27.935000000000002, 27.94, 27.945, 27.95, 27.955000000000002, 27.96, 27.965, 27.97, 27.975, 27.98, 27.985, 27.990000000000002, 27.995, 28.0, 28.005, 28.01, 28.015, 28.02, 28.025000000000002, 28.03, 28.035, 28.04, 28.045, 28.05, 28.055, 28.060000000000002, 28.065, 28.07, 28.075, 28.080000000000002, 28.085, 28.09, 28.095, 28.1, 28.105, 28.11, 28.115000000000002, 28.12, 28.125, 28.13, 28.135, 28.14, 28.145, 28.150000000000002, 28.155, 28.16, 28.165, 28.17, 28.175, 28.18, 28.185000000000002, 28.19, 28.195, 28.2, 28.205000000000002, 28.21, 28.215, 28.22, 28.225, 28.23, 28.235, 28.240000000000002, 28.245, 28.25, 28.255, 28.26, 28.265, 28.27, 28.275000000000002, 28.28, 28.285, 28.29, 28.295, 28.3, 28.305, 28.310000000000002, 28.315, 28.32, 28.325, 28.330000000000002, 28.335, 28.34, 28.345, 28.35, 28.355, 28.36, 28.365000000000002, 28.37, 28.375, 28.38, 28.385, 28.39, 28.395, 28.400000000000002, 28.405, 28.41, 28.415, 28.42, 28.425, 28.43, 28.435000000000002, 28.44, 28.445, 28.45, 28.455000000000002, 28.46, 28.465, 28.47, 28.475, 28.48, 28.485, 28.490000000000002, 28.495, 28.5, 28.505, 28.51, 28.515, 28.52, 28.525000000000002, 28.53, 28.535, 28.54, 28.545, 28.55, 28.555, 28.560000000000002, 28.565, 28.57, 28.575, 28.580000000000002, 28.585, 28.59, 28.595, 28.6, 28.605, 28.61, 28.615000000000002, 28.62, 28.625, 28.63, 28.635, 28.64, 28.645, 28.650000000000002, 28.655, 28.66, 28.665, 28.67, 28.675, 28.68, 28.685000000000002, 28.69, 28.695, 28.7, 28.705000000000002, 28.71, 28.715, 28.72, 28.725, 28.73, 28.735, 28.740000000000002, 28.745, 28.75, 28.755, 28.76, 28.765, 28.77, 28.775000000000002, 28.78, 28.785, 28.79, 28.795, 28.8, 28.805, 28.810000000000002, 28.815, 28.82, 28.825, 28.830000000000002, 28.835, 28.84, 28.845, 28.85, 28.855, 28.86, 28.865000000000002, 28.87, 28.875, 28.88, 28.885, 28.89, 28.895, 28.900000000000002, 28.905, 28.91, 28.915, 28.92, 28.925, 28.93, 28.935000000000002, 28.94, 28.945, 28.95, 28.955000000000002, 28.96, 28.965, 28.97, 28.975, 28.98, 28.985, 28.990000000000002, 28.995, 29.0, 29.005, 29.01, 29.015, 29.02, 29.025000000000002, 29.03, 29.035, 29.04, 29.045, 29.05, 29.055, 29.060000000000002, 29.065, 29.07, 29.075, 29.080000000000002, 29.085, 29.09, 29.095, 29.1, 29.105, 29.11, 29.115000000000002, 29.12, 29.125, 29.13, 29.135, 29.14, 29.145, 29.150000000000002, 29.155, 29.16, 29.165, 29.17, 29.175, 29.18, 29.185000000000002, 29.19, 29.195, 29.2, 29.205000000000002, 29.21, 29.215, 29.22, 29.225, 29.23, 29.235, 29.240000000000002, 29.245, 29.25, 29.255, 29.26, 29.265, 29.27, 29.275000000000002, 29.28, 29.285, 29.29, 29.295, 29.3, 29.305, 29.310000000000002, 29.315, 29.32, 29.325, 29.330000000000002, 29.335, 29.34, 29.345, 29.35, 29.355, 29.36, 29.365000000000002, 29.37, 29.375, 29.38, 29.385, 29.39, 29.395, 29.400000000000002, 29.405, 29.41, 29.415, 29.42, 29.425, 29.43, 29.435000000000002, 29.44, 29.445, 29.45, 29.455000000000002, 29.46, 29.465, 29.47, 29.475, 29.48, 29.485, 29.490000000000002, 29.495, 29.5, 29.505, 29.51, 29.515, 29.52, 29.525000000000002, 29.53, 29.535, 29.54, 29.545, 29.55, 29.555, 29.560000000000002, 29.565, 29.57, 29.575, 29.580000000000002, 29.585, 29.59, 29.595, 29.6, 29.605, 29.61, 29.615000000000002, 29.62, 29.625, 29.63, 29.635, 29.64, 29.645, 29.650000000000002, 29.655, 29.66, 29.665, 29.67, 29.675, 29.68, 29.685000000000002, 29.69, 29.695, 29.7, 29.705000000000002, 29.71, 29.715, 29.72, 29.725, 29.73, 29.735, 29.740000000000002, 29.745, 29.75, 29.755, 29.76, 29.765, 29.77, 29.775000000000002, 29.78, 29.785, 29.79, 29.795, 29.8, 29.805, 29.810000000000002, 29.815, 29.82, 29.825, 29.830000000000002, 29.835, 29.84, 29.845, 29.85, 29.855, 29.86, 29.865000000000002, 29.87, 29.875, 29.88, 29.885, 29.89, 29.895, 29.900000000000002, 29.905, 29.91, 29.915, 29.92, 29.925, 29.93, 29.935000000000002, 29.94, 29.945, 29.95, 29.955000000000002, 29.96, 29.965, 29.97, 29.975, 29.98, 29.985, 29.990000000000002, 29.995, 30.0, 30.005, 30.01, 30.015, 30.02, 30.025000000000002, 30.03, 30.035, 30.04, 30.045, 30.05, 30.055, 30.060000000000002, 30.065, 30.07, 30.075, 30.080000000000002, 30.085, 30.09, 30.095, 30.1, 30.105, 30.11, 30.115000000000002, 30.12, 30.125, 30.13, 30.135, 30.14, 30.145, 30.150000000000002, 30.155, 30.16, 30.165, 30.17, 30.175, 30.18, 30.185000000000002, 30.19, 30.195, 30.2, 30.205000000000002, 30.21, 30.215, 30.22, 30.225, 30.23, 30.235, 30.240000000000002, 30.245, 30.25, 30.255, 30.26, 30.265, 30.27, 30.275000000000002, 30.28, 30.285, 30.29, 30.295, 30.3, 30.305, 30.310000000000002, 30.315, 30.32, 30.325, 30.330000000000002, 30.335, 30.34, 30.345, 30.35, 30.355, 30.36, 30.365000000000002, 30.37, 30.375, 30.38, 30.385, 30.39, 30.395, 30.400000000000002, 30.405, 30.41, 30.415, 30.42, 30.425, 30.43, 30.435000000000002, 30.44, 30.445, 30.45, 30.455000000000002, 30.46, 30.465, 30.47, 30.475, 30.48, 30.485, 30.490000000000002, 30.495, 30.5, 30.505, 30.51, 30.515, 30.52, 30.525000000000002, 30.53, 30.535, 30.54, 30.545, 30.55, 30.555, 30.560000000000002, 30.565, 30.57, 30.575, 30.580000000000002, 30.585, 30.59, 30.595, 30.6, 30.605, 30.61, 30.615000000000002, 30.62, 30.625, 30.63, 30.635, 30.64, 30.645, 30.650000000000002, 30.655, 30.66, 30.665, 30.67, 30.675, 30.68, 30.685000000000002, 30.69, 30.695, 30.7, 30.705000000000002, 30.71, 30.715, 30.72, 30.725, 30.73, 30.735, 30.740000000000002, 30.745, 30.75, 30.755, 30.76, 30.765, 30.77, 30.775000000000002, 30.78, 30.785, 30.79, 30.795, 30.8, 30.805, 30.810000000000002, 30.815, 30.82, 30.825, 30.830000000000002, 30.835, 30.84, 30.845000000000002, 30.85, 30.855, 30.86, 30.865000000000002, 30.87, 30.875, 30.88, 30.885, 30.89, 30.895, 30.900000000000002, 30.905, 30.91, 30.915, 30.92, 30.925, 30.93, 30.935000000000002, 30.94, 30.945, 30.95, 30.955000000000002, 30.96, 30.965, 30.970000000000002, 30.975, 30.98, 30.985, 30.990000000000002, 30.995, 31.0, 31.005, 31.01, 31.015, 31.02, 31.025000000000002, 31.03, 31.035, 31.04, 31.045, 31.05, 31.055, 31.060000000000002, 31.065, 31.07, 31.075, 31.080000000000002, 31.085, 31.09, 31.095000000000002, 31.1, 31.105, 31.11, 31.115000000000002, 31.12, 31.125, 31.13, 31.135, 31.14, 31.145, 31.150000000000002, 31.155, 31.16, 31.165, 31.17, 31.175, 31.18, 31.185000000000002, 31.19, 31.195, 31.2, 31.205000000000002, 31.21, 31.215, 31.220000000000002, 31.225, 31.23, 31.235, 31.240000000000002, 31.245, 31.25, 31.255, 31.26, 31.265, 31.27, 31.275000000000002, 31.28, 31.285, 31.29, 31.295, 31.3, 31.305, 31.310000000000002, 31.315, 31.32, 31.325, 31.330000000000002, 31.335, 31.34, 31.345000000000002, 31.35, 31.355, 31.36, 31.365000000000002, 31.37, 31.375, 31.38, 31.385, 31.39, 31.395, 31.400000000000002, 31.405, 31.41, 31.415, 31.42, 31.425, 31.43, 31.435000000000002, 31.44, 31.445, 31.45, 31.455000000000002, 31.46, 31.465, 31.470000000000002, 31.475, 31.48, 31.485, 31.490000000000002, 31.495, 31.5, 31.505, 31.51, 31.515, 31.52, 31.525000000000002, 31.53, 31.535, 31.54, 31.545, 31.55, 31.555, 31.560000000000002, 31.565, 31.57, 31.575, 31.580000000000002, 31.585, 31.59, 31.595000000000002, 31.6, 31.605, 31.61, 31.615000000000002, 31.62, 31.625, 31.63, 31.635, 31.64, 31.645, 31.650000000000002, 31.655, 31.66, 31.665, 31.67, 31.675, 31.68, 31.685000000000002, 31.69, 31.695, 31.7, 31.705000000000002, 31.71, 31.715, 31.720000000000002, 31.725, 31.73, 31.735, 31.740000000000002, 31.745, 31.75, 31.755, 31.76, 31.765, 31.77, 31.775000000000002, 31.78, 31.785, 31.79, 31.795, 31.8, 31.805, 31.810000000000002, 31.815, 31.82, 31.825, 31.830000000000002, 31.835, 31.84, 31.845000000000002, 31.85, 31.855, 31.86, 31.865000000000002, 31.87, 31.875, 31.88, 31.885, 31.89, 31.895, 31.900000000000002, 31.905, 31.91, 31.915, 31.92, 31.925, 31.93, 31.935000000000002, 31.94, 31.945, 31.95, 31.955000000000002, 31.96, 31.965, 31.970000000000002, 31.975, 31.98, 31.985, 31.990000000000002, 31.995, 32.0, 32.005, 32.01, 32.015, 32.02, 32.025, 32.03, 32.035000000000004, 32.04, 32.045, 32.05, 32.055, 32.06, 32.065, 32.07, 32.075, 32.08, 32.085, 32.09, 32.095, 32.1, 32.105000000000004, 32.11, 32.115, 32.12, 32.125, 32.13, 32.135, 32.14, 32.145, 32.15, 32.155, 32.160000000000004, 32.165, 32.17, 32.175, 32.18, 32.185, 32.19, 32.195, 32.2, 32.205, 32.21, 32.215, 32.22, 32.225, 32.230000000000004, 32.235, 32.24, 32.245, 32.25, 32.255, 32.26, 32.265, 32.27, 32.275, 32.28, 32.285000000000004, 32.29, 32.295, 32.3, 32.305, 32.31, 32.315, 32.32, 32.325, 32.33, 32.335, 32.34, 32.345, 32.35, 32.355000000000004, 32.36, 32.365, 32.37, 32.375, 32.38, 32.385, 32.39, 32.395, 32.4, 32.405, 32.410000000000004, 32.415, 32.42, 32.425, 32.43, 32.435, 32.44, 32.445, 32.45, 32.455, 32.46, 32.465, 32.47, 32.475, 32.480000000000004, 32.485, 32.49, 32.495, 32.5, 32.505, 32.51, 32.515, 32.52, 32.525, 32.53, 32.535000000000004, 32.54, 32.545, 32.55, 32.555, 32.56, 32.565, 32.57, 32.575, 32.58, 32.585, 32.59, 32.595, 32.6, 32.605000000000004, 32.61, 32.615, 32.62, 32.625, 32.63, 32.635, 32.64, 32.645, 32.65, 32.655, 32.660000000000004, 32.665, 32.67, 32.675, 32.68, 32.685, 32.69, 32.695, 32.7, 32.705, 32.71, 32.715, 32.72, 32.725, 32.730000000000004, 32.735, 32.74, 32.745, 32.75, 32.755, 32.76, 32.765, 32.77, 32.775, 32.78, 32.785000000000004, 32.79, 32.795, 32.8, 32.805, 32.81, 32.815, 32.82, 32.825, 32.83, 32.835, 32.84, 32.845, 32.85, 32.855000000000004, 32.86, 32.865, 32.87, 32.875, 32.88, 32.885, 32.89, 32.895, 32.9, 32.905, 32.910000000000004, 32.915, 32.92, 32.925, 32.93, 32.935, 32.94, 32.945, 32.95, 32.955, 32.96, 32.965, 32.97, 32.975, 32.980000000000004, 32.985, 32.99, 32.995, 33.0, 33.005, 33.01, 33.015, 33.02, 33.025, 33.03, 33.035000000000004, 33.04, 33.045, 33.05, 33.055, 33.06, 33.065, 33.07, 33.075, 33.08, 33.085, 33.09, 33.095, 33.1, 33.105000000000004, 33.11, 33.115, 33.12, 33.125, 33.13, 33.135, 33.14, 33.145, 33.15, 33.155, 33.160000000000004, 33.165, 33.17, 33.175, 33.18, 33.185, 33.19, 33.195, 33.2, 33.205, 33.21, 33.215, 33.22, 33.225, 33.230000000000004, 33.235, 33.24, 33.245, 33.25, 33.255, 33.26, 33.265, 33.27, 33.275, 33.28, 33.285000000000004, 33.29, 33.295, 33.3, 33.305, 33.31, 33.315, 33.32, 33.325, 33.33, 33.335, 33.34, 33.345, 33.35, 33.355000000000004, 33.36, 33.365, 33.37, 33.375, 33.38, 33.385, 33.39, 33.395, 33.4, 33.405, 33.410000000000004, 33.415, 33.42, 33.425, 33.43, 33.435, 33.44, 33.445, 33.45, 33.455, 33.46, 33.465, 33.47, 33.475, 33.480000000000004, 33.485, 33.49, 33.495, 33.5, 33.505, 33.51, 33.515, 33.52, 33.525, 33.53, 33.535000000000004, 33.54, 33.545, 33.55, 33.555, 33.56, 33.565, 33.57, 33.575, 33.58, 33.585, 33.59, 33.595, 33.6, 33.605000000000004, 33.61, 33.615, 33.62, 33.625, 33.63, 33.635, 33.64, 33.645, 33.65, 33.655, 33.660000000000004, 33.665, 33.67, 33.675, 33.68, 33.685, 33.69, 33.695, 33.7, 33.705, 33.71, 33.715, 33.72, 33.725, 33.730000000000004, 33.735, 33.74, 33.745, 33.75, 33.755, 33.76, 33.765, 33.77, 33.775, 33.78, 33.785000000000004, 33.79, 33.795, 33.8, 33.805, 33.81, 33.815, 33.82, 33.825, 33.83, 33.835, 33.84, 33.845, 33.85, 33.855000000000004, 33.86, 33.865, 33.87, 33.875, 33.88, 33.885, 33.89, 33.895, 33.9, 33.905, 33.910000000000004, 33.915, 33.92, 33.925, 33.93, 33.935, 33.94, 33.945, 33.95, 33.955, 33.96, 33.965, 33.97, 33.975, 33.980000000000004, 33.985, 33.99, 33.995, 34.0, 34.005, 34.01, 34.015, 34.02, 34.025, 34.03, 34.035000000000004, 34.04, 34.045, 34.05, 34.055, 34.06, 34.065, 34.07, 34.075, 34.08, 34.085, 34.09, 34.095, 34.1, 34.105000000000004, 34.11, 34.115, 34.12, 34.125, 34.13, 34.135, 34.14, 34.145, 34.15, 34.155, 34.160000000000004, 34.165, 34.17, 34.175000000000004, 34.18, 34.185, 34.19, 34.195, 34.2, 34.205, 34.21, 34.215, 34.22, 34.225, 34.230000000000004, 34.235, 34.24, 34.245, 34.25, 34.255, 34.26, 34.265, 34.27, 34.275, 34.28, 34.285000000000004, 34.29, 34.295, 34.300000000000004, 34.305, 34.31, 34.315, 34.32, 34.325, 34.33, 34.335, 34.34, 34.345, 34.35, 34.355000000000004, 34.36, 34.365, 34.37, 34.375, 34.38, 34.385, 34.39, 34.395, 34.4, 34.405, 34.410000000000004, 34.415, 34.42, 34.425000000000004, 34.43, 34.435, 34.44, 34.445, 34.45, 34.455, 34.46, 34.465, 34.47, 34.475, 34.480000000000004, 34.485, 34.49, 34.495, 34.5, 34.505, 34.51, 34.515, 34.52, 34.525, 34.53, 34.535000000000004, 34.54, 34.545, 34.550000000000004, 34.555, 34.56, 34.565, 34.57, 34.575, 34.58, 34.585, 34.59, 34.595, 34.6, 34.605000000000004, 34.61, 34.615, 34.62, 34.625, 34.63, 34.635, 34.64, 34.645, 34.65, 34.655, 34.660000000000004, 34.665, 34.67, 34.675000000000004, 34.68, 34.685, 34.69, 34.695, 34.7, 34.705, 34.71, 34.715, 34.72, 34.725, 34.730000000000004, 34.735, 34.74, 34.745, 34.75, 34.755, 34.76, 34.765, 34.77, 34.775, 34.78, 34.785000000000004, 34.79, 34.795, 34.800000000000004, 34.805, 34.81, 34.815, 34.82, 34.825, 34.83, 34.835, 34.84, 34.845, 34.85, 34.855000000000004, 34.86, 34.865, 34.87, 34.875, 34.88, 34.885, 34.89, 34.895, 34.9, 34.905, 34.910000000000004, 34.915, 34.92, 34.925000000000004, 34.93, 34.935, 34.94, 34.945, 34.95, 34.955, 34.96, 34.965, 34.97, 34.975, 34.980000000000004, 34.985, 34.99, 34.995, 35.0, 35.005, 35.01, 35.015, 35.02, 35.025, 35.03, 35.035000000000004, 35.04, 35.045, 35.050000000000004, 35.055, 35.06, 35.065, 35.07, 35.075, 35.08, 35.085, 35.09, 35.095, 35.1, 35.105000000000004, 35.11, 35.115, 35.12, 35.125, 35.13, 35.135, 35.14, 35.145, 35.15, 35.155, 35.160000000000004, 35.165, 35.17, 35.175000000000004, 35.18, 35.185, 35.19, 35.195, 35.2, 35.205, 35.21, 35.215, 35.22, 35.225, 35.230000000000004, 35.235, 35.24, 35.245, 35.25, 35.255, 35.26, 35.265, 35.27, 35.275, 35.28, 35.285000000000004, 35.29, 35.295, 35.300000000000004, 35.305, 35.31, 35.315, 35.32, 35.325, 35.33, 35.335, 35.34, 35.345, 35.35, 35.355000000000004, 35.36, 35.365, 35.37, 35.375, 35.38, 35.385, 35.39, 35.395, 35.4, 35.405, 35.410000000000004, 35.415, 35.42, 35.425000000000004, 35.43, 35.435, 35.44, 35.445, 35.45, 35.455, 35.46, 35.465, 35.47, 35.475, 35.480000000000004, 35.485, 35.49, 35.495, 35.5, 35.505, 35.51, 35.515, 35.52, 35.525, 35.53, 35.535000000000004, 35.54, 35.545, 35.550000000000004, 35.555, 35.56, 35.565, 35.57, 35.575, 35.58, 35.585, 35.59, 35.595, 35.6, 35.605000000000004, 35.61, 35.615, 35.62, 35.625, 35.63, 35.635, 35.64, 35.645, 35.65, 35.655, 35.660000000000004, 35.665, 35.67, 35.675000000000004, 35.68, 35.685, 35.69, 35.695, 35.7, 35.705, 35.71, 35.715, 35.72, 35.725, 35.730000000000004, 35.735, 35.74, 35.745, 35.75, 35.755, 35.76, 35.765, 35.77, 35.775, 35.78, 35.785000000000004, 35.79, 35.795, 35.800000000000004, 35.805, 35.81, 35.815, 35.82, 35.825, 35.83, 35.835, 35.84, 35.845, 35.85, 35.855000000000004, 35.86, 35.865, 35.87, 35.875, 35.88, 35.885, 35.89, 35.895, 35.9, 35.905, 35.910000000000004, 35.915, 35.92, 35.925000000000004, 35.93, 35.935, 35.94, 35.945, 35.95, 35.955, 35.96, 35.965, 35.97, 35.975, 35.980000000000004, 35.985, 35.99, 35.995, 36.0, 36.005, 36.01, 36.015, 36.02, 36.025, 36.03, 36.035000000000004, 36.04, 36.045, 36.050000000000004, 36.055, 36.06, 36.065, 36.07, 36.075, 36.08, 36.085, 36.09, 36.095, 36.1, 36.105000000000004, 36.11, 36.115, 36.12, 36.125, 36.13, 36.135, 36.14, 36.145, 36.15, 36.155, 36.160000000000004, 36.165, 36.17, 36.175000000000004, 36.18, 36.185, 36.19, 36.195, 36.2, 36.205, 36.21, 36.215, 36.22, 36.225, 36.230000000000004, 36.235, 36.24, 36.245, 36.25, 36.255, 36.26, 36.265, 36.27, 36.275, 36.28, 36.285000000000004, 36.29, 36.295, 36.300000000000004, 36.305, 36.31, 36.315, 36.32, 36.325, 36.33, 36.335, 36.34, 36.345, 36.35, 36.355000000000004, 36.36, 36.365, 36.37, 36.375, 36.38, 36.385, 36.39, 36.395, 36.4, 36.405, 36.410000000000004, 36.415, 36.42, 36.425000000000004, 36.43, 36.435, 36.44, 36.445, 36.45, 36.455, 36.46, 36.465, 36.47, 36.475, 36.480000000000004, 36.485, 36.49, 36.495, 36.5, 36.505, 36.51, 36.515, 36.52, 36.525, 36.53, 36.535000000000004, 36.54, 36.545, 36.550000000000004, 36.555, 36.56, 36.565, 36.57, 36.575, 36.58, 36.585, 36.59, 36.595, 36.6, 36.605000000000004, 36.61, 36.615, 36.62, 36.625, 36.63, 36.635, 36.64, 36.645, 36.65, 36.655, 36.660000000000004, 36.665, 36.67, 36.675000000000004, 36.68, 36.685, 36.69, 36.695, 36.7, 36.705, 36.71, 36.715, 36.72, 36.725, 36.730000000000004, 36.735, 36.74, 36.745, 36.75, 36.755, 36.76, 36.765, 36.77, 36.775, 36.78, 36.785000000000004, 36.79, 36.795, 36.800000000000004, 36.805, 36.81, 36.815, 36.82, 36.825, 36.83, 36.835, 36.84, 36.845, 36.85, 36.855000000000004, 36.86, 36.865, 36.87, 36.875, 36.88, 36.885, 36.89, 36.895, 36.9, 36.905, 36.910000000000004, 36.915, 36.92, 36.925000000000004, 36.93, 36.935, 36.94, 36.945, 36.95, 36.955, 36.96, 36.965, 36.97, 36.975, 36.980000000000004, 36.985, 36.99, 36.995, 37.0, 37.005, 37.01, 37.015, 37.02, 37.025, 37.03, 37.035000000000004, 37.04, 37.045, 37.050000000000004, 37.055, 37.06, 37.065, 37.07, 37.075, 37.08, 37.085, 37.09, 37.095, 37.1, 37.105000000000004, 37.11, 37.115, 37.12, 37.125, 37.13, 37.135, 37.14, 37.145, 37.15, 37.155, 37.160000000000004, 37.165, 37.17, 37.175000000000004, 37.18, 37.185, 37.19, 37.195, 37.2, 37.205, 37.21, 37.215, 37.22, 37.225, 37.230000000000004, 37.235, 37.24, 37.245, 37.25, 37.255, 37.26, 37.265, 37.27, 37.275, 37.28, 37.285000000000004, 37.29, 37.295, 37.300000000000004, 37.305, 37.31, 37.315, 37.32, 37.325, 37.33, 37.335, 37.34, 37.345, 37.35, 37.355000000000004, 37.36, 37.365, 37.37, 37.375, 37.38, 37.385, 37.39, 37.395, 37.4, 37.405, 37.410000000000004, 37.415, 37.42, 37.425000000000004, 37.43, 37.435, 37.44, 37.445, 37.45, 37.455, 37.46, 37.465, 37.47, 37.475, 37.480000000000004, 37.485, 37.49, 37.495, 37.5, 37.505, 37.51, 37.515, 37.52, 37.525, 37.53, 37.535000000000004, 37.54, 37.545, 37.550000000000004, 37.555, 37.56, 37.565, 37.57, 37.575, 37.58, 37.585, 37.59, 37.595, 37.6, 37.605000000000004, 37.61, 37.615, 37.62, 37.625, 37.63, 37.635, 37.64, 37.645, 37.65, 37.655, 37.660000000000004, 37.665, 37.67, 37.675000000000004, 37.68, 37.685, 37.69, 37.695, 37.7, 37.705, 37.71, 37.715, 37.72, 37.725, 37.730000000000004, 37.735, 37.74, 37.745, 37.75, 37.755, 37.76, 37.765, 37.77, 37.775, 37.78, 37.785000000000004, 37.79, 37.795, 37.800000000000004, 37.805, 37.81, 37.815, 37.82, 37.825, 37.83, 37.835, 37.84, 37.845, 37.85, 37.855000000000004, 37.86, 37.865, 37.87, 37.875, 37.88, 37.885, 37.89, 37.895, 37.9, 37.905, 37.910000000000004, 37.915, 37.92, 37.925000000000004, 37.93, 37.935, 37.94, 37.945, 37.95, 37.955, 37.96, 37.965, 37.97, 37.975, 37.980000000000004, 37.985, 37.99, 37.995, 38.0, 38.005, 38.01, 38.015, 38.02, 38.025, 38.03, 38.035000000000004, 38.04, 38.045, 38.050000000000004, 38.055, 38.06, 38.065, 38.07, 38.075, 38.08, 38.085, 38.09, 38.095, 38.1, 38.105000000000004, 38.11, 38.115, 38.12, 38.125, 38.13, 38.135, 38.14, 38.145, 38.15, 38.155, 38.160000000000004, 38.165, 38.17, 38.175000000000004, 38.18, 38.185, 38.19, 38.195, 38.2, 38.205, 38.21, 38.215, 38.22, 38.225, 38.230000000000004, 38.235, 38.24, 38.245, 38.25, 38.255, 38.26, 38.265, 38.27, 38.275, 38.28, 38.285000000000004, 38.29, 38.295, 38.300000000000004, 38.305, 38.31, 38.315, 38.32, 38.325, 38.33, 38.335, 38.34, 38.345, 38.35, 38.355000000000004, 38.36, 38.365, 38.37, 38.375, 38.38, 38.385, 38.39, 38.395, 38.4, 38.405, 38.410000000000004, 38.415, 38.42, 38.425000000000004, 38.43, 38.435, 38.44, 38.445, 38.45, 38.455, 38.46, 38.465, 38.47, 38.475, 38.480000000000004, 38.485, 38.49, 38.495, 38.5, 38.505, 38.51, 38.515, 38.52, 38.525, 38.53, 38.535000000000004, 38.54, 38.545, 38.550000000000004, 38.555, 38.56, 38.565, 38.57, 38.575, 38.58, 38.585, 38.59, 38.595, 38.6, 38.605000000000004, 38.61, 38.615, 38.62, 38.625, 38.63, 38.635, 38.64, 38.645, 38.65, 38.655, 38.660000000000004, 38.665, 38.67, 38.675000000000004, 38.68, 38.685, 38.69, 38.695, 38.7, 38.705, 38.71, 38.715, 38.72, 38.725, 38.730000000000004, 38.735, 38.74, 38.745, 38.75, 38.755, 38.76, 38.765, 38.77, 38.775, 38.78, 38.785000000000004, 38.79, 38.795, 38.800000000000004, 38.805, 38.81, 38.815, 38.82, 38.825, 38.83, 38.835, 38.84, 38.845, 38.85, 38.855000000000004, 38.86, 38.865, 38.87, 38.875, 38.88, 38.885, 38.89, 38.895, 38.9, 38.905, 38.910000000000004, 38.915, 38.92, 38.925000000000004, 38.93, 38.935, 38.94, 38.945, 38.95, 38.955, 38.96, 38.965, 38.97, 38.975, 38.980000000000004, 38.985, 38.99, 38.995, 39.0, 39.005, 39.01, 39.015, 39.02, 39.025, 39.03, 39.035000000000004, 39.04, 39.045, 39.050000000000004, 39.055, 39.06, 39.065, 39.07, 39.075, 39.08, 39.085, 39.09, 39.095, 39.1, 39.105000000000004, 39.11, 39.115, 39.12, 39.125, 39.13, 39.135, 39.14, 39.145, 39.15, 39.155, 39.160000000000004, 39.165, 39.17, 39.175000000000004, 39.18, 39.185, 39.19, 39.195, 39.2, 39.205, 39.21, 39.215, 39.22, 39.225, 39.230000000000004, 39.235, 39.24, 39.245, 39.25, 39.255, 39.26, 39.265, 39.27, 39.275, 39.28, 39.285000000000004, 39.29, 39.295, 39.300000000000004, 39.305, 39.31, 39.315, 39.32, 39.325, 39.33, 39.335, 39.34, 39.345, 39.35, 39.355000000000004, 39.36, 39.365, 39.37, 39.375, 39.38, 39.385, 39.39, 39.395, 39.4, 39.405, 39.410000000000004, 39.415, 39.42, 39.425000000000004, 39.43, 39.435, 39.44, 39.445, 39.45, 39.455, 39.46, 39.465, 39.47, 39.475, 39.480000000000004, 39.485, 39.49, 39.495, 39.5, 39.505, 39.51, 39.515, 39.52, 39.525, 39.53, 39.535000000000004, 39.54, 39.545, 39.550000000000004, 39.555, 39.56, 39.565, 39.57, 39.575, 39.58, 39.585, 39.59, 39.595, 39.6, 39.605000000000004, 39.61, 39.615, 39.62, 39.625, 39.63, 39.635, 39.64, 39.645, 39.65, 39.655, 39.660000000000004, 39.665, 39.67, 39.675000000000004, 39.68, 39.685, 39.69, 39.695, 39.7, 39.705, 39.71, 39.715, 39.72, 39.725, 39.730000000000004, 39.735, 39.74, 39.745, 39.75, 39.755, 39.76, 39.765, 39.77, 39.775, 39.78, 39.785000000000004, 39.79, 39.795, 39.800000000000004, 39.805, 39.81, 39.815, 39.82, 39.825, 39.83, 39.835, 39.84, 39.845, 39.85, 39.855000000000004, 39.86, 39.865, 39.87, 39.875, 39.88, 39.885, 39.89, 39.895, 39.9, 39.905, 39.910000000000004, 39.915, 39.92, 39.925000000000004, 39.93, 39.935, 39.94, 39.945, 39.95, 39.955, 39.96, 39.965, 39.97, 39.975, 39.980000000000004, 39.985, 39.99, 39.995, 40.0, 40.005, 40.01, 40.015, 40.02, 40.025, 40.03, 40.035000000000004, 40.04, 40.045, 40.050000000000004, 40.055, 40.06, 40.065, 40.07, 40.075, 40.08, 40.085, 40.09, 40.095, 40.1, 40.105000000000004, 40.11, 40.115, 40.12, 40.125, 40.13, 40.135, 40.14, 40.145, 40.15, 40.155, 40.160000000000004, 40.165, 40.17, 40.175000000000004, 40.18, 40.185, 40.19, 40.195, 40.2, 40.205, 40.21, 40.215, 40.22, 40.225, 40.230000000000004, 40.235, 40.24, 40.245, 40.25, 40.255, 40.26, 40.265, 40.27, 40.275, 40.28, 40.285000000000004, 40.29, 40.295, 40.300000000000004, 40.305, 40.31, 40.315, 40.32, 40.325, 40.33, 40.335, 40.34, 40.345, 40.35, 40.355000000000004, 40.36, 40.365, 40.37, 40.375, 40.38, 40.385, 40.39, 40.395, 40.4, 40.405, 40.410000000000004, 40.415, 40.42, 40.425000000000004, 40.43, 40.435, 40.44, 40.445, 40.45, 40.455, 40.46, 40.465, 40.47, 40.475, 40.480000000000004, 40.485, 40.49, 40.495, 40.5, 40.505, 40.51, 40.515, 40.52, 40.525, 40.53, 40.535000000000004, 40.54, 40.545, 40.550000000000004, 40.555, 40.56, 40.565, 40.57, 40.575, 40.58, 40.585, 40.59, 40.595, 40.6, 40.605000000000004, 40.61, 40.615, 40.62, 40.625, 40.63, 40.635, 40.64, 40.645, 40.65, 40.655, 40.660000000000004, 40.665, 40.67, 40.675000000000004, 40.68, 40.685, 40.69, 40.695, 40.7, 40.705, 40.71, 40.715, 40.72, 40.725, 40.730000000000004, 40.735, 40.74, 40.745, 40.75, 40.755, 40.76, 40.765, 40.77, 40.775, 40.78, 40.785000000000004, 40.79, 40.795, 40.800000000000004, 40.805, 40.81, 40.815, 40.82, 40.825, 40.83, 40.835, 40.84, 40.845, 40.85, 40.855000000000004, 40.86, 40.865, 40.87, 40.875, 40.88, 40.885, 40.89, 40.895, 40.9, 40.905, 40.910000000000004, 40.915, 40.92, 40.925000000000004, 40.93, 40.935, 40.94, 40.945, 40.95, 40.955, 40.96, 40.965, 40.97, 40.975, 40.980000000000004, 40.985, 40.99, 40.995, 41.0, 41.005, 41.01, 41.015, 41.02, 41.025, 41.03, 41.035000000000004, 41.04, 41.045, 41.050000000000004, 41.055, 41.06, 41.065, 41.07, 41.075, 41.08, 41.085, 41.09, 41.095, 41.1, 41.105000000000004, 41.11, 41.115, 41.12, 41.125, 41.13, 41.135, 41.14, 41.145, 41.15, 41.155, 41.160000000000004, 41.165, 41.17, 41.175000000000004, 41.18, 41.185, 41.19, 41.195, 41.2, 41.205, 41.21, 41.215, 41.22, 41.225, 41.230000000000004, 41.235, 41.24, 41.245, 41.25, 41.255, 41.26, 41.265, 41.27, 41.275, 41.28, 41.285000000000004, 41.29, 41.295, 41.300000000000004, 41.305, 41.31, 41.315, 41.32, 41.325, 41.33, 41.335, 41.34, 41.345, 41.35, 41.355000000000004, 41.36, 41.365, 41.37, 41.375, 41.38, 41.385, 41.39, 41.395, 41.4, 41.405, 41.410000000000004, 41.415, 41.42, 41.425000000000004, 41.43, 41.435, 41.44, 41.445, 41.45, 41.455, 41.46, 41.465, 41.47, 41.475, 41.480000000000004, 41.485, 41.49, 41.495, 41.5, 41.505, 41.51, 41.515, 41.52, 41.525, 41.53, 41.535000000000004, 41.54, 41.545, 41.550000000000004, 41.555, 41.56, 41.565, 41.57, 41.575, 41.58, 41.585, 41.59, 41.595, 41.6, 41.605000000000004, 41.61, 41.615, 41.62, 41.625, 41.63, 41.635, 41.64, 41.645, 41.65, 41.655, 41.660000000000004, 41.665, 41.67, 41.675000000000004, 41.68, 41.685, 41.69, 41.695, 41.7, 41.705, 41.71, 41.715, 41.72, 41.725, 41.730000000000004, 41.735, 41.74, 41.745, 41.75, 41.755, 41.76, 41.765, 41.77, 41.775, 41.78, 41.785000000000004, 41.79, 41.795, 41.800000000000004, 41.805, 41.81, 41.815, 41.82, 41.825, 41.83, 41.835, 41.84, 41.845, 41.85, 41.855000000000004, 41.86, 41.865, 41.87, 41.875, 41.88, 41.885, 41.89, 41.895, 41.9, 41.905, 41.910000000000004, 41.915, 41.92, 41.925000000000004, 41.93, 41.935, 41.94, 41.945, 41.95, 41.955, 41.96, 41.965, 41.97, 41.975, 41.980000000000004, 41.985, 41.99, 41.995, 42.0, 42.005, 42.01, 42.015, 42.02, 42.025, 42.03, 42.035000000000004, 42.04, 42.045, 42.050000000000004, 42.055, 42.06, 42.065, 42.07, 42.075, 42.08, 42.085, 42.09, 42.095, 42.1, 42.105000000000004, 42.11, 42.115, 42.12, 42.125, 42.13, 42.135, 42.14, 42.145, 42.15, 42.155, 42.160000000000004, 42.165, 42.17, 42.175000000000004, 42.18, 42.185, 42.19, 42.195, 42.2, 42.205, 42.21, 42.215, 42.22, 42.225, 42.230000000000004, 42.235, 42.24, 42.245, 42.25, 42.255, 42.26, 42.265, 42.27, 42.275, 42.28, 42.285000000000004, 42.29, 42.295, 42.300000000000004, 42.305, 42.31, 42.315, 42.32, 42.325, 42.33, 42.335, 42.34, 42.345, 42.35, 42.355000000000004, 42.36, 42.365, 42.37, 42.375, 42.38, 42.385, 42.39, 42.395, 42.4, 42.405, 42.410000000000004, 42.415, 42.42, 42.425000000000004, 42.43, 42.435, 42.44, 42.445, 42.45, 42.455, 42.46, 42.465, 42.47, 42.475, 42.480000000000004, 42.485, 42.49, 42.495, 42.5, 42.505, 42.51, 42.515, 42.52, 42.525, 42.53, 42.535000000000004, 42.54, 42.545, 42.550000000000004, 42.555, 42.56, 42.565, 42.57, 42.575, 42.58, 42.585, 42.59, 42.595, 42.6, 42.605000000000004, 42.61, 42.615, 42.62, 42.625, 42.63, 42.635, 42.64, 42.645, 42.65, 42.655, 42.660000000000004, 42.665, 42.67, 42.675000000000004, 42.68, 42.685, 42.69, 42.695, 42.7, 42.705, 42.71, 42.715, 42.72, 42.725, 42.730000000000004, 42.735, 42.74, 42.745, 42.75, 42.755, 42.76, 42.765, 42.77, 42.775, 42.78, 42.785000000000004, 42.79, 42.795, 42.800000000000004, 42.805, 42.81, 42.815, 42.82, 42.825, 42.83, 42.835, 42.84, 42.845, 42.85, 42.855000000000004, 42.86, 42.865, 42.87, 42.875, 42.88, 42.885, 42.89, 42.895, 42.9, 42.905, 42.910000000000004, 42.915, 42.92, 42.925000000000004, 42.93, 42.935, 42.94, 42.945, 42.95, 42.955, 42.96, 42.965, 42.97, 42.975, 42.980000000000004, 42.985, 42.99, 42.995, 43.0, 43.005, 43.01, 43.015, 43.02, 43.025, 43.03, 43.035000000000004, 43.04, 43.045, 43.050000000000004, 43.055, 43.06, 43.065, 43.07, 43.075, 43.08, 43.085, 43.09, 43.095, 43.1, 43.105000000000004, 43.11, 43.115, 43.12, 43.125, 43.13, 43.135, 43.14, 43.145, 43.15, 43.155, 43.160000000000004, 43.165, 43.17, 43.175000000000004, 43.18, 43.185, 43.19, 43.195, 43.2, 43.205, 43.21, 43.215, 43.22, 43.225, 43.230000000000004, 43.235, 43.24, 43.245, 43.25, 43.255, 43.26, 43.265, 43.27, 43.275, 43.28, 43.285000000000004, 43.29, 43.295, 43.300000000000004, 43.305, 43.31, 43.315, 43.32, 43.325, 43.33, 43.335, 43.34, 43.345, 43.35, 43.355000000000004, 43.36, 43.365, 43.37, 43.375, 43.38, 43.385, 43.39, 43.395, 43.4, 43.405, 43.410000000000004, 43.415, 43.42, 43.425000000000004, 43.43, 43.435, 43.44, 43.445, 43.45, 43.455, 43.46, 43.465, 43.47, 43.475, 43.480000000000004, 43.485, 43.49, 43.495, 43.5, 43.505, 43.51, 43.515, 43.52, 43.525, 43.53, 43.535000000000004, 43.54, 43.545, 43.550000000000004, 43.555, 43.56, 43.565, 43.57, 43.575, 43.58, 43.585, 43.59, 43.595, 43.6, 43.605000000000004, 43.61, 43.615, 43.62, 43.625, 43.63, 43.635, 43.64, 43.645, 43.65, 43.655, 43.660000000000004, 43.665, 43.67, 43.675000000000004, 43.68, 43.685, 43.69, 43.695, 43.7, 43.705, 43.71, 43.715, 43.72, 43.725, 43.730000000000004, 43.735, 43.74, 43.745, 43.75, 43.755, 43.76, 43.765, 43.77, 43.775, 43.78, 43.785000000000004, 43.79, 43.795, 43.800000000000004, 43.805, 43.81, 43.815, 43.82, 43.825, 43.83, 43.835, 43.84, 43.845, 43.85, 43.855000000000004, 43.86, 43.865, 43.87, 43.875, 43.88, 43.885, 43.89, 43.895, 43.9, 43.905, 43.910000000000004, 43.915, 43.92, 43.925000000000004, 43.93, 43.935, 43.94, 43.945, 43.95, 43.955, 43.96, 43.965, 43.97, 43.975, 43.980000000000004, 43.985, 43.99, 43.995, 44.0, 44.005, 44.01, 44.015, 44.02, 44.025, 44.03, 44.035000000000004, 44.04, 44.045, 44.050000000000004, 44.055, 44.06, 44.065, 44.07, 44.075, 44.08, 44.085, 44.09, 44.095, 44.1, 44.105000000000004, 44.11, 44.115, 44.12, 44.125, 44.13, 44.135, 44.14, 44.145, 44.15, 44.155, 44.160000000000004, 44.165, 44.17, 44.175000000000004, 44.18, 44.185, 44.19, 44.195, 44.2, 44.205, 44.21, 44.215, 44.22, 44.225, 44.230000000000004, 44.235, 44.24, 44.245, 44.25, 44.255, 44.26, 44.265, 44.27, 44.275, 44.28, 44.285000000000004, 44.29, 44.295, 44.300000000000004, 44.305, 44.31, 44.315, 44.32, 44.325, 44.33, 44.335, 44.34, 44.345, 44.35, 44.355000000000004, 44.36, 44.365, 44.37, 44.375, 44.38, 44.385, 44.39, 44.395, 44.4, 44.405, 44.410000000000004, 44.415, 44.42, 44.425000000000004, 44.43, 44.435, 44.44, 44.445, 44.45, 44.455, 44.46, 44.465, 44.47, 44.475, 44.480000000000004, 44.485, 44.49, 44.495, 44.5, 44.505, 44.51, 44.515, 44.52, 44.525, 44.53, 44.535000000000004, 44.54, 44.545, 44.550000000000004, 44.555, 44.56, 44.565, 44.57, 44.575, 44.58, 44.585, 44.59, 44.595, 44.6, 44.605000000000004, 44.61, 44.615, 44.62, 44.625, 44.63, 44.635, 44.64, 44.645, 44.65, 44.655, 44.660000000000004, 44.665, 44.67, 44.675000000000004, 44.68, 44.685, 44.69, 44.695, 44.7, 44.705, 44.71, 44.715, 44.72, 44.725, 44.730000000000004, 44.735, 44.74, 44.745, 44.75, 44.755, 44.76, 44.765, 44.77, 44.775, 44.78, 44.785000000000004, 44.79, 44.795, 44.800000000000004, 44.805, 44.81, 44.815, 44.82, 44.825, 44.83, 44.835, 44.84, 44.845, 44.85, 44.855000000000004, 44.86, 44.865, 44.87, 44.875, 44.88, 44.885, 44.89, 44.895, 44.9, 44.905, 44.910000000000004, 44.915, 44.92, 44.925000000000004, 44.93, 44.935, 44.94, 44.945, 44.95, 44.955, 44.96, 44.965, 44.97, 44.975, 44.980000000000004, 44.985, 44.99, 44.995, 45.0, 45.005, 45.01, 45.015, 45.02, 45.025, 45.03, 45.035000000000004, 45.04, 45.045, 45.050000000000004, 45.055, 45.06, 45.065, 45.07, 45.075, 45.08, 45.085, 45.09, 45.095, 45.1, 45.105000000000004, 45.11, 45.115, 45.12, 45.125, 45.13, 45.135, 45.14, 45.145, 45.15, 45.155, 45.160000000000004, 45.165, 45.17, 45.175000000000004, 45.18, 45.185, 45.19, 45.195, 45.2, 45.205, 45.21, 45.215, 45.22, 45.225, 45.230000000000004, 45.235, 45.24, 45.245, 45.25, 45.255, 45.26, 45.265, 45.27, 45.275, 45.28, 45.285000000000004, 45.29, 45.295, 45.300000000000004, 45.305, 45.31, 45.315, 45.32, 45.325, 45.33, 45.335, 45.34, 45.345, 45.35, 45.355000000000004, 45.36, 45.365, 45.37, 45.375, 45.38, 45.385, 45.39, 45.395, 45.4, 45.405, 45.410000000000004, 45.415, 45.42, 45.425000000000004, 45.43, 45.435, 45.44, 45.445, 45.45, 45.455, 45.46, 45.465, 45.47, 45.475, 45.480000000000004, 45.485, 45.49, 45.495, 45.5, 45.505, 45.51, 45.515, 45.52, 45.525, 45.53, 45.535000000000004, 45.54, 45.545, 45.550000000000004, 45.555, 45.56, 45.565, 45.57, 45.575, 45.58, 45.585, 45.59, 45.595, 45.6, 45.605000000000004, 45.61, 45.615, 45.62, 45.625, 45.63, 45.635, 45.64, 45.645, 45.65, 45.655, 45.660000000000004, 45.665, 45.67, 45.675000000000004, 45.68, 45.685, 45.69, 45.695, 45.7, 45.705, 45.71, 45.715, 45.72, 45.725, 45.730000000000004, 45.735, 45.74, 45.745, 45.75, 45.755, 45.76, 45.765, 45.77, 45.775, 45.78, 45.785000000000004, 45.79, 45.795, 45.800000000000004, 45.805, 45.81, 45.815, 45.82, 45.825, 45.83, 45.835, 45.84, 45.845, 45.85, 45.855000000000004, 45.86, 45.865, 45.87, 45.875, 45.88, 45.885, 45.89, 45.895, 45.9, 45.905, 45.910000000000004, 45.915, 45.92, 45.925000000000004, 45.93, 45.935, 45.94, 45.945, 45.95, 45.955, 45.96, 45.965, 45.97, 45.975, 45.980000000000004, 45.985, 45.99, 45.995, 46.0, 46.005, 46.01, 46.015, 46.02, 46.025, 46.03, 46.035000000000004, 46.04, 46.045, 46.050000000000004, 46.055, 46.06, 46.065, 46.07, 46.075, 46.08, 46.085, 46.09, 46.095, 46.1, 46.105000000000004, 46.11, 46.115, 46.12, 46.125, 46.13, 46.135, 46.14, 46.145, 46.15, 46.155, 46.160000000000004, 46.165, 46.17, 46.175000000000004, 46.18, 46.185, 46.19, 46.195, 46.2, 46.205, 46.21, 46.215, 46.22, 46.225, 46.230000000000004, 46.235, 46.24, 46.245, 46.25, 46.255, 46.26, 46.265, 46.27, 46.275, 46.28, 46.285000000000004, 46.29, 46.295, 46.300000000000004, 46.305, 46.31, 46.315, 46.32, 46.325, 46.33, 46.335, 46.34, 46.345, 46.35, 46.355000000000004, 46.36, 46.365, 46.37, 46.375, 46.38, 46.385, 46.39, 46.395, 46.4, 46.405, 46.410000000000004, 46.415, 46.42, 46.425000000000004, 46.43, 46.435, 46.44, 46.445, 46.45, 46.455, 46.46, 46.465, 46.47, 46.475, 46.480000000000004, 46.485, 46.49, 46.495, 46.5, 46.505, 46.51, 46.515, 46.52, 46.525, 46.53, 46.535000000000004, 46.54, 46.545, 46.550000000000004, 46.555, 46.56, 46.565, 46.57, 46.575, 46.58, 46.585, 46.59, 46.595, 46.6, 46.605000000000004, 46.61, 46.615, 46.62, 46.625, 46.63, 46.635, 46.64, 46.645, 46.65, 46.655, 46.660000000000004, 46.665, 46.67, 46.675000000000004, 46.68, 46.685, 46.69, 46.695, 46.7, 46.705, 46.71, 46.715, 46.72, 46.725, 46.730000000000004, 46.735, 46.74, 46.745, 46.75, 46.755, 46.76, 46.765, 46.77, 46.775, 46.78, 46.785000000000004, 46.79, 46.795, 46.800000000000004, 46.805, 46.81, 46.815, 46.82, 46.825, 46.83, 46.835, 46.84, 46.845, 46.85, 46.855000000000004, 46.86, 46.865, 46.87, 46.875, 46.88, 46.885, 46.89, 46.895, 46.9, 46.905, 46.910000000000004, 46.915, 46.92, 46.925000000000004, 46.93, 46.935, 46.94, 46.945, 46.95, 46.955, 46.96, 46.965, 46.97, 46.975, 46.980000000000004, 46.985, 46.99, 46.995, 47.0, 47.005, 47.01, 47.015, 47.02, 47.025, 47.03, 47.035000000000004, 47.04, 47.045, 47.050000000000004, 47.055, 47.06, 47.065, 47.07, 47.075, 47.08, 47.085, 47.09, 47.095, 47.1, 47.105000000000004, 47.11, 47.115, 47.12, 47.125, 47.13, 47.135, 47.14, 47.145, 47.15, 47.155, 47.160000000000004, 47.165, 47.17, 47.175000000000004, 47.18, 47.185, 47.19, 47.195, 47.2, 47.205, 47.21, 47.215, 47.22, 47.225, 47.230000000000004, 47.235, 47.24, 47.245, 47.25, 47.255, 47.26, 47.265, 47.27, 47.275, 47.28, 47.285000000000004, 47.29, 47.295, 47.300000000000004, 47.305, 47.31, 47.315, 47.32, 47.325, 47.33, 47.335, 47.34, 47.345, 47.35, 47.355000000000004, 47.36, 47.365, 47.37, 47.375, 47.38, 47.385, 47.39, 47.395, 47.4, 47.405, 47.410000000000004, 47.415, 47.42, 47.425000000000004, 47.43, 47.435, 47.44, 47.445, 47.45, 47.455, 47.46, 47.465, 47.47, 47.475, 47.480000000000004, 47.485, 47.49, 47.495, 47.5, 47.505, 47.51, 47.515, 47.52, 47.525, 47.53, 47.535000000000004, 47.54, 47.545, 47.550000000000004, 47.555, 47.56, 47.565, 47.57, 47.575, 47.58, 47.585, 47.59, 47.595, 47.6, 47.605000000000004, 47.61, 47.615, 47.62, 47.625, 47.63, 47.635, 47.64, 47.645, 47.65, 47.655, 47.660000000000004, 47.665, 47.67, 47.675000000000004, 47.68, 47.685, 47.69, 47.695, 47.7, 47.705, 47.71, 47.715, 47.72, 47.725, 47.730000000000004, 47.735, 47.74, 47.745, 47.75, 47.755, 47.76, 47.765, 47.77, 47.775, 47.78, 47.785000000000004, 47.79, 47.795, 47.800000000000004, 47.805, 47.81, 47.815, 47.82, 47.825, 47.83, 47.835, 47.84, 47.845, 47.85, 47.855000000000004, 47.86, 47.865, 47.870000000000005, 47.875, 47.88, 47.885, 47.89, 47.895, 47.9, 47.905, 47.910000000000004, 47.915, 47.92, 47.925000000000004, 47.93, 47.935, 47.94, 47.945, 47.95, 47.955, 47.96, 47.965, 47.97, 47.975, 47.980000000000004, 47.985, 47.99, 47.995000000000005, 48.0, 48.005, 48.01, 48.015, 48.02, 48.025, 48.03, 48.035000000000004, 48.04, 48.045, 48.050000000000004, 48.055, 48.06, 48.065, 48.07, 48.075, 48.08, 48.085, 48.09, 48.095, 48.1, 48.105000000000004, 48.11, 48.115, 48.120000000000005, 48.125, 48.13, 48.135, 48.14, 48.145, 48.15, 48.155, 48.160000000000004, 48.165, 48.17, 48.175000000000004, 48.18, 48.185, 48.19, 48.195, 48.2, 48.205, 48.21, 48.215, 48.22, 48.225, 48.230000000000004, 48.235, 48.24, 48.245000000000005, 48.25, 48.255, 48.26, 48.265, 48.27, 48.275, 48.28, 48.285000000000004, 48.29, 48.295, 48.300000000000004, 48.305, 48.31, 48.315, 48.32, 48.325, 48.33, 48.335, 48.34, 48.345, 48.35, 48.355000000000004, 48.36, 48.365, 48.370000000000005, 48.375, 48.38, 48.385, 48.39, 48.395, 48.4, 48.405, 48.410000000000004, 48.415, 48.42, 48.425000000000004, 48.43, 48.435, 48.44, 48.445, 48.45, 48.455, 48.46, 48.465, 48.47, 48.475, 48.480000000000004, 48.485, 48.49, 48.495000000000005, 48.5, 48.505, 48.51, 48.515, 48.52, 48.525, 48.53, 48.535000000000004, 48.54, 48.545, 48.550000000000004, 48.555, 48.56, 48.565, 48.57, 48.575, 48.58, 48.585, 48.59, 48.595, 48.6, 48.605000000000004, 48.61, 48.615, 48.620000000000005, 48.625, 48.63, 48.635, 48.64, 48.645, 48.65, 48.655, 48.660000000000004, 48.665, 48.67, 48.675000000000004, 48.68, 48.685, 48.69, 48.695, 48.7, 48.705, 48.71, 48.715, 48.72, 48.725, 48.730000000000004, 48.735, 48.74, 48.745000000000005, 48.75, 48.755, 48.76, 48.765, 48.77, 48.775, 48.78, 48.785000000000004, 48.79, 48.795, 48.800000000000004, 48.805, 48.81, 48.815, 48.82, 48.825, 48.83, 48.835, 48.84, 48.845, 48.85, 48.855000000000004, 48.86, 48.865, 48.870000000000005, 48.875, 48.88, 48.885, 48.89, 48.895, 48.9, 48.905, 48.910000000000004, 48.915, 48.92, 48.925000000000004, 48.93, 48.935, 48.94, 48.945, 48.95, 48.955, 48.96, 48.965, 48.97, 48.975, 48.980000000000004, 48.985, 48.99, 48.995000000000005, 49.0, 49.005, 49.01, 49.015, 49.02, 49.025, 49.03, 49.035000000000004, 49.04, 49.045, 49.050000000000004, 49.055, 49.06, 49.065, 49.07, 49.075, 49.08, 49.085, 49.09, 49.095, 49.1, 49.105000000000004, 49.11, 49.115, 49.120000000000005, 49.125, 49.13, 49.135, 49.14, 49.145, 49.15, 49.155, 49.160000000000004, 49.165, 49.17, 49.175000000000004, 49.18, 49.185, 49.19, 49.195, 49.2, 49.205, 49.21, 49.215, 49.22, 49.225, 49.230000000000004, 49.235, 49.24, 49.245000000000005, 49.25, 49.255, 49.26, 49.265, 49.27, 49.275, 49.28, 49.285000000000004, 49.29, 49.295, 49.300000000000004, 49.305, 49.31, 49.315, 49.32, 49.325, 49.33, 49.335, 49.34, 49.345, 49.35, 49.355000000000004, 49.36, 49.365, 49.370000000000005, 49.375, 49.38, 49.385, 49.39, 49.395, 49.4, 49.405, 49.410000000000004, 49.415, 49.42, 49.425000000000004, 49.43, 49.435, 49.44, 49.445, 49.45, 49.455, 49.46, 49.465, 49.47, 49.475, 49.480000000000004, 49.485, 49.49, 49.495000000000005, 49.5, 49.505, 49.51, 49.515, 49.52, 49.525, 49.53, 49.535000000000004, 49.54, 49.545, 49.550000000000004, 49.555, 49.56, 49.565, 49.57, 49.575, 49.58, 49.585, 49.59, 49.595, 49.6, 49.605000000000004, 49.61, 49.615, 49.620000000000005, 49.625, 49.63, 49.635, 49.64, 49.645, 49.65, 49.655, 49.660000000000004, 49.665, 49.67, 49.675000000000004, 49.68, 49.685, 49.69, 49.695, 49.7, 49.705, 49.71, 49.715, 49.72, 49.725, 49.730000000000004, 49.735, 49.74, 49.745000000000005, 49.75, 49.755, 49.76, 49.765, 49.77, 49.775, 49.78, 49.785000000000004, 49.79, 49.795, 49.800000000000004, 49.805, 49.81, 49.815, 49.82, 49.825, 49.83, 49.835, 49.84, 49.845, 49.85, 49.855000000000004, 49.86, 49.865, 49.870000000000005, 49.875, 49.88, 49.885, 49.89, 49.895, 49.9, 49.905, 49.910000000000004, 49.915, 49.92, 49.925000000000004, 49.93, 49.935, 49.94, 49.945, 49.95, 49.955, 49.96, 49.965, 49.97, 49.975, 49.980000000000004, 49.985, 49.99, 49.995000000000005, 50.0, 50.005, 50.01, 50.015, 50.02, 50.025, 50.03, 50.035000000000004, 50.04, 50.045, 50.050000000000004, 50.055, 50.06, 50.065, 50.07, 50.075, 50.08, 50.085, 50.09, 50.095, 50.1, 50.105000000000004, 50.11, 50.115, 50.120000000000005, 50.125, 50.13, 50.135, 50.14, 50.145, 50.15, 50.155, 50.160000000000004, 50.165, 50.17, 50.175000000000004, 50.18, 50.185, 50.19, 50.195, 50.2, 50.205, 50.21, 50.215, 50.22, 50.225, 50.230000000000004, 50.235, 50.24, 50.245000000000005, 50.25, 50.255, 50.26, 50.265, 50.27, 50.275, 50.28, 50.285000000000004, 50.29, 50.295, 50.300000000000004, 50.305, 50.31, 50.315, 50.32, 50.325, 50.33, 50.335, 50.34, 50.345, 50.35, 50.355000000000004, 50.36, 50.365, 50.370000000000005, 50.375, 50.38, 50.385, 50.39, 50.395, 50.4, 50.405, 50.410000000000004, 50.415, 50.42, 50.425000000000004, 50.43, 50.435, 50.44, 50.445, 50.45, 50.455, 50.46, 50.465, 50.47, 50.475, 50.480000000000004, 50.485, 50.49, 50.495000000000005, 50.5, 50.505, 50.51, 50.515, 50.52, 50.525, 50.53, 50.535000000000004, 50.54, 50.545, 50.550000000000004, 50.555, 50.56, 50.565, 50.57, 50.575, 50.58, 50.585, 50.59, 50.595, 50.6, 50.605000000000004, 50.61, 50.615, 50.620000000000005, 50.625, 50.63, 50.635, 50.64, 50.645, 50.65, 50.655, 50.660000000000004, 50.665, 50.67, 50.675000000000004, 50.68, 50.685, 50.69, 50.695, 50.7, 50.705, 50.71, 50.715, 50.72, 50.725, 50.730000000000004, 50.735, 50.74, 50.745000000000005, 50.75, 50.755, 50.76, 50.765, 50.77, 50.775, 50.78, 50.785000000000004, 50.79, 50.795, 50.800000000000004, 50.805, 50.81, 50.815, 50.82, 50.825, 50.83, 50.835, 50.84, 50.845, 50.85, 50.855000000000004, 50.86, 50.865, 50.870000000000005, 50.875, 50.88, 50.885, 50.89, 50.895, 50.9, 50.905, 50.910000000000004, 50.915, 50.92, 50.925000000000004, 50.93, 50.935, 50.94, 50.945, 50.95, 50.955, 50.96, 50.965, 50.97, 50.975, 50.980000000000004, 50.985, 50.99, 50.995000000000005, 51.0, 51.005, 51.01, 51.015, 51.02, 51.025, 51.03, 51.035000000000004, 51.04, 51.045, 51.050000000000004, 51.055, 51.06, 51.065, 51.07, 51.075, 51.08, 51.085, 51.09, 51.095, 51.1, 51.105000000000004, 51.11, 51.115, 51.120000000000005, 51.125, 51.13, 51.135, 51.14, 51.145, 51.15, 51.155, 51.160000000000004, 51.165, 51.17, 51.175000000000004, 51.18, 51.185, 51.19, 51.195, 51.2, 51.205, 51.21, 51.215, 51.22, 51.225, 51.230000000000004, 51.235, 51.24, 51.245000000000005, 51.25, 51.255, 51.26, 51.265, 51.27, 51.275, 51.28, 51.285000000000004, 51.29, 51.295, 51.300000000000004, 51.305, 51.31, 51.315, 51.32, 51.325, 51.33, 51.335, 51.34, 51.345, 51.35, 51.355000000000004, 51.36, 51.365, 51.370000000000005, 51.375, 51.38, 51.385, 51.39, 51.395, 51.4, 51.405, 51.410000000000004, 51.415, 51.42, 51.425000000000004, 51.43, 51.435, 51.44, 51.445, 51.45, 51.455, 51.46, 51.465, 51.47, 51.475, 51.480000000000004, 51.485, 51.49, 51.495000000000005, 51.5, 51.505, 51.51, 51.515, 51.52, 51.525, 51.53, 51.535000000000004, 51.54, 51.545, 51.550000000000004, 51.555, 51.56, 51.565, 51.57, 51.575, 51.58, 51.585, 51.59, 51.595, 51.6, 51.605000000000004, 51.61, 51.615, 51.620000000000005, 51.625, 51.63, 51.635, 51.64, 51.645, 51.65, 51.655, 51.660000000000004, 51.665, 51.67, 51.675000000000004, 51.68, 51.685, 51.69, 51.695, 51.7, 51.705, 51.71, 51.715, 51.72, 51.725, 51.730000000000004, 51.735, 51.74, 51.745000000000005, 51.75, 51.755, 51.76, 51.765, 51.77, 51.775, 51.78, 51.785000000000004, 51.79, 51.795, 51.800000000000004, 51.805, 51.81, 51.815, 51.82, 51.825, 51.83, 51.835, 51.84, 51.845, 51.85, 51.855000000000004, 51.86, 51.865, 51.870000000000005, 51.875, 51.88, 51.885, 51.89, 51.895, 51.9, 51.905, 51.910000000000004, 51.915, 51.92, 51.925000000000004, 51.93, 51.935, 51.94, 51.945, 51.95, 51.955, 51.96, 51.965, 51.97, 51.975, 51.980000000000004, 51.985, 51.99, 51.995000000000005, 52.0, 52.005, 52.01, 52.015, 52.02, 52.025, 52.03, 52.035000000000004, 52.04, 52.045, 52.050000000000004, 52.055, 52.06, 52.065, 52.07, 52.075, 52.08, 52.085, 52.09, 52.095, 52.1, 52.105000000000004, 52.11, 52.115, 52.120000000000005, 52.125, 52.13, 52.135, 52.14, 52.145, 52.15, 52.155, 52.160000000000004, 52.165, 52.17, 52.175000000000004, 52.18, 52.185, 52.19, 52.195, 52.2, 52.205, 52.21, 52.215, 52.22, 52.225, 52.230000000000004, 52.235, 52.24, 52.245000000000005, 52.25, 52.255, 52.26, 52.265, 52.27, 52.275, 52.28, 52.285000000000004, 52.29, 52.295, 52.300000000000004, 52.305, 52.31, 52.315, 52.32, 52.325, 52.33, 52.335, 52.34, 52.345, 52.35, 52.355000000000004, 52.36, 52.365, 52.370000000000005, 52.375, 52.38, 52.385, 52.39, 52.395, 52.4, 52.405, 52.410000000000004, 52.415, 52.42, 52.425000000000004, 52.43, 52.435, 52.44, 52.445, 52.45, 52.455, 52.46, 52.465, 52.47, 52.475, 52.480000000000004, 52.485, 52.49, 52.495000000000005, 52.5, 52.505, 52.51, 52.515, 52.52, 52.525, 52.53, 52.535000000000004, 52.54, 52.545, 52.550000000000004, 52.555, 52.56, 52.565, 52.57, 52.575, 52.58, 52.585, 52.59, 52.595, 52.6, 52.605000000000004, 52.61, 52.615, 52.620000000000005, 52.625, 52.63, 52.635, 52.64, 52.645, 52.65, 52.655, 52.660000000000004, 52.665, 52.67, 52.675000000000004, 52.68, 52.685, 52.69, 52.695, 52.7, 52.705, 52.71, 52.715, 52.72, 52.725, 52.730000000000004, 52.735, 52.74, 52.745000000000005, 52.75, 52.755, 52.76, 52.765, 52.77, 52.775, 52.78, 52.785000000000004, 52.79, 52.795, 52.800000000000004, 52.805, 52.81, 52.815, 52.82, 52.825, 52.83, 52.835, 52.84, 52.845, 52.85, 52.855000000000004, 52.86, 52.865, 52.870000000000005, 52.875, 52.88, 52.885, 52.89, 52.895, 52.9, 52.905, 52.910000000000004, 52.915, 52.92, 52.925000000000004, 52.93, 52.935, 52.94, 52.945, 52.95, 52.955, 52.96, 52.965, 52.97, 52.975, 52.980000000000004, 52.985, 52.99, 52.995000000000005, 53.0, 53.005, 53.01, 53.015, 53.02, 53.025, 53.03, 53.035000000000004, 53.04, 53.045, 53.050000000000004, 53.055, 53.06, 53.065, 53.07, 53.075, 53.08, 53.085, 53.09, 53.095, 53.1, 53.105000000000004, 53.11, 53.115, 53.120000000000005, 53.125, 53.13, 53.135, 53.14, 53.145, 53.15, 53.155, 53.160000000000004, 53.165, 53.17, 53.175000000000004, 53.18, 53.185, 53.19, 53.195, 53.2, 53.205, 53.21, 53.215, 53.22, 53.225, 53.230000000000004, 53.235, 53.24, 53.245000000000005, 53.25, 53.255, 53.26, 53.265, 53.27, 53.275, 53.28, 53.285000000000004, 53.29, 53.295, 53.300000000000004, 53.305, 53.31, 53.315, 53.32, 53.325, 53.33, 53.335, 53.34, 53.345, 53.35, 53.355000000000004, 53.36, 53.365, 53.370000000000005, 53.375, 53.38, 53.385, 53.39, 53.395, 53.4, 53.405, 53.410000000000004, 53.415, 53.42, 53.425000000000004, 53.43, 53.435, 53.44, 53.445, 53.45, 53.455, 53.46, 53.465, 53.47, 53.475, 53.480000000000004, 53.485, 53.49, 53.495000000000005, 53.5, 53.505, 53.51, 53.515, 53.52, 53.525, 53.53, 53.535000000000004, 53.54, 53.545, 53.550000000000004, 53.555, 53.56, 53.565, 53.57, 53.575, 53.58, 53.585, 53.59, 53.595, 53.6, 53.605000000000004, 53.61, 53.615, 53.620000000000005, 53.625, 53.63, 53.635, 53.64, 53.645, 53.65, 53.655, 53.660000000000004, 53.665, 53.67, 53.675000000000004, 53.68, 53.685, 53.69, 53.695, 53.7, 53.705, 53.71, 53.715, 53.72, 53.725, 53.730000000000004, 53.735, 53.74, 53.745000000000005, 53.75, 53.755, 53.76, 53.765, 53.77, 53.775, 53.78, 53.785000000000004, 53.79, 53.795, 53.800000000000004, 53.805, 53.81, 53.815, 53.82, 53.825, 53.83, 53.835, 53.84, 53.845, 53.85, 53.855000000000004, 53.86, 53.865, 53.870000000000005, 53.875, 53.88, 53.885, 53.89, 53.895, 53.9, 53.905, 53.910000000000004, 53.915, 53.92, 53.925000000000004, 53.93, 53.935, 53.94, 53.945, 53.95, 53.955, 53.96, 53.965, 53.97, 53.975, 53.980000000000004, 53.985, 53.99, 53.995000000000005, 54.0, 54.005, 54.01, 54.015, 54.02, 54.025, 54.03, 54.035000000000004, 54.04, 54.045, 54.050000000000004, 54.055, 54.06, 54.065, 54.07, 54.075, 54.08, 54.085, 54.09, 54.095, 54.1, 54.105000000000004, 54.11, 54.115, 54.120000000000005, 54.125, 54.13, 54.135, 54.14, 54.145, 54.15, 54.155, 54.160000000000004, 54.165, 54.17, 54.175000000000004, 54.18, 54.185, 54.19, 54.195, 54.2, 54.205, 54.21, 54.215, 54.22, 54.225, 54.230000000000004, 54.235, 54.24, 54.245000000000005, 54.25, 54.255, 54.26, 54.265, 54.27, 54.275, 54.28, 54.285000000000004, 54.29, 54.295, 54.300000000000004, 54.305, 54.31, 54.315, 54.32, 54.325, 54.33, 54.335, 54.34, 54.345, 54.35, 54.355000000000004, 54.36, 54.365, 54.370000000000005, 54.375, 54.38, 54.385, 54.39, 54.395, 54.4, 54.405, 54.410000000000004, 54.415, 54.42, 54.425000000000004, 54.43, 54.435, 54.44, 54.445, 54.45, 54.455, 54.46, 54.465, 54.47, 54.475, 54.480000000000004, 54.485, 54.49, 54.495000000000005, 54.5, 54.505, 54.51, 54.515, 54.52, 54.525, 54.53, 54.535000000000004, 54.54, 54.545, 54.550000000000004, 54.555, 54.56, 54.565, 54.57, 54.575, 54.58, 54.585, 54.59, 54.595, 54.6, 54.605000000000004, 54.61, 54.615, 54.620000000000005, 54.625, 54.63, 54.635, 54.64, 54.645, 54.65, 54.655, 54.660000000000004, 54.665, 54.67, 54.675000000000004, 54.68, 54.685, 54.69, 54.695, 54.7, 54.705, 54.71, 54.715, 54.72, 54.725, 54.730000000000004, 54.735, 54.74, 54.745000000000005, 54.75, 54.755, 54.76, 54.765, 54.77, 54.775, 54.78, 54.785000000000004, 54.79, 54.795, 54.800000000000004, 54.805, 54.81, 54.815, 54.82, 54.825, 54.83, 54.835, 54.84, 54.845, 54.85, 54.855000000000004, 54.86, 54.865, 54.870000000000005, 54.875, 54.88, 54.885, 54.89, 54.895, 54.9, 54.905, 54.910000000000004, 54.915, 54.92, 54.925000000000004, 54.93, 54.935, 54.94, 54.945, 54.95, 54.955, 54.96, 54.965, 54.97, 54.975, 54.980000000000004, 54.985, 54.99, 54.995000000000005, 55.0, 55.005, 55.01, 55.015, 55.02, 55.025, 55.03, 55.035000000000004, 55.04, 55.045, 55.050000000000004, 55.055, 55.06, 55.065, 55.07, 55.075, 55.08, 55.085, 55.09, 55.095, 55.1, 55.105000000000004, 55.11, 55.115, 55.120000000000005, 55.125, 55.13, 55.135, 55.14, 55.145, 55.15, 55.155, 55.160000000000004, 55.165, 55.17, 55.175000000000004, 55.18, 55.185, 55.19, 55.195, 55.2, 55.205, 55.21, 55.215, 55.22, 55.225, 55.230000000000004, 55.235, 55.24, 55.245000000000005, 55.25, 55.255, 55.26, 55.265, 55.27, 55.275, 55.28, 55.285000000000004, 55.29, 55.295, 55.300000000000004, 55.305, 55.31, 55.315, 55.32, 55.325, 55.33, 55.335, 55.34, 55.345, 55.35, 55.355000000000004, 55.36, 55.365, 55.370000000000005, 55.375, 55.38, 55.385, 55.39, 55.395, 55.4, 55.405, 55.410000000000004, 55.415, 55.42, 55.425000000000004, 55.43, 55.435, 55.44, 55.445, 55.45, 55.455, 55.46, 55.465, 55.47, 55.475, 55.480000000000004, 55.485, 55.49, 55.495000000000005, 55.5, 55.505, 55.51, 55.515, 55.52, 55.525, 55.53, 55.535000000000004, 55.54, 55.545, 55.550000000000004, 55.555, 55.56, 55.565, 55.57, 55.575, 55.58, 55.585, 55.59, 55.595, 55.6, 55.605000000000004, 55.61, 55.615, 55.620000000000005, 55.625, 55.63, 55.635, 55.64, 55.645, 55.65, 55.655, 55.660000000000004, 55.665, 55.67, 55.675000000000004, 55.68, 55.685, 55.69, 55.695, 55.7, 55.705, 55.71, 55.715, 55.72, 55.725, 55.730000000000004, 55.735, 55.74, 55.745000000000005, 55.75, 55.755, 55.76, 55.765, 55.77, 55.775, 55.78, 55.785000000000004, 55.79, 55.795, 55.800000000000004, 55.805, 55.81, 55.815, 55.82, 55.825, 55.83, 55.835, 55.84, 55.845, 55.85, 55.855000000000004, 55.86, 55.865, 55.870000000000005, 55.875, 55.88, 55.885, 55.89, 55.895, 55.9, 55.905, 55.910000000000004, 55.915, 55.92, 55.925000000000004, 55.93, 55.935, 55.94, 55.945, 55.95, 55.955, 55.96, 55.965, 55.97, 55.975, 55.980000000000004, 55.985, 55.99, 55.995000000000005, 56.0, 56.005, 56.01, 56.015, 56.02, 56.025, 56.03, 56.035000000000004, 56.04, 56.045, 56.050000000000004, 56.055, 56.06, 56.065, 56.07, 56.075, 56.08, 56.085, 56.09, 56.095, 56.1, 56.105000000000004, 56.11, 56.115, 56.120000000000005, 56.125, 56.13, 56.135, 56.14, 56.145, 56.15, 56.155, 56.160000000000004, 56.165, 56.17, 56.175000000000004, 56.18, 56.185, 56.19, 56.195, 56.2, 56.205, 56.21, 56.215, 56.22, 56.225, 56.230000000000004, 56.235, 56.24, 56.245000000000005, 56.25, 56.255, 56.26, 56.265, 56.27, 56.275, 56.28, 56.285000000000004, 56.29, 56.295, 56.300000000000004, 56.305, 56.31, 56.315, 56.32, 56.325, 56.33, 56.335, 56.34, 56.345, 56.35, 56.355000000000004, 56.36, 56.365, 56.370000000000005, 56.375, 56.38, 56.385, 56.39, 56.395, 56.4, 56.405, 56.410000000000004, 56.415, 56.42, 56.425000000000004, 56.43, 56.435, 56.44, 56.445, 56.45, 56.455, 56.46, 56.465, 56.47, 56.475, 56.480000000000004, 56.485, 56.49, 56.495000000000005, 56.5, 56.505, 56.51, 56.515, 56.52, 56.525, 56.53, 56.535000000000004, 56.54, 56.545, 56.550000000000004, 56.555, 56.56, 56.565, 56.57, 56.575, 56.58, 56.585, 56.59, 56.595, 56.6, 56.605000000000004, 56.61, 56.615, 56.620000000000005, 56.625, 56.63, 56.635, 56.64, 56.645, 56.65, 56.655, 56.660000000000004, 56.665, 56.67, 56.675000000000004, 56.68, 56.685, 56.69, 56.695, 56.7, 56.705, 56.71, 56.715, 56.72, 56.725, 56.730000000000004, 56.735, 56.74, 56.745000000000005, 56.75, 56.755, 56.76, 56.765, 56.77, 56.775, 56.78, 56.785000000000004, 56.79, 56.795, 56.800000000000004, 56.805, 56.81, 56.815, 56.82, 56.825, 56.83, 56.835, 56.84, 56.845, 56.85, 56.855000000000004, 56.86, 56.865, 56.870000000000005, 56.875, 56.88, 56.885, 56.89, 56.895, 56.9, 56.905, 56.910000000000004, 56.915, 56.92, 56.925000000000004, 56.93, 56.935, 56.94, 56.945, 56.95, 56.955, 56.96, 56.965, 56.97, 56.975, 56.980000000000004, 56.985, 56.99, 56.995000000000005, 57.0, 57.005, 57.01, 57.015, 57.02, 57.025, 57.03, 57.035000000000004, 57.04, 57.045, 57.050000000000004, 57.055, 57.06, 57.065, 57.07, 57.075, 57.08, 57.085, 57.09, 57.095, 57.1, 57.105000000000004, 57.11, 57.115, 57.120000000000005, 57.125, 57.13, 57.135, 57.14, 57.145, 57.15, 57.155, 57.160000000000004, 57.165, 57.17, 57.175000000000004, 57.18, 57.185, 57.19, 57.195, 57.2, 57.205, 57.21, 57.215, 57.22, 57.225, 57.230000000000004, 57.235, 57.24, 57.245000000000005, 57.25, 57.255, 57.26, 57.265, 57.27, 57.275, 57.28, 57.285000000000004, 57.29, 57.295, 57.300000000000004, 57.305, 57.31, 57.315, 57.32, 57.325, 57.33, 57.335, 57.34, 57.345, 57.35, 57.355000000000004, 57.36, 57.365, 57.370000000000005, 57.375, 57.38, 57.385, 57.39, 57.395, 57.4, 57.405, 57.410000000000004, 57.415, 57.42, 57.425000000000004, 57.43, 57.435, 57.44, 57.445, 57.45, 57.455, 57.46, 57.465, 57.47, 57.475, 57.480000000000004, 57.485, 57.49, 57.495000000000005, 57.5, 57.505, 57.51, 57.515, 57.52, 57.525, 57.53, 57.535000000000004, 57.54, 57.545, 57.550000000000004, 57.555, 57.56, 57.565, 57.57, 57.575, 57.58, 57.585, 57.59, 57.595, 57.6, 57.605000000000004, 57.61, 57.615, 57.620000000000005, 57.625, 57.63, 57.635, 57.64, 57.645, 57.65, 57.655, 57.660000000000004, 57.665, 57.67, 57.675000000000004, 57.68, 57.685, 57.69, 57.695, 57.7, 57.705, 57.71, 57.715, 57.72, 57.725, 57.730000000000004, 57.735, 57.74, 57.745000000000005, 57.75, 57.755, 57.76, 57.765, 57.77, 57.775, 57.78, 57.785000000000004, 57.79, 57.795, 57.800000000000004, 57.805, 57.81, 57.815, 57.82, 57.825, 57.83, 57.835, 57.84, 57.845, 57.85, 57.855000000000004, 57.86, 57.865, 57.870000000000005, 57.875, 57.88, 57.885, 57.89, 57.895, 57.9, 57.905, 57.910000000000004, 57.915, 57.92, 57.925000000000004, 57.93, 57.935, 57.94, 57.945, 57.95, 57.955, 57.96, 57.965, 57.97, 57.975, 57.980000000000004, 57.985, 57.99, 57.995000000000005, 58.0, 58.005, 58.01, 58.015, 58.02, 58.025, 58.03, 58.035000000000004, 58.04, 58.045, 58.050000000000004, 58.055, 58.06, 58.065, 58.07, 58.075, 58.08, 58.085, 58.09, 58.095, 58.1, 58.105000000000004, 58.11, 58.115, 58.120000000000005, 58.125, 58.13, 58.135, 58.14, 58.145, 58.15, 58.155, 58.160000000000004, 58.165, 58.17, 58.175000000000004, 58.18, 58.185, 58.19, 58.195, 58.2, 58.205, 58.21, 58.215, 58.22, 58.225, 58.230000000000004, 58.235, 58.24, 58.245000000000005, 58.25, 58.255, 58.26, 58.265, 58.27, 58.275, 58.28, 58.285000000000004, 58.29, 58.295, 58.300000000000004, 58.305, 58.31, 58.315, 58.32, 58.325, 58.33, 58.335, 58.34, 58.345, 58.35, 58.355000000000004, 58.36, 58.365, 58.370000000000005, 58.375, 58.38, 58.385, 58.39, 58.395, 58.4, 58.405, 58.410000000000004, 58.415, 58.42, 58.425000000000004, 58.43, 58.435, 58.44, 58.445, 58.45, 58.455, 58.46, 58.465, 58.47, 58.475, 58.480000000000004, 58.485, 58.49, 58.495000000000005, 58.5, 58.505, 58.51, 58.515, 58.52, 58.525, 58.53, 58.535000000000004, 58.54, 58.545, 58.550000000000004, 58.555, 58.56, 58.565, 58.57, 58.575, 58.58, 58.585, 58.59, 58.595, 58.6, 58.605000000000004, 58.61, 58.615, 58.620000000000005, 58.625, 58.63, 58.635, 58.64, 58.645, 58.65, 58.655, 58.660000000000004, 58.665, 58.67, 58.675000000000004, 58.68, 58.685, 58.69, 58.695, 58.7, 58.705, 58.71, 58.715, 58.72, 58.725, 58.730000000000004, 58.735, 58.74, 58.745000000000005, 58.75, 58.755, 58.76, 58.765, 58.77, 58.775, 58.78, 58.785000000000004, 58.79, 58.795, 58.800000000000004, 58.805, 58.81, 58.815, 58.82, 58.825, 58.83, 58.835, 58.84, 58.845, 58.85, 58.855000000000004, 58.86, 58.865, 58.870000000000005, 58.875, 58.88, 58.885, 58.89, 58.895, 58.9, 58.905, 58.910000000000004, 58.915, 58.92, 58.925000000000004, 58.93, 58.935, 58.94, 58.945, 58.95, 58.955, 58.96, 58.965, 58.97, 58.975, 58.980000000000004, 58.985, 58.99, 58.995000000000005, 59.0, 59.005, 59.01, 59.015, 59.02, 59.025, 59.03, 59.035000000000004, 59.04, 59.045, 59.050000000000004, 59.055, 59.06, 59.065, 59.07, 59.075, 59.08, 59.085, 59.09, 59.095, 59.1, 59.105000000000004, 59.11, 59.115, 59.120000000000005, 59.125, 59.13, 59.135, 59.14, 59.145, 59.15, 59.155, 59.160000000000004, 59.165, 59.17, 59.175000000000004, 59.18, 59.185, 59.19, 59.195, 59.2, 59.205, 59.21, 59.215, 59.22, 59.225, 59.230000000000004, 59.235, 59.24, 59.245000000000005, 59.25, 59.255, 59.26, 59.265, 59.27, 59.275, 59.28, 59.285000000000004, 59.29, 59.295, 59.300000000000004, 59.305, 59.31, 59.315, 59.32, 59.325, 59.33, 59.335, 59.34, 59.345, 59.35, 59.355000000000004, 59.36, 59.365, 59.370000000000005, 59.375, 59.38, 59.385, 59.39, 59.395, 59.4, 59.405, 59.410000000000004, 59.415, 59.42, 59.425000000000004, 59.43, 59.435, 59.44, 59.445, 59.45, 59.455, 59.46, 59.465, 59.47, 59.475, 59.480000000000004, 59.485, 59.49, 59.495000000000005, 59.5, 59.505, 59.51, 59.515, 59.52, 59.525, 59.53, 59.535000000000004, 59.54, 59.545, 59.550000000000004, 59.555, 59.56, 59.565, 59.57, 59.575, 59.58, 59.585, 59.59, 59.595, 59.6, 59.605000000000004, 59.61, 59.615, 59.620000000000005, 59.625, 59.63, 59.635, 59.64, 59.645, 59.65, 59.655, 59.660000000000004, 59.665, 59.67, 59.675000000000004, 59.68, 59.685, 59.69, 59.695, 59.7, 59.705, 59.71, 59.715, 59.72, 59.725, 59.730000000000004, 59.735, 59.74, 59.745000000000005, 59.75, 59.755, 59.76, 59.765, 59.77, 59.775, 59.78, 59.785000000000004, 59.79, 59.795, 59.800000000000004, 59.805, 59.81, 59.815, 59.82, 59.825, 59.83, 59.835, 59.84, 59.845, 59.85, 59.855000000000004, 59.86, 59.865, 59.870000000000005, 59.875, 59.88, 59.885, 59.89, 59.895, 59.9, 59.905, 59.910000000000004, 59.915, 59.92, 59.925000000000004, 59.93, 59.935, 59.94, 59.945, 59.95, 59.955, 59.96, 59.965, 59.97, 59.975, 59.980000000000004, 59.985, 59.99, 59.995000000000005, 60.0, 60.005, 60.01, 60.015, 60.02, 60.025, 60.03, 60.035000000000004, 60.04, 60.045, 60.050000000000004, 60.055, 60.06, 60.065, 60.07, 60.075, 60.08, 60.085, 60.09, 60.095, 60.1, 60.105000000000004, 60.11, 60.115, 60.120000000000005, 60.125, 60.13, 60.135, 60.14, 60.145, 60.15, 60.155, 60.160000000000004, 60.165, 60.17, 60.175000000000004, 60.18, 60.185, 60.19, 60.195, 60.2, 60.205, 60.21, 60.215, 60.22, 60.225, 60.230000000000004, 60.235, 60.24, 60.245000000000005, 60.25, 60.255, 60.26, 60.265, 60.27, 60.275, 60.28, 60.285000000000004, 60.29, 60.295, 60.300000000000004, 60.305, 60.31, 60.315, 60.32, 60.325, 60.33, 60.335, 60.34, 60.345, 60.35, 60.355000000000004, 60.36, 60.365, 60.370000000000005, 60.375, 60.38, 60.385, 60.39, 60.395, 60.4, 60.405, 60.410000000000004, 60.415, 60.42, 60.425000000000004, 60.43, 60.435, 60.44, 60.445, 60.45, 60.455, 60.46, 60.465, 60.47, 60.475, 60.480000000000004, 60.485, 60.49, 60.495000000000005, 60.5, 60.505, 60.51, 60.515, 60.52, 60.525, 60.53, 60.535000000000004, 60.54, 60.545, 60.550000000000004, 60.555, 60.56, 60.565, 60.57, 60.575, 60.58, 60.585, 60.59, 60.595, 60.6, 60.605000000000004, 60.61, 60.615, 60.620000000000005, 60.625, 60.63, 60.635, 60.64, 60.645, 60.65, 60.655, 60.660000000000004, 60.665, 60.67, 60.675000000000004, 60.68, 60.685, 60.69, 60.695, 60.7, 60.705, 60.71, 60.715, 60.72, 60.725, 60.730000000000004, 60.735, 60.74, 60.745000000000005, 60.75, 60.755, 60.76, 60.765, 60.77, 60.775, 60.78, 60.785000000000004, 60.79, 60.795, 60.800000000000004, 60.805, 60.81, 60.815, 60.82, 60.825, 60.83, 60.835, 60.84, 60.845, 60.85, 60.855000000000004, 60.86, 60.865, 60.870000000000005, 60.875, 60.88, 60.885, 60.89, 60.895, 60.9, 60.905, 60.910000000000004, 60.915, 60.92, 60.925000000000004, 60.93, 60.935, 60.94, 60.945, 60.95, 60.955, 60.96, 60.965, 60.97, 60.975, 60.980000000000004, 60.985, 60.99, 60.995000000000005, 61.0, 61.005, 61.01, 61.015, 61.02, 61.025, 61.03, 61.035000000000004, 61.04, 61.045, 61.050000000000004, 61.055, 61.06, 61.065, 61.07, 61.075, 61.08, 61.085, 61.09, 61.095, 61.1, 61.105000000000004, 61.11, 61.115, 61.120000000000005, 61.125, 61.13, 61.135, 61.14, 61.145, 61.15, 61.155, 61.160000000000004, 61.165, 61.17, 61.175000000000004, 61.18, 61.185, 61.19, 61.195, 61.2, 61.205, 61.21, 61.215, 61.22, 61.225, 61.230000000000004, 61.235, 61.24, 61.245000000000005, 61.25, 61.255, 61.26, 61.265, 61.27, 61.275, 61.28, 61.285000000000004, 61.29, 61.295, 61.300000000000004, 61.305, 61.31, 61.315, 61.32, 61.325, 61.33, 61.335, 61.34, 61.345, 61.35, 61.355000000000004, 61.36, 61.365, 61.370000000000005, 61.375, 61.38, 61.385, 61.39, 61.395, 61.4, 61.405, 61.410000000000004, 61.415, 61.42, 61.425000000000004, 61.43, 61.435, 61.44, 61.445, 61.45, 61.455, 61.46, 61.465, 61.47, 61.475, 61.480000000000004, 61.485, 61.49, 61.495000000000005, 61.5, 61.505, 61.51, 61.515, 61.52, 61.525, 61.53, 61.535000000000004, 61.54, 61.545, 61.550000000000004, 61.555, 61.56, 61.565000000000005, 61.57, 61.575, 61.58, 61.585, 61.59, 61.595, 61.6, 61.605000000000004, 61.61, 61.615, 61.620000000000005, 61.625, 61.63, 61.635, 61.64, 61.645, 61.65, 61.655, 61.660000000000004, 61.665, 61.67, 61.675000000000004, 61.68, 61.685, 61.690000000000005, 61.695, 61.7, 61.705, 61.71, 61.715, 61.72, 61.725, 61.730000000000004, 61.735, 61.74, 61.745000000000005, 61.75, 61.755, 61.76, 61.765, 61.77, 61.775, 61.78, 61.785000000000004, 61.79, 61.795, 61.800000000000004, 61.805, 61.81, 61.815000000000005, 61.82, 61.825, 61.83, 61.835, 61.84, 61.845, 61.85, 61.855000000000004, 61.86, 61.865, 61.870000000000005, 61.875, 61.88, 61.885, 61.89, 61.895, 61.9, 61.905, 61.910000000000004, 61.915, 61.92, 61.925000000000004, 61.93, 61.935, 61.940000000000005, 61.945, 61.95, 61.955, 61.96, 61.965, 61.97, 61.975, 61.980000000000004, 61.985, 61.99, 61.995000000000005, 62.0, 62.005, 62.01, 62.015, 62.02, 62.025, 62.03, 62.035000000000004, 62.04, 62.045, 62.050000000000004, 62.055, 62.06, 62.065000000000005, 62.07, 62.075, 62.08, 62.085, 62.09, 62.095, 62.1, 62.105000000000004, 62.11, 62.115, 62.120000000000005, 62.125, 62.13, 62.135, 62.14, 62.145, 62.15, 62.155, 62.160000000000004, 62.165, 62.17, 62.175000000000004, 62.18, 62.185, 62.190000000000005, 62.195, 62.2, 62.205, 62.21, 62.215, 62.22, 62.225, 62.230000000000004, 62.235, 62.24, 62.245000000000005, 62.25, 62.255, 62.26, 62.265, 62.27, 62.275, 62.28, 62.285000000000004, 62.29, 62.295, 62.300000000000004, 62.305, 62.31, 62.315000000000005, 62.32, 62.325, 62.33, 62.335, 62.34, 62.345, 62.35, 62.355000000000004, 62.36, 62.365, 62.370000000000005, 62.375, 62.38, 62.385, 62.39, 62.395, 62.4, 62.405, 62.410000000000004, 62.415, 62.42, 62.425000000000004, 62.43, 62.435, 62.440000000000005, 62.445, 62.45, 62.455, 62.46, 62.465, 62.47, 62.475, 62.480000000000004, 62.485, 62.49, 62.495000000000005, 62.5, 62.505, 62.51, 62.515, 62.52, 62.525, 62.53, 62.535000000000004, 62.54, 62.545, 62.550000000000004, 62.555, 62.56, 62.565000000000005, 62.57, 62.575, 62.58, 62.585, 62.59, 62.595, 62.6, 62.605000000000004, 62.61, 62.615, 62.620000000000005, 62.625, 62.63, 62.635, 62.64, 62.645, 62.65, 62.655, 62.660000000000004, 62.665, 62.67, 62.675000000000004, 62.68, 62.685, 62.690000000000005, 62.695, 62.7, 62.705, 62.71, 62.715, 62.72, 62.725, 62.730000000000004, 62.735, 62.74, 62.745000000000005, 62.75, 62.755, 62.76, 62.765, 62.77, 62.775, 62.78, 62.785000000000004, 62.79, 62.795, 62.800000000000004, 62.805, 62.81, 62.815000000000005, 62.82, 62.825, 62.83, 62.835, 62.84, 62.845, 62.85, 62.855000000000004, 62.86, 62.865, 62.870000000000005, 62.875, 62.88, 62.885, 62.89, 62.895, 62.9, 62.905, 62.910000000000004, 62.915, 62.92, 62.925000000000004, 62.93, 62.935, 62.940000000000005, 62.945, 62.95, 62.955, 62.96, 62.965, 62.97, 62.975, 62.980000000000004, 62.985, 62.99, 62.995000000000005, 63.0, 63.005, 63.01, 63.015, 63.02, 63.025, 63.03, 63.035000000000004, 63.04, 63.045, 63.050000000000004, 63.055, 63.06, 63.065000000000005, 63.07, 63.075, 63.08, 63.085, 63.09, 63.095, 63.1, 63.105000000000004, 63.11, 63.115, 63.120000000000005, 63.125, 63.13, 63.135, 63.14, 63.145, 63.15, 63.155, 63.160000000000004, 63.165, 63.17, 63.175000000000004, 63.18, 63.185, 63.190000000000005, 63.195, 63.2, 63.205, 63.21, 63.215, 63.22, 63.225, 63.230000000000004, 63.235, 63.24, 63.245000000000005, 63.25, 63.255, 63.26, 63.265, 63.27, 63.275, 63.28, 63.285000000000004, 63.29, 63.295, 63.300000000000004, 63.305, 63.31, 63.315000000000005, 63.32, 63.325, 63.33, 63.335, 63.34, 63.345, 63.35, 63.355000000000004, 63.36, 63.365, 63.370000000000005, 63.375, 63.38, 63.385, 63.39, 63.395, 63.4, 63.405, 63.410000000000004, 63.415, 63.42, 63.425000000000004, 63.43, 63.435, 63.440000000000005, 63.445, 63.45, 63.455, 63.46, 63.465, 63.47, 63.475, 63.480000000000004, 63.485, 63.49, 63.495000000000005, 63.5, 63.505, 63.51, 63.515, 63.52, 63.525, 63.53, 63.535000000000004, 63.54, 63.545, 63.550000000000004, 63.555, 63.56, 63.565000000000005, 63.57, 63.575, 63.58, 63.585, 63.59, 63.595, 63.6, 63.605000000000004, 63.61, 63.615, 63.620000000000005, 63.625, 63.63, 63.635, 63.64, 63.645, 63.65, 63.655, 63.660000000000004, 63.665, 63.67, 63.675000000000004, 63.68, 63.685, 63.690000000000005, 63.695, 63.7, 63.705, 63.71, 63.715, 63.72, 63.725, 63.730000000000004, 63.735, 63.74, 63.745000000000005, 63.75, 63.755, 63.76, 63.765, 63.77, 63.775, 63.78, 63.785000000000004, 63.79, 63.795, 63.800000000000004, 63.805, 63.81, 63.815000000000005, 63.82, 63.825, 63.83, 63.835, 63.84, 63.845, 63.85, 63.855000000000004, 63.86, 63.865, 63.870000000000005, 63.875, 63.88, 63.885, 63.89, 63.895, 63.9, 63.905, 63.910000000000004, 63.915, 63.92, 63.925000000000004, 63.93, 63.935, 63.940000000000005, 63.945, 63.95, 63.955, 63.96, 63.965, 63.97, 63.975, 63.980000000000004, 63.985, 63.99, 63.995000000000005, 64.0, 64.005, 64.01, 64.015, 64.02, 64.025, 64.03, 64.035, 64.04, 64.045, 64.05, 64.055, 64.06, 64.065, 64.07000000000001, 64.075, 64.08, 64.08500000000001, 64.09, 64.095, 64.1, 64.105, 64.11, 64.115, 64.12, 64.125, 64.13, 64.135, 64.14, 64.145, 64.15, 64.155, 64.16, 64.165, 64.17, 64.175, 64.18, 64.185, 64.19, 64.19500000000001, 64.2, 64.205, 64.21000000000001, 64.215, 64.22, 64.225, 64.23, 64.235, 64.24, 64.245, 64.25, 64.255, 64.26, 64.265, 64.27, 64.275, 64.28, 64.285, 64.29, 64.295, 64.3, 64.305, 64.31, 64.315, 64.32000000000001, 64.325, 64.33, 64.33500000000001, 64.34, 64.345, 64.35, 64.355, 64.36, 64.365, 64.37, 64.375, 64.38, 64.385, 64.39, 64.395, 64.4, 64.405, 64.41, 64.415, 64.42, 64.425, 64.43, 64.435, 64.44, 64.44500000000001, 64.45, 64.455, 64.46000000000001, 64.465, 64.47, 64.475, 64.48, 64.485, 64.49, 64.495, 64.5, 64.505, 64.51, 64.515, 64.52, 64.525, 64.53, 64.535, 64.54, 64.545, 64.55, 64.555, 64.56, 64.565, 64.57000000000001, 64.575, 64.58, 64.58500000000001, 64.59, 64.595, 64.6, 64.605, 64.61, 64.615, 64.62, 64.625, 64.63, 64.635, 64.64, 64.645, 64.65, 64.655, 64.66, 64.665, 64.67, 64.675, 64.68, 64.685, 64.69, 64.69500000000001, 64.7, 64.705, 64.71000000000001, 64.715, 64.72, 64.725, 64.73, 64.735, 64.74, 64.745, 64.75, 64.755, 64.76, 64.765, 64.77, 64.775, 64.78, 64.785, 64.79, 64.795, 64.8, 64.805, 64.81, 64.815, 64.82000000000001, 64.825, 64.83, 64.83500000000001, 64.84, 64.845, 64.85, 64.855, 64.86, 64.865, 64.87, 64.875, 64.88, 64.885, 64.89, 64.895, 64.9, 64.905, 64.91, 64.915, 64.92, 64.925, 64.93, 64.935, 64.94, 64.94500000000001, 64.95, 64.955, 64.96000000000001, 64.965, 64.97, 64.975, 64.98, 64.985, 64.99, 64.995, 65.0, 65.005, 65.01, 65.015, 65.02, 65.025, 65.03, 65.035, 65.04, 65.045, 65.05, 65.055, 65.06, 65.065, 65.07000000000001, 65.075, 65.08, 65.08500000000001, 65.09, 65.095, 65.1, 65.105, 65.11, 65.115, 65.12, 65.125, 65.13, 65.135, 65.14, 65.145, 65.15, 65.155, 65.16, 65.165, 65.17, 65.175, 65.18, 65.185, 65.19, 65.19500000000001, 65.2, 65.205, 65.21000000000001, 65.215, 65.22, 65.225, 65.23, 65.235, 65.24, 65.245, 65.25, 65.255, 65.26, 65.265, 65.27, 65.275, 65.28, 65.285, 65.29, 65.295, 65.3, 65.305, 65.31, 65.315, 65.32000000000001, 65.325, 65.33, 65.33500000000001, 65.34, 65.345, 65.35, 65.355, 65.36, 65.365, 65.37, 65.375, 65.38, 65.385, 65.39, 65.395, 65.4, 65.405, 65.41, 65.415, 65.42, 65.425, 65.43, 65.435, 65.44, 65.44500000000001, 65.45, 65.455, 65.46000000000001, 65.465, 65.47, 65.475, 65.48, 65.485, 65.49, 65.495, 65.5, 65.505, 65.51, 65.515, 65.52, 65.525, 65.53, 65.535, 65.54, 65.545, 65.55, 65.555, 65.56, 65.565, 65.57000000000001, 65.575, 65.58, 65.58500000000001, 65.59, 65.595, 65.6, 65.605, 65.61, 65.615, 65.62, 65.625, 65.63, 65.635, 65.64, 65.645, 65.65, 65.655, 65.66, 65.665, 65.67, 65.675, 65.68, 65.685, 65.69, 65.69500000000001, 65.7, 65.705, 65.71000000000001, 65.715, 65.72, 65.725, 65.73, 65.735, 65.74, 65.745, 65.75, 65.755, 65.76, 65.765, 65.77, 65.775, 65.78, 65.785, 65.79, 65.795, 65.8, 65.805, 65.81, 65.815, 65.82000000000001, 65.825, 65.83, 65.83500000000001, 65.84, 65.845, 65.85, 65.855, 65.86, 65.865, 65.87, 65.875, 65.88, 65.885, 65.89, 65.895, 65.9, 65.905, 65.91, 65.915, 65.92, 65.925, 65.93, 65.935, 65.94, 65.94500000000001, 65.95, 65.955, 65.96000000000001, 65.965, 65.97, 65.975, 65.98, 65.985, 65.99, 65.995, 66.0, 66.005, 66.01, 66.015, 66.02, 66.025, 66.03, 66.035, 66.04, 66.045, 66.05, 66.055, 66.06, 66.065, 66.07000000000001, 66.075, 66.08, 66.08500000000001, 66.09, 66.095, 66.1, 66.105, 66.11, 66.115, 66.12, 66.125, 66.13, 66.135, 66.14, 66.145, 66.15, 66.155, 66.16, 66.165, 66.17, 66.175, 66.18, 66.185, 66.19, 66.19500000000001, 66.2, 66.205, 66.21000000000001, 66.215, 66.22, 66.225, 66.23, 66.235, 66.24, 66.245, 66.25, 66.255, 66.26, 66.265, 66.27, 66.275, 66.28, 66.285, 66.29, 66.295, 66.3, 66.305, 66.31, 66.315, 66.32000000000001, 66.325, 66.33, 66.33500000000001, 66.34, 66.345, 66.35, 66.355, 66.36, 66.365, 66.37, 66.375, 66.38, 66.385, 66.39, 66.395, 66.4, 66.405, 66.41, 66.415, 66.42, 66.425, 66.43, 66.435, 66.44, 66.44500000000001, 66.45, 66.455, 66.46000000000001, 66.465, 66.47, 66.475, 66.48, 66.485, 66.49, 66.495, 66.5, 66.505, 66.51, 66.515, 66.52, 66.525, 66.53, 66.535, 66.54, 66.545, 66.55, 66.555, 66.56, 66.565, 66.57000000000001, 66.575, 66.58, 66.58500000000001, 66.59, 66.595, 66.6, 66.605, 66.61, 66.615, 66.62, 66.625, 66.63, 66.635, 66.64, 66.645, 66.65, 66.655, 66.66, 66.665, 66.67, 66.675, 66.68, 66.685, 66.69, 66.69500000000001, 66.7, 66.705, 66.71000000000001, 66.715, 66.72, 66.725, 66.73, 66.735, 66.74, 66.745, 66.75, 66.755, 66.76, 66.765, 66.77, 66.775, 66.78, 66.785, 66.79, 66.795, 66.8, 66.805, 66.81, 66.815, 66.82000000000001, 66.825, 66.83, 66.83500000000001, 66.84, 66.845, 66.85, 66.855, 66.86, 66.865, 66.87, 66.875, 66.88, 66.885, 66.89, 66.895, 66.9, 66.905, 66.91, 66.915, 66.92, 66.925, 66.93, 66.935, 66.94, 66.94500000000001, 66.95, 66.955, 66.96000000000001, 66.965, 66.97, 66.975, 66.98, 66.985, 66.99, 66.995, 67.0, 67.005, 67.01, 67.015, 67.02, 67.025, 67.03, 67.035, 67.04, 67.045, 67.05, 67.055, 67.06, 67.065, 67.07000000000001, 67.075, 67.08, 67.08500000000001, 67.09, 67.095, 67.1, 67.105, 67.11, 67.115, 67.12, 67.125, 67.13, 67.135, 67.14, 67.145, 67.15, 67.155, 67.16, 67.165, 67.17, 67.175, 67.18, 67.185, 67.19, 67.19500000000001, 67.2, 67.205, 67.21000000000001, 67.215, 67.22, 67.225, 67.23, 67.235, 67.24, 67.245, 67.25, 67.255, 67.26, 67.265, 67.27, 67.275, 67.28, 67.285, 67.29, 67.295, 67.3, 67.305, 67.31, 67.315, 67.32000000000001, 67.325, 67.33, 67.33500000000001, 67.34, 67.345, 67.35, 67.355, 67.36, 67.365, 67.37, 67.375, 67.38, 67.385, 67.39, 67.395, 67.4, 67.405, 67.41, 67.415, 67.42, 67.425, 67.43, 67.435, 67.44, 67.44500000000001, 67.45, 67.455, 67.46000000000001, 67.465, 67.47, 67.475, 67.48, 67.485, 67.49, 67.495, 67.5, 67.505, 67.51, 67.515, 67.52, 67.525, 67.53, 67.535, 67.54, 67.545, 67.55, 67.555, 67.56, 67.565, 67.57000000000001, 67.575, 67.58, 67.58500000000001, 67.59, 67.595, 67.6, 67.605, 67.61, 67.615, 67.62, 67.625, 67.63, 67.635, 67.64, 67.645, 67.65, 67.655, 67.66, 67.665, 67.67, 67.675, 67.68, 67.685, 67.69, 67.69500000000001, 67.7, 67.705, 67.71000000000001, 67.715, 67.72, 67.725, 67.73, 67.735, 67.74, 67.745, 67.75, 67.755, 67.76, 67.765, 67.77, 67.775, 67.78, 67.785, 67.79, 67.795, 67.8, 67.805, 67.81, 67.815, 67.82000000000001, 67.825, 67.83, 67.83500000000001, 67.84, 67.845, 67.85, 67.855, 67.86, 67.865, 67.87, 67.875, 67.88, 67.885, 67.89, 67.895, 67.9, 67.905, 67.91, 67.915, 67.92, 67.925, 67.93, 67.935, 67.94, 67.94500000000001, 67.95, 67.955, 67.96000000000001, 67.965, 67.97, 67.975, 67.98, 67.985, 67.99, 67.995, 68.0, 68.005, 68.01, 68.015, 68.02, 68.025, 68.03, 68.035, 68.04, 68.045, 68.05, 68.055, 68.06, 68.065, 68.07000000000001, 68.075, 68.08, 68.08500000000001, 68.09, 68.095, 68.1, 68.105, 68.11, 68.115, 68.12, 68.125, 68.13, 68.135, 68.14, 68.145, 68.15, 68.155, 68.16, 68.165, 68.17, 68.175, 68.18, 68.185, 68.19, 68.19500000000001, 68.2, 68.205, 68.21000000000001, 68.215, 68.22, 68.225, 68.23, 68.235, 68.24, 68.245, 68.25, 68.255, 68.26, 68.265, 68.27, 68.275, 68.28, 68.285, 68.29, 68.295, 68.3, 68.305, 68.31, 68.315, 68.32000000000001, 68.325, 68.33, 68.33500000000001, 68.34, 68.345, 68.35000000000001, 68.355, 68.36, 68.365, 68.37, 68.375, 68.38, 68.385, 68.39, 68.395, 68.4, 68.405, 68.41, 68.415, 68.42, 68.425, 68.43, 68.435, 68.44, 68.44500000000001, 68.45, 68.455, 68.46000000000001, 68.465, 68.47, 68.47500000000001, 68.48, 68.485, 68.49, 68.495, 68.5, 68.505, 68.51, 68.515, 68.52, 68.525, 68.53, 68.535, 68.54, 68.545, 68.55, 68.555, 68.56, 68.565, 68.57000000000001, 68.575, 68.58, 68.58500000000001, 68.59, 68.595, 68.60000000000001, 68.605, 68.61, 68.615, 68.62, 68.625, 68.63, 68.635, 68.64, 68.645, 68.65, 68.655, 68.66, 68.665, 68.67, 68.675, 68.68, 68.685, 68.69, 68.69500000000001, 68.7, 68.705, 68.71000000000001, 68.715, 68.72, 68.72500000000001, 68.73, 68.735, 68.74, 68.745, 68.75, 68.755, 68.76, 68.765, 68.77, 68.775, 68.78, 68.785, 68.79, 68.795, 68.8, 68.805, 68.81, 68.815, 68.82000000000001, 68.825, 68.83, 68.83500000000001, 68.84, 68.845, 68.85000000000001, 68.855, 68.86, 68.865, 68.87, 68.875, 68.88, 68.885, 68.89, 68.895, 68.9, 68.905, 68.91, 68.915, 68.92, 68.925, 68.93, 68.935, 68.94, 68.94500000000001, 68.95, 68.955, 68.96000000000001, 68.965, 68.97, 68.97500000000001, 68.98, 68.985, 68.99, 68.995, 69.0, 69.005, 69.01, 69.015, 69.02, 69.025, 69.03, 69.035, 69.04, 69.045, 69.05, 69.055, 69.06, 69.065, 69.07000000000001, 69.075, 69.08, 69.08500000000001, 69.09, 69.095, 69.10000000000001, 69.105, 69.11, 69.115, 69.12, 69.125, 69.13, 69.135, 69.14, 69.145, 69.15, 69.155, 69.16, 69.165, 69.17, 69.175, 69.18, 69.185, 69.19, 69.19500000000001, 69.2, 69.205, 69.21000000000001, 69.215, 69.22, 69.22500000000001, 69.23, 69.235, 69.24, 69.245, 69.25, 69.255, 69.26, 69.265, 69.27, 69.275, 69.28, 69.285, 69.29, 69.295, 69.3, 69.305, 69.31, 69.315, 69.32000000000001, 69.325, 69.33, 69.33500000000001, 69.34, 69.345, 69.35000000000001, 69.355, 69.36, 69.365, 69.37, 69.375, 69.38, 69.385, 69.39, 69.395, 69.4, 69.405, 69.41, 69.415, 69.42, 69.425, 69.43, 69.435, 69.44, 69.44500000000001, 69.45, 69.455, 69.46000000000001, 69.465, 69.47, 69.47500000000001, 69.48, 69.485, 69.49, 69.495, 69.5, 69.505, 69.51, 69.515, 69.52, 69.525, 69.53, 69.535, 69.54, 69.545, 69.55, 69.555, 69.56, 69.565, 69.57000000000001, 69.575, 69.58, 69.58500000000001, 69.59, 69.595, 69.60000000000001, 69.605, 69.61, 69.615, 69.62, 69.625, 69.63, 69.635, 69.64, 69.645, 69.65, 69.655, 69.66, 69.665, 69.67, 69.675, 69.68, 69.685, 69.69, 69.69500000000001, 69.7, 69.705, 69.71000000000001, 69.715, 69.72, 69.72500000000001, 69.73, 69.735, 69.74, 69.745, 69.75, 69.755, 69.76, 69.765, 69.77, 69.775, 69.78, 69.785, 69.79, 69.795, 69.8, 69.805, 69.81, 69.815, 69.82000000000001, 69.825, 69.83, 69.83500000000001, 69.84, 69.845, 69.85000000000001, 69.855, 69.86, 69.865, 69.87, 69.875, 69.88, 69.885, 69.89, 69.895, 69.9, 69.905, 69.91, 69.915, 69.92, 69.925, 69.93, 69.935, 69.94, 69.94500000000001, 69.95, 69.955, 69.96000000000001, 69.965, 69.97, 69.97500000000001, 69.98, 69.985, 69.99, 69.995, 70.0, 70.005, 70.01, 70.015, 70.02, 70.025, 70.03, 70.035, 70.04, 70.045, 70.05, 70.055, 70.06, 70.065, 70.07000000000001, 70.075, 70.08, 70.08500000000001, 70.09, 70.095, 70.10000000000001, 70.105, 70.11, 70.115, 70.12, 70.125, 70.13, 70.135, 70.14, 70.145, 70.15, 70.155, 70.16, 70.165, 70.17, 70.175, 70.18, 70.185, 70.19, 70.19500000000001, 70.2, 70.205, 70.21000000000001, 70.215, 70.22, 70.22500000000001, 70.23, 70.235, 70.24, 70.245, 70.25, 70.255, 70.26, 70.265, 70.27, 70.275, 70.28, 70.285, 70.29, 70.295, 70.3, 70.305, 70.31, 70.315, 70.32000000000001, 70.325, 70.33, 70.33500000000001, 70.34, 70.345, 70.35000000000001, 70.355, 70.36, 70.365, 70.37, 70.375, 70.38, 70.385, 70.39, 70.395, 70.4, 70.405, 70.41, 70.415, 70.42, 70.425, 70.43, 70.435, 70.44, 70.44500000000001, 70.45, 70.455, 70.46000000000001, 70.465, 70.47, 70.47500000000001, 70.48, 70.485, 70.49, 70.495, 70.5, 70.505, 70.51, 70.515, 70.52, 70.525, 70.53, 70.535, 70.54, 70.545, 70.55, 70.555, 70.56, 70.565, 70.57000000000001, 70.575, 70.58, 70.58500000000001, 70.59, 70.595, 70.60000000000001, 70.605, 70.61, 70.615, 70.62, 70.625, 70.63, 70.635, 70.64, 70.645, 70.65, 70.655, 70.66, 70.665, 70.67, 70.675, 70.68, 70.685, 70.69, 70.69500000000001, 70.7, 70.705, 70.71000000000001, 70.715, 70.72, 70.72500000000001, 70.73, 70.735, 70.74, 70.745, 70.75, 70.755, 70.76, 70.765, 70.77, 70.775, 70.78, 70.785, 70.79, 70.795, 70.8, 70.805, 70.81, 70.815, 70.82000000000001, 70.825, 70.83, 70.83500000000001, 70.84, 70.845, 70.85000000000001, 70.855, 70.86, 70.865, 70.87, 70.875, 70.88, 70.885, 70.89, 70.895, 70.9, 70.905, 70.91, 70.915, 70.92, 70.925, 70.93, 70.935, 70.94, 70.94500000000001, 70.95, 70.955, 70.96000000000001, 70.965, 70.97, 70.97500000000001, 70.98, 70.985, 70.99, 70.995, 71.0, 71.005, 71.01, 71.015, 71.02, 71.025, 71.03, 71.035, 71.04, 71.045, 71.05, 71.055, 71.06, 71.065, 71.07000000000001, 71.075, 71.08, 71.08500000000001, 71.09, 71.095, 71.10000000000001, 71.105, 71.11, 71.115, 71.12, 71.125, 71.13, 71.135, 71.14, 71.145, 71.15, 71.155, 71.16, 71.165, 71.17, 71.175, 71.18, 71.185, 71.19, 71.19500000000001, 71.2, 71.205, 71.21000000000001, 71.215, 71.22, 71.22500000000001, 71.23, 71.235, 71.24, 71.245, 71.25, 71.255, 71.26, 71.265, 71.27, 71.275, 71.28, 71.285, 71.29, 71.295, 71.3, 71.305, 71.31, 71.315, 71.32000000000001, 71.325, 71.33, 71.33500000000001, 71.34, 71.345, 71.35000000000001, 71.355, 71.36, 71.365, 71.37, 71.375, 71.38, 71.385, 71.39, 71.395, 71.4, 71.405, 71.41, 71.415, 71.42, 71.425, 71.43, 71.435, 71.44, 71.44500000000001, 71.45, 71.455, 71.46000000000001, 71.465, 71.47, 71.47500000000001, 71.48, 71.485, 71.49, 71.495, 71.5, 71.505, 71.51, 71.515, 71.52, 71.525, 71.53, 71.535, 71.54, 71.545, 71.55, 71.555, 71.56, 71.565, 71.57000000000001, 71.575, 71.58, 71.58500000000001, 71.59, 71.595, 71.60000000000001, 71.605, 71.61, 71.615, 71.62, 71.625, 71.63, 71.635, 71.64, 71.645, 71.65, 71.655, 71.66, 71.665, 71.67, 71.675, 71.68, 71.685, 71.69, 71.69500000000001, 71.7, 71.705, 71.71000000000001, 71.715, 71.72, 71.72500000000001, 71.73, 71.735, 71.74, 71.745, 71.75, 71.755, 71.76, 71.765, 71.77, 71.775, 71.78, 71.785, 71.79, 71.795, 71.8, 71.805, 71.81, 71.815, 71.82000000000001, 71.825, 71.83, 71.83500000000001, 71.84, 71.845, 71.85000000000001, 71.855, 71.86, 71.865, 71.87, 71.875, 71.88, 71.885, 71.89, 71.895, 71.9, 71.905, 71.91, 71.915, 71.92, 71.925, 71.93, 71.935, 71.94, 71.94500000000001, 71.95, 71.955, 71.96000000000001, 71.965, 71.97, 71.97500000000001, 71.98, 71.985, 71.99, 71.995, 72.0, 72.005, 72.01, 72.015, 72.02, 72.025, 72.03, 72.035, 72.04, 72.045, 72.05, 72.055, 72.06, 72.065, 72.07000000000001, 72.075, 72.08, 72.08500000000001, 72.09, 72.095, 72.10000000000001, 72.105, 72.11, 72.115, 72.12, 72.125, 72.13, 72.135, 72.14, 72.145, 72.15, 72.155, 72.16, 72.165, 72.17, 72.175, 72.18, 72.185, 72.19, 72.19500000000001, 72.2, 72.205, 72.21000000000001, 72.215, 72.22, 72.22500000000001, 72.23, 72.235, 72.24, 72.245, 72.25, 72.255, 72.26, 72.265, 72.27, 72.275, 72.28, 72.285, 72.29, 72.295, 72.3, 72.305, 72.31, 72.315, 72.32000000000001, 72.325, 72.33, 72.33500000000001, 72.34, 72.345, 72.35000000000001, 72.355, 72.36, 72.365, 72.37, 72.375, 72.38, 72.385, 72.39, 72.395, 72.4, 72.405, 72.41, 72.415, 72.42, 72.425, 72.43, 72.435, 72.44, 72.44500000000001, 72.45, 72.455, 72.46000000000001, 72.465, 72.47, 72.47500000000001, 72.48, 72.485, 72.49, 72.495, 72.5, 72.505, 72.51, 72.515, 72.52, 72.525, 72.53, 72.535, 72.54, 72.545, 72.55, 72.555, 72.56, 72.565, 72.57000000000001, 72.575, 72.58, 72.58500000000001, 72.59, 72.595, 72.60000000000001, 72.605, 72.61, 72.615, 72.62, 72.625, 72.63, 72.635, 72.64, 72.645, 72.65, 72.655, 72.66, 72.665, 72.67, 72.675, 72.68, 72.685, 72.69, 72.69500000000001, 72.7, 72.705, 72.71000000000001, 72.715, 72.72, 72.72500000000001, 72.73, 72.735, 72.74, 72.745, 72.75, 72.755, 72.76, 72.765, 72.77, 72.775, 72.78, 72.785, 72.79, 72.795, 72.8, 72.805, 72.81, 72.815, 72.82000000000001, 72.825, 72.83, 72.83500000000001, 72.84, 72.845, 72.85000000000001, 72.855, 72.86, 72.865, 72.87, 72.875, 72.88, 72.885, 72.89, 72.895, 72.9, 72.905, 72.91, 72.915, 72.92, 72.925, 72.93, 72.935, 72.94, 72.94500000000001, 72.95, 72.955, 72.96000000000001, 72.965, 72.97, 72.97500000000001, 72.98, 72.985, 72.99, 72.995, 73.0, 73.005, 73.01, 73.015, 73.02, 73.025, 73.03, 73.035, 73.04, 73.045, 73.05, 73.055, 73.06, 73.065, 73.07000000000001, 73.075, 73.08, 73.08500000000001, 73.09, 73.095, 73.10000000000001, 73.105, 73.11, 73.115, 73.12, 73.125, 73.13, 73.135, 73.14, 73.145, 73.15, 73.155, 73.16, 73.165, 73.17, 73.175, 73.18, 73.185, 73.19, 73.19500000000001, 73.2, 73.205, 73.21000000000001, 73.215, 73.22, 73.22500000000001, 73.23, 73.235, 73.24, 73.245, 73.25, 73.255, 73.26, 73.265, 73.27, 73.275, 73.28, 73.285, 73.29, 73.295, 73.3, 73.305, 73.31, 73.315, 73.32000000000001, 73.325, 73.33, 73.33500000000001, 73.34, 73.345, 73.35000000000001, 73.355, 73.36, 73.365, 73.37, 73.375, 73.38, 73.385, 73.39, 73.395, 73.4, 73.405, 73.41, 73.415, 73.42, 73.425, 73.43, 73.435, 73.44, 73.44500000000001, 73.45, 73.455, 73.46000000000001, 73.465, 73.47, 73.47500000000001, 73.48, 73.485, 73.49, 73.495, 73.5, 73.505, 73.51, 73.515, 73.52, 73.525, 73.53, 73.535, 73.54, 73.545, 73.55, 73.555, 73.56, 73.565, 73.57000000000001, 73.575, 73.58, 73.58500000000001, 73.59, 73.595, 73.60000000000001, 73.605, 73.61, 73.615, 73.62, 73.625, 73.63, 73.635, 73.64, 73.645, 73.65, 73.655, 73.66, 73.665, 73.67, 73.675, 73.68, 73.685, 73.69, 73.69500000000001, 73.7, 73.705, 73.71000000000001, 73.715, 73.72, 73.72500000000001, 73.73, 73.735, 73.74, 73.745, 73.75, 73.755, 73.76, 73.765, 73.77, 73.775, 73.78, 73.785, 73.79, 73.795, 73.8, 73.805, 73.81, 73.815, 73.82000000000001, 73.825, 73.83, 73.83500000000001, 73.84, 73.845, 73.85000000000001, 73.855, 73.86, 73.865, 73.87, 73.875, 73.88, 73.885, 73.89, 73.895, 73.9, 73.905, 73.91, 73.915, 73.92, 73.925, 73.93, 73.935, 73.94, 73.94500000000001, 73.95, 73.955, 73.96000000000001, 73.965, 73.97, 73.97500000000001, 73.98, 73.985, 73.99, 73.995, 74.0, 74.005, 74.01, 74.015, 74.02, 74.025, 74.03, 74.035, 74.04, 74.045, 74.05, 74.055, 74.06, 74.065, 74.07000000000001, 74.075, 74.08, 74.08500000000001, 74.09, 74.095, 74.10000000000001, 74.105, 74.11, 74.115, 74.12, 74.125, 74.13, 74.135, 74.14, 74.145, 74.15, 74.155, 74.16, 74.165, 74.17, 74.175, 74.18, 74.185, 74.19, 74.19500000000001, 74.2, 74.205, 74.21000000000001, 74.215, 74.22, 74.22500000000001, 74.23, 74.235, 74.24, 74.245, 74.25, 74.255, 74.26, 74.265, 74.27, 74.275, 74.28, 74.285, 74.29, 74.295, 74.3, 74.305, 74.31, 74.315, 74.32000000000001, 74.325, 74.33, 74.33500000000001, 74.34, 74.345, 74.35000000000001, 74.355, 74.36, 74.365, 74.37, 74.375, 74.38, 74.385, 74.39, 74.395, 74.4, 74.405, 74.41, 74.415, 74.42, 74.425, 74.43, 74.435, 74.44, 74.44500000000001, 74.45, 74.455, 74.46000000000001, 74.465, 74.47, 74.47500000000001, 74.48, 74.485, 74.49, 74.495, 74.5, 74.505, 74.51, 74.515, 74.52, 74.525, 74.53, 74.535, 74.54, 74.545, 74.55, 74.555, 74.56, 74.565, 74.57000000000001, 74.575, 74.58, 74.58500000000001, 74.59, 74.595, 74.60000000000001, 74.605, 74.61, 74.615, 74.62, 74.625, 74.63, 74.635, 74.64, 74.645, 74.65, 74.655, 74.66, 74.665, 74.67, 74.675, 74.68, 74.685, 74.69, 74.69500000000001, 74.7, 74.705, 74.71000000000001, 74.715, 74.72, 74.72500000000001, 74.73, 74.735, 74.74, 74.745, 74.75, 74.755, 74.76, 74.765, 74.77, 74.775, 74.78, 74.785, 74.79, 74.795, 74.8, 74.805, 74.81, 74.815, 74.82000000000001, 74.825, 74.83, 74.83500000000001, 74.84, 74.845, 74.85000000000001, 74.855, 74.86, 74.865, 74.87, 74.875, 74.88, 74.885, 74.89, 74.895, 74.9, 74.905, 74.91, 74.915, 74.92, 74.925, 74.93, 74.935, 74.94, 74.94500000000001, 74.95, 74.955, 74.96000000000001, 74.965, 74.97, 74.97500000000001, 74.98, 74.985, 74.99, 74.995, 75.0, 75.005, 75.01, 75.015, 75.02, 75.025, 75.03, 75.035, 75.04, 75.045, 75.05, 75.055, 75.06, 75.065, 75.07000000000001, 75.075, 75.08, 75.08500000000001, 75.09, 75.095, 75.10000000000001, 75.105, 75.11, 75.115, 75.12, 75.125, 75.13, 75.135, 75.14, 75.145, 75.15, 75.155, 75.16, 75.165, 75.17, 75.175, 75.18, 75.185, 75.19, 75.19500000000001, 75.2, 75.205, 75.21000000000001, 75.215, 75.22, 75.22500000000001, 75.23, 75.235, 75.24, 75.245, 75.25, 75.255, 75.26, 75.265, 75.27, 75.275, 75.28, 75.285, 75.29, 75.295, 75.3, 75.305, 75.31, 75.315, 75.32000000000001, 75.325, 75.33, 75.33500000000001, 75.34, 75.345, 75.35000000000001, 75.355, 75.36, 75.365, 75.37, 75.375, 75.38, 75.385, 75.39, 75.395, 75.4, 75.405, 75.41, 75.415, 75.42, 75.425, 75.43, 75.435, 75.44, 75.44500000000001, 75.45, 75.455, 75.46000000000001, 75.465, 75.47, 75.47500000000001, 75.48, 75.485, 75.49, 75.495, 75.5, 75.505, 75.51, 75.515, 75.52, 75.525, 75.53, 75.535, 75.54, 75.545, 75.55, 75.555, 75.56, 75.565, 75.57000000000001, 75.575, 75.58, 75.58500000000001, 75.59, 75.595, 75.60000000000001, 75.605, 75.61, 75.615, 75.62, 75.625, 75.63, 75.635, 75.64, 75.645, 75.65, 75.655, 75.66, 75.665, 75.67, 75.675, 75.68, 75.685, 75.69, 75.69500000000001, 75.7, 75.705, 75.71000000000001, 75.715, 75.72, 75.72500000000001, 75.73, 75.735, 75.74, 75.745, 75.75, 75.755, 75.76, 75.765, 75.77, 75.775, 75.78, 75.785, 75.79, 75.795, 75.8, 75.805, 75.81, 75.815, 75.82000000000001, 75.825, 75.83, 75.83500000000001, 75.84, 75.845, 75.85000000000001, 75.855, 75.86, 75.865, 75.87, 75.875, 75.88, 75.885, 75.89, 75.895, 75.9, 75.905, 75.91, 75.915, 75.92, 75.925, 75.93, 75.935, 75.94, 75.94500000000001, 75.95, 75.955, 75.96000000000001, 75.965, 75.97, 75.97500000000001, 75.98, 75.985, 75.99, 75.995, 76.0, 76.005, 76.01, 76.015, 76.02, 76.025, 76.03, 76.035, 76.04, 76.045, 76.05, 76.055, 76.06, 76.065, 76.07000000000001, 76.075, 76.08, 76.08500000000001, 76.09, 76.095, 76.10000000000001, 76.105, 76.11, 76.115, 76.12, 76.125, 76.13, 76.135, 76.14, 76.145, 76.15, 76.155, 76.16, 76.165, 76.17, 76.175, 76.18, 76.185, 76.19, 76.19500000000001, 76.2, 76.205, 76.21000000000001, 76.215, 76.22, 76.22500000000001, 76.23, 76.235, 76.24, 76.245, 76.25, 76.255, 76.26, 76.265, 76.27, 76.275, 76.28, 76.285, 76.29, 76.295, 76.3, 76.305, 76.31, 76.315, 76.32000000000001, 76.325, 76.33, 76.33500000000001, 76.34, 76.345, 76.35000000000001, 76.355, 76.36, 76.365, 76.37, 76.375, 76.38, 76.385, 76.39, 76.395, 76.4, 76.405, 76.41, 76.415, 76.42, 76.425, 76.43, 76.435, 76.44, 76.44500000000001, 76.45, 76.455, 76.46000000000001, 76.465, 76.47, 76.47500000000001, 76.48, 76.485, 76.49, 76.495, 76.5, 76.505, 76.51, 76.515, 76.52, 76.525, 76.53, 76.535, 76.54, 76.545, 76.55, 76.555, 76.56, 76.565, 76.57000000000001, 76.575, 76.58, 76.58500000000001, 76.59, 76.595, 76.60000000000001, 76.605, 76.61, 76.615, 76.62, 76.625, 76.63, 76.635, 76.64, 76.645, 76.65, 76.655, 76.66, 76.665, 76.67, 76.675, 76.68, 76.685, 76.69, 76.69500000000001, 76.7, 76.705, 76.71000000000001, 76.715, 76.72, 76.72500000000001, 76.73, 76.735, 76.74, 76.745, 76.75, 76.755, 76.76, 76.765, 76.77, 76.775, 76.78, 76.785, 76.79, 76.795, 76.8, 76.805, 76.81, 76.815, 76.82000000000001, 76.825, 76.83, 76.83500000000001, 76.84, 76.845, 76.85000000000001, 76.855, 76.86, 76.865, 76.87, 76.875, 76.88, 76.885, 76.89, 76.895, 76.9, 76.905, 76.91, 76.915, 76.92, 76.925, 76.93, 76.935, 76.94, 76.94500000000001, 76.95, 76.955, 76.96000000000001, 76.965, 76.97, 76.97500000000001, 76.98, 76.985, 76.99, 76.995, 77.0, 77.005, 77.01, 77.015, 77.02, 77.025, 77.03, 77.035, 77.04, 77.045, 77.05, 77.055, 77.06, 77.065, 77.07000000000001, 77.075, 77.08, 77.08500000000001, 77.09, 77.095, 77.10000000000001, 77.105, 77.11, 77.115, 77.12, 77.125, 77.13, 77.135, 77.14, 77.145, 77.15, 77.155, 77.16, 77.165, 77.17, 77.175, 77.18, 77.185, 77.19, 77.19500000000001, 77.2, 77.205, 77.21000000000001, 77.215, 77.22, 77.22500000000001, 77.23, 77.235, 77.24, 77.245, 77.25, 77.255, 77.26, 77.265, 77.27, 77.275, 77.28, 77.285, 77.29, 77.295, 77.3, 77.305, 77.31, 77.315, 77.32000000000001, 77.325, 77.33, 77.33500000000001, 77.34, 77.345, 77.35000000000001, 77.355, 77.36, 77.365, 77.37, 77.375, 77.38, 77.385, 77.39, 77.395, 77.4, 77.405, 77.41, 77.415, 77.42, 77.425, 77.43, 77.435, 77.44, 77.44500000000001, 77.45, 77.455, 77.46000000000001, 77.465, 77.47, 77.47500000000001, 77.48, 77.485, 77.49, 77.495, 77.5, 77.505, 77.51, 77.515, 77.52, 77.525, 77.53, 77.535, 77.54, 77.545, 77.55, 77.555, 77.56, 77.565, 77.57000000000001, 77.575, 77.58, 77.58500000000001, 77.59, 77.595, 77.60000000000001, 77.605, 77.61, 77.615, 77.62, 77.625, 77.63, 77.635, 77.64, 77.645, 77.65, 77.655, 77.66, 77.665, 77.67, 77.675, 77.68, 77.685, 77.69, 77.69500000000001, 77.7, 77.705, 77.71000000000001, 77.715, 77.72, 77.72500000000001, 77.73, 77.735, 77.74, 77.745, 77.75, 77.755, 77.76, 77.765, 77.77, 77.775, 77.78, 77.785, 77.79, 77.795, 77.8, 77.805, 77.81, 77.815, 77.82000000000001, 77.825, 77.83, 77.83500000000001, 77.84, 77.845, 77.85000000000001, 77.855, 77.86, 77.865, 77.87, 77.875, 77.88, 77.885, 77.89, 77.895, 77.9, 77.905, 77.91, 77.915, 77.92, 77.925, 77.93, 77.935, 77.94, 77.94500000000001, 77.95, 77.955, 77.96000000000001, 77.965, 77.97, 77.97500000000001, 77.98, 77.985, 77.99, 77.995, 78.0, 78.005, 78.01, 78.015, 78.02, 78.025, 78.03, 78.035, 78.04, 78.045, 78.05, 78.055, 78.06, 78.065, 78.07000000000001, 78.075, 78.08, 78.08500000000001, 78.09, 78.095, 78.10000000000001, 78.105, 78.11, 78.115, 78.12, 78.125, 78.13, 78.135, 78.14, 78.145, 78.15, 78.155, 78.16, 78.165, 78.17, 78.175, 78.18, 78.185, 78.19, 78.19500000000001, 78.2, 78.205, 78.21000000000001, 78.215, 78.22, 78.22500000000001, 78.23, 78.235, 78.24, 78.245, 78.25, 78.255, 78.26, 78.265, 78.27, 78.275, 78.28, 78.285, 78.29, 78.295, 78.3, 78.305, 78.31, 78.315, 78.32000000000001, 78.325, 78.33, 78.33500000000001, 78.34, 78.345, 78.35000000000001, 78.355, 78.36, 78.365, 78.37, 78.375, 78.38, 78.385, 78.39, 78.395, 78.4, 78.405, 78.41, 78.415, 78.42, 78.425, 78.43, 78.435, 78.44, 78.44500000000001, 78.45, 78.455, 78.46000000000001, 78.465, 78.47, 78.47500000000001, 78.48, 78.485, 78.49, 78.495, 78.5, 78.505, 78.51, 78.515, 78.52, 78.525, 78.53, 78.535, 78.54, 78.545, 78.55, 78.555, 78.56, 78.565, 78.57000000000001, 78.575, 78.58, 78.58500000000001, 78.59, 78.595, 78.60000000000001, 78.605, 78.61, 78.615, 78.62, 78.625, 78.63, 78.635, 78.64, 78.645, 78.65, 78.655, 78.66, 78.665, 78.67, 78.675, 78.68, 78.685, 78.69, 78.69500000000001, 78.7, 78.705, 78.71000000000001, 78.715, 78.72, 78.72500000000001, 78.73, 78.735, 78.74, 78.745, 78.75, 78.755, 78.76, 78.765, 78.77, 78.775, 78.78, 78.785, 78.79, 78.795, 78.8, 78.805, 78.81, 78.815, 78.82000000000001, 78.825, 78.83, 78.83500000000001, 78.84, 78.845, 78.85000000000001, 78.855, 78.86, 78.865, 78.87, 78.875, 78.88, 78.885, 78.89, 78.895, 78.9, 78.905, 78.91, 78.915, 78.92, 78.925, 78.93, 78.935, 78.94, 78.94500000000001, 78.95, 78.955, 78.96000000000001, 78.965, 78.97, 78.97500000000001, 78.98, 78.985, 78.99, 78.995, 79.0, 79.005, 79.01, 79.015, 79.02, 79.025, 79.03, 79.035, 79.04, 79.045, 79.05, 79.055, 79.06, 79.065, 79.07000000000001, 79.075, 79.08, 79.08500000000001, 79.09, 79.095, 79.10000000000001, 79.105, 79.11, 79.115, 79.12, 79.125, 79.13, 79.135, 79.14, 79.145, 79.15, 79.155, 79.16, 79.165, 79.17, 79.175, 79.18, 79.185, 79.19, 79.19500000000001, 79.2, 79.205, 79.21000000000001, 79.215, 79.22, 79.22500000000001, 79.23, 79.235, 79.24, 79.245, 79.25, 79.255, 79.26, 79.265, 79.27, 79.275, 79.28, 79.285, 79.29, 79.295, 79.3, 79.305, 79.31, 79.315, 79.32000000000001, 79.325, 79.33, 79.33500000000001, 79.34, 79.345, 79.35000000000001, 79.355, 79.36, 79.365, 79.37, 79.375, 79.38, 79.385, 79.39, 79.395, 79.4, 79.405, 79.41, 79.415, 79.42, 79.425, 79.43, 79.435, 79.44, 79.44500000000001, 79.45, 79.455, 79.46000000000001, 79.465, 79.47, 79.47500000000001, 79.48, 79.485, 79.49, 79.495, 79.5, 79.505, 79.51, 79.515, 79.52, 79.525, 79.53, 79.535, 79.54, 79.545, 79.55, 79.555, 79.56, 79.565, 79.57000000000001, 79.575, 79.58, 79.58500000000001, 79.59, 79.595, 79.60000000000001, 79.605, 79.61, 79.615, 79.62, 79.625, 79.63, 79.635, 79.64, 79.645, 79.65, 79.655, 79.66, 79.665, 79.67, 79.675, 79.68, 79.685, 79.69, 79.69500000000001, 79.7, 79.705, 79.71000000000001, 79.715, 79.72, 79.72500000000001, 79.73, 79.735, 79.74, 79.745, 79.75, 79.755, 79.76, 79.765, 79.77, 79.775, 79.78, 79.785, 79.79, 79.795, 79.8, 79.805, 79.81, 79.815, 79.82000000000001, 79.825, 79.83, 79.83500000000001, 79.84, 79.845, 79.85000000000001, 79.855, 79.86, 79.865, 79.87, 79.875, 79.88, 79.885, 79.89, 79.895, 79.9, 79.905, 79.91, 79.915, 79.92, 79.925, 79.93, 79.935, 79.94, 79.94500000000001, 79.95, 79.955, 79.96000000000001, 79.965, 79.97, 79.97500000000001, 79.98, 79.985, 79.99, 79.995, 80.0, 80.005, 80.01, 80.015, 80.02, 80.025, 80.03, 80.035, 80.04, 80.045, 80.05, 80.055, 80.06, 80.065, 80.07000000000001, 80.075, 80.08, 80.08500000000001, 80.09, 80.095, 80.10000000000001, 80.105, 80.11, 80.115, 80.12, 80.125, 80.13, 80.135, 80.14, 80.145, 80.15, 80.155, 80.16, 80.165, 80.17, 80.175, 80.18, 80.185, 80.19, 80.19500000000001, 80.2, 80.205, 80.21000000000001, 80.215, 80.22, 80.22500000000001, 80.23, 80.235, 80.24, 80.245, 80.25, 80.255, 80.26, 80.265, 80.27, 80.275, 80.28, 80.285, 80.29, 80.295, 80.3, 80.305, 80.31, 80.315, 80.32000000000001, 80.325, 80.33, 80.33500000000001, 80.34, 80.345, 80.35000000000001, 80.355, 80.36, 80.365, 80.37, 80.375, 80.38, 80.385, 80.39, 80.395, 80.4, 80.405, 80.41, 80.415, 80.42, 80.425, 80.43, 80.435, 80.44, 80.44500000000001, 80.45, 80.455, 80.46000000000001, 80.465, 80.47, 80.47500000000001, 80.48, 80.485, 80.49, 80.495, 80.5, 80.505, 80.51, 80.515, 80.52, 80.525, 80.53, 80.535, 80.54, 80.545, 80.55, 80.555, 80.56, 80.565, 80.57000000000001, 80.575, 80.58, 80.58500000000001, 80.59, 80.595, 80.60000000000001, 80.605, 80.61, 80.615, 80.62, 80.625, 80.63, 80.635, 80.64, 80.645, 80.65, 80.655, 80.66, 80.665, 80.67, 80.675, 80.68, 80.685, 80.69, 80.69500000000001, 80.7, 80.705, 80.71000000000001, 80.715, 80.72, 80.72500000000001, 80.73, 80.735, 80.74, 80.745, 80.75, 80.755, 80.76, 80.765, 80.77, 80.775, 80.78, 80.785, 80.79, 80.795, 80.8, 80.805, 80.81, 80.815, 80.82000000000001, 80.825, 80.83, 80.83500000000001, 80.84, 80.845, 80.85000000000001, 80.855, 80.86, 80.865, 80.87, 80.875, 80.88, 80.885, 80.89, 80.895, 80.9, 80.905, 80.91, 80.915, 80.92, 80.925, 80.93, 80.935, 80.94, 80.94500000000001, 80.95, 80.955, 80.96000000000001, 80.965, 80.97, 80.97500000000001, 80.98, 80.985, 80.99, 80.995, 81.0, 81.005, 81.01, 81.015, 81.02, 81.025, 81.03, 81.035, 81.04, 81.045, 81.05, 81.055, 81.06, 81.065, 81.07000000000001, 81.075, 81.08, 81.08500000000001, 81.09, 81.095, 81.10000000000001, 81.105, 81.11, 81.115, 81.12, 81.125, 81.13, 81.135, 81.14, 81.145, 81.15, 81.155, 81.16, 81.165, 81.17, 81.175, 81.18, 81.185, 81.19, 81.19500000000001, 81.2, 81.205, 81.21000000000001, 81.215, 81.22, 81.22500000000001, 81.23, 81.235, 81.24, 81.245, 81.25, 81.255, 81.26, 81.265, 81.27, 81.275, 81.28, 81.285, 81.29, 81.295, 81.3, 81.305, 81.31, 81.315, 81.32000000000001, 81.325, 81.33, 81.33500000000001, 81.34, 81.345, 81.35000000000001, 81.355, 81.36, 81.365, 81.37, 81.375, 81.38, 81.385, 81.39, 81.395, 81.4, 81.405, 81.41, 81.415, 81.42, 81.425, 81.43, 81.435, 81.44, 81.44500000000001, 81.45, 81.455, 81.46000000000001, 81.465, 81.47, 81.47500000000001, 81.48, 81.485, 81.49, 81.495, 81.5, 81.505, 81.51, 81.515, 81.52, 81.525, 81.53, 81.535, 81.54, 81.545, 81.55, 81.555, 81.56, 81.565, 81.57000000000001, 81.575, 81.58, 81.58500000000001, 81.59, 81.595, 81.60000000000001, 81.605, 81.61, 81.615, 81.62, 81.625, 81.63, 81.635, 81.64, 81.645, 81.65, 81.655, 81.66, 81.665, 81.67, 81.675, 81.68, 81.685, 81.69, 81.69500000000001, 81.7, 81.705, 81.71000000000001, 81.715, 81.72, 81.72500000000001, 81.73, 81.735, 81.74, 81.745, 81.75, 81.755, 81.76, 81.765, 81.77, 81.775, 81.78, 81.785, 81.79, 81.795, 81.8, 81.805, 81.81, 81.815, 81.82000000000001, 81.825, 81.83, 81.83500000000001, 81.84, 81.845, 81.85000000000001, 81.855, 81.86, 81.865, 81.87, 81.875, 81.88, 81.885, 81.89, 81.895, 81.9, 81.905, 81.91, 81.915, 81.92, 81.925, 81.93, 81.935, 81.94, 81.94500000000001, 81.95, 81.955, 81.96000000000001, 81.965, 81.97, 81.97500000000001, 81.98, 81.985, 81.99, 81.995, 82.0, 82.005, 82.01, 82.015, 82.02, 82.025, 82.03, 82.035, 82.04, 82.045, 82.05, 82.055, 82.06, 82.065, 82.07000000000001, 82.075, 82.08, 82.08500000000001, 82.09, 82.095, 82.10000000000001, 82.105, 82.11, 82.115, 82.12, 82.125, 82.13, 82.135, 82.14, 82.145, 82.15, 82.155, 82.16, 82.165, 82.17, 82.175, 82.18, 82.185, 82.19, 82.19500000000001, 82.2, 82.205, 82.21000000000001, 82.215, 82.22, 82.22500000000001, 82.23, 82.235, 82.24, 82.245, 82.25, 82.255, 82.26, 82.265, 82.27, 82.275, 82.28, 82.285, 82.29, 82.295, 82.3, 82.305, 82.31, 82.315, 82.32000000000001, 82.325, 82.33, 82.33500000000001, 82.34, 82.345, 82.35000000000001, 82.355, 82.36, 82.365, 82.37, 82.375, 82.38, 82.385, 82.39, 82.395, 82.4, 82.405, 82.41, 82.415, 82.42, 82.425, 82.43, 82.435, 82.44, 82.44500000000001, 82.45, 82.455, 82.46000000000001, 82.465, 82.47, 82.47500000000001, 82.48, 82.485, 82.49, 82.495, 82.5, 82.505, 82.51, 82.515, 82.52, 82.525, 82.53, 82.535, 82.54, 82.545, 82.55, 82.555, 82.56, 82.565, 82.57000000000001, 82.575, 82.58, 82.58500000000001, 82.59, 82.595, 82.60000000000001, 82.605, 82.61, 82.615, 82.62, 82.625, 82.63, 82.635, 82.64, 82.645, 82.65, 82.655, 82.66, 82.665, 82.67, 82.675, 82.68, 82.685, 82.69, 82.69500000000001, 82.7, 82.705, 82.71000000000001, 82.715, 82.72, 82.72500000000001, 82.73, 82.735, 82.74, 82.745, 82.75, 82.755, 82.76, 82.765, 82.77, 82.775, 82.78, 82.785, 82.79, 82.795, 82.8, 82.805, 82.81, 82.815, 82.82000000000001, 82.825, 82.83, 82.83500000000001, 82.84, 82.845, 82.85000000000001, 82.855, 82.86, 82.865, 82.87, 82.875, 82.88, 82.885, 82.89, 82.895, 82.9, 82.905, 82.91, 82.915, 82.92, 82.925, 82.93, 82.935, 82.94, 82.94500000000001, 82.95, 82.955, 82.96000000000001, 82.965, 82.97, 82.97500000000001, 82.98, 82.985, 82.99, 82.995, 83.0, 83.005, 83.01, 83.015, 83.02, 83.025, 83.03, 83.035, 83.04, 83.045, 83.05, 83.055, 83.06, 83.065, 83.07000000000001, 83.075, 83.08, 83.08500000000001, 83.09, 83.095, 83.10000000000001, 83.105, 83.11, 83.115, 83.12, 83.125, 83.13, 83.135, 83.14, 83.145, 83.15, 83.155, 83.16, 83.165, 83.17, 83.175, 83.18, 83.185, 83.19, 83.19500000000001, 83.2, 83.205, 83.21000000000001, 83.215, 83.22, 83.22500000000001, 83.23, 83.235, 83.24, 83.245, 83.25, 83.255, 83.26, 83.265, 83.27, 83.275, 83.28, 83.285, 83.29, 83.295, 83.3, 83.305, 83.31, 83.315, 83.32000000000001, 83.325, 83.33, 83.33500000000001, 83.34, 83.345, 83.35000000000001, 83.355, 83.36, 83.365, 83.37, 83.375, 83.38, 83.385, 83.39, 83.395, 83.4, 83.405, 83.41, 83.415, 83.42, 83.425, 83.43, 83.435, 83.44, 83.44500000000001, 83.45, 83.455, 83.46000000000001, 83.465, 83.47, 83.47500000000001, 83.48, 83.485, 83.49, 83.495, 83.5, 83.505, 83.51, 83.515, 83.52, 83.525, 83.53, 83.535, 83.54, 83.545, 83.55, 83.555, 83.56, 83.565, 83.57000000000001, 83.575, 83.58, 83.58500000000001, 83.59, 83.595, 83.60000000000001, 83.605, 83.61, 83.615, 83.62, 83.625, 83.63, 83.635, 83.64, 83.645, 83.65, 83.655, 83.66, 83.665, 83.67, 83.675, 83.68, 83.685, 83.69, 83.69500000000001, 83.7, 83.705, 83.71000000000001, 83.715, 83.72, 83.72500000000001, 83.73, 83.735, 83.74, 83.745, 83.75, 83.755, 83.76, 83.765, 83.77, 83.775, 83.78, 83.785, 83.79, 83.795, 83.8, 83.805, 83.81, 83.815, 83.82000000000001, 83.825, 83.83, 83.83500000000001, 83.84, 83.845, 83.85000000000001, 83.855, 83.86, 83.865, 83.87, 83.875, 83.88, 83.885, 83.89, 83.895, 83.9, 83.905, 83.91, 83.915, 83.92, 83.925, 83.93, 83.935, 83.94, 83.94500000000001, 83.95, 83.955, 83.96000000000001, 83.965, 83.97, 83.97500000000001, 83.98, 83.985, 83.99, 83.995, 84.0, 84.005, 84.01, 84.015, 84.02, 84.025, 84.03, 84.035, 84.04, 84.045, 84.05, 84.055, 84.06, 84.065, 84.07000000000001, 84.075, 84.08, 84.08500000000001, 84.09, 84.095, 84.10000000000001, 84.105, 84.11, 84.115, 84.12, 84.125, 84.13, 84.135, 84.14, 84.145, 84.15, 84.155, 84.16, 84.165, 84.17, 84.175, 84.18, 84.185, 84.19, 84.19500000000001, 84.2, 84.205, 84.21000000000001, 84.215, 84.22, 84.22500000000001, 84.23, 84.235, 84.24, 84.245, 84.25, 84.255, 84.26, 84.265, 84.27, 84.275, 84.28, 84.285, 84.29, 84.295, 84.3, 84.305, 84.31, 84.315, 84.32000000000001, 84.325, 84.33, 84.33500000000001, 84.34, 84.345, 84.35000000000001, 84.355, 84.36, 84.365, 84.37, 84.375, 84.38, 84.385, 84.39, 84.395, 84.4, 84.405, 84.41, 84.415, 84.42, 84.425, 84.43, 84.435, 84.44, 84.44500000000001, 84.45, 84.455, 84.46000000000001, 84.465, 84.47, 84.47500000000001, 84.48, 84.485, 84.49, 84.495, 84.5, 84.505, 84.51, 84.515, 84.52, 84.525, 84.53, 84.535, 84.54, 84.545, 84.55, 84.555, 84.56, 84.565, 84.57000000000001, 84.575, 84.58, 84.58500000000001, 84.59, 84.595, 84.60000000000001, 84.605, 84.61, 84.615, 84.62, 84.625, 84.63, 84.635, 84.64, 84.645, 84.65, 84.655, 84.66, 84.665, 84.67, 84.675, 84.68, 84.685, 84.69, 84.69500000000001, 84.7, 84.705, 84.71000000000001, 84.715, 84.72, 84.72500000000001, 84.73, 84.735, 84.74, 84.745, 84.75, 84.755, 84.76, 84.765, 84.77, 84.775, 84.78, 84.785, 84.79, 84.795, 84.8, 84.805, 84.81, 84.815, 84.82000000000001, 84.825, 84.83, 84.83500000000001, 84.84, 84.845, 84.85000000000001, 84.855, 84.86, 84.865, 84.87, 84.875, 84.88, 84.885, 84.89, 84.895, 84.9, 84.905, 84.91, 84.915, 84.92, 84.925, 84.93, 84.935, 84.94, 84.94500000000001, 84.95, 84.955, 84.96000000000001, 84.965, 84.97, 84.97500000000001, 84.98, 84.985, 84.99, 84.995, 85.0, 85.005, 85.01, 85.015, 85.02, 85.025, 85.03, 85.035, 85.04, 85.045, 85.05, 85.055, 85.06, 85.065, 85.07000000000001, 85.075, 85.08, 85.08500000000001, 85.09, 85.095, 85.10000000000001, 85.105, 85.11, 85.115, 85.12, 85.125, 85.13, 85.135, 85.14, 85.145, 85.15, 85.155, 85.16, 85.165, 85.17, 85.175, 85.18, 85.185, 85.19, 85.19500000000001, 85.2, 85.205, 85.21000000000001, 85.215, 85.22, 85.22500000000001, 85.23, 85.235, 85.24, 85.245, 85.25, 85.255, 85.26, 85.265, 85.27, 85.275, 85.28, 85.285, 85.29, 85.295, 85.3, 85.305, 85.31, 85.315, 85.32000000000001, 85.325, 85.33, 85.33500000000001, 85.34, 85.345, 85.35000000000001, 85.355, 85.36, 85.365, 85.37, 85.375, 85.38, 85.385, 85.39, 85.395, 85.4, 85.405, 85.41, 85.415, 85.42, 85.425, 85.43, 85.435, 85.44, 85.44500000000001, 85.45, 85.455, 85.46000000000001, 85.465, 85.47, 85.47500000000001, 85.48, 85.485, 85.49, 85.495, 85.5, 85.505, 85.51, 85.515, 85.52, 85.525, 85.53, 85.535, 85.54, 85.545, 85.55, 85.555, 85.56, 85.565, 85.57000000000001, 85.575, 85.58, 85.58500000000001, 85.59, 85.595, 85.60000000000001, 85.605, 85.61, 85.615, 85.62, 85.625, 85.63, 85.635, 85.64, 85.645, 85.65, 85.655, 85.66, 85.665, 85.67, 85.675, 85.68, 85.685, 85.69, 85.69500000000001, 85.7, 85.705, 85.71000000000001, 85.715, 85.72, 85.72500000000001, 85.73, 85.735, 85.74, 85.745, 85.75, 85.755, 85.76, 85.765, 85.77, 85.775, 85.78, 85.785, 85.79, 85.795, 85.8, 85.805, 85.81, 85.815, 85.82000000000001, 85.825, 85.83, 85.83500000000001, 85.84, 85.845, 85.85000000000001, 85.855, 85.86, 85.865, 85.87, 85.875, 85.88, 85.885, 85.89, 85.895, 85.9, 85.905, 85.91, 85.915, 85.92, 85.925, 85.93, 85.935, 85.94, 85.94500000000001, 85.95, 85.955, 85.96000000000001, 85.965, 85.97, 85.97500000000001, 85.98, 85.985, 85.99, 85.995, 86.0, 86.005, 86.01, 86.015, 86.02, 86.025, 86.03, 86.035, 86.04, 86.045, 86.05, 86.055, 86.06, 86.065, 86.07000000000001, 86.075, 86.08, 86.08500000000001, 86.09, 86.095, 86.10000000000001, 86.105, 86.11, 86.115, 86.12, 86.125, 86.13, 86.135, 86.14, 86.145, 86.15, 86.155, 86.16, 86.165, 86.17, 86.175, 86.18, 86.185, 86.19, 86.19500000000001, 86.2, 86.205, 86.21000000000001, 86.215, 86.22, 86.22500000000001, 86.23, 86.235, 86.24, 86.245, 86.25, 86.255, 86.26, 86.265, 86.27, 86.275, 86.28, 86.285, 86.29, 86.295, 86.3, 86.305, 86.31, 86.315, 86.32000000000001, 86.325, 86.33, 86.33500000000001, 86.34, 86.345, 86.35000000000001, 86.355, 86.36, 86.365, 86.37, 86.375, 86.38, 86.385, 86.39, 86.395, 86.4, 86.405, 86.41, 86.415, 86.42, 86.425, 86.43, 86.435, 86.44, 86.44500000000001, 86.45, 86.455, 86.46000000000001, 86.465, 86.47, 86.47500000000001, 86.48, 86.485, 86.49, 86.495, 86.5, 86.505, 86.51, 86.515, 86.52, 86.525, 86.53, 86.535, 86.54, 86.545, 86.55, 86.555, 86.56, 86.565, 86.57000000000001, 86.575, 86.58, 86.58500000000001, 86.59, 86.595, 86.60000000000001, 86.605, 86.61, 86.615, 86.62, 86.625, 86.63, 86.635, 86.64, 86.645, 86.65, 86.655, 86.66, 86.665, 86.67, 86.675, 86.68, 86.685, 86.69, 86.69500000000001, 86.7, 86.705, 86.71000000000001, 86.715, 86.72, 86.72500000000001, 86.73, 86.735, 86.74, 86.745, 86.75, 86.755, 86.76, 86.765, 86.77, 86.775, 86.78, 86.785, 86.79, 86.795, 86.8, 86.805, 86.81, 86.815, 86.82000000000001, 86.825, 86.83, 86.83500000000001, 86.84, 86.845, 86.85000000000001, 86.855, 86.86, 86.865, 86.87, 86.875, 86.88, 86.885, 86.89, 86.895, 86.9, 86.905, 86.91, 86.915, 86.92, 86.925, 86.93, 86.935, 86.94, 86.94500000000001, 86.95, 86.955, 86.96000000000001, 86.965, 86.97, 86.97500000000001, 86.98, 86.985, 86.99, 86.995, 87.0, 87.005, 87.01, 87.015, 87.02, 87.025, 87.03, 87.035, 87.04, 87.045, 87.05, 87.055, 87.06, 87.065, 87.07000000000001, 87.075, 87.08, 87.08500000000001, 87.09, 87.095, 87.10000000000001, 87.105, 87.11, 87.115, 87.12, 87.125, 87.13, 87.135, 87.14, 87.145, 87.15, 87.155, 87.16, 87.165, 87.17, 87.175, 87.18, 87.185, 87.19, 87.19500000000001, 87.2, 87.205, 87.21000000000001, 87.215, 87.22, 87.22500000000001, 87.23, 87.235, 87.24, 87.245, 87.25, 87.255, 87.26, 87.265, 87.27, 87.275, 87.28, 87.285, 87.29, 87.295, 87.3, 87.305, 87.31, 87.315, 87.32000000000001, 87.325, 87.33, 87.33500000000001, 87.34, 87.345, 87.35000000000001, 87.355, 87.36, 87.365, 87.37, 87.375, 87.38, 87.385, 87.39, 87.395, 87.4, 87.405, 87.41, 87.415, 87.42, 87.425, 87.43, 87.435, 87.44, 87.44500000000001, 87.45, 87.455, 87.46000000000001, 87.465, 87.47, 87.47500000000001, 87.48, 87.485, 87.49, 87.495, 87.5, 87.505, 87.51, 87.515, 87.52, 87.525, 87.53, 87.535, 87.54, 87.545, 87.55, 87.555, 87.56, 87.565, 87.57000000000001, 87.575, 87.58, 87.58500000000001, 87.59, 87.595, 87.60000000000001, 87.605, 87.61, 87.615, 87.62, 87.625, 87.63, 87.635, 87.64, 87.645, 87.65, 87.655, 87.66, 87.665, 87.67, 87.675, 87.68, 87.685, 87.69, 87.69500000000001, 87.7, 87.705, 87.71000000000001, 87.715, 87.72, 87.72500000000001, 87.73, 87.735, 87.74, 87.745, 87.75, 87.755, 87.76, 87.765, 87.77, 87.775, 87.78, 87.785, 87.79, 87.795, 87.8, 87.805, 87.81, 87.815, 87.82000000000001, 87.825, 87.83, 87.83500000000001, 87.84, 87.845, 87.85000000000001, 87.855, 87.86, 87.865, 87.87, 87.875, 87.88, 87.885, 87.89, 87.895, 87.9, 87.905, 87.91, 87.915, 87.92, 87.925, 87.93, 87.935, 87.94, 87.94500000000001, 87.95, 87.955, 87.96000000000001, 87.965, 87.97, 87.97500000000001, 87.98, 87.985, 87.99, 87.995, 88.0, 88.005, 88.01, 88.015, 88.02, 88.025, 88.03, 88.035, 88.04, 88.045, 88.05, 88.055, 88.06, 88.065, 88.07000000000001, 88.075, 88.08, 88.08500000000001, 88.09, 88.095, 88.10000000000001, 88.105, 88.11, 88.115, 88.12, 88.125, 88.13, 88.135, 88.14, 88.145, 88.15, 88.155, 88.16, 88.165, 88.17, 88.175, 88.18, 88.185, 88.19, 88.19500000000001, 88.2, 88.205, 88.21000000000001, 88.215, 88.22, 88.22500000000001, 88.23, 88.235, 88.24, 88.245, 88.25, 88.255, 88.26, 88.265, 88.27, 88.275, 88.28, 88.285, 88.29, 88.295, 88.3, 88.305, 88.31, 88.315, 88.32000000000001, 88.325, 88.33, 88.33500000000001, 88.34, 88.345, 88.35000000000001, 88.355, 88.36, 88.365, 88.37, 88.375, 88.38, 88.385, 88.39, 88.395, 88.4, 88.405, 88.41, 88.415, 88.42, 88.425, 88.43, 88.435, 88.44, 88.44500000000001, 88.45, 88.455, 88.46000000000001, 88.465, 88.47, 88.47500000000001, 88.48, 88.485, 88.49, 88.495, 88.5, 88.505, 88.51, 88.515, 88.52, 88.525, 88.53, 88.535, 88.54, 88.545, 88.55, 88.555, 88.56, 88.565, 88.57000000000001, 88.575, 88.58, 88.58500000000001, 88.59, 88.595, 88.60000000000001, 88.605, 88.61, 88.615, 88.62, 88.625, 88.63, 88.635, 88.64, 88.645, 88.65, 88.655, 88.66, 88.665, 88.67, 88.675, 88.68, 88.685, 88.69, 88.69500000000001, 88.7, 88.705, 88.71000000000001, 88.715, 88.72, 88.72500000000001, 88.73, 88.735, 88.74, 88.745, 88.75, 88.755, 88.76, 88.765, 88.77, 88.775, 88.78, 88.785, 88.79, 88.795, 88.8, 88.805, 88.81, 88.815, 88.82000000000001, 88.825, 88.83, 88.83500000000001, 88.84, 88.845, 88.85000000000001, 88.855, 88.86, 88.865, 88.87, 88.875, 88.88, 88.885, 88.89, 88.895, 88.9, 88.905, 88.91, 88.915, 88.92, 88.925, 88.93, 88.935, 88.94, 88.94500000000001, 88.95, 88.955, 88.96000000000001, 88.965, 88.97, 88.97500000000001, 88.98, 88.985, 88.99, 88.995, 89.0, 89.005, 89.01, 89.015, 89.02, 89.025, 89.03, 89.035, 89.04, 89.045, 89.05, 89.055, 89.06, 89.065, 89.07000000000001, 89.075, 89.08, 89.08500000000001, 89.09, 89.095, 89.10000000000001, 89.105, 89.11, 89.115, 89.12, 89.125, 89.13, 89.135, 89.14, 89.145, 89.15, 89.155, 89.16, 89.165, 89.17, 89.175, 89.18, 89.185, 89.19, 89.19500000000001, 89.2, 89.205, 89.21000000000001, 89.215, 89.22, 89.22500000000001, 89.23, 89.235, 89.24, 89.245, 89.25, 89.255, 89.26, 89.265, 89.27, 89.275, 89.28, 89.285, 89.29, 89.295, 89.3, 89.305, 89.31, 89.315, 89.32000000000001, 89.325, 89.33, 89.33500000000001, 89.34, 89.345, 89.35000000000001, 89.355, 89.36, 89.365, 89.37, 89.375, 89.38, 89.385, 89.39, 89.395, 89.4, 89.405, 89.41, 89.415, 89.42, 89.425, 89.43, 89.435, 89.44, 89.44500000000001, 89.45, 89.455, 89.46000000000001, 89.465, 89.47, 89.47500000000001, 89.48, 89.485, 89.49, 89.495, 89.5, 89.505, 89.51, 89.515, 89.52, 89.525, 89.53, 89.535, 89.54, 89.545, 89.55, 89.555, 89.56, 89.565, 89.57000000000001, 89.575, 89.58, 89.58500000000001, 89.59, 89.595, 89.60000000000001, 89.605, 89.61, 89.615, 89.62, 89.625, 89.63, 89.635, 89.64, 89.645, 89.65, 89.655, 89.66, 89.665, 89.67, 89.675, 89.68, 89.685, 89.69, 89.69500000000001, 89.7, 89.705, 89.71000000000001, 89.715, 89.72, 89.72500000000001, 89.73, 89.735, 89.74, 89.745, 89.75, 89.755, 89.76, 89.765, 89.77, 89.775, 89.78, 89.785, 89.79, 89.795, 89.8, 89.805, 89.81, 89.815, 89.82000000000001, 89.825, 89.83, 89.83500000000001, 89.84, 89.845, 89.85000000000001, 89.855, 89.86, 89.865, 89.87, 89.875, 89.88, 89.885, 89.89, 89.895, 89.9, 89.905, 89.91, 89.915, 89.92, 89.925, 89.93, 89.935, 89.94, 89.94500000000001, 89.95, 89.955, 89.96000000000001, 89.965, 89.97, 89.97500000000001, 89.98, 89.985, 89.99, 89.995])
ops.groundMotion(1139, 'Plain', *['-accel', 1141], '-fact', 9806.65)
ops.imposedMotion(4, 1, 1139)
ops.imposedMotion(4, 2, 1139)
ops.imposedMotion(4, 3, 1139)
ops.constraints(*['Transformation'])
ops.integrator(*['Newmark', 0.5, 0.25])
ops.numberer(*['RCM'])
ops.system(*['BandSPD'])
ops.test(*['NormDispIncr', 9, 10, 0, 2])
ops.algorithm(*['Newton', False, False, False])
ops.analysis('Transient')
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.analyze(*[1, 0.01])
ops.getTime()
ops.wipe()
ops.node(4, *(0.0, 0.0, 0.0))
ops.mass(4, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(9, *(0.0, 0.0, 1000.0))
ops.mass(9, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(9, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(11, *(0.0, 0.0, 2000.0))
ops.mass(11, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(11, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(13, *(0.0, 0.0, 3000.0))
ops.mass(13, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(13, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(15, *(0.0, 0.0, 4000.0))
ops.mass(15, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(15, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(17, *(0.0, 0.0, 5000.0))
ops.mass(17, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(17, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(19, *(0.0, 0.0, 6000.0))
ops.mass(19, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(19, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(21, *(0.0, 0.0, 7000.0))
ops.mass(21, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(21, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(23, *(0.0, 0.0, 8000.0))
ops.mass(23, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(23, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(25, *(0.0, 0.0, 9000.0))
ops.mass(25, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(25, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.node(6, *(0.0, 0.0, 10000.0))
ops.mass(6, 2827433.388230813, 2827433.388230813, 2827433.388230813)
ops.mass(4, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(64, *(0.0, 0.0, -3000.0))
ops.mass(64, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(64, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(66, *(0.0, 0.0, -6000.0))
ops.mass(66, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(66, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(68, *(0.0, 0.0, -9000.0))
ops.mass(68, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(68, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(70, *(0.0, 0.0, -12000.0))
ops.mass(70, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(70, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(72, *(0.0, 0.0, -15000.0))
ops.mass(72, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(72, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(74, *(0.0, 0.0, -18000.0))
ops.mass(74, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(74, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(76, *(0.0, 0.0, -21000.0))
ops.mass(76, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(76, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(78, *(0.0, 0.0, -24000.0))
ops.mass(78, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(78, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(80, *(0.0, 0.0, -27000.0))
ops.mass(80, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.mass(80, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.node(62, *(0.0, 0.0, -30000.0))
ops.mass(62, 11309733.552923253, 11309733.552923253, 11309733.552923253)
ops.model('basic', '-ndm', 3, '-ndf', 3)
ops.node(135, *(-1001.0, 2999.0, -32001.0))
ops.node(134, *(-3001.0, 2999.0, -32001.0))
ops.node(132, *(-3001.0, 999.0, -32001.0))
ops.node(133, *(-1001.0, 999.0, -32001.0))
ops.node(142, *(-1001.0, 2999.0, -30001.0))
ops.node(140, *(-3001.0, 2999.0, -30001.0))
ops.node(136, *(-3001.0, 999.0, -30001.0))
ops.node(138, *(-1001.0, 999.0, -30001.0))
ops.node(150, *(-1001.0, 2999.0, -27001.0))
ops.node(148, *(-3001.0, 2999.0, -27001.0))
ops.node(144, *(-3001.0, 999.0, -27001.0))
ops.node(146, *(-1001.0, 999.0, -27001.0))
ops.node(158, *(-1001.0, 2999.0, -24001.0))
ops.node(156, *(-3001.0, 2999.0, -24001.0))
ops.node(152, *(-3001.0, 999.0, -24001.0))
ops.node(154, *(-1001.0, 999.0, -24001.0))
ops.node(166, *(-1001.0, 2999.0, -21001.0))
ops.node(164, *(-3001.0, 2999.0, -21001.0))
ops.node(160, *(-3001.0, 999.0, -21001.0))
ops.node(162, *(-1001.0, 999.0, -21001.0))
ops.node(174, *(-1001.0, 2999.0, -18001.0))
ops.node(172, *(-3001.0, 2999.0, -18001.0))
ops.node(168, *(-3001.0, 999.0, -18001.0))
ops.node(170, *(-1001.0, 999.0, -18001.0))
ops.node(182, *(-1001.0, 2999.0, -15001.0))
ops.node(180, *(-3001.0, 2999.0, -15001.0))
ops.node(176, *(-3001.0, 999.0, -15001.0))
ops.node(178, *(-1001.0, 999.0, -15001.0))
ops.node(190, *(-1001.0, 2999.0, -12001.0))
ops.node(188, *(-3001.0, 2999.0, -12001.0))
ops.node(184, *(-3001.0, 999.0, -12001.0))
ops.node(186, *(-1001.0, 999.0, -12001.0))
ops.node(198, *(-1001.0, 2999.0, -9001.0))
ops.node(196, *(-3001.0, 2999.0, -9001.0))
ops.node(192, *(-3001.0, 999.0, -9001.0))
ops.node(194, *(-1001.0, 999.0, -9001.0))
ops.node(206, *(-1001.0, 2999.0, -6001.0))
ops.node(204, *(-3001.0, 2999.0, -6001.0))
ops.node(200, *(-3001.0, 999.0, -6001.0))
ops.node(202, *(-1001.0, 999.0, -6001.0))
ops.node(214, *(-1001.0, 2999.0, -3001.0))
ops.node(212, *(-3001.0, 2999.0, -3001.0))
ops.node(208, *(-3001.0, 999.0, -3001.0))
ops.node(210, *(-1001.0, 999.0, -3001.0))
ops.node(219, *(-1001.0, 2999.0, -1.0))
ops.node(218, *(-3001.0, 2999.0, -1.0))
ops.node(216, *(-3001.0, 999.0, -1.0))
ops.node(217, *(-1001.0, 999.0, -1.0))
ops.node(245, *(-1001.0, -1.0, -32001.0))
ops.node(243, *(-3001.0, -1.0, -32001.0))
ops.node(241, *(-3001.0, -1001.0, -32001.0))
ops.node(242, *(-1001.0, -1001.0, -32001.0))
ops.node(253, *(-1001.0, -1.0, -30001.0))
ops.node(251, *(-3001.0, -1.0, -30001.0))
ops.node(247, *(-3001.0, -1001.0, -30001.0))
ops.node(249, *(-1001.0, -1001.0, -30001.0))
ops.node(261, *(-1001.0, -1.0, -27001.0))
ops.node(259, *(-3001.0, -1.0, -27001.0))
ops.node(255, *(-3001.0, -1001.0, -27001.0))
ops.node(257, *(-1001.0, -1001.0, -27001.0))
ops.node(269, *(-1001.0, -1.0, -24001.0))
ops.node(267, *(-3001.0, -1.0, -24001.0))
ops.node(263, *(-3001.0, -1001.0, -24001.0))
ops.node(265, *(-1001.0, -1001.0, -24001.0))
ops.node(277, *(-1001.0, -1.0, -21001.0))
ops.node(275, *(-3001.0, -1.0, -21001.0))
ops.node(271, *(-3001.0, -1001.0, -21001.0))
ops.node(273, *(-1001.0, -1001.0, -21001.0))
ops.node(285, *(-1001.0, -1.0, -18001.0))
ops.node(283, *(-3001.0, -1.0, -18001.0))
ops.node(279, *(-3001.0, -1001.0, -18001.0))
ops.node(281, *(-1001.0, -1001.0, -18001.0))
ops.node(293, *(-1001.0, -1.0, -15001.0))
ops.node(291, *(-3001.0, -1.0, -15001.0))
ops.node(287, *(-3001.0, -1001.0, -15001.0))
ops.node(289, *(-1001.0, -1001.0, -15001.0))
ops.node(301, *(-1001.0, -1.0, -12001.0))
ops.node(299, *(-3001.0, -1.0, -12001.0))
ops.node(295, *(-3001.0, -1001.0, -12001.0))
ops.node(297, *(-1001.0, -1001.0, -12001.0))
ops.node(309, *(-1001.0, -1.0, -9001.0))
ops.node(307, *(-3001.0, -1.0, -9001.0))
ops.node(303, *(-3001.0, -1001.0, -9001.0))
ops.node(305, *(-1001.0, -1001.0, -9001.0))
ops.node(317, *(-1001.0, -1.0, -6001.0))
ops.node(315, *(-3001.0, -1.0, -6001.0))
ops.node(311, *(-3001.0, -1001.0, -6001.0))
ops.node(313, *(-1001.0, -1001.0, -6001.0))
ops.node(325, *(-1001.0, -1.0, -3001.0))
ops.node(323, *(-3001.0, -1.0, -3001.0))
ops.node(319, *(-3001.0, -1001.0, -3001.0))
ops.node(321, *(-1001.0, -1001.0, -3001.0))
ops.node(331, *(-1001.0, -1.0, -1.0))
ops.node(329, *(-3001.0, -1.0, -1.0))
ops.node(327, *(-3001.0, -1001.0, -1.0))
ops.node(328, *(-1001.0, -1001.0, -1.0))
ops.node(364, *(-3001.0, -3001.0, -32001.0))
ops.node(365, *(-1001.0, -3001.0, -32001.0))
ops.node(366, *(-3001.0, -3001.0, -30001.0))
ops.node(368, *(-1001.0, -3001.0, -30001.0))
ops.node(370, *(-3001.0, -3001.0, -27001.0))
ops.node(372, *(-1001.0, -3001.0, -27001.0))
ops.node(374, *(-3001.0, -3001.0, -24001.0))
ops.node(376, *(-1001.0, -3001.0, -24001.0))
ops.node(378, *(-3001.0, -3001.0, -21001.0))
ops.node(380, *(-1001.0, -3001.0, -21001.0))
ops.node(382, *(-3001.0, -3001.0, -18001.0))
ops.node(384, *(-1001.0, -3001.0, -18001.0))
ops.node(386, *(-3001.0, -3001.0, -15001.0))
ops.node(388, *(-1001.0, -3001.0, -15001.0))
ops.node(390, *(-3001.0, -3001.0, -12001.0))
ops.node(392, *(-1001.0, -3001.0, -12001.0))
ops.node(394, *(-3001.0, -3001.0, -9001.0))
ops.node(396, *(-1001.0, -3001.0, -9001.0))
ops.node(398, *(-3001.0, -3001.0, -6001.0))
ops.node(400, *(-1001.0, -3001.0, -6001.0))
ops.node(402, *(-3001.0, -3001.0, -3001.0))
ops.node(404, *(-1001.0, -3001.0, -3001.0))
ops.node(406, *(-3001.0, -3001.0, -1.0))
ops.node(407, *(-1001.0, -3001.0, -1.0))
ops.node(431, *(-1.0, -1001.0, -32001.0))
ops.node(428, *(-1.0, -3001.0, -32001.0))
ops.node(438, *(-1.0, -1001.0, -30001.0))
ops.node(434, *(-1.0, -3001.0, -30001.0))
ops.node(446, *(-1.0, -1001.0, -27001.0))
ops.node(442, *(-1.0, -3001.0, -27001.0))
ops.node(454, *(-1.0, -1001.0, -24001.0))
ops.node(450, *(-1.0, -3001.0, -24001.0))
ops.node(462, *(-1.0, -1001.0, -21001.0))
ops.node(458, *(-1.0, -3001.0, -21001.0))
ops.node(470, *(-1.0, -1001.0, -18001.0))
ops.node(466, *(-1.0, -3001.0, -18001.0))
ops.node(478, *(-1.0, -1001.0, -15001.0))
ops.node(474, *(-1.0, -3001.0, -15001.0))
ops.node(486, *(-1.0, -1001.0, -12001.0))
ops.node(482, *(-1.0, -3001.0, -12001.0))
ops.node(494, *(-1.0, -1001.0, -9001.0))
ops.node(490, *(-1.0, -3001.0, -9001.0))
ops.node(502, *(-1.0, -1001.0, -6001.0))
ops.node(498, *(-1.0, -3001.0, -6001.0))
ops.node(510, *(-1.0, -1001.0, -3001.0))
ops.node(506, *(-1.0, -3001.0, -3001.0))
ops.node(517, *(-1.0, -1001.0, -1.0))
ops.node(514, *(-1.0, -3001.0, -1.0))
ops.node(433, *(999.0, -1001.0, -32001.0))
ops.node(430, *(999.0, -3001.0, -32001.0))
ops.node(440, *(999.0, -1001.0, -30001.0))
ops.node(436, *(999.0, -3001.0, -30001.0))
ops.node(448, *(999.0, -1001.0, -27001.0))
ops.node(444, *(999.0, -3001.0, -27001.0))
ops.node(456, *(999.0, -1001.0, -24001.0))
ops.node(452, *(999.0, -3001.0, -24001.0))
ops.node(464, *(999.0, -1001.0, -21001.0))
ops.node(460, *(999.0, -3001.0, -21001.0))
ops.node(472, *(999.0, -1001.0, -18001.0))
ops.node(468, *(999.0, -3001.0, -18001.0))
ops.node(480, *(999.0, -1001.0, -15001.0))
ops.node(476, *(999.0, -3001.0, -15001.0))
ops.node(488, *(999.0, -1001.0, -12001.0))
ops.node(484, *(999.0, -3001.0, -12001.0))
ops.node(496, *(999.0, -1001.0, -9001.0))
ops.node(492, *(999.0, -3001.0, -9001.0))
ops.node(504, *(999.0, -1001.0, -6001.0))
ops.node(500, *(999.0, -3001.0, -6001.0))
ops.node(512, *(999.0, -1001.0, -3001.0))
ops.node(508, *(999.0, -3001.0, -3001.0))
ops.node(519, *(999.0, -1001.0, -1.0))
ops.node(516, *(999.0, -3001.0, -1.0))
ops.node(552, *(2999.0, -1001.0, -32001.0))
ops.node(551, *(2999.0, -3001.0, -32001.0))
ops.node(555, *(2999.0, -1001.0, -30001.0))
ops.node(553, *(2999.0, -3001.0, -30001.0))
ops.node(559, *(2999.0, -1001.0, -27001.0))
ops.node(557, *(2999.0, -3001.0, -27001.0))
ops.node(563, *(2999.0, -1001.0, -24001.0))
ops.node(561, *(2999.0, -3001.0, -24001.0))
ops.node(567, *(2999.0, -1001.0, -21001.0))
ops.node(565, *(2999.0, -3001.0, -21001.0))
ops.node(571, *(2999.0, -1001.0, -18001.0))
ops.node(569, *(2999.0, -3001.0, -18001.0))
ops.node(575, *(2999.0, -1001.0, -15001.0))
ops.node(573, *(2999.0, -3001.0, -15001.0))
ops.node(579, *(2999.0, -1001.0, -12001.0))
ops.node(577, *(2999.0, -3001.0, -12001.0))
ops.node(583, *(2999.0, -1001.0, -9001.0))
ops.node(581, *(2999.0, -3001.0, -9001.0))
ops.node(587, *(2999.0, -1001.0, -6001.0))
ops.node(585, *(2999.0, -3001.0, -6001.0))
ops.node(591, *(2999.0, -1001.0, -3001.0))
ops.node(589, *(2999.0, -3001.0, -3001.0))
ops.node(594, *(2999.0, -1001.0, -1.0))
ops.node(593, *(2999.0, -3001.0, -1.0))
ops.node(617, *(2999.0, -1.0, -32001.0))
ops.node(615, *(999.0, -1.0, -32001.0))
ops.node(623, *(2999.0, -1.0, -30001.0))
ops.node(621, *(999.0, -1.0, -30001.0))
ops.node(631, *(2999.0, -1.0, -27001.0))
ops.node(629, *(999.0, -1.0, -27001.0))
ops.node(639, *(2999.0, -1.0, -24001.0))
ops.node(637, *(999.0, -1.0, -24001.0))
ops.node(647, *(2999.0, -1.0, -21001.0))
ops.node(645, *(999.0, -1.0, -21001.0))
ops.node(655, *(2999.0, -1.0, -18001.0))
ops.node(653, *(999.0, -1.0, -18001.0))
ops.node(663, *(2999.0, -1.0, -15001.0))
ops.node(661, *(999.0, -1.0, -15001.0))
ops.node(671, *(2999.0, -1.0, -12001.0))
ops.node(669, *(999.0, -1.0, -12001.0))
ops.node(679, *(2999.0, -1.0, -9001.0))
ops.node(677, *(999.0, -1.0, -9001.0))
ops.node(687, *(2999.0, -1.0, -6001.0))
ops.node(685, *(999.0, -1.0, -6001.0))
ops.node(695, *(2999.0, -1.0, -3001.0))
ops.node(693, *(999.0, -1.0, -3001.0))
ops.node(703, *(2999.0, -1.0, -1.0))
ops.node(701, *(999.0, -1.0, -1.0))
ops.node(620, *(2999.0, 999.0, -32001.0))
ops.node(619, *(999.0, 999.0, -32001.0))
ops.node(627, *(2999.0, 999.0, -30001.0))
ops.node(625, *(999.0, 999.0, -30001.0))
ops.node(635, *(2999.0, 999.0, -27001.0))
ops.node(633, *(999.0, 999.0, -27001.0))
ops.node(643, *(2999.0, 999.0, -24001.0))
ops.node(641, *(999.0, 999.0, -24001.0))
ops.node(651, *(2999.0, 999.0, -21001.0))
ops.node(649, *(999.0, 999.0, -21001.0))
ops.node(659, *(2999.0, 999.0, -18001.0))
ops.node(657, *(999.0, 999.0, -18001.0))
ops.node(667, *(2999.0, 999.0, -15001.0))
ops.node(665, *(999.0, 999.0, -15001.0))
ops.node(675, *(2999.0, 999.0, -12001.0))
ops.node(673, *(999.0, 999.0, -12001.0))
ops.node(683, *(2999.0, 999.0, -9001.0))
ops.node(681, *(999.0, 999.0, -9001.0))
ops.node(691, *(2999.0, 999.0, -6001.0))
ops.node(689, *(999.0, 999.0, -6001.0))
ops.node(699, *(2999.0, 999.0, -3001.0))
ops.node(697, *(999.0, 999.0, -3001.0))
ops.node(706, *(2999.0, 999.0, -1.0))
ops.node(705, *(999.0, 999.0, -1.0))
ops.node(739, *(2999.0, 2999.0, -32001.0))
ops.node(738, *(999.0, 2999.0, -32001.0))
ops.node(742, *(2999.0, 2999.0, -30001.0))
ops.node(740, *(999.0, 2999.0, -30001.0))
ops.node(746, *(2999.0, 2999.0, -27001.0))
ops.node(744, *(999.0, 2999.0, -27001.0))
ops.node(750, *(2999.0, 2999.0, -24001.0))
ops.node(748, *(999.0, 2999.0, -24001.0))
ops.node(754, *(2999.0, 2999.0, -21001.0))
ops.node(752, *(999.0, 2999.0, -21001.0))
ops.node(758, *(2999.0, 2999.0, -18001.0))
ops.node(756, *(999.0, 2999.0, -18001.0))
ops.node(762, *(2999.0, 2999.0, -15001.0))
ops.node(760, *(999.0, 2999.0, -15001.0))
ops.node(766, *(2999.0, 2999.0, -12001.0))
ops.node(764, *(999.0, 2999.0, -12001.0))
ops.node(770, *(2999.0, 2999.0, -9001.0))
ops.node(768, *(999.0, 2999.0, -9001.0))
ops.node(774, *(2999.0, 2999.0, -6001.0))
ops.node(772, *(999.0, 2999.0, -6001.0))
ops.node(778, *(2999.0, 2999.0, -3001.0))
ops.node(776, *(999.0, 2999.0, -3001.0))
ops.node(781, *(2999.0, 2999.0, -1.0))
ops.node(780, *(999.0, 2999.0, -1.0))
ops.node(796, *(-1.0, 2999.0, -32001.0))
ops.node(794, *(-1.0, 999.0, -32001.0))
ops.node(800, *(-1.0, 2999.0, -30001.0))
ops.node(798, *(-1.0, 999.0, -30001.0))
ops.node(804, *(-1.0, 2999.0, -27001.0))
ops.node(802, *(-1.0, 999.0, -27001.0))
ops.node(808, *(-1.0, 2999.0, -24001.0))
ops.node(806, *(-1.0, 999.0, -24001.0))
ops.node(812, *(-1.0, 2999.0, -21001.0))
ops.node(810, *(-1.0, 999.0, -21001.0))
ops.node(816, *(-1.0, 2999.0, -18001.0))
ops.node(814, *(-1.0, 999.0, -18001.0))
ops.node(820, *(-1.0, 2999.0, -15001.0))
ops.node(818, *(-1.0, 999.0, -15001.0))
ops.node(824, *(-1.0, 2999.0, -12001.0))
ops.node(822, *(-1.0, 999.0, -12001.0))
ops.node(828, *(-1.0, 2999.0, -9001.0))
ops.node(826, *(-1.0, 999.0, -9001.0))
ops.node(832, *(-1.0, 2999.0, -6001.0))
ops.node(830, *(-1.0, 999.0, -6001.0))
ops.node(836, *(-1.0, 2999.0, -3001.0))
ops.node(834, *(-1.0, 999.0, -3001.0))
ops.node(840, *(-1.0, 2999.0, -1.0))
ops.node(838, *(-1.0, 999.0, -1.0))
ops.node(865, *(-1.0, -1.0, -32001.0))
ops.node(867, *(-1.0, -1.0, -30001.0))
ops.node(869, *(-1.0, -1.0, -27001.0))
ops.node(871, *(-1.0, -1.0, -24001.0))
ops.node(873, *(-1.0, -1.0, -21001.0))
ops.node(875, *(-1.0, -1.0, -18001.0))
ops.node(877, *(-1.0, -1.0, -15001.0))
ops.node(879, *(-1.0, -1.0, -12001.0))
ops.node(881, *(-1.0, -1.0, -9001.0))
ops.node(883, *(-1.0, -1.0, -6001.0))
ops.node(885, *(-1.0, -1.0, -3001.0))
ops.node(887, *(-1.0, -1.0, -1.0))
ops.fix(62, *[1, 1, 1, 1, 1, 1])
ops.uniaxialMaterial("PySimple1", 1098, 1, 1023091182000.0, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1099, 1, 62609137655.758286, 166.66666666666666, c=0.0)
ops.fix(132, *[1, 1, 1, 1, 1, 1])
ops.fix(134, *[1, 1, 1, 1, 1, 1])
ops.fix(133, *[1, 1, 1, 1, 1, 1])
ops.fix(135, *[1, 1, 1, 1, 1, 1])
ops.fix(241, *[1, 1, 1, 1, 1, 1])
ops.fix(243, *[1, 1, 1, 1, 1, 1])
ops.fix(242, *[1, 1, 1, 1, 1, 1])
ops.fix(245, *[1, 1, 1, 1, 1, 1])
ops.fix(364, *[1, 1, 1, 1, 1, 1])
ops.fix(365, *[1, 1, 1, 1, 1, 1])
ops.fix(428, *[1, 1, 1, 1, 1, 1])
ops.fix(431, *[1, 1, 1, 1, 1, 1])
ops.fix(430, *[1, 1, 1, 1, 1, 1])
ops.fix(433, *[1, 1, 1, 1, 1, 1])
ops.fix(551, *[1, 1, 1, 1, 1, 1])
ops.fix(552, *[1, 1, 1, 1, 1, 1])
ops.fix(615, *[1, 1, 1, 1, 1, 1])
ops.fix(619, *[1, 1, 1, 1, 1, 1])
ops.fix(617, *[1, 1, 1, 1, 1, 1])
ops.fix(620, *[1, 1, 1, 1, 1, 1])
ops.fix(738, *[1, 1, 1, 1, 1, 1])
ops.fix(739, *[1, 1, 1, 1, 1, 1])
ops.fix(794, *[1, 1, 1, 1, 1, 1])
ops.fix(796, *[1, 1, 1, 1, 1, 1])
ops.fix(865, *[1, 1, 1, 1, 1, 1])
ops.equalDOF(140, 366, *[1, 2, 3])
ops.equalDOF(140, 742, *[1, 2, 3])
ops.equalDOF(366, 553, *[1, 2, 3])
ops.equalDOF(148, 370, *[1, 2, 3])
ops.equalDOF(148, 746, *[1, 2, 3])
ops.equalDOF(370, 557, *[1, 2, 3])
ops.equalDOF(156, 374, *[1, 2, 3])
ops.equalDOF(156, 750, *[1, 2, 3])
ops.equalDOF(374, 561, *[1, 2, 3])
ops.equalDOF(164, 378, *[1, 2, 3])
ops.equalDOF(164, 754, *[1, 2, 3])
ops.equalDOF(378, 565, *[1, 2, 3])
ops.equalDOF(172, 382, *[1, 2, 3])
ops.equalDOF(172, 758, *[1, 2, 3])
ops.equalDOF(382, 569, *[1, 2, 3])
ops.equalDOF(180, 386, *[1, 2, 3])
ops.equalDOF(180, 762, *[1, 2, 3])
ops.equalDOF(386, 573, *[1, 2, 3])
ops.equalDOF(188, 390, *[1, 2, 3])
ops.equalDOF(188, 766, *[1, 2, 3])
ops.equalDOF(390, 577, *[1, 2, 3])
ops.equalDOF(196, 394, *[1, 2, 3])
ops.equalDOF(196, 770, *[1, 2, 3])
ops.equalDOF(394, 581, *[1, 2, 3])
ops.equalDOF(204, 398, *[1, 2, 3])
ops.equalDOF(204, 774, *[1, 2, 3])
ops.equalDOF(398, 585, *[1, 2, 3])
ops.equalDOF(212, 402, *[1, 2, 3])
ops.equalDOF(212, 778, *[1, 2, 3])
ops.equalDOF(402, 589, *[1, 2, 3])
ops.equalDOF(218, 406, *[1, 2, 3])
ops.equalDOF(218, 781, *[1, 2, 3])
ops.equalDOF(406, 593, *[1, 2, 3])
ops.equalDOF(142, 368, *[1, 2, 3])
ops.equalDOF(150, 372, *[1, 2, 3])
ops.equalDOF(158, 376, *[1, 2, 3])
ops.equalDOF(166, 380, *[1, 2, 3])
ops.equalDOF(174, 384, *[1, 2, 3])
ops.equalDOF(182, 388, *[1, 2, 3])
ops.equalDOF(190, 392, *[1, 2, 3])
ops.equalDOF(198, 396, *[1, 2, 3])
ops.equalDOF(206, 400, *[1, 2, 3])
ops.equalDOF(214, 404, *[1, 2, 3])
ops.equalDOF(219, 407, *[1, 2, 3])
ops.equalDOF(800, 434, *[1, 2, 3])
ops.equalDOF(804, 442, *[1, 2, 3])
ops.equalDOF(808, 450, *[1, 2, 3])
ops.equalDOF(812, 458, *[1, 2, 3])
ops.equalDOF(816, 466, *[1, 2, 3])
ops.equalDOF(820, 474, *[1, 2, 3])
ops.equalDOF(824, 482, *[1, 2, 3])
ops.equalDOF(828, 490, *[1, 2, 3])
ops.equalDOF(832, 498, *[1, 2, 3])
ops.equalDOF(836, 506, *[1, 2, 3])
ops.equalDOF(840, 514, *[1, 2, 3])
ops.equalDOF(740, 436, *[1, 2, 3])
ops.equalDOF(744, 444, *[1, 2, 3])
ops.equalDOF(748, 452, *[1, 2, 3])
ops.equalDOF(752, 460, *[1, 2, 3])
ops.equalDOF(756, 468, *[1, 2, 3])
ops.equalDOF(760, 476, *[1, 2, 3])
ops.equalDOF(764, 484, *[1, 2, 3])
ops.equalDOF(768, 492, *[1, 2, 3])
ops.equalDOF(772, 500, *[1, 2, 3])
ops.equalDOF(776, 508, *[1, 2, 3])
ops.equalDOF(780, 516, *[1, 2, 3])
ops.equalDOF(742, 553, *[1, 2, 3])
ops.equalDOF(746, 557, *[1, 2, 3])
ops.equalDOF(750, 561, *[1, 2, 3])
ops.equalDOF(754, 565, *[1, 2, 3])
ops.equalDOF(758, 569, *[1, 2, 3])
ops.equalDOF(762, 573, *[1, 2, 3])
ops.equalDOF(766, 577, *[1, 2, 3])
ops.equalDOF(770, 581, *[1, 2, 3])
ops.equalDOF(774, 585, *[1, 2, 3])
ops.equalDOF(778, 589, *[1, 2, 3])
ops.equalDOF(781, 593, *[1, 2, 3])
ops.equalDOF(136, 627, *[1, 2, 3])
ops.equalDOF(144, 635, *[1, 2, 3])
ops.equalDOF(152, 643, *[1, 2, 3])
ops.equalDOF(160, 651, *[1, 2, 3])
ops.equalDOF(168, 659, *[1, 2, 3])
ops.equalDOF(176, 667, *[1, 2, 3])
ops.equalDOF(184, 675, *[1, 2, 3])
ops.equalDOF(192, 683, *[1, 2, 3])
ops.equalDOF(200, 691, *[1, 2, 3])
ops.equalDOF(208, 699, *[1, 2, 3])
ops.equalDOF(216, 706, *[1, 2, 3])
ops.equalDOF(247, 555, *[1, 2, 3])
ops.equalDOF(255, 559, *[1, 2, 3])
ops.equalDOF(263, 563, *[1, 2, 3])
ops.equalDOF(271, 567, *[1, 2, 3])
ops.equalDOF(279, 571, *[1, 2, 3])
ops.equalDOF(287, 575, *[1, 2, 3])
ops.equalDOF(295, 579, *[1, 2, 3])
ops.equalDOF(303, 583, *[1, 2, 3])
ops.equalDOF(311, 587, *[1, 2, 3])
ops.equalDOF(319, 591, *[1, 2, 3])
ops.equalDOF(327, 594, *[1, 2, 3])
ops.equalDOF(251, 623, *[1, 2, 3])
ops.equalDOF(259, 631, *[1, 2, 3])
ops.equalDOF(267, 639, *[1, 2, 3])
ops.equalDOF(275, 647, *[1, 2, 3])
ops.equalDOF(283, 655, *[1, 2, 3])
ops.equalDOF(291, 663, *[1, 2, 3])
ops.equalDOF(299, 671, *[1, 2, 3])
ops.equalDOF(307, 679, *[1, 2, 3])
ops.equalDOF(315, 687, *[1, 2, 3])
ops.equalDOF(323, 695, *[1, 2, 3])
ops.equalDOF(329, 703, *[1, 2, 3])
ops.equalDOF(62, 867, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1102, 1, 965782063800.0001, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1103, 1, 59396243199.36339, 166.66666666666666, c=0.0)
ops.equalDOF(80, 869, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1105, 1, 908472945600.0, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1106, 1, 55999315124.366936, 166.66666666666666, c=0.0)
ops.equalDOF(78, 871, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1108, 1, 851163827400.0, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1109, 1, 52382562772.34231, 166.66666666666666, c=0.0)
ops.equalDOF(76, 873, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1111, 1, 793854709199.9999, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1112, 1, 48496829492.2319, 166.66666666666666, c=0.0)
ops.equalDOF(74, 875, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1114, 1, 736545591000.0, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1115, 1, 44271345800.62871, 166.66666666666666, c=0.0)
ops.equalDOF(72, 877, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1117, 1, 679236472800.0, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1118, 1, 39597495466.242256, 166.66666666666666, c=0.0)
ops.equalDOF(70, 879, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1120, 1, 621927354599.9999, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1121, 1, 34292437000.004925, 166.66666666666666, c=0.0)
ops.equalDOF(68, 881, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1123, 1, 564618236400.0, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1124, 1, 27999657562.183468, 166.66666666666666, c=0.0)
ops.equalDOF(66, 883, *[1, 2, 3])
ops.uniaxialMaterial("PySimple1", 1126, 1, 507309118200.0, 100.0, 0.3, c=0.0)
ops.uniaxialMaterial("PySimple1", 1127, 1, 19798747733.121128, 166.66666666666666, c=0.0)
ops.equalDOF(64, 885, *[1, 2, 3])
ops.model('basic', '-ndm', 3, '-ndf', 6)
ops.section("Fiber", 30, '-GJ', 9.572040116406401e+24)
ops.uniaxialMaterial("Steel02", 29, 370000000000.0, 200000000000000.0, 0.01, 15, 0.925, 0.15)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.uniaxialMaterial("Concrete02", 28, 31600000000.0, 0.0019446153846153847, 6320000000.0, 0.004, 0.1, -4740000000.0, -2370000000000.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.geomTransf("Linear", 32, *[-1.0, 0.0, 0.0])
ops.element("elasticBeamColumn", 33, 4, 9, 30, 32)
ops.section("Fiber", 34, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 36, 9, 11, 34, 32)
ops.section("Fiber", 37, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 39, 11, 13, 37, 32)
ops.section("Fiber", 40, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 42, 13, 15, 40, 32)
ops.section("Fiber", 43, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 45, 15, 17, 43, 32)
ops.section("Fiber", 46, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 48, 17, 19, 46, 32)
ops.section("Fiber", 49, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 51, 19, 21, 49, 32)
ops.section("Fiber", 52, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 54, 21, 23, 52, 32)
ops.section("Fiber", 55, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 57, 23, 25, 55, 32)
ops.section("Fiber", 58, '-GJ', 9.572040116406401e+24)
ops.layer("circ", 29, 59, 615.8, 0, 0, 550.0)
ops.layer("circ", 29, 28, 804.2, 0, 0, 950.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 47, 4, 0, 0, 550.0, 950.0, 0, 360)
ops.patch("circ", 28, 33, 1, 0, 0, 500.0, 550.0, 0, 360)
ops.element("elasticBeamColumn", 60, 25, 6, 58, 32)
ops.section("Fiber", 83, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 85, 4, 64, 83, 32)
ops.section("Fiber", 86, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 88, 64, 66, 86, 32)
ops.section("Fiber", 89, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 91, 66, 68, 89, 32)
ops.section("Fiber", 92, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 94, 68, 70, 92, 32)
ops.section("Fiber", 95, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 97, 70, 72, 95, 32)
ops.section("Fiber", 98, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 100, 72, 74, 98, 32)
ops.section("Fiber", 101, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 103, 74, 76, 101, 32)
ops.section("Fiber", 104, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 106, 76, 78, 104, 32)
ops.section("Fiber", 107, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 109, 78, 80, 107, 32)
ops.section("Fiber", 110, '-GJ', 1.0210176124166828e+25)
ops.layer("circ", 29, 59, 1256.6, 0, 0, 950.0)
ops.layer("circ", 29, 40, 490.9, 0, 0, 850.0)
ops.patch("circ", 28, 61, 1, 0, 0, 950.0, 1000.0, 0, 360)
ops.patch("circ", 28, 30, 10, 0, 0, 0, 950.0, 0, 360)
ops.element("elasticBeamColumn", 112, 80, 62, 110, 32)
ops.element('zeroLength', 1101, 62, 62, '-mat', *[1098, 1098, 1099], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1104, 80, 80, '-mat', *[1102, 1102, 1103], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1107, 78, 78, '-mat', *[1105, 1105, 1106], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1110, 76, 76, '-mat', *[1108, 1108, 1109], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1113, 74, 74, '-mat', *[1111, 1111, 1112], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1116, 72, 72, '-mat', *[1114, 1114, 1115], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1119, 70, 70, '-mat', *[1117, 1117, 1118], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1122, 68, 68, '-mat', *[1120, 1120, 1121], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1125, 66, 66, '-mat', *[1123, 1123, 1124], '-dir', *[1, 2, 3])
ops.element('zeroLength', 1128, 64, 64, '-mat', *[1126, 1126, 1127], '-dir', *[1, 2, 3])
ops.model('basic', '-ndm', 3, '-ndf', 3)
